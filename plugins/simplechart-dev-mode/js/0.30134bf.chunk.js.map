{"version":3,"sources":["webpack:///0.30134bf.chunk.js","webpack:///./~/lodash/_getNative.js","webpack:///./~/lodash/isObject.js","webpack:///./~/lodash/_ListCache.js","webpack:///./~/lodash/_assocIndexOf.js","webpack:///./~/lodash/_copyObject.js","webpack:///./~/lodash/_getMapData.js","webpack:///./~/lodash/_nativeCreate.js","webpack:///./~/lodash/_Map.js","webpack:///./~/lodash/_cloneArrayBuffer.js","webpack:///./~/lodash/_getSymbols.js","webpack:///./~/lodash/_isPrototype.js","webpack:///./~/lodash/isArray.js","webpack:///./~/lodash/keys.js","webpack:///(webpack)/buildin/module.js","webpack:///./~/lodash/_arrayLikeKeys.js","webpack:///./~/lodash/_arrayPush.js","webpack:///./~/lodash/_arrayReduce.js","webpack:///./~/lodash/_assignValue.js","webpack:///./~/lodash/_baseAssignValue.js","webpack:///./~/lodash/_baseGetAllKeys.js","webpack:///./~/lodash/_getSymbolsIn.js","webpack:///./~/lodash/_toSource.js","webpack:///./~/lodash/eq.js","webpack:///./~/lodash/isArrayLike.js","webpack:///./~/lodash/isBuffer.js","webpack:///./~/lodash/isFunction.js","webpack:///./~/lodash/isLength.js","webpack:///./~/lodash/keysIn.js","webpack:///./~/lodash/stubArray.js","webpack:///./app/middleware/utils/applyYDomain.js","webpack:///./app/utils/dataFormats/getNiceDomain.js","webpack:///./~/lodash/_DataView.js","webpack:///./~/lodash/_Hash.js","webpack:///./~/lodash/_MapCache.js","webpack:///./~/lodash/_Promise.js","webpack:///./~/lodash/_Set.js","webpack:///./~/lodash/_Stack.js","webpack:///./~/lodash/_Uint8Array.js","webpack:///./~/lodash/_WeakMap.js","webpack:///./~/lodash/_addMapEntry.js","webpack:///./~/lodash/_addSetEntry.js","webpack:///./~/lodash/_arrayEach.js","webpack:///./~/lodash/_arrayFilter.js","webpack:///./~/lodash/_baseAssign.js","webpack:///./~/lodash/_baseAssignIn.js","webpack:///./~/lodash/_baseClone.js","webpack:///./~/lodash/_baseCreate.js","webpack:///./~/lodash/_baseIsArguments.js","webpack:///./~/lodash/_baseIsNative.js","webpack:///./~/lodash/_baseIsTypedArray.js","webpack:///./~/lodash/_baseKeys.js","webpack:///./~/lodash/_baseKeysIn.js","webpack:///./~/lodash/_baseTimes.js","webpack:///./~/lodash/_baseUnary.js","webpack:///./~/lodash/_cloneBuffer.js","webpack:///./~/lodash/_cloneDataView.js","webpack:///./~/lodash/_cloneMap.js","webpack:///./~/lodash/_cloneRegExp.js","webpack:///./~/lodash/_cloneSet.js","webpack:///./~/lodash/_cloneSymbol.js","webpack:///./~/lodash/_cloneTypedArray.js","webpack:///./~/lodash/_copyArray.js","webpack:///./~/lodash/_copySymbols.js","webpack:///./~/lodash/_copySymbolsIn.js","webpack:///./~/lodash/_coreJsData.js","webpack:///./~/lodash/_defineProperty.js","webpack:///./~/lodash/_getAllKeys.js","webpack:///./~/lodash/_getAllKeysIn.js","webpack:///./~/lodash/_getTag.js","webpack:///./~/lodash/_getValue.js","webpack:///./~/lodash/_hashClear.js","webpack:///./~/lodash/_hashDelete.js","webpack:///./~/lodash/_hashGet.js","webpack:///./~/lodash/_hashHas.js","webpack:///./~/lodash/_hashSet.js","webpack:///./~/lodash/_initCloneArray.js","webpack:///./~/lodash/_initCloneByTag.js","webpack:///./~/lodash/_initCloneObject.js","webpack:///./~/lodash/_isIndex.js","webpack:///./~/lodash/_isKeyable.js","webpack:///./~/lodash/_isMasked.js","webpack:///./~/lodash/_listCacheClear.js","webpack:///./~/lodash/_listCacheDelete.js","webpack:///./~/lodash/_listCacheGet.js","webpack:///./~/lodash/_listCacheHas.js","webpack:///./~/lodash/_listCacheSet.js","webpack:///./~/lodash/_mapCacheClear.js","webpack:///./~/lodash/_mapCacheDelete.js","webpack:///./~/lodash/_mapCacheGet.js","webpack:///./~/lodash/_mapCacheHas.js","webpack:///./~/lodash/_mapCacheSet.js","webpack:///./~/lodash/_mapToArray.js","webpack:///./~/lodash/_nativeKeys.js","webpack:///./~/lodash/_nativeKeysIn.js","webpack:///./~/lodash/_nodeUtil.js","webpack:///./~/lodash/_setToArray.js","webpack:///./~/lodash/_stackClear.js","webpack:///./~/lodash/_stackDelete.js","webpack:///./~/lodash/_stackGet.js","webpack:///./~/lodash/_stackHas.js","webpack:///./~/lodash/_stackSet.js","webpack:///./~/lodash/cloneDeep.js","webpack:///./~/lodash/isArguments.js","webpack:///./~/lodash/isTypedArray.js","webpack:///./~/lodash/stubFalse.js","webpack:///./app/components/Chart/ChartTypes ^\\.\\/.*\\/index$","webpack:///./app/components/Chart/ChartTypes/NVD3Adapter/index.js","webpack:///./~/nvd3/build/nv.d3.js","webpack:///./~/react-nvd3/dist/react-nvd3.min.js"],"names":["simplechartJsonp","Array","concat","module","exports","__webpack_require__","getNative","object","key","value","getValue","baseIsNative","undefined","isObject","type","ListCache","entries","index","length","this","clear","entry","set","listCacheClear","listCacheDelete","listCacheGet","listCacheHas","listCacheSet","prototype","delete","get","has","assocIndexOf","array","eq","copyObject","source","props","customizer","isNew","newValue","baseAssignValue","assignValue","getMapData","map","data","__data__","isKeyable","nativeCreate","Object","root","Map","cloneArrayBuffer","arrayBuffer","result","constructor","byteLength","Uint8Array","arrayFilter","stubArray","objectProto","propertyIsEnumerable","nativeGetSymbols","getOwnPropertySymbols","getSymbols","symbol","call","isPrototype","Ctor","proto","isArray","keys","isArrayLike","arrayLikeKeys","baseKeys","webpackPolyfill","deprecate","paths","children","inherited","isArr","isArg","isArguments","isBuff","isBuffer","isType","isTypedArray","skipIndexes","baseTimes","String","hasOwnProperty","isIndex","push","arrayPush","values","offset","arrayReduce","iteratee","accumulator","initAccum","objValue","defineProperty","configurable","enumerable","writable","baseGetAllKeys","keysFunc","symbolsFunc","getPrototype","getSymbolsIn","toSource","func","funcToString","e","funcProto","Function","toString","other","isLength","isFunction","stubFalse","freeExports","nodeType","freeModule","moduleExports","Buffer","nativeIsBuffer","tag","baseGetTag","funcTag","genTag","asyncTag","proxyTag","MAX_SAFE_INTEGER","keysIn","baseKeysIn","_interopRequireDefault","obj","__esModule","default","shouldSetupYDomain","typeConfig","dataFormat","indexOf","modules","settings","applyYDomain","chartOptions","chartData","yDomain","getNiceDomain","_getNiceDomain2","_reactAddonsUpdate2","$set","_reactAddonsUpdate","_getNiceDomain","__REACT_HOT_LOADER__","register","_getSeriesDomain","series","format","point","_d","min","max","_getMultiSeriesDomain","mins","maxs","forEach","singleSeries","domain","_makeNice","range","scale","linear","nice","DataView","Hash","hashClear","hashDelete","hashGet","hashHas","hashSet","MapCache","mapCacheClear","mapCacheDelete","mapCacheGet","mapCacheHas","mapCacheSet","Promise","Set","Stack","size","stackClear","stackDelete","stackGet","stackHas","stackSet","WeakMap","addMapEntry","pair","addSetEntry","add","arrayEach","predicate","resIndex","baseAssign","baseAssignIn","baseClone","bitmask","stack","isDeep","CLONE_DEEP_FLAG","isFlat","CLONE_FLAT_FLAG","isFull","CLONE_SYMBOLS_FLAG","initCloneArray","copyArray","getTag","isFunc","cloneBuffer","objectTag","argsTag","initCloneObject","copySymbolsIn","copySymbols","cloneableTags","initCloneByTag","stacked","getAllKeysIn","getAllKeys","subValue","arrayTag","boolTag","dateTag","errorTag","mapTag","numberTag","regexpTag","setTag","stringTag","symbolTag","weakMapTag","arrayBufferTag","dataViewTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","objectCreate","create","baseCreate","baseIsArguments","isObjectLike","isMasked","pattern","reIsNative","reIsHostCtor","test","reRegExpChar","RegExp","replace","baseIsTypedArray","typedArrayTags","nativeKeys","nativeKeysIn","isProto","n","baseUnary","buffer","slice","allocUnsafe","copy","cloneDataView","dataView","byteOffset","cloneMap","cloneFunc","mapToArray","cloneRegExp","regexp","reFlags","exec","lastIndex","cloneSet","setToArray","cloneSymbol","symbolValueOf","Symbol","symbolProto","valueOf","cloneTypedArray","typedArray","coreJsData","promiseTag","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","ArrayBuffer","resolve","ctorString","HASH_UNDEFINED","input","reIsUint","maskSrcKey","uid","IE_PROTO","pop","splice","arrayProto","hash","string","overArg","freeGlobal","freeProcess","process","nodeUtil","binding","pairs","LARGE_ARRAY_SIZE","cloneDeep","arguments","nodeIsTypedArray","webpackContext","req","webpackContextResolve","Error","./NVD3Adapter/index","id","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","setPrototypeOf","__proto__","_extends","assign","target","i","_createClass","defineProperties","descriptor","protoProps","staticProps","_react","_react2","_reactNvd","_reactNvd2","_cloneDeep","_cloneDeep2","_chartTypeUtils","_chartTypes","_applyTickFormatters","_applyTickFormatters2","_applyYDomain","NVD3Adapter","_Component","_this","getPrototypeOf","_mapToChartProps","bind","_props","options","widget","nextState","datum","_dataTransform","ref","getChartTypeObject","config","x","nvd3Defaults","y","$apply","oldYDomain","chartType","chartProps","createElement","Math","random","Component","_default","propTypes","PropTypes","oneOfType","bool","nv","dev","tooltip","utils","models","charts","logs","dom","t","d3","dispatch","oThis","aArgs","fToBind","fNOP","fBound","apply","on","startTime","Date","endTime","totalTime","log","window","console","deprecated","name","info","warn","render","step","active","render_start","renderLoop","chart","graph","queue","generate","callback","setTimeout","render_end","addGraph","write","fastdom","mutate","read","measure","interactiveGuideline","layer","selection","each","mouseHandler","d3mouse","mouse","mouseX","mouseY","subtractMargin","mouseOutAnyReason","isMSIE","event","offsetX","offsetY","tagName","className","baseVal","match","margin","left","top","availableWidth","availableHeight","relatedTarget","ownerSVGElement","nvPointerEventsClass","elementMouseout","renderGuideLine","hidden","scaleIsOrdinal","xScale","rangeBands","pointXValue","elementIndex","bisect","rangeBand","invert","elementMousemove","elementDblclick","elementClick","elementMouseDown","elementMouseUp","container","select","width","height","wrap","selectAll","wrapEnter","enter","append","attr","svgContainer","guideLine","showGuideLine","line","NaNtoZero","d","exit","remove","ActiveXObject","duration","hideDelay","_","interactiveBisect","searchVal","xAccessor","_xAccessor","_cmp","v","bisector","currentValue","nextIndex","nextValue","abs","nearestValueIndex","threshold","yDistMax","Infinity","indexToHighlight","delta","initTooltip","node","document","body","classes","style","classed","nvtooltip","enabled","dataSeriesExists","newContent","contentGenerator","innerHTML","positionTooltip","floor","gravity","distance","snapDistance","lastPosition","headerEnabled","valueFormatter","headerFormatter","keyFormatter","table","theadEnter","html","tbodyEnter","trowEnter","p","highlight","color","total","filter","percent","opacityScale","opacity","outerHTML","footer","position","pos","clientX","clientY","getComputedStyle","transform","client","getBoundingClientRect","calcGravityOffset","tmp","offsetHeight","offsetWidth","clientWidth","documentElement","clientHeight","gravityOffset","interrupt","transition","delay","old_translate","new_translate","round","translateInterpolator","interpolateString","is_hidden","styleTween","optionsFunc","_options","chartContainer","fixedTop","initOptions","windowSize","innerWidth","innerHeight","compatMode","a","isDate","isNumber","isNaN","windowResize","handler","addEventListener","removeEventListener","getColor","defaultColor","color_scale","ordinal","category20","customTheme","dictionary","getKey","defaultColors","defIndex","pjax","links","content","load","href","fragment","parentNode","replaceChild","history","pushState","textContent","preventDefault","state","calcApproxTextWidth","svgTextElem","text","fontSize","parseInt","textLength","watchTransition","renderWatch","args","_duration","renderStack","model","__rendered","m","arg","renderEnd","reset","every","deepExtend","dst","sources","srcObj","_setState","_getState","init","changed","getter","fn","setter","update","_set","JSON","stringify","change","calcTicksX","numTicks","numValues","stream_len","calcTicksY","initOption","_calls","_overrides","ops","getOwnPropertyNames","calls","inheritOptionsD3","d3_source","oplist","_d3options","unshift","rebind","arrayUnique","sort","item","symbolMap","s","svg","symbolTypes","functor","inheritOptions","_inherited","d3ops","initSVG","nvd3-svg","sanitizeHeight","sanitizeWidth","bottom","right","noData","opt","noDataText","wrapTicks","word","words","split","reverse","lineNumber","lineHeight","dy","parseFloat","tspan","join","getComputedTextLength","arrayEquals","array1","array2","l","axis","g","ticks","orient","scale0","fmt","tickFormat","axisLabel","axisLabelText","xLabelMargin","axisMaxMin","w","isOrdinal","showMaxMin","tickPadding","axisLabelDistance","maxTextWidth","textHeight","xTicks","rotateLabelsRule","rotateLabels","box","sin","PI","staggerLabels","rotateYLabel","maxMinRange","err","boxPlot","xDomain","getX","xRange","yData","yMin","yMax","q1","getQ1","q3","getQ3","wl","getWl","wh","getWh","olItems","getOlItems","getOlValue","yScale","yRange","xScale0","yScale0","boxplots","boxEnter","j","hover","f","box_width","maxBoxWidth","box_left","box_right","endpoint","elementMouseover","getQ2","outliers","getOlColor","getOlLabel","label","Q1","Q2","Q3","whisker_low","whisker_high","q2","itemColor","outlierValue","outlierLabel","outlierColor","boxPlotChart","boxplot","showXAxis","xAxis","showYAxis","yAxis","beforeUpdate","clamp","gEnter","defsEnter","rightAlignYAxis","barsWrap","disabled","tickSize","evt","tooltipContent","bullet","sortLabels","labels","lz","b","iA","iB","descending","rangez","ranges","markerz","markers","markerLinez","markerLines","measurez","measures","rangeLabelz","rangeLabels","markerLabelz","markerLabels","markerLineLabelz","markerLineLabels","measureLabelz","measureLabels","x1","extent","merge","forceX","__chart__","il","rangeClassNames","legacyRangeClassNames","w1","xp1","h3","markerData","marker","markerLinesData","defaultRangeLabels","bulletChart","x0","title","subtitle","bulletWrap","tick","tickEnter","tickUpdate","timer","flush","candlestickBar","barWidth","padData","getLow","forceY","getHigh","chartClick","clipEdge","tickGroups","getOpen","getClose","getY","open","close","high","low","interactive","highlightPoint","pointIndex","isHoverOver","clearHighlights","cumulativeLineChart","lines","dragStart","dragMove","dx","updateZero","dragEnd","stateChange","indexLine","oldDuration","stateSetter","stateGetter","defaultState","indexDrag","behavior","drag","rescaleY","seriesDomains","initialDomain","completeDomain","indexify","interactivePointerEvents","showLegend","legend","marginTop","showControls","controlsData","controls","rightAlign","tempDisabled","useInteractiveGuideline","interactiveLayer","display","linesWrap","seriesIndex","avgLineData","average","avgLines","getAvgLineY","yVal","_ticks","newState","singlePoint","pointXLocation","allData","yValue","domainExtent","xValue","idx","indexifyYGetter","indexValue","noErrorCheck","updateState","useVoronoi","discreteBar","seriesData","y0","showValues","groups","bars","barsEnter","element","stopPropagation","elementDblClick","valueFormat","rectClass","discreteBarChart","discretebar","wrapLabels","distribution","naxis","distWrap","dist","getData","focus","resizePath","updateBrushBG","brush","empty","brushExtent","brushBG","leftWidth","rightWidth","onBrush","shouldDispatch","contentWrap","syncBrushing","brushBGenter","gBrush","pointActive","interpolate","xTickFormat","yTickFormat","forceDirectedGraph","nodes","nodeFieldSet","force","layout","linkStrength","friction","linkDistance","linkDist","charge","theta","alpha","start","link","sqrt","radius","py","px","nodeColor","field","linkExtras","nodeExtras","furiousLegend","setTextColor","vers","expanded","disengaged","setBGColor","seriesShape","seriesEnter","property","seriesCheckbox","seriesText","legendMouseover","legendMouseout","legendClick","radioButtonMode","userDisabled","engaged","legendDblclick","versPadding","align","seriesWidths","legendText","maxKeyLength","trimmedKey","substring","nodeTextLength","padding","seriesPerRow","legendWidth","columnWidths","k","reduce","prev","cur","xPositions","curX","ceil","xpos","ypos","newxpos","maxwidth","historicalBar","rval","historicalBarChart","bar_model","transitionDuration","tooltipHide","ohlcBarChart","ohlcBar","candlestickBarChart","setBGOpacity","insert","seriesBG","scatter","scatterWrap","strokeWidth","fillOpacity","areaPaths","isArea","area","defined","y1","linePaths","pointSize","pointDomain","lineChart","updateXAxis","updateYAxis","focusLinesWrap","disableTooltip","focusEnable","focusEnter","legendPosition","currentValues","pointYValue","defaultValueFormatter","yPos","x2Axis","y2Axis","focusHeight","focusShowAxisX","focusShowAxisY","focusMargin","lineWithFocusChart","linePlusBarChart","availableHeight2","x2","availableHeight1","bar","focusBarsWrap","dataBars","allDisabled","dataLines","dataLine","switchYAxisOrder","y1Axis","y2","barsOpacity","linesOpacity","y1Opacity","y2Opacity","margin2","y3","lines2","bars2","y4","series1","series2","contextEnter","legendXPosition","originalKey","legendRightAxisHint","legendLeftAxisHint","bars2Wrap","lines2Wrap","y3Axis","y4Axis","getBarsAxis","main","getLinesAxis","multiBar","nonStackableCount","hideable","parsed","stackOffset","nonStackable","nonStackableSeries","posBase","negBase","groupSpacing","exitTransition","last_datalength","barColor","rgb","darker","barSelection","multiBarChart","multibar","controlWidth","controlLabels","grouped","getTranslate","staggerUp","staggerDown","totalInBetweenTicks","reduceXTicks","multiBarHorizontal","valuePadding","getYerr","xerr","mid","path","yerr","showBarLabels","yErr","multiBarHorizontalChart","multiChart","mouseover_line","yaxis","yAxis2","yAxis1","mouseover_scatter","mouseover_stack","stack1","mouseover_bar","bars1","serieIndex","dataLines1","dataLines2","dataScatters1","dataScatters2","dataBars1","dataBars2","dataStack1","dataStack2","color_array","lines1","scatters1","scatters2","stack2","lines1Wrap","scatters1Wrap","bars1Wrap","stack1Wrap","scatters2Wrap","stack2Wrap","extraValue1","aVal","extraValue2","yScale1","yDomain1","yScale2","yDomain2","stackedArea","parallelCoordinates","enabledDimensions","displayMissingValuesline","axisWithUndefinedValues","newscale","missingValuesline","missingValueslineText","restoreBrush","visible","filters","brushDomain","dimension","hasOnlyNaN","oldDomainMaxValue","hasNaN","dimensions","updateTicks","brushstart","displayBrush","actives","dimensionNames","extents","foreground","isActive","brushend","hasActiveBrush","brushEnd","currentTicks","tickValues","dragging","__origin__","background","dimensionPosition","currentPosition","dimensionsOrder","newData","val","dataValues","dimensionData","rangePoints","onlyUndefinedValues","tension","lineTension","axisDrag","lineData","undefinedValuesLabel","dimensionsEnter","formerActive","activeChanged","dimensionFormats","parallelCoordinatesChart","originalPosition","parallelCoordinatesWrap","isSorted","nanValue","str","tp","dim","dd","pie","arcTween","endAngle","startAngle","donut","innerRadius","_current","arcs","arcsRadiusOuter","arcsRadiusInner","arcsRadius","outer","inner","donutRatio","growOnHover","g_pie","arcsOver","arc","outerRadius","arcOver","cornerRadius","padAngle","titleOffset","slices","pieLabels","ae","attrTween","showLabels","labelsArc","labelsOutside","group","labelSunbeamLayout","rotateAngle","centroid","labelLocationHash","avgHeight","avgWidth","createHashKey","coordinates","getSlicePercentage","center","labelThreshold","hashKey","labelType","pieLabelsOutside","donutLabelsOutside","labelFormat","pieChart","pieWrap","showTooltipPercent","sankey","computeNodeLinks","sourceLinks","targetLinks","computeNodeValues","sum","computeNodeBreadths","nextNodes","remainingNodes","nodeWidth","sinksRight","moveSinksRight","scaleNodeBreadths","kx","computeNodeDepths","iterations","initializeNodeDepth","ky","nodesByBreadth","nodePadding","relaxLeftToRight","weightedSource","sy","breadth","relaxRightToLeft","weightedTarget","ty","resolveCollisions","ascendingDepth","nest","sortKeys","ascending","computeLinkDepths","ascendingSourceDepth","ascendingTargetDepth","relayout","xi","interpolateNumber","curvature","x3","linkPath","sankeyChart","dragmove","testData","isDataValid","dataAvailable","error","showError","linkTitle","origin","appendChild","nodeFillColor","nodeStrokeColor","nodeTitle","units","formatNumber","message","nodeStyle","fillColor","strokeColor","getCache","_cache","delCache","getDiffs","cache","diffs","updateInteractiveLayer","needsUpdate","vertices","groupIndex","pX","pY","pointArray","bounds","geom","polygon","voronoi","clip","pointPaths","vPointPaths","showVoronoi","clipVoronoi","pointClips","clipRadius","mouseEventCallback","el","mDispatch","scrollTop","pageYOffset","scrollLeft","pageXOffset","relativePos","logScale","sizeDomain","getSize","padDataOuter","z","forceSize","sizeRange","_sizeRange_def","z0","scaleDiff","width0","height0","sizeDiff","pointBorderColor","points","getShape","titles","interactiveUpdateDelay","clearTimeout","timeoutID","shape","notActive","pointScale","pointRange","forcePoint","pointShape","scatterChart","showDistX","distX","showDistY","distY","regWrap","regLine","intercept","slope","sparkline","yValues","maxPoint","lastIndexOf","minPoint","currentPoint","showMinMaxPoints","showCurrentPoint","animate","sparklinePlus","updateValueLine","paused","hoverValue","hoverEnter","sparklineHover","getClosestIndex","closestIndex","sparklineWrap","showLastValue","valueWrap","rightAlignValue","alignValue","dataRaw","aseries","dataFiltered","order","out","zeroArea","areaMouseover","pageX","pageY","areaMouseout","areaClick","d3_stackedOffset_stackPercent","stackData","o","stackedAreaChart","currentFormat","oldYTickFormat","percentFormatter","stackedWrap","xAxisHeight","legendTop","metaKey","stream","stack_percent","controlOptions","requiredTop","valueSum","allNullValues","tooltipValue","showTotalInTooltip","stackedY0","stackedY","totalLabel","oldValueFormatter","stackedAreaWithFocusChart","sunburst","rotationToAvoidUpsideDown","centerAngle","computeCenterAngle","computeNodePercentage","labelThresholdMatched","arcTweenZoom","xd","yd","yr","arcTweenUpdate","ipo","dx0","dy0","updatePrevPosition","prevPositions","pP","storeRetrievePrevPositions","zoomClick","depth","arcText","getBBox","rotation","partition","modes","mode","count","cG","cGE","groupColorByParent","parent","d1","d2","sunburstChart","version","r","loaded","c","u","h","O","S","P","E","M","C","D","F","renderChart","isCallable","ready","resizeHandler","rendering","renderStart","parsedProps","bindFunctions","context","getValueFunction","pick","propsByPrefix","configureComponents","without","configure","refs","isPlainObject","containerStyle","G","B","W","__g","__e","getKeys","isEnum","getProto","getDesc","getOwnPropertyDescriptor","setDesc","setDescs","getNames","N","T","q","_k","A","V","H","I","J","K","R","U","for","keyFor","useSetter","useSimple","check","substr","includes","negate","filterObject"],"mappings":"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UAGA8D,EAAA9B,EAAA8B,eAGA7B,EAAAD,EAAAC,qBAoBAqB,EAAAgL,EAAA,WAA8C,MAAAuE,eAAoBvE,EAAA,SAAAzP,GAClE,MAAA0P,GAAA1P,IAAAiF,EAAAxB,KAAAzD,EAAA,YACAoD,EAAAK,KAAAzD,EAAA,UAGAN,GAAAC,QAAA8E,GvGgvGM,SAAS/E,EAAQC,EAASC,GwGnxGhC,GAAAuQ,GAAAvQ,EAAA,KACA6Q,EAAA7Q,EAAA,KACA+T,EAAA/T,EAAA,KAGAqU,EAAAN,KAAA9O,aAmBAA,EAAAoP,EAAAxD,EAAAwD,GAAA9D,CAEAzQ,GAAAC,QAAAkF,GxG0xGM,SAASnF,EAAQC,GyGvyGvB,QAAAoH,KACA,SAGArH,EAAAC,QAAAoH,GzG0zGS,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CAEH,SAASrH,EAAQC,EAASC,G0G75GhC,QAAAsU,GAAAC,GACA,MAAAvU,GAAAwU,EAAAD,IAEA,QAAAC,GAAAD,GACA,MAAAhS,GAAAgS,IAAA,WAAiC,SAAAE,OAAA,uBAAAF,EAAA,SAPjC,GAAAhS,IACAmS,sBAAA,IAQAJ,GAAApQ,KAAA,WACA,MAAAtB,QAAAsB,KAAA3B,IAEA+R,EAAAxB,QAAA0B,EACA1U,EAAAC,QAAAuU,EACAA,EAAAK,GAAA,K1Gs6GS,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,C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","file":"0.30134bf.chunk.js","sourcesContent":["simplechartJsonp([0],Array(25).concat([\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar baseIsNative = __webpack_require__(208),\n\t    getValue = __webpack_require__(230);\n\t\n\t/**\n\t * Gets the native function at `key` of `object`.\n\t *\n\t * @private\n\t * @param {Object} object The object to query.\n\t * @param {string} key The key of the method to get.\n\t * @returns {*} Returns the function if it's native, else `undefined`.\n\t */\n\tfunction getNative(object, key) {\n\t  var value = getValue(object, key);\n\t  return baseIsNative(value) ? value : undefined;\n\t}\n\t\n\tmodule.exports = getNative;\n\n\n/***/ },\n/* 26 */,\n/* 27 */,\n/* 28 */,\n/* 29 */,\n/* 30 */,\n/* 31 */,\n/* 32 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Checks if `value` is the\n\t * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n\t * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 0.1.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n\t * @example\n\t *\n\t * _.isObject({});\n\t * // => true\n\t *\n\t * _.isObject([1, 2, 3]);\n\t * // => true\n\t *\n\t * _.isObject(_.noop);\n\t * // => true\n\t *\n\t * _.isObject(null);\n\t * // => false\n\t */\n\tfunction isObject(value) {\n\t  var type = typeof value;\n\t  return value != null && (type == 'object' || type == 'function');\n\t}\n\t\n\tmodule.exports = isObject;\n\n\n/***/ },\n/* 33 */,\n/* 34 */,\n/* 35 */,\n/* 36 */,\n/* 37 */,\n/* 38 */,\n/* 39 */,\n/* 40 */,\n/* 41 */,\n/* 42 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar listCacheClear = __webpack_require__(242),\n\t    listCacheDelete = __webpack_require__(243),\n\t    listCacheGet = __webpack_require__(244),\n\t    listCacheHas = __webpack_require__(245),\n\t    listCacheSet = __webpack_require__(246);\n\t\n\t/**\n\t * Creates an list cache object.\n\t *\n\t * @private\n\t * @constructor\n\t * @param {Array} [entries] The key-value pairs to cache.\n\t */\n\tfunction ListCache(entries) {\n\t  var index = -1,\n\t      length = entries == null ? 0 : entries.length;\n\t\n\t  this.clear();\n\t  while (++index < length) {\n\t    var entry = entries[index];\n\t    this.set(entry[0], entry[1]);\n\t  }\n\t}\n\t\n\t// Add methods to `ListCache`.\n\tListCache.prototype.clear = listCacheClear;\n\tListCache.prototype['delete'] = listCacheDelete;\n\tListCache.prototype.get = listCacheGet;\n\tListCache.prototype.has = listCacheHas;\n\tListCache.prototype.set = listCacheSet;\n\t\n\tmodule.exports = ListCache;\n\n\n/***/ },\n/* 43 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar eq = __webpack_require__(109);\n\t\n\t/**\n\t * Gets the index at which the `key` is found in `array` of key-value pairs.\n\t *\n\t * @private\n\t * @param {Array} array The array to inspect.\n\t * @param {*} key The key to search for.\n\t * @returns {number} Returns the index of the matched value, else `-1`.\n\t */\n\tfunction assocIndexOf(array, key) {\n\t  var length = array.length;\n\t  while (length--) {\n\t    if (eq(array[length][0], key)) {\n\t      return length;\n\t    }\n\t  }\n\t  return -1;\n\t}\n\t\n\tmodule.exports = assocIndexOf;\n\n\n/***/ },\n/* 44 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar assignValue = __webpack_require__(102),\n\t    baseAssignValue = __webpack_require__(103);\n\t\n\t/**\n\t * Copies properties of `source` to `object`.\n\t *\n\t * @private\n\t * @param {Object} source The object to copy properties from.\n\t * @param {Array} props The property identifiers to copy.\n\t * @param {Object} [object={}] The object to copy properties to.\n\t * @param {Function} [customizer] The function to customize copied values.\n\t * @returns {Object} Returns `object`.\n\t */\n\tfunction copyObject(source, props, object, customizer) {\n\t  var isNew = !object;\n\t  object || (object = {});\n\t\n\t  var index = -1,\n\t      length = props.length;\n\t\n\t  while (++index < length) {\n\t    var key = props[index];\n\t\n\t    var newValue = customizer\n\t      ? customizer(object[key], source[key], key, object, source)\n\t      : undefined;\n\t\n\t    if (newValue === undefined) {\n\t      newValue = source[key];\n\t    }\n\t    if (isNew) {\n\t      baseAssignValue(object, key, newValue);\n\t    } else {\n\t      assignValue(object, key, newValue);\n\t    }\n\t  }\n\t  return object;\n\t}\n\t\n\tmodule.exports = copyObject;\n\n\n/***/ },\n/* 45 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar isKeyable = __webpack_require__(240);\n\t\n\t/**\n\t * Gets the data for `map`.\n\t *\n\t * @private\n\t * @param {Object} map The map to query.\n\t * @param {string} key The reference key.\n\t * @returns {*} Returns the map data.\n\t */\n\tfunction getMapData(map, key) {\n\t  var data = map.__data__;\n\t  return isKeyable(key)\n\t    ? data[typeof key == 'string' ? 'string' : 'hash']\n\t    : data.map;\n\t}\n\t\n\tmodule.exports = getMapData;\n\n\n/***/ },\n/* 46 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar getNative = __webpack_require__(25);\n\t\n\t/* Built-in method references that are verified to be native. */\n\tvar nativeCreate = getNative(Object, 'create');\n\t\n\tmodule.exports = nativeCreate;\n\n\n/***/ },\n/* 47 */,\n/* 48 */,\n/* 49 */,\n/* 50 */,\n/* 51 */,\n/* 52 */,\n/* 53 */,\n/* 54 */,\n/* 55 */,\n/* 56 */,\n/* 57 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar getNative = __webpack_require__(25),\n\t    root = __webpack_require__(15);\n\t\n\t/* Built-in method references that are verified to be native. */\n\tvar Map = getNative(root, 'Map');\n\t\n\tmodule.exports = Map;\n\n\n/***/ },\n/* 58 */,\n/* 59 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar Uint8Array = __webpack_require__(197);\n\t\n\t/**\n\t * Creates a clone of `arrayBuffer`.\n\t *\n\t * @private\n\t * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n\t * @returns {ArrayBuffer} Returns the cloned array buffer.\n\t */\n\tfunction cloneArrayBuffer(arrayBuffer) {\n\t  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n\t  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n\t  return result;\n\t}\n\t\n\tmodule.exports = cloneArrayBuffer;\n\n\n/***/ },\n/* 60 */,\n/* 61 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar arrayFilter = __webpack_require__(202),\n\t    stubArray = __webpack_require__(115);\n\t\n\t/** Used for built-in method references. */\n\tvar objectProto = Object.prototype;\n\t\n\t/** Built-in value references. */\n\tvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\t\n\t/* Built-in method references for those with the same name as other `lodash` methods. */\n\tvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\t\n\t/**\n\t * Creates an array of the own enumerable symbols of `object`.\n\t *\n\t * @private\n\t * @param {Object} object The object to query.\n\t * @returns {Array} Returns the array of symbols.\n\t */\n\tvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n\t  if (object == null) {\n\t    return [];\n\t  }\n\t  object = Object(object);\n\t  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n\t    return propertyIsEnumerable.call(object, symbol);\n\t  });\n\t};\n\t\n\tmodule.exports = getSymbols;\n\n\n/***/ },\n/* 62 */\n/***/ function(module, exports) {\n\n\t/** Used for built-in method references. */\n\tvar objectProto = Object.prototype;\n\t\n\t/**\n\t * Checks if `value` is likely a prototype object.\n\t *\n\t * @private\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n\t */\n\tfunction isPrototype(value) {\n\t  var Ctor = value && value.constructor,\n\t      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\t\n\t  return value === proto;\n\t}\n\t\n\tmodule.exports = isPrototype;\n\n\n/***/ },\n/* 63 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Checks if `value` is classified as an `Array` object.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 0.1.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n\t * @example\n\t *\n\t * _.isArray([1, 2, 3]);\n\t * // => true\n\t *\n\t * _.isArray(document.body.children);\n\t * // => false\n\t *\n\t * _.isArray('abc');\n\t * // => false\n\t *\n\t * _.isArray(_.noop);\n\t * // => false\n\t */\n\tvar isArray = Array.isArray;\n\t\n\tmodule.exports = isArray;\n\n\n/***/ },\n/* 64 */,\n/* 65 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar arrayLikeKeys = __webpack_require__(99),\n\t    baseKeys = __webpack_require__(210),\n\t    isArrayLike = __webpack_require__(110);\n\t\n\t/**\n\t * Creates an array of the own enumerable property names of `object`.\n\t *\n\t * **Note:** Non-object values are coerced to objects. See the\n\t * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n\t * for more details.\n\t *\n\t * @static\n\t * @since 0.1.0\n\t * @memberOf _\n\t * @category Object\n\t * @param {Object} object The object to query.\n\t * @returns {Array} Returns the array of property names.\n\t * @example\n\t *\n\t * function Foo() {\n\t *   this.a = 1;\n\t *   this.b = 2;\n\t * }\n\t *\n\t * Foo.prototype.c = 3;\n\t *\n\t * _.keys(new Foo);\n\t * // => ['a', 'b'] (iteration order is not guaranteed)\n\t *\n\t * _.keys('hi');\n\t * // => ['0', '1']\n\t */\n\tfunction keys(object) {\n\t  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n\t}\n\t\n\tmodule.exports = keys;\n\n\n/***/ },\n/* 66 */,\n/* 67 */,\n/* 68 */,\n/* 69 */,\n/* 70 */,\n/* 71 */,\n/* 72 */,\n/* 73 */,\n/* 74 */,\n/* 75 */,\n/* 76 */,\n/* 77 */,\n/* 78 */,\n/* 79 */,\n/* 80 */,\n/* 81 */,\n/* 82 */,\n/* 83 */,\n/* 84 */,\n/* 85 */,\n/* 86 */,\n/* 87 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(module) {\n\t\tif(!module.webpackPolyfill) {\n\t\t\tmodule.deprecate = function() {};\n\t\t\tmodule.paths = [];\n\t\t\t// module.parent = undefined by default\n\t\t\tmodule.children = [];\n\t\t\tmodule.webpackPolyfill = 1;\n\t\t}\n\t\treturn module;\n\t}\n\n\n/***/ },\n/* 88 */,\n/* 89 */,\n/* 90 */,\n/* 91 */,\n/* 92 */,\n/* 93 */,\n/* 94 */,\n/* 95 */,\n/* 96 */,\n/* 97 */,\n/* 98 */,\n/* 99 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar baseTimes = __webpack_require__(212),\n\t    isArguments = __webpack_require__(264),\n\t    isArray = __webpack_require__(63),\n\t    isBuffer = __webpack_require__(111),\n\t    isIndex = __webpack_require__(239),\n\t    isTypedArray = __webpack_require__(265);\n\t\n\t/** Used for built-in method references. */\n\tvar objectProto = Object.prototype;\n\t\n\t/** Used to check objects for own properties. */\n\tvar hasOwnProperty = objectProto.hasOwnProperty;\n\t\n\t/**\n\t * Creates an array of the enumerable property names of the array-like `value`.\n\t *\n\t * @private\n\t * @param {*} value The value to query.\n\t * @param {boolean} inherited Specify returning inherited property names.\n\t * @returns {Array} Returns the array of property names.\n\t */\n\tfunction arrayLikeKeys(value, inherited) {\n\t  var isArr = isArray(value),\n\t      isArg = !isArr && isArguments(value),\n\t      isBuff = !isArr && !isArg && isBuffer(value),\n\t      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n\t      skipIndexes = isArr || isArg || isBuff || isType,\n\t      result = skipIndexes ? baseTimes(value.length, String) : [],\n\t      length = result.length;\n\t\n\t  for (var key in value) {\n\t    if ((inherited || hasOwnProperty.call(value, key)) &&\n\t        !(skipIndexes && (\n\t           // Safari 9 has enumerable `arguments.length` in strict mode.\n\t           key == 'length' ||\n\t           // Node.js 0.10 has enumerable non-index properties on buffers.\n\t           (isBuff && (key == 'offset' || key == 'parent')) ||\n\t           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n\t           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n\t           // Skip index properties.\n\t           isIndex(key, length)\n\t        ))) {\n\t      result.push(key);\n\t    }\n\t  }\n\t  return result;\n\t}\n\t\n\tmodule.exports = arrayLikeKeys;\n\n\n/***/ },\n/* 100 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Appends the elements of `values` to `array`.\n\t *\n\t * @private\n\t * @param {Array} array The array to modify.\n\t * @param {Array} values The values to append.\n\t * @returns {Array} Returns `array`.\n\t */\n\tfunction arrayPush(array, values) {\n\t  var index = -1,\n\t      length = values.length,\n\t      offset = array.length;\n\t\n\t  while (++index < length) {\n\t    array[offset + index] = values[index];\n\t  }\n\t  return array;\n\t}\n\t\n\tmodule.exports = arrayPush;\n\n\n/***/ },\n/* 101 */\n/***/ function(module, exports) {\n\n\t/**\n\t * A specialized version of `_.reduce` for arrays without support for\n\t * iteratee shorthands.\n\t *\n\t * @private\n\t * @param {Array} [array] The array to iterate over.\n\t * @param {Function} iteratee The function invoked per iteration.\n\t * @param {*} [accumulator] The initial value.\n\t * @param {boolean} [initAccum] Specify using the first element of `array` as\n\t *  the initial value.\n\t * @returns {*} Returns the accumulated value.\n\t */\n\tfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n\t  var index = -1,\n\t      length = array == null ? 0 : array.length;\n\t\n\t  if (initAccum && length) {\n\t    accumulator = array[++index];\n\t  }\n\t  while (++index < length) {\n\t    accumulator = iteratee(accumulator, array[index], index, array);\n\t  }\n\t  return accumulator;\n\t}\n\t\n\tmodule.exports = arrayReduce;\n\n\n/***/ },\n/* 102 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar baseAssignValue = __webpack_require__(103),\n\t    eq = __webpack_require__(109);\n\t\n\t/** Used for built-in method references. */\n\tvar objectProto = Object.prototype;\n\t\n\t/** Used to check objects for own properties. */\n\tvar hasOwnProperty = objectProto.hasOwnProperty;\n\t\n\t/**\n\t * Assigns `value` to `key` of `object` if the existing value is not equivalent\n\t * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n\t * for equality comparisons.\n\t *\n\t * @private\n\t * @param {Object} object The object to modify.\n\t * @param {string} key The key of the property to assign.\n\t * @param {*} value The value to assign.\n\t */\n\tfunction assignValue(object, key, value) {\n\t  var objValue = object[key];\n\t  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n\t      (value === undefined && !(key in object))) {\n\t    baseAssignValue(object, key, value);\n\t  }\n\t}\n\t\n\tmodule.exports = assignValue;\n\n\n/***/ },\n/* 103 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar defineProperty = __webpack_require__(225);\n\t\n\t/**\n\t * The base implementation of `assignValue` and `assignMergeValue` without\n\t * value checks.\n\t *\n\t * @private\n\t * @param {Object} object The object to modify.\n\t * @param {string} key The key of the property to assign.\n\t * @param {*} value The value to assign.\n\t */\n\tfunction baseAssignValue(object, key, value) {\n\t  if (key == '__proto__' && defineProperty) {\n\t    defineProperty(object, key, {\n\t      'configurable': true,\n\t      'enumerable': true,\n\t      'value': value,\n\t      'writable': true\n\t    });\n\t  } else {\n\t    object[key] = value;\n\t  }\n\t}\n\t\n\tmodule.exports = baseAssignValue;\n\n\n/***/ },\n/* 104 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar arrayPush = __webpack_require__(100),\n\t    isArray = __webpack_require__(63);\n\t\n\t/**\n\t * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n\t * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n\t * symbols of `object`.\n\t *\n\t * @private\n\t * @param {Object} object The object to query.\n\t * @param {Function} keysFunc The function to get the keys of `object`.\n\t * @param {Function} symbolsFunc The function to get the symbols of `object`.\n\t * @returns {Array} Returns the array of property names and symbols.\n\t */\n\tfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n\t  var result = keysFunc(object);\n\t  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n\t}\n\t\n\tmodule.exports = baseGetAllKeys;\n\n\n/***/ },\n/* 105 */,\n/* 106 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar arrayPush = __webpack_require__(100),\n\t    getPrototype = __webpack_require__(60),\n\t    getSymbols = __webpack_require__(61),\n\t    stubArray = __webpack_require__(115);\n\t\n\t/* Built-in method references for those with the same name as other `lodash` methods. */\n\tvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\t\n\t/**\n\t * Creates an array of the own and inherited enumerable symbols of `object`.\n\t *\n\t * @private\n\t * @param {Object} object The object to query.\n\t * @returns {Array} Returns the array of symbols.\n\t */\n\tvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n\t  var result = [];\n\t  while (object) {\n\t    arrayPush(result, getSymbols(object));\n\t    object = getPrototype(object);\n\t  }\n\t  return result;\n\t};\n\t\n\tmodule.exports = getSymbolsIn;\n\n\n/***/ },\n/* 107 */,\n/* 108 */\n/***/ function(module, exports) {\n\n\t/** Used for built-in method references. */\n\tvar funcProto = Function.prototype;\n\t\n\t/** Used to resolve the decompiled source of functions. */\n\tvar funcToString = funcProto.toString;\n\t\n\t/**\n\t * Converts `func` to its source code.\n\t *\n\t * @private\n\t * @param {Function} func The function to convert.\n\t * @returns {string} Returns the source code.\n\t */\n\tfunction toSource(func) {\n\t  if (func != null) {\n\t    try {\n\t      return funcToString.call(func);\n\t    } catch (e) {}\n\t    try {\n\t      return (func + '');\n\t    } catch (e) {}\n\t  }\n\t  return '';\n\t}\n\t\n\tmodule.exports = toSource;\n\n\n/***/ },\n/* 109 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Performs a\n\t * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n\t * comparison between two values to determine if they are equivalent.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 4.0.0\n\t * @category Lang\n\t * @param {*} value The value to compare.\n\t * @param {*} other The other value to compare.\n\t * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t * @example\n\t *\n\t * var object = { 'a': 1 };\n\t * var other = { 'a': 1 };\n\t *\n\t * _.eq(object, object);\n\t * // => true\n\t *\n\t * _.eq(object, other);\n\t * // => false\n\t *\n\t * _.eq('a', 'a');\n\t * // => true\n\t *\n\t * _.eq('a', Object('a'));\n\t * // => false\n\t *\n\t * _.eq(NaN, NaN);\n\t * // => true\n\t */\n\tfunction eq(value, other) {\n\t  return value === other || (value !== value && other !== other);\n\t}\n\t\n\tmodule.exports = eq;\n\n\n/***/ },\n/* 110 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar isFunction = __webpack_require__(112),\n\t    isLength = __webpack_require__(113);\n\t\n\t/**\n\t * Checks if `value` is array-like. A value is considered array-like if it's\n\t * not a function and has a `value.length` that's an integer greater than or\n\t * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 4.0.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n\t * @example\n\t *\n\t * _.isArrayLike([1, 2, 3]);\n\t * // => true\n\t *\n\t * _.isArrayLike(document.body.children);\n\t * // => true\n\t *\n\t * _.isArrayLike('abc');\n\t * // => true\n\t *\n\t * _.isArrayLike(_.noop);\n\t * // => false\n\t */\n\tfunction isArrayLike(value) {\n\t  return value != null && isLength(value.length) && !isFunction(value);\n\t}\n\t\n\tmodule.exports = isArrayLike;\n\n\n/***/ },\n/* 111 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(module) {var root = __webpack_require__(15),\n\t    stubFalse = __webpack_require__(266);\n\t\n\t/** Detect free variable `exports`. */\n\tvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\t\n\t/** Detect free variable `module`. */\n\tvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\t\n\t/** Detect the popular CommonJS extension `module.exports`. */\n\tvar moduleExports = freeModule && freeModule.exports === freeExports;\n\t\n\t/** Built-in value references. */\n\tvar Buffer = moduleExports ? root.Buffer : undefined;\n\t\n\t/* Built-in method references for those with the same name as other `lodash` methods. */\n\tvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\t\n\t/**\n\t * Checks if `value` is a buffer.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 4.3.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n\t * @example\n\t *\n\t * _.isBuffer(new Buffer(2));\n\t * // => true\n\t *\n\t * _.isBuffer(new Uint8Array(2));\n\t * // => false\n\t */\n\tvar isBuffer = nativeIsBuffer || stubFalse;\n\t\n\tmodule.exports = isBuffer;\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(87)(module)))\n\n/***/ },\n/* 112 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar baseGetTag = __webpack_require__(31),\n\t    isObject = __webpack_require__(32);\n\t\n\t/** `Object#toString` result references. */\n\tvar asyncTag = '[object AsyncFunction]',\n\t    funcTag = '[object Function]',\n\t    genTag = '[object GeneratorFunction]',\n\t    proxyTag = '[object Proxy]';\n\t\n\t/**\n\t * Checks if `value` is classified as a `Function` object.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 0.1.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n\t * @example\n\t *\n\t * _.isFunction(_);\n\t * // => true\n\t *\n\t * _.isFunction(/abc/);\n\t * // => false\n\t */\n\tfunction isFunction(value) {\n\t  if (!isObject(value)) {\n\t    return false;\n\t  }\n\t  // The use of `Object#toString` avoids issues with the `typeof` operator\n\t  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n\t  var tag = baseGetTag(value);\n\t  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n\t}\n\t\n\tmodule.exports = isFunction;\n\n\n/***/ },\n/* 113 */\n/***/ function(module, exports) {\n\n\t/** Used as references for various `Number` constants. */\n\tvar MAX_SAFE_INTEGER = 9007199254740991;\n\t\n\t/**\n\t * Checks if `value` is a valid array-like length.\n\t *\n\t * **Note:** This method is loosely based on\n\t * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 4.0.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n\t * @example\n\t *\n\t * _.isLength(3);\n\t * // => true\n\t *\n\t * _.isLength(Number.MIN_VALUE);\n\t * // => false\n\t *\n\t * _.isLength(Infinity);\n\t * // => false\n\t *\n\t * _.isLength('3');\n\t * // => false\n\t */\n\tfunction isLength(value) {\n\t  return typeof value == 'number' &&\n\t    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n\t}\n\t\n\tmodule.exports = isLength;\n\n\n/***/ },\n/* 114 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar arrayLikeKeys = __webpack_require__(99),\n\t    baseKeysIn = __webpack_require__(211),\n\t    isArrayLike = __webpack_require__(110);\n\t\n\t/**\n\t * Creates an array of the own and inherited enumerable property names of `object`.\n\t *\n\t * **Note:** Non-object values are coerced to objects.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 3.0.0\n\t * @category Object\n\t * @param {Object} object The object to query.\n\t * @returns {Array} Returns the array of property names.\n\t * @example\n\t *\n\t * function Foo() {\n\t *   this.a = 1;\n\t *   this.b = 2;\n\t * }\n\t *\n\t * Foo.prototype.c = 3;\n\t *\n\t * _.keysIn(new Foo);\n\t * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n\t */\n\tfunction keysIn(object) {\n\t  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n\t}\n\t\n\tmodule.exports = keysIn;\n\n\n/***/ },\n/* 115 */\n/***/ function(module, exports) {\n\n\t/**\n\t * This method returns a new empty array.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 4.13.0\n\t * @category Util\n\t * @returns {Array} Returns the new empty array.\n\t * @example\n\t *\n\t * var arrays = _.times(2, _.stubArray);\n\t *\n\t * console.log(arrays);\n\t * // => [[], []]\n\t *\n\t * console.log(arrays[0] === arrays[1]);\n\t * // => false\n\t */\n\tfunction stubArray() {\n\t  return [];\n\t}\n\t\n\tmodule.exports = stubArray;\n\n\n/***/ },\n/* 116 */,\n/* 117 */,\n/* 118 */,\n/* 119 */,\n/* 120 */,\n/* 121 */,\n/* 122 */,\n/* 123 */,\n/* 124 */,\n/* 125 */,\n/* 126 */,\n/* 127 */,\n/* 128 */,\n/* 129 */,\n/* 130 */,\n/* 131 */,\n/* 132 */,\n/* 133 */,\n/* 134 */,\n/* 135 */,\n/* 136 */,\n/* 137 */,\n/* 138 */,\n/* 139 */,\n/* 140 */,\n/* 141 */,\n/* 142 */,\n/* 143 */,\n/* 144 */,\n/* 145 */,\n/* 146 */,\n/* 147 */,\n/* 148 */,\n/* 149 */,\n/* 150 */,\n/* 151 */,\n/* 152 */,\n/* 153 */,\n/* 154 */,\n/* 155 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.shouldSetupYDomain = shouldSetupYDomain;\n\texports.default = applyYDomain;\n\t\n\tvar _reactAddonsUpdate = __webpack_require__(11);\n\t\n\tvar _reactAddonsUpdate2 = _interopRequireDefault(_reactAddonsUpdate);\n\t\n\tvar _getNiceDomain = __webpack_require__(156);\n\t\n\tvar _getNiceDomain2 = _interopRequireDefault(_getNiceDomain);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/**\n\t * Need to setup yDomain for NVD3 chart that requires YAXis\n\t * @param {Object} typeConfig Chart type config\n\t * @return {Boolean}\n\t */\n\tfunction shouldSetupYDomain(typeConfig) {\n\t  return 0 === typeConfig.dataFormat.indexOf('nvd3') && -1 !== typeConfig.modules.settings.indexOf('YAxis');\n\t}\n\t\n\t/**\n\t * add nicely rounded yDomain to chart options, if chart has a yAxis\n\t * @param {Object} chartOptions\n\t * @param {Object} typeConfig\n\t * @param {Object[]}  chartData\n\t * @return {Object} Cloned chart options object with new yDomain\n\t */\n\tfunction applyYDomain(chartOptions, typeConfig, chartData) {\n\t  if (!shouldSetupYDomain(typeConfig)) {\n\t    return chartOptions;\n\t  }\n\t\n\t  var yDomain = void 0;\n\t  if (typeConfig.hasOwnProperty('getNiceDomain')) {\n\t    yDomain = typeConfig.getNiceDomain(chartData);\n\t  } else {\n\t    yDomain = (0, _getNiceDomain2.default)(typeConfig.dataFormat, chartData);\n\t  }\n\t\n\t  /**\n\t   * @todo Recalculate yDomain when series visibility is toggled by clicking on dots in the legend\n\t   */\n\t  return (0, _reactAddonsUpdate2.default)(chartOptions, { yDomain: { $set: yDomain } });\n\t}\n\t;\n\t\n\tvar _temp = function () {\n\t  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n\t    return;\n\t  }\n\t\n\t  __REACT_HOT_LOADER__.register(shouldSetupYDomain, 'shouldSetupYDomain', '/Users/joshkadis/Sites/broadway/www/simplechart-dev/wp-content/plugins/simplechart-dev-mode/simplechart/app/middleware/utils/applyYDomain.js');\n\t\n\t  __REACT_HOT_LOADER__.register(applyYDomain, 'applyYDomain', '/Users/joshkadis/Sites/broadway/www/simplechart-dev/wp-content/plugins/simplechart-dev-mode/simplechart/app/middleware/utils/applyYDomain.js');\n\t}();\n\n\t;\n\n/***/ },\n/* 156 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = getNiceDomain;\n\t\n\tvar _d = __webpack_require__(56);\n\t\n\t/**\n\t * Get [min, max] array for data series in nvd3SingleSeries or nvd3MultiSeries format\n\t *\n\t * @param array series Data series\n\t * @param string format Data format\n\t * @return array Range of [min, max] for series\n\t */\n\tfunction _getSeriesDomain(series, format) {\n\t  var key = 'nvd3SingleSeries' === format ? 'value' : 'y';\n\t  var values = series.map(function (point) {\n\t    return point[key];\n\t  });\n\t  return [(0, _d.min)(values), (0, _d.max)(values)];\n\t}\n\t\n\tfunction _getMultiSeriesDomain(series, format) {\n\t  var mins = [];\n\t  var maxs = [];\n\t  series.forEach(function (singleSeries) {\n\t    var domain = _getSeriesDomain(singleSeries.values, format);\n\t    mins.push(domain[0]);\n\t    maxs.push(domain[1]);\n\t  });\n\t  return [(0, _d.min)(mins), (0, _d.max)(maxs)];\n\t}\n\t\n\tfunction _makeNice(range) {\n\t  return _d.scale.linear().domain(range).nice().domain();\n\t}\n\t\n\t/**\n\t * Get \"nice\" rounded domain from dataset\n\t *\n\t * @param string format Data format from chart config object\n\t * @param array data Chart data transformed for data format\n\t * @return array Domain array of [min, max] values\n\t */\n\tfunction getNiceDomain(format, data) {\n\t  var domain = 'nvd3SingleSeries' === format ? _getSeriesDomain(data, format) : _getMultiSeriesDomain(data, format);\n\t  return _makeNice(domain);\n\t}\n\t;\n\t\n\tvar _temp = function () {\n\t  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n\t    return;\n\t  }\n\t\n\t  __REACT_HOT_LOADER__.register(_getSeriesDomain, '_getSeriesDomain', '/Users/joshkadis/Sites/broadway/www/simplechart-dev/wp-content/plugins/simplechart-dev-mode/simplechart/app/utils/dataFormats/getNiceDomain.js');\n\t\n\t  __REACT_HOT_LOADER__.register(_getMultiSeriesDomain, '_getMultiSeriesDomain', '/Users/joshkadis/Sites/broadway/www/simplechart-dev/wp-content/plugins/simplechart-dev-mode/simplechart/app/utils/dataFormats/getNiceDomain.js');\n\t\n\t  __REACT_HOT_LOADER__.register(_makeNice, '_makeNice', '/Users/joshkadis/Sites/broadway/www/simplechart-dev/wp-content/plugins/simplechart-dev-mode/simplechart/app/utils/dataFormats/getNiceDomain.js');\n\t\n\t  __REACT_HOT_LOADER__.register(getNiceDomain, 'getNiceDomain', '/Users/joshkadis/Sites/broadway/www/simplechart-dev/wp-content/plugins/simplechart-dev-mode/simplechart/app/utils/dataFormats/getNiceDomain.js');\n\t}();\n\n\t;\n\n/***/ },\n/* 157 */,\n/* 158 */,\n/* 159 */,\n/* 160 */,\n/* 161 */,\n/* 162 */,\n/* 163 */,\n/* 164 */,\n/* 165 */,\n/* 166 */,\n/* 167 */,\n/* 168 */,\n/* 169 */,\n/* 170 */,\n/* 171 */,\n/* 172 */,\n/* 173 */,\n/* 174 */,\n/* 175 */,\n/* 176 */,\n/* 177 */,\n/* 178 */,\n/* 179 */,\n/* 180 */,\n/* 181 */,\n/* 182 */,\n/* 183 */,\n/* 184 */,\n/* 185 */,\n/* 186 */,\n/* 187 */,\n/* 188 */,\n/* 189 */,\n/* 190 */,\n/* 191 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar getNative = __webpack_require__(25),\n\t    root = __webpack_require__(15);\n\t\n\t/* Built-in method references that are verified to be native. */\n\tvar DataView = getNative(root, 'DataView');\n\t\n\tmodule.exports = DataView;\n\n\n/***/ },\n/* 192 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar hashClear = __webpack_require__(231),\n\t    hashDelete = __webpack_require__(232),\n\t    hashGet = __webpack_require__(233),\n\t    hashHas = __webpack_require__(234),\n\t    hashSet = __webpack_require__(235);\n\t\n\t/**\n\t * Creates a hash object.\n\t *\n\t * @private\n\t * @constructor\n\t * @param {Array} [entries] The key-value pairs to cache.\n\t */\n\tfunction Hash(entries) {\n\t  var index = -1,\n\t      length = entries == null ? 0 : entries.length;\n\t\n\t  this.clear();\n\t  while (++index < length) {\n\t    var entry = entries[index];\n\t    this.set(entry[0], entry[1]);\n\t  }\n\t}\n\t\n\t// Add methods to `Hash`.\n\tHash.prototype.clear = hashClear;\n\tHash.prototype['delete'] = hashDelete;\n\tHash.prototype.get = hashGet;\n\tHash.prototype.has = hashHas;\n\tHash.prototype.set = hashSet;\n\t\n\tmodule.exports = Hash;\n\n\n/***/ },\n/* 193 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar mapCacheClear = __webpack_require__(247),\n\t    mapCacheDelete = __webpack_require__(248),\n\t    mapCacheGet = __webpack_require__(249),\n\t    mapCacheHas = __webpack_require__(250),\n\t    mapCacheSet = __webpack_require__(251);\n\t\n\t/**\n\t * Creates a map cache object to store key-value pairs.\n\t *\n\t * @private\n\t * @constructor\n\t * @param {Array} [entries] The key-value pairs to cache.\n\t */\n\tfunction MapCache(entries) {\n\t  var index = -1,\n\t      length = entries == null ? 0 : entries.length;\n\t\n\t  this.clear();\n\t  while (++index < length) {\n\t    var entry = entries[index];\n\t    this.set(entry[0], entry[1]);\n\t  }\n\t}\n\t\n\t// Add methods to `MapCache`.\n\tMapCache.prototype.clear = mapCacheClear;\n\tMapCache.prototype['delete'] = mapCacheDelete;\n\tMapCache.prototype.get = mapCacheGet;\n\tMapCache.prototype.has = mapCacheHas;\n\tMapCache.prototype.set = mapCacheSet;\n\t\n\tmodule.exports = MapCache;\n\n\n/***/ },\n/* 194 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar getNative = __webpack_require__(25),\n\t    root = __webpack_require__(15);\n\t\n\t/* Built-in method references that are verified to be native. */\n\tvar Promise = getNative(root, 'Promise');\n\t\n\tmodule.exports = Promise;\n\n\n/***/ },\n/* 195 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar getNative = __webpack_require__(25),\n\t    root = __webpack_require__(15);\n\t\n\t/* Built-in method references that are verified to be native. */\n\tvar Set = getNative(root, 'Set');\n\t\n\tmodule.exports = Set;\n\n\n/***/ },\n/* 196 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar ListCache = __webpack_require__(42),\n\t    stackClear = __webpack_require__(258),\n\t    stackDelete = __webpack_require__(259),\n\t    stackGet = __webpack_require__(260),\n\t    stackHas = __webpack_require__(261),\n\t    stackSet = __webpack_require__(262);\n\t\n\t/**\n\t * Creates a stack cache object to store key-value pairs.\n\t *\n\t * @private\n\t * @constructor\n\t * @param {Array} [entries] The key-value pairs to cache.\n\t */\n\tfunction Stack(entries) {\n\t  var data = this.__data__ = new ListCache(entries);\n\t  this.size = data.size;\n\t}\n\t\n\t// Add methods to `Stack`.\n\tStack.prototype.clear = stackClear;\n\tStack.prototype['delete'] = stackDelete;\n\tStack.prototype.get = stackGet;\n\tStack.prototype.has = stackHas;\n\tStack.prototype.set = stackSet;\n\t\n\tmodule.exports = Stack;\n\n\n/***/ },\n/* 197 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar root = __webpack_require__(15);\n\t\n\t/** Built-in value references. */\n\tvar Uint8Array = root.Uint8Array;\n\t\n\tmodule.exports = Uint8Array;\n\n\n/***/ },\n/* 198 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar getNative = __webpack_require__(25),\n\t    root = __webpack_require__(15);\n\t\n\t/* Built-in method references that are verified to be native. */\n\tvar WeakMap = getNative(root, 'WeakMap');\n\t\n\tmodule.exports = WeakMap;\n\n\n/***/ },\n/* 199 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Adds the key-value `pair` to `map`.\n\t *\n\t * @private\n\t * @param {Object} map The map to modify.\n\t * @param {Array} pair The key-value pair to add.\n\t * @returns {Object} Returns `map`.\n\t */\n\tfunction addMapEntry(map, pair) {\n\t  // Don't return `map.set` because it's not chainable in IE 11.\n\t  map.set(pair[0], pair[1]);\n\t  return map;\n\t}\n\t\n\tmodule.exports = addMapEntry;\n\n\n/***/ },\n/* 200 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Adds `value` to `set`.\n\t *\n\t * @private\n\t * @param {Object} set The set to modify.\n\t * @param {*} value The value to add.\n\t * @returns {Object} Returns `set`.\n\t */\n\tfunction addSetEntry(set, value) {\n\t  // Don't return `set.add` because it's not chainable in IE 11.\n\t  set.add(value);\n\t  return set;\n\t}\n\t\n\tmodule.exports = addSetEntry;\n\n\n/***/ },\n/* 201 */\n/***/ function(module, exports) {\n\n\t/**\n\t * A specialized version of `_.forEach` for arrays without support for\n\t * iteratee shorthands.\n\t *\n\t * @private\n\t * @param {Array} [array] The array to iterate over.\n\t * @param {Function} iteratee The function invoked per iteration.\n\t * @returns {Array} Returns `array`.\n\t */\n\tfunction arrayEach(array, iteratee) {\n\t  var index = -1,\n\t      length = array == null ? 0 : array.length;\n\t\n\t  while (++index < length) {\n\t    if (iteratee(array[index], index, array) === false) {\n\t      break;\n\t    }\n\t  }\n\t  return array;\n\t}\n\t\n\tmodule.exports = arrayEach;\n\n\n/***/ },\n/* 202 */\n/***/ function(module, exports) {\n\n\t/**\n\t * A specialized version of `_.filter` for arrays without support for\n\t * iteratee shorthands.\n\t *\n\t * @private\n\t * @param {Array} [array] The array to iterate over.\n\t * @param {Function} predicate The function invoked per iteration.\n\t * @returns {Array} Returns the new filtered array.\n\t */\n\tfunction arrayFilter(array, predicate) {\n\t  var index = -1,\n\t      length = array == null ? 0 : array.length,\n\t      resIndex = 0,\n\t      result = [];\n\t\n\t  while (++index < length) {\n\t    var value = array[index];\n\t    if (predicate(value, index, array)) {\n\t      result[resIndex++] = value;\n\t    }\n\t  }\n\t  return result;\n\t}\n\t\n\tmodule.exports = arrayFilter;\n\n\n/***/ },\n/* 203 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar copyObject = __webpack_require__(44),\n\t    keys = __webpack_require__(65);\n\t\n\t/**\n\t * The base implementation of `_.assign` without support for multiple sources\n\t * or `customizer` functions.\n\t *\n\t * @private\n\t * @param {Object} object The destination object.\n\t * @param {Object} source The source object.\n\t * @returns {Object} Returns `object`.\n\t */\n\tfunction baseAssign(object, source) {\n\t  return object && copyObject(source, keys(source), object);\n\t}\n\t\n\tmodule.exports = baseAssign;\n\n\n/***/ },\n/* 204 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar copyObject = __webpack_require__(44),\n\t    keysIn = __webpack_require__(114);\n\t\n\t/**\n\t * The base implementation of `_.assignIn` without support for multiple sources\n\t * or `customizer` functions.\n\t *\n\t * @private\n\t * @param {Object} object The destination object.\n\t * @param {Object} source The source object.\n\t * @returns {Object} Returns `object`.\n\t */\n\tfunction baseAssignIn(object, source) {\n\t  return object && copyObject(source, keysIn(source), object);\n\t}\n\t\n\tmodule.exports = baseAssignIn;\n\n\n/***/ },\n/* 205 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar Stack = __webpack_require__(196),\n\t    arrayEach = __webpack_require__(201),\n\t    assignValue = __webpack_require__(102),\n\t    baseAssign = __webpack_require__(203),\n\t    baseAssignIn = __webpack_require__(204),\n\t    cloneBuffer = __webpack_require__(214),\n\t    copyArray = __webpack_require__(221),\n\t    copySymbols = __webpack_require__(222),\n\t    copySymbolsIn = __webpack_require__(223),\n\t    getAllKeys = __webpack_require__(226),\n\t    getAllKeysIn = __webpack_require__(227),\n\t    getTag = __webpack_require__(229),\n\t    initCloneArray = __webpack_require__(236),\n\t    initCloneByTag = __webpack_require__(237),\n\t    initCloneObject = __webpack_require__(238),\n\t    isArray = __webpack_require__(63),\n\t    isBuffer = __webpack_require__(111),\n\t    isObject = __webpack_require__(32),\n\t    keys = __webpack_require__(65);\n\t\n\t/** Used to compose bitmasks for cloning. */\n\tvar CLONE_DEEP_FLAG = 1,\n\t    CLONE_FLAT_FLAG = 2,\n\t    CLONE_SYMBOLS_FLAG = 4;\n\t\n\t/** `Object#toString` result references. */\n\tvar argsTag = '[object Arguments]',\n\t    arrayTag = '[object Array]',\n\t    boolTag = '[object Boolean]',\n\t    dateTag = '[object Date]',\n\t    errorTag = '[object Error]',\n\t    funcTag = '[object Function]',\n\t    genTag = '[object GeneratorFunction]',\n\t    mapTag = '[object Map]',\n\t    numberTag = '[object Number]',\n\t    objectTag = '[object Object]',\n\t    regexpTag = '[object RegExp]',\n\t    setTag = '[object Set]',\n\t    stringTag = '[object String]',\n\t    symbolTag = '[object Symbol]',\n\t    weakMapTag = '[object WeakMap]';\n\t\n\tvar arrayBufferTag = '[object ArrayBuffer]',\n\t    dataViewTag = '[object DataView]',\n\t    float32Tag = '[object Float32Array]',\n\t    float64Tag = '[object Float64Array]',\n\t    int8Tag = '[object Int8Array]',\n\t    int16Tag = '[object Int16Array]',\n\t    int32Tag = '[object Int32Array]',\n\t    uint8Tag = '[object Uint8Array]',\n\t    uint8ClampedTag = '[object Uint8ClampedArray]',\n\t    uint16Tag = '[object Uint16Array]',\n\t    uint32Tag = '[object Uint32Array]';\n\t\n\t/** Used to identify `toStringTag` values supported by `_.clone`. */\n\tvar cloneableTags = {};\n\tcloneableTags[argsTag] = cloneableTags[arrayTag] =\n\tcloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n\tcloneableTags[boolTag] = cloneableTags[dateTag] =\n\tcloneableTags[float32Tag] = cloneableTags[float64Tag] =\n\tcloneableTags[int8Tag] = cloneableTags[int16Tag] =\n\tcloneableTags[int32Tag] = cloneableTags[mapTag] =\n\tcloneableTags[numberTag] = cloneableTags[objectTag] =\n\tcloneableTags[regexpTag] = cloneableTags[setTag] =\n\tcloneableTags[stringTag] = cloneableTags[symbolTag] =\n\tcloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n\tcloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n\tcloneableTags[errorTag] = cloneableTags[funcTag] =\n\tcloneableTags[weakMapTag] = false;\n\t\n\t/**\n\t * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n\t * traversed objects.\n\t *\n\t * @private\n\t * @param {*} value The value to clone.\n\t * @param {boolean} bitmask The bitmask flags.\n\t *  1 - Deep clone\n\t *  2 - Flatten inherited properties\n\t *  4 - Clone symbols\n\t * @param {Function} [customizer] The function to customize cloning.\n\t * @param {string} [key] The key of `value`.\n\t * @param {Object} [object] The parent object of `value`.\n\t * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n\t * @returns {*} Returns the cloned value.\n\t */\n\tfunction baseClone(value, bitmask, customizer, key, object, stack) {\n\t  var result,\n\t      isDeep = bitmask & CLONE_DEEP_FLAG,\n\t      isFlat = bitmask & CLONE_FLAT_FLAG,\n\t      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\t\n\t  if (customizer) {\n\t    result = object ? customizer(value, key, object, stack) : customizer(value);\n\t  }\n\t  if (result !== undefined) {\n\t    return result;\n\t  }\n\t  if (!isObject(value)) {\n\t    return value;\n\t  }\n\t  var isArr = isArray(value);\n\t  if (isArr) {\n\t    result = initCloneArray(value);\n\t    if (!isDeep) {\n\t      return copyArray(value, result);\n\t    }\n\t  } else {\n\t    var tag = getTag(value),\n\t        isFunc = tag == funcTag || tag == genTag;\n\t\n\t    if (isBuffer(value)) {\n\t      return cloneBuffer(value, isDeep);\n\t    }\n\t    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n\t      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n\t      if (!isDeep) {\n\t        return isFlat\n\t          ? copySymbolsIn(value, baseAssignIn(result, value))\n\t          : copySymbols(value, baseAssign(result, value));\n\t      }\n\t    } else {\n\t      if (!cloneableTags[tag]) {\n\t        return object ? value : {};\n\t      }\n\t      result = initCloneByTag(value, tag, baseClone, isDeep);\n\t    }\n\t  }\n\t  // Check for circular references and return its corresponding clone.\n\t  stack || (stack = new Stack);\n\t  var stacked = stack.get(value);\n\t  if (stacked) {\n\t    return stacked;\n\t  }\n\t  stack.set(value, result);\n\t\n\t  var keysFunc = isFull\n\t    ? (isFlat ? getAllKeysIn : getAllKeys)\n\t    : (isFlat ? keysIn : keys);\n\t\n\t  var props = isArr ? undefined : keysFunc(value);\n\t  arrayEach(props || value, function(subValue, key) {\n\t    if (props) {\n\t      key = subValue;\n\t      subValue = value[key];\n\t    }\n\t    // Recursively populate clone (susceptible to call stack limits).\n\t    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n\t  });\n\t  return result;\n\t}\n\t\n\tmodule.exports = baseClone;\n\n\n/***/ },\n/* 206 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar isObject = __webpack_require__(32);\n\t\n\t/** Built-in value references. */\n\tvar objectCreate = Object.create;\n\t\n\t/**\n\t * The base implementation of `_.create` without support for assigning\n\t * properties to the created object.\n\t *\n\t * @private\n\t * @param {Object} proto The object to inherit from.\n\t * @returns {Object} Returns the new object.\n\t */\n\tvar baseCreate = (function() {\n\t  function object() {}\n\t  return function(proto) {\n\t    if (!isObject(proto)) {\n\t      return {};\n\t    }\n\t    if (objectCreate) {\n\t      return objectCreate(proto);\n\t    }\n\t    object.prototype = proto;\n\t    var result = new object;\n\t    object.prototype = undefined;\n\t    return result;\n\t  };\n\t}());\n\t\n\tmodule.exports = baseCreate;\n\n\n/***/ },\n/* 207 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar baseGetTag = __webpack_require__(31),\n\t    isObjectLike = __webpack_require__(47);\n\t\n\t/** `Object#toString` result references. */\n\tvar argsTag = '[object Arguments]';\n\t\n\t/**\n\t * The base implementation of `_.isArguments`.\n\t *\n\t * @private\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n\t */\n\tfunction baseIsArguments(value) {\n\t  return isObjectLike(value) && baseGetTag(value) == argsTag;\n\t}\n\t\n\tmodule.exports = baseIsArguments;\n\n\n/***/ },\n/* 208 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar isFunction = __webpack_require__(112),\n\t    isMasked = __webpack_require__(241),\n\t    isObject = __webpack_require__(32),\n\t    toSource = __webpack_require__(108);\n\t\n\t/**\n\t * Used to match `RegExp`\n\t * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n\t */\n\tvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\t\n\t/** Used to detect host constructors (Safari). */\n\tvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\t\n\t/** Used for built-in method references. */\n\tvar funcProto = Function.prototype,\n\t    objectProto = Object.prototype;\n\t\n\t/** Used to resolve the decompiled source of functions. */\n\tvar funcToString = funcProto.toString;\n\t\n\t/** Used to check objects for own properties. */\n\tvar hasOwnProperty = objectProto.hasOwnProperty;\n\t\n\t/** Used to detect if a method is native. */\n\tvar reIsNative = RegExp('^' +\n\t  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n\t  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n\t);\n\t\n\t/**\n\t * The base implementation of `_.isNative` without bad shim checks.\n\t *\n\t * @private\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is a native function,\n\t *  else `false`.\n\t */\n\tfunction baseIsNative(value) {\n\t  if (!isObject(value) || isMasked(value)) {\n\t    return false;\n\t  }\n\t  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n\t  return pattern.test(toSource(value));\n\t}\n\t\n\tmodule.exports = baseIsNative;\n\n\n/***/ },\n/* 209 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar baseGetTag = __webpack_require__(31),\n\t    isLength = __webpack_require__(113),\n\t    isObjectLike = __webpack_require__(47);\n\t\n\t/** `Object#toString` result references. */\n\tvar argsTag = '[object Arguments]',\n\t    arrayTag = '[object Array]',\n\t    boolTag = '[object Boolean]',\n\t    dateTag = '[object Date]',\n\t    errorTag = '[object Error]',\n\t    funcTag = '[object Function]',\n\t    mapTag = '[object Map]',\n\t    numberTag = '[object Number]',\n\t    objectTag = '[object Object]',\n\t    regexpTag = '[object RegExp]',\n\t    setTag = '[object Set]',\n\t    stringTag = '[object String]',\n\t    weakMapTag = '[object WeakMap]';\n\t\n\tvar arrayBufferTag = '[object ArrayBuffer]',\n\t    dataViewTag = '[object DataView]',\n\t    float32Tag = '[object Float32Array]',\n\t    float64Tag = '[object Float64Array]',\n\t    int8Tag = '[object Int8Array]',\n\t    int16Tag = '[object Int16Array]',\n\t    int32Tag = '[object Int32Array]',\n\t    uint8Tag = '[object Uint8Array]',\n\t    uint8ClampedTag = '[object Uint8ClampedArray]',\n\t    uint16Tag = '[object Uint16Array]',\n\t    uint32Tag = '[object Uint32Array]';\n\t\n\t/** Used to identify `toStringTag` values of typed arrays. */\n\tvar typedArrayTags = {};\n\ttypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n\ttypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n\ttypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n\ttypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n\ttypedArrayTags[uint32Tag] = true;\n\ttypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n\ttypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n\ttypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n\ttypedArrayTags[errorTag] = typedArrayTags[funcTag] =\n\ttypedArrayTags[mapTag] = typedArrayTags[numberTag] =\n\ttypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n\ttypedArrayTags[setTag] = typedArrayTags[stringTag] =\n\ttypedArrayTags[weakMapTag] = false;\n\t\n\t/**\n\t * The base implementation of `_.isTypedArray` without Node.js optimizations.\n\t *\n\t * @private\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n\t */\n\tfunction baseIsTypedArray(value) {\n\t  return isObjectLike(value) &&\n\t    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n\t}\n\t\n\tmodule.exports = baseIsTypedArray;\n\n\n/***/ },\n/* 210 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar isPrototype = __webpack_require__(62),\n\t    nativeKeys = __webpack_require__(253);\n\t\n\t/** Used for built-in method references. */\n\tvar objectProto = Object.prototype;\n\t\n\t/** Used to check objects for own properties. */\n\tvar hasOwnProperty = objectProto.hasOwnProperty;\n\t\n\t/**\n\t * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n\t *\n\t * @private\n\t * @param {Object} object The object to query.\n\t * @returns {Array} Returns the array of property names.\n\t */\n\tfunction baseKeys(object) {\n\t  if (!isPrototype(object)) {\n\t    return nativeKeys(object);\n\t  }\n\t  var result = [];\n\t  for (var key in Object(object)) {\n\t    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n\t      result.push(key);\n\t    }\n\t  }\n\t  return result;\n\t}\n\t\n\tmodule.exports = baseKeys;\n\n\n/***/ },\n/* 211 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar isObject = __webpack_require__(32),\n\t    isPrototype = __webpack_require__(62),\n\t    nativeKeysIn = __webpack_require__(254);\n\t\n\t/** Used for built-in method references. */\n\tvar objectProto = Object.prototype;\n\t\n\t/** Used to check objects for own properties. */\n\tvar hasOwnProperty = objectProto.hasOwnProperty;\n\t\n\t/**\n\t * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n\t *\n\t * @private\n\t * @param {Object} object The object to query.\n\t * @returns {Array} Returns the array of property names.\n\t */\n\tfunction baseKeysIn(object) {\n\t  if (!isObject(object)) {\n\t    return nativeKeysIn(object);\n\t  }\n\t  var isProto = isPrototype(object),\n\t      result = [];\n\t\n\t  for (var key in object) {\n\t    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n\t      result.push(key);\n\t    }\n\t  }\n\t  return result;\n\t}\n\t\n\tmodule.exports = baseKeysIn;\n\n\n/***/ },\n/* 212 */\n/***/ function(module, exports) {\n\n\t/**\n\t * The base implementation of `_.times` without support for iteratee shorthands\n\t * or max array length checks.\n\t *\n\t * @private\n\t * @param {number} n The number of times to invoke `iteratee`.\n\t * @param {Function} iteratee The function invoked per iteration.\n\t * @returns {Array} Returns the array of results.\n\t */\n\tfunction baseTimes(n, iteratee) {\n\t  var index = -1,\n\t      result = Array(n);\n\t\n\t  while (++index < n) {\n\t    result[index] = iteratee(index);\n\t  }\n\t  return result;\n\t}\n\t\n\tmodule.exports = baseTimes;\n\n\n/***/ },\n/* 213 */\n/***/ function(module, exports) {\n\n\t/**\n\t * The base implementation of `_.unary` without support for storing metadata.\n\t *\n\t * @private\n\t * @param {Function} func The function to cap arguments for.\n\t * @returns {Function} Returns the new capped function.\n\t */\n\tfunction baseUnary(func) {\n\t  return function(value) {\n\t    return func(value);\n\t  };\n\t}\n\t\n\tmodule.exports = baseUnary;\n\n\n/***/ },\n/* 214 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(module) {var root = __webpack_require__(15);\n\t\n\t/** Detect free variable `exports`. */\n\tvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\t\n\t/** Detect free variable `module`. */\n\tvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\t\n\t/** Detect the popular CommonJS extension `module.exports`. */\n\tvar moduleExports = freeModule && freeModule.exports === freeExports;\n\t\n\t/** Built-in value references. */\n\tvar Buffer = moduleExports ? root.Buffer : undefined,\n\t    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;\n\t\n\t/**\n\t * Creates a clone of  `buffer`.\n\t *\n\t * @private\n\t * @param {Buffer} buffer The buffer to clone.\n\t * @param {boolean} [isDeep] Specify a deep clone.\n\t * @returns {Buffer} Returns the cloned buffer.\n\t */\n\tfunction cloneBuffer(buffer, isDeep) {\n\t  if (isDeep) {\n\t    return buffer.slice();\n\t  }\n\t  var length = buffer.length,\n\t      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\t\n\t  buffer.copy(result);\n\t  return result;\n\t}\n\t\n\tmodule.exports = cloneBuffer;\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(87)(module)))\n\n/***/ },\n/* 215 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar cloneArrayBuffer = __webpack_require__(59);\n\t\n\t/**\n\t * Creates a clone of `dataView`.\n\t *\n\t * @private\n\t * @param {Object} dataView The data view to clone.\n\t * @param {boolean} [isDeep] Specify a deep clone.\n\t * @returns {Object} Returns the cloned data view.\n\t */\n\tfunction cloneDataView(dataView, isDeep) {\n\t  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n\t  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n\t}\n\t\n\tmodule.exports = cloneDataView;\n\n\n/***/ },\n/* 216 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar addMapEntry = __webpack_require__(199),\n\t    arrayReduce = __webpack_require__(101),\n\t    mapToArray = __webpack_require__(252);\n\t\n\t/** Used to compose bitmasks for cloning. */\n\tvar CLONE_DEEP_FLAG = 1;\n\t\n\t/**\n\t * Creates a clone of `map`.\n\t *\n\t * @private\n\t * @param {Object} map The map to clone.\n\t * @param {Function} cloneFunc The function to clone values.\n\t * @param {boolean} [isDeep] Specify a deep clone.\n\t * @returns {Object} Returns the cloned map.\n\t */\n\tfunction cloneMap(map, isDeep, cloneFunc) {\n\t  var array = isDeep ? cloneFunc(mapToArray(map), CLONE_DEEP_FLAG) : mapToArray(map);\n\t  return arrayReduce(array, addMapEntry, new map.constructor);\n\t}\n\t\n\tmodule.exports = cloneMap;\n\n\n/***/ },\n/* 217 */\n/***/ function(module, exports) {\n\n\t/** Used to match `RegExp` flags from their coerced string values. */\n\tvar reFlags = /\\w*$/;\n\t\n\t/**\n\t * Creates a clone of `regexp`.\n\t *\n\t * @private\n\t * @param {Object} regexp The regexp to clone.\n\t * @returns {Object} Returns the cloned regexp.\n\t */\n\tfunction cloneRegExp(regexp) {\n\t  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n\t  result.lastIndex = regexp.lastIndex;\n\t  return result;\n\t}\n\t\n\tmodule.exports = cloneRegExp;\n\n\n/***/ },\n/* 218 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar addSetEntry = __webpack_require__(200),\n\t    arrayReduce = __webpack_require__(101),\n\t    setToArray = __webpack_require__(257);\n\t\n\t/** Used to compose bitmasks for cloning. */\n\tvar CLONE_DEEP_FLAG = 1;\n\t\n\t/**\n\t * Creates a clone of `set`.\n\t *\n\t * @private\n\t * @param {Object} set The set to clone.\n\t * @param {Function} cloneFunc The function to clone values.\n\t * @param {boolean} [isDeep] Specify a deep clone.\n\t * @returns {Object} Returns the cloned set.\n\t */\n\tfunction cloneSet(set, isDeep, cloneFunc) {\n\t  var array = isDeep ? cloneFunc(setToArray(set), CLONE_DEEP_FLAG) : setToArray(set);\n\t  return arrayReduce(array, addSetEntry, new set.constructor);\n\t}\n\t\n\tmodule.exports = cloneSet;\n\n\n/***/ },\n/* 219 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar Symbol = __webpack_require__(58);\n\t\n\t/** Used to convert symbols to primitives and strings. */\n\tvar symbolProto = Symbol ? Symbol.prototype : undefined,\n\t    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\t\n\t/**\n\t * Creates a clone of the `symbol` object.\n\t *\n\t * @private\n\t * @param {Object} symbol The symbol object to clone.\n\t * @returns {Object} Returns the cloned symbol object.\n\t */\n\tfunction cloneSymbol(symbol) {\n\t  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n\t}\n\t\n\tmodule.exports = cloneSymbol;\n\n\n/***/ },\n/* 220 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar cloneArrayBuffer = __webpack_require__(59);\n\t\n\t/**\n\t * Creates a clone of `typedArray`.\n\t *\n\t * @private\n\t * @param {Object} typedArray The typed array to clone.\n\t * @param {boolean} [isDeep] Specify a deep clone.\n\t * @returns {Object} Returns the cloned typed array.\n\t */\n\tfunction cloneTypedArray(typedArray, isDeep) {\n\t  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n\t  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n\t}\n\t\n\tmodule.exports = cloneTypedArray;\n\n\n/***/ },\n/* 221 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copies the values of `source` to `array`.\n\t *\n\t * @private\n\t * @param {Array} source The array to copy values from.\n\t * @param {Array} [array=[]] The array to copy values to.\n\t * @returns {Array} Returns `array`.\n\t */\n\tfunction copyArray(source, array) {\n\t  var index = -1,\n\t      length = source.length;\n\t\n\t  array || (array = Array(length));\n\t  while (++index < length) {\n\t    array[index] = source[index];\n\t  }\n\t  return array;\n\t}\n\t\n\tmodule.exports = copyArray;\n\n\n/***/ },\n/* 222 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar copyObject = __webpack_require__(44),\n\t    getSymbols = __webpack_require__(61);\n\t\n\t/**\n\t * Copies own symbols of `source` to `object`.\n\t *\n\t * @private\n\t * @param {Object} source The object to copy symbols from.\n\t * @param {Object} [object={}] The object to copy symbols to.\n\t * @returns {Object} Returns `object`.\n\t */\n\tfunction copySymbols(source, object) {\n\t  return copyObject(source, getSymbols(source), object);\n\t}\n\t\n\tmodule.exports = copySymbols;\n\n\n/***/ },\n/* 223 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar copyObject = __webpack_require__(44),\n\t    getSymbolsIn = __webpack_require__(106);\n\t\n\t/**\n\t * Copies own and inherited symbols of `source` to `object`.\n\t *\n\t * @private\n\t * @param {Object} source The object to copy symbols from.\n\t * @param {Object} [object={}] The object to copy symbols to.\n\t * @returns {Object} Returns `object`.\n\t */\n\tfunction copySymbolsIn(source, object) {\n\t  return copyObject(source, getSymbolsIn(source), object);\n\t}\n\t\n\tmodule.exports = copySymbolsIn;\n\n\n/***/ },\n/* 224 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar root = __webpack_require__(15);\n\t\n\t/** Used to detect overreaching core-js shims. */\n\tvar coreJsData = root['__core-js_shared__'];\n\t\n\tmodule.exports = coreJsData;\n\n\n/***/ },\n/* 225 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar getNative = __webpack_require__(25);\n\t\n\tvar defineProperty = (function() {\n\t  try {\n\t    var func = getNative(Object, 'defineProperty');\n\t    func({}, '', {});\n\t    return func;\n\t  } catch (e) {}\n\t}());\n\t\n\tmodule.exports = defineProperty;\n\n\n/***/ },\n/* 226 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar baseGetAllKeys = __webpack_require__(104),\n\t    getSymbols = __webpack_require__(61),\n\t    keys = __webpack_require__(65);\n\t\n\t/**\n\t * Creates an array of own enumerable property names and symbols of `object`.\n\t *\n\t * @private\n\t * @param {Object} object The object to query.\n\t * @returns {Array} Returns the array of property names and symbols.\n\t */\n\tfunction getAllKeys(object) {\n\t  return baseGetAllKeys(object, keys, getSymbols);\n\t}\n\t\n\tmodule.exports = getAllKeys;\n\n\n/***/ },\n/* 227 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar baseGetAllKeys = __webpack_require__(104),\n\t    getSymbolsIn = __webpack_require__(106),\n\t    keysIn = __webpack_require__(114);\n\t\n\t/**\n\t * Creates an array of own and inherited enumerable property names and\n\t * symbols of `object`.\n\t *\n\t * @private\n\t * @param {Object} object The object to query.\n\t * @returns {Array} Returns the array of property names and symbols.\n\t */\n\tfunction getAllKeysIn(object) {\n\t  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n\t}\n\t\n\tmodule.exports = getAllKeysIn;\n\n\n/***/ },\n/* 228 */,\n/* 229 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar DataView = __webpack_require__(191),\n\t    Map = __webpack_require__(57),\n\t    Promise = __webpack_require__(194),\n\t    Set = __webpack_require__(195),\n\t    WeakMap = __webpack_require__(198),\n\t    baseGetTag = __webpack_require__(31),\n\t    toSource = __webpack_require__(108);\n\t\n\t/** `Object#toString` result references. */\n\tvar mapTag = '[object Map]',\n\t    objectTag = '[object Object]',\n\t    promiseTag = '[object Promise]',\n\t    setTag = '[object Set]',\n\t    weakMapTag = '[object WeakMap]';\n\t\n\tvar dataViewTag = '[object DataView]';\n\t\n\t/** Used to detect maps, sets, and weakmaps. */\n\tvar dataViewCtorString = toSource(DataView),\n\t    mapCtorString = toSource(Map),\n\t    promiseCtorString = toSource(Promise),\n\t    setCtorString = toSource(Set),\n\t    weakMapCtorString = toSource(WeakMap);\n\t\n\t/**\n\t * Gets the `toStringTag` of `value`.\n\t *\n\t * @private\n\t * @param {*} value The value to query.\n\t * @returns {string} Returns the `toStringTag`.\n\t */\n\tvar getTag = baseGetTag;\n\t\n\t// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n\tif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n\t    (Map && getTag(new Map) != mapTag) ||\n\t    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n\t    (Set && getTag(new Set) != setTag) ||\n\t    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n\t  getTag = function(value) {\n\t    var result = baseGetTag(value),\n\t        Ctor = result == objectTag ? value.constructor : undefined,\n\t        ctorString = Ctor ? toSource(Ctor) : '';\n\t\n\t    if (ctorString) {\n\t      switch (ctorString) {\n\t        case dataViewCtorString: return dataViewTag;\n\t        case mapCtorString: return mapTag;\n\t        case promiseCtorString: return promiseTag;\n\t        case setCtorString: return setTag;\n\t        case weakMapCtorString: return weakMapTag;\n\t      }\n\t    }\n\t    return result;\n\t  };\n\t}\n\t\n\tmodule.exports = getTag;\n\n\n/***/ },\n/* 230 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Gets the value at `key` of `object`.\n\t *\n\t * @private\n\t * @param {Object} [object] The object to query.\n\t * @param {string} key The key of the property to get.\n\t * @returns {*} Returns the property value.\n\t */\n\tfunction getValue(object, key) {\n\t  return object == null ? undefined : object[key];\n\t}\n\t\n\tmodule.exports = getValue;\n\n\n/***/ },\n/* 231 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar nativeCreate = __webpack_require__(46);\n\t\n\t/**\n\t * Removes all key-value entries from the hash.\n\t *\n\t * @private\n\t * @name clear\n\t * @memberOf Hash\n\t */\n\tfunction hashClear() {\n\t  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n\t  this.size = 0;\n\t}\n\t\n\tmodule.exports = hashClear;\n\n\n/***/ },\n/* 232 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Removes `key` and its value from the hash.\n\t *\n\t * @private\n\t * @name delete\n\t * @memberOf Hash\n\t * @param {Object} hash The hash to modify.\n\t * @param {string} key The key of the value to remove.\n\t * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n\t */\n\tfunction hashDelete(key) {\n\t  var result = this.has(key) && delete this.__data__[key];\n\t  this.size -= result ? 1 : 0;\n\t  return result;\n\t}\n\t\n\tmodule.exports = hashDelete;\n\n\n/***/ },\n/* 233 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar nativeCreate = __webpack_require__(46);\n\t\n\t/** Used to stand-in for `undefined` hash values. */\n\tvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\t\n\t/** Used for built-in method references. */\n\tvar objectProto = Object.prototype;\n\t\n\t/** Used to check objects for own properties. */\n\tvar hasOwnProperty = objectProto.hasOwnProperty;\n\t\n\t/**\n\t * Gets the hash value for `key`.\n\t *\n\t * @private\n\t * @name get\n\t * @memberOf Hash\n\t * @param {string} key The key of the value to get.\n\t * @returns {*} Returns the entry value.\n\t */\n\tfunction hashGet(key) {\n\t  var data = this.__data__;\n\t  if (nativeCreate) {\n\t    var result = data[key];\n\t    return result === HASH_UNDEFINED ? undefined : result;\n\t  }\n\t  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n\t}\n\t\n\tmodule.exports = hashGet;\n\n\n/***/ },\n/* 234 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar nativeCreate = __webpack_require__(46);\n\t\n\t/** Used for built-in method references. */\n\tvar objectProto = Object.prototype;\n\t\n\t/** Used to check objects for own properties. */\n\tvar hasOwnProperty = objectProto.hasOwnProperty;\n\t\n\t/**\n\t * Checks if a hash value for `key` exists.\n\t *\n\t * @private\n\t * @name has\n\t * @memberOf Hash\n\t * @param {string} key The key of the entry to check.\n\t * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t */\n\tfunction hashHas(key) {\n\t  var data = this.__data__;\n\t  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n\t}\n\t\n\tmodule.exports = hashHas;\n\n\n/***/ },\n/* 235 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar nativeCreate = __webpack_require__(46);\n\t\n\t/** Used to stand-in for `undefined` hash values. */\n\tvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\t\n\t/**\n\t * Sets the hash `key` to `value`.\n\t *\n\t * @private\n\t * @name set\n\t * @memberOf Hash\n\t * @param {string} key The key of the value to set.\n\t * @param {*} value The value to set.\n\t * @returns {Object} Returns the hash instance.\n\t */\n\tfunction hashSet(key, value) {\n\t  var data = this.__data__;\n\t  this.size += this.has(key) ? 0 : 1;\n\t  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n\t  return this;\n\t}\n\t\n\tmodule.exports = hashSet;\n\n\n/***/ },\n/* 236 */\n/***/ function(module, exports) {\n\n\t/** Used for built-in method references. */\n\tvar objectProto = Object.prototype;\n\t\n\t/** Used to check objects for own properties. */\n\tvar hasOwnProperty = objectProto.hasOwnProperty;\n\t\n\t/**\n\t * Initializes an array clone.\n\t *\n\t * @private\n\t * @param {Array} array The array to clone.\n\t * @returns {Array} Returns the initialized clone.\n\t */\n\tfunction initCloneArray(array) {\n\t  var length = array.length,\n\t      result = array.constructor(length);\n\t\n\t  // Add properties assigned by `RegExp#exec`.\n\t  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n\t    result.index = array.index;\n\t    result.input = array.input;\n\t  }\n\t  return result;\n\t}\n\t\n\tmodule.exports = initCloneArray;\n\n\n/***/ },\n/* 237 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar cloneArrayBuffer = __webpack_require__(59),\n\t    cloneDataView = __webpack_require__(215),\n\t    cloneMap = __webpack_require__(216),\n\t    cloneRegExp = __webpack_require__(217),\n\t    cloneSet = __webpack_require__(218),\n\t    cloneSymbol = __webpack_require__(219),\n\t    cloneTypedArray = __webpack_require__(220);\n\t\n\t/** `Object#toString` result references. */\n\tvar boolTag = '[object Boolean]',\n\t    dateTag = '[object Date]',\n\t    mapTag = '[object Map]',\n\t    numberTag = '[object Number]',\n\t    regexpTag = '[object RegExp]',\n\t    setTag = '[object Set]',\n\t    stringTag = '[object String]',\n\t    symbolTag = '[object Symbol]';\n\t\n\tvar arrayBufferTag = '[object ArrayBuffer]',\n\t    dataViewTag = '[object DataView]',\n\t    float32Tag = '[object Float32Array]',\n\t    float64Tag = '[object Float64Array]',\n\t    int8Tag = '[object Int8Array]',\n\t    int16Tag = '[object Int16Array]',\n\t    int32Tag = '[object Int32Array]',\n\t    uint8Tag = '[object Uint8Array]',\n\t    uint8ClampedTag = '[object Uint8ClampedArray]',\n\t    uint16Tag = '[object Uint16Array]',\n\t    uint32Tag = '[object Uint32Array]';\n\t\n\t/**\n\t * Initializes an object clone based on its `toStringTag`.\n\t *\n\t * **Note:** This function only supports cloning values with tags of\n\t * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n\t *\n\t * @private\n\t * @param {Object} object The object to clone.\n\t * @param {string} tag The `toStringTag` of the object to clone.\n\t * @param {Function} cloneFunc The function to clone values.\n\t * @param {boolean} [isDeep] Specify a deep clone.\n\t * @returns {Object} Returns the initialized clone.\n\t */\n\tfunction initCloneByTag(object, tag, cloneFunc, isDeep) {\n\t  var Ctor = object.constructor;\n\t  switch (tag) {\n\t    case arrayBufferTag:\n\t      return cloneArrayBuffer(object);\n\t\n\t    case boolTag:\n\t    case dateTag:\n\t      return new Ctor(+object);\n\t\n\t    case dataViewTag:\n\t      return cloneDataView(object, isDeep);\n\t\n\t    case float32Tag: case float64Tag:\n\t    case int8Tag: case int16Tag: case int32Tag:\n\t    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n\t      return cloneTypedArray(object, isDeep);\n\t\n\t    case mapTag:\n\t      return cloneMap(object, isDeep, cloneFunc);\n\t\n\t    case numberTag:\n\t    case stringTag:\n\t      return new Ctor(object);\n\t\n\t    case regexpTag:\n\t      return cloneRegExp(object);\n\t\n\t    case setTag:\n\t      return cloneSet(object, isDeep, cloneFunc);\n\t\n\t    case symbolTag:\n\t      return cloneSymbol(object);\n\t  }\n\t}\n\t\n\tmodule.exports = initCloneByTag;\n\n\n/***/ },\n/* 238 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar baseCreate = __webpack_require__(206),\n\t    getPrototype = __webpack_require__(60),\n\t    isPrototype = __webpack_require__(62);\n\t\n\t/**\n\t * Initializes an object clone.\n\t *\n\t * @private\n\t * @param {Object} object The object to clone.\n\t * @returns {Object} Returns the initialized clone.\n\t */\n\tfunction initCloneObject(object) {\n\t  return (typeof object.constructor == 'function' && !isPrototype(object))\n\t    ? baseCreate(getPrototype(object))\n\t    : {};\n\t}\n\t\n\tmodule.exports = initCloneObject;\n\n\n/***/ },\n/* 239 */\n/***/ function(module, exports) {\n\n\t/** Used as references for various `Number` constants. */\n\tvar MAX_SAFE_INTEGER = 9007199254740991;\n\t\n\t/** Used to detect unsigned integer values. */\n\tvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\t\n\t/**\n\t * Checks if `value` is a valid array-like index.\n\t *\n\t * @private\n\t * @param {*} value The value to check.\n\t * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n\t * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n\t */\n\tfunction isIndex(value, length) {\n\t  length = length == null ? MAX_SAFE_INTEGER : length;\n\t  return !!length &&\n\t    (typeof value == 'number' || reIsUint.test(value)) &&\n\t    (value > -1 && value % 1 == 0 && value < length);\n\t}\n\t\n\tmodule.exports = isIndex;\n\n\n/***/ },\n/* 240 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Checks if `value` is suitable for use as unique object key.\n\t *\n\t * @private\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n\t */\n\tfunction isKeyable(value) {\n\t  var type = typeof value;\n\t  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n\t    ? (value !== '__proto__')\n\t    : (value === null);\n\t}\n\t\n\tmodule.exports = isKeyable;\n\n\n/***/ },\n/* 241 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar coreJsData = __webpack_require__(224);\n\t\n\t/** Used to detect methods masquerading as native. */\n\tvar maskSrcKey = (function() {\n\t  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n\t  return uid ? ('Symbol(src)_1.' + uid) : '';\n\t}());\n\t\n\t/**\n\t * Checks if `func` has its source masked.\n\t *\n\t * @private\n\t * @param {Function} func The function to check.\n\t * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n\t */\n\tfunction isMasked(func) {\n\t  return !!maskSrcKey && (maskSrcKey in func);\n\t}\n\t\n\tmodule.exports = isMasked;\n\n\n/***/ },\n/* 242 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Removes all key-value entries from the list cache.\n\t *\n\t * @private\n\t * @name clear\n\t * @memberOf ListCache\n\t */\n\tfunction listCacheClear() {\n\t  this.__data__ = [];\n\t  this.size = 0;\n\t}\n\t\n\tmodule.exports = listCacheClear;\n\n\n/***/ },\n/* 243 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar assocIndexOf = __webpack_require__(43);\n\t\n\t/** Used for built-in method references. */\n\tvar arrayProto = Array.prototype;\n\t\n\t/** Built-in value references. */\n\tvar splice = arrayProto.splice;\n\t\n\t/**\n\t * Removes `key` and its value from the list cache.\n\t *\n\t * @private\n\t * @name delete\n\t * @memberOf ListCache\n\t * @param {string} key The key of the value to remove.\n\t * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n\t */\n\tfunction listCacheDelete(key) {\n\t  var data = this.__data__,\n\t      index = assocIndexOf(data, key);\n\t\n\t  if (index < 0) {\n\t    return false;\n\t  }\n\t  var lastIndex = data.length - 1;\n\t  if (index == lastIndex) {\n\t    data.pop();\n\t  } else {\n\t    splice.call(data, index, 1);\n\t  }\n\t  --this.size;\n\t  return true;\n\t}\n\t\n\tmodule.exports = listCacheDelete;\n\n\n/***/ },\n/* 244 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar assocIndexOf = __webpack_require__(43);\n\t\n\t/**\n\t * Gets the list cache value for `key`.\n\t *\n\t * @private\n\t * @name get\n\t * @memberOf ListCache\n\t * @param {string} key The key of the value to get.\n\t * @returns {*} Returns the entry value.\n\t */\n\tfunction listCacheGet(key) {\n\t  var data = this.__data__,\n\t      index = assocIndexOf(data, key);\n\t\n\t  return index < 0 ? undefined : data[index][1];\n\t}\n\t\n\tmodule.exports = listCacheGet;\n\n\n/***/ },\n/* 245 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar assocIndexOf = __webpack_require__(43);\n\t\n\t/**\n\t * Checks if a list cache value for `key` exists.\n\t *\n\t * @private\n\t * @name has\n\t * @memberOf ListCache\n\t * @param {string} key The key of the entry to check.\n\t * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t */\n\tfunction listCacheHas(key) {\n\t  return assocIndexOf(this.__data__, key) > -1;\n\t}\n\t\n\tmodule.exports = listCacheHas;\n\n\n/***/ },\n/* 246 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar assocIndexOf = __webpack_require__(43);\n\t\n\t/**\n\t * Sets the list cache `key` to `value`.\n\t *\n\t * @private\n\t * @name set\n\t * @memberOf ListCache\n\t * @param {string} key The key of the value to set.\n\t * @param {*} value The value to set.\n\t * @returns {Object} Returns the list cache instance.\n\t */\n\tfunction listCacheSet(key, value) {\n\t  var data = this.__data__,\n\t      index = assocIndexOf(data, key);\n\t\n\t  if (index < 0) {\n\t    ++this.size;\n\t    data.push([key, value]);\n\t  } else {\n\t    data[index][1] = value;\n\t  }\n\t  return this;\n\t}\n\t\n\tmodule.exports = listCacheSet;\n\n\n/***/ },\n/* 247 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar Hash = __webpack_require__(192),\n\t    ListCache = __webpack_require__(42),\n\t    Map = __webpack_require__(57);\n\t\n\t/**\n\t * Removes all key-value entries from the map.\n\t *\n\t * @private\n\t * @name clear\n\t * @memberOf MapCache\n\t */\n\tfunction mapCacheClear() {\n\t  this.size = 0;\n\t  this.__data__ = {\n\t    'hash': new Hash,\n\t    'map': new (Map || ListCache),\n\t    'string': new Hash\n\t  };\n\t}\n\t\n\tmodule.exports = mapCacheClear;\n\n\n/***/ },\n/* 248 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar getMapData = __webpack_require__(45);\n\t\n\t/**\n\t * Removes `key` and its value from the map.\n\t *\n\t * @private\n\t * @name delete\n\t * @memberOf MapCache\n\t * @param {string} key The key of the value to remove.\n\t * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n\t */\n\tfunction mapCacheDelete(key) {\n\t  var result = getMapData(this, key)['delete'](key);\n\t  this.size -= result ? 1 : 0;\n\t  return result;\n\t}\n\t\n\tmodule.exports = mapCacheDelete;\n\n\n/***/ },\n/* 249 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar getMapData = __webpack_require__(45);\n\t\n\t/**\n\t * Gets the map value for `key`.\n\t *\n\t * @private\n\t * @name get\n\t * @memberOf MapCache\n\t * @param {string} key The key of the value to get.\n\t * @returns {*} Returns the entry value.\n\t */\n\tfunction mapCacheGet(key) {\n\t  return getMapData(this, key).get(key);\n\t}\n\t\n\tmodule.exports = mapCacheGet;\n\n\n/***/ },\n/* 250 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar getMapData = __webpack_require__(45);\n\t\n\t/**\n\t * Checks if a map value for `key` exists.\n\t *\n\t * @private\n\t * @name has\n\t * @memberOf MapCache\n\t * @param {string} key The key of the entry to check.\n\t * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t */\n\tfunction mapCacheHas(key) {\n\t  return getMapData(this, key).has(key);\n\t}\n\t\n\tmodule.exports = mapCacheHas;\n\n\n/***/ },\n/* 251 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar getMapData = __webpack_require__(45);\n\t\n\t/**\n\t * Sets the map `key` to `value`.\n\t *\n\t * @private\n\t * @name set\n\t * @memberOf MapCache\n\t * @param {string} key The key of the value to set.\n\t * @param {*} value The value to set.\n\t * @returns {Object} Returns the map cache instance.\n\t */\n\tfunction mapCacheSet(key, value) {\n\t  var data = getMapData(this, key),\n\t      size = data.size;\n\t\n\t  data.set(key, value);\n\t  this.size += data.size == size ? 0 : 1;\n\t  return this;\n\t}\n\t\n\tmodule.exports = mapCacheSet;\n\n\n/***/ },\n/* 252 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Converts `map` to its key-value pairs.\n\t *\n\t * @private\n\t * @param {Object} map The map to convert.\n\t * @returns {Array} Returns the key-value pairs.\n\t */\n\tfunction mapToArray(map) {\n\t  var index = -1,\n\t      result = Array(map.size);\n\t\n\t  map.forEach(function(value, key) {\n\t    result[++index] = [key, value];\n\t  });\n\t  return result;\n\t}\n\t\n\tmodule.exports = mapToArray;\n\n\n/***/ },\n/* 253 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar overArg = __webpack_require__(107);\n\t\n\t/* Built-in method references for those with the same name as other `lodash` methods. */\n\tvar nativeKeys = overArg(Object.keys, Object);\n\t\n\tmodule.exports = nativeKeys;\n\n\n/***/ },\n/* 254 */\n/***/ function(module, exports) {\n\n\t/**\n\t * This function is like\n\t * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n\t * except that it includes inherited enumerable properties.\n\t *\n\t * @private\n\t * @param {Object} object The object to query.\n\t * @returns {Array} Returns the array of property names.\n\t */\n\tfunction nativeKeysIn(object) {\n\t  var result = [];\n\t  if (object != null) {\n\t    for (var key in Object(object)) {\n\t      result.push(key);\n\t    }\n\t  }\n\t  return result;\n\t}\n\t\n\tmodule.exports = nativeKeysIn;\n\n\n/***/ },\n/* 255 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(module) {var freeGlobal = __webpack_require__(105);\n\t\n\t/** Detect free variable `exports`. */\n\tvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\t\n\t/** Detect free variable `module`. */\n\tvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\t\n\t/** Detect the popular CommonJS extension `module.exports`. */\n\tvar moduleExports = freeModule && freeModule.exports === freeExports;\n\t\n\t/** Detect free variable `process` from Node.js. */\n\tvar freeProcess = moduleExports && freeGlobal.process;\n\t\n\t/** Used to access faster Node.js helpers. */\n\tvar nodeUtil = (function() {\n\t  try {\n\t    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n\t  } catch (e) {}\n\t}());\n\t\n\tmodule.exports = nodeUtil;\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(87)(module)))\n\n/***/ },\n/* 256 */,\n/* 257 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Converts `set` to an array of its values.\n\t *\n\t * @private\n\t * @param {Object} set The set to convert.\n\t * @returns {Array} Returns the values.\n\t */\n\tfunction setToArray(set) {\n\t  var index = -1,\n\t      result = Array(set.size);\n\t\n\t  set.forEach(function(value) {\n\t    result[++index] = value;\n\t  });\n\t  return result;\n\t}\n\t\n\tmodule.exports = setToArray;\n\n\n/***/ },\n/* 258 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar ListCache = __webpack_require__(42);\n\t\n\t/**\n\t * Removes all key-value entries from the stack.\n\t *\n\t * @private\n\t * @name clear\n\t * @memberOf Stack\n\t */\n\tfunction stackClear() {\n\t  this.__data__ = new ListCache;\n\t  this.size = 0;\n\t}\n\t\n\tmodule.exports = stackClear;\n\n\n/***/ },\n/* 259 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Removes `key` and its value from the stack.\n\t *\n\t * @private\n\t * @name delete\n\t * @memberOf Stack\n\t * @param {string} key The key of the value to remove.\n\t * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n\t */\n\tfunction stackDelete(key) {\n\t  var data = this.__data__,\n\t      result = data['delete'](key);\n\t\n\t  this.size = data.size;\n\t  return result;\n\t}\n\t\n\tmodule.exports = stackDelete;\n\n\n/***/ },\n/* 260 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Gets the stack value for `key`.\n\t *\n\t * @private\n\t * @name get\n\t * @memberOf Stack\n\t * @param {string} key The key of the value to get.\n\t * @returns {*} Returns the entry value.\n\t */\n\tfunction stackGet(key) {\n\t  return this.__data__.get(key);\n\t}\n\t\n\tmodule.exports = stackGet;\n\n\n/***/ },\n/* 261 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Checks if a stack value for `key` exists.\n\t *\n\t * @private\n\t * @name has\n\t * @memberOf Stack\n\t * @param {string} key The key of the entry to check.\n\t * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t */\n\tfunction stackHas(key) {\n\t  return this.__data__.has(key);\n\t}\n\t\n\tmodule.exports = stackHas;\n\n\n/***/ },\n/* 262 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar ListCache = __webpack_require__(42),\n\t    Map = __webpack_require__(57),\n\t    MapCache = __webpack_require__(193);\n\t\n\t/** Used as the size to enable large array optimizations. */\n\tvar LARGE_ARRAY_SIZE = 200;\n\t\n\t/**\n\t * Sets the stack `key` to `value`.\n\t *\n\t * @private\n\t * @name set\n\t * @memberOf Stack\n\t * @param {string} key The key of the value to set.\n\t * @param {*} value The value to set.\n\t * @returns {Object} Returns the stack cache instance.\n\t */\n\tfunction stackSet(key, value) {\n\t  var data = this.__data__;\n\t  if (data instanceof ListCache) {\n\t    var pairs = data.__data__;\n\t    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n\t      pairs.push([key, value]);\n\t      this.size = ++data.size;\n\t      return this;\n\t    }\n\t    data = this.__data__ = new MapCache(pairs);\n\t  }\n\t  data.set(key, value);\n\t  this.size = data.size;\n\t  return this;\n\t}\n\t\n\tmodule.exports = stackSet;\n\n\n/***/ },\n/* 263 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar baseClone = __webpack_require__(205);\n\t\n\t/** Used to compose bitmasks for cloning. */\n\tvar CLONE_DEEP_FLAG = 1,\n\t    CLONE_SYMBOLS_FLAG = 4;\n\t\n\t/**\n\t * This method is like `_.clone` except that it recursively clones `value`.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 1.0.0\n\t * @category Lang\n\t * @param {*} value The value to recursively clone.\n\t * @returns {*} Returns the deep cloned value.\n\t * @see _.clone\n\t * @example\n\t *\n\t * var objects = [{ 'a': 1 }, { 'b': 2 }];\n\t *\n\t * var deep = _.cloneDeep(objects);\n\t * console.log(deep[0] === objects[0]);\n\t * // => false\n\t */\n\tfunction cloneDeep(value) {\n\t  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n\t}\n\t\n\tmodule.exports = cloneDeep;\n\n\n/***/ },\n/* 264 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar baseIsArguments = __webpack_require__(207),\n\t    isObjectLike = __webpack_require__(47);\n\t\n\t/** Used for built-in method references. */\n\tvar objectProto = Object.prototype;\n\t\n\t/** Used to check objects for own properties. */\n\tvar hasOwnProperty = objectProto.hasOwnProperty;\n\t\n\t/** Built-in value references. */\n\tvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\t\n\t/**\n\t * Checks if `value` is likely an `arguments` object.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 0.1.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n\t *  else `false`.\n\t * @example\n\t *\n\t * _.isArguments(function() { return arguments; }());\n\t * // => true\n\t *\n\t * _.isArguments([1, 2, 3]);\n\t * // => false\n\t */\n\tvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n\t  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n\t    !propertyIsEnumerable.call(value, 'callee');\n\t};\n\t\n\tmodule.exports = isArguments;\n\n\n/***/ },\n/* 265 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar baseIsTypedArray = __webpack_require__(209),\n\t    baseUnary = __webpack_require__(213),\n\t    nodeUtil = __webpack_require__(255);\n\t\n\t/* Node.js helper references. */\n\tvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\t\n\t/**\n\t * Checks if `value` is classified as a typed array.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 3.0.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n\t * @example\n\t *\n\t * _.isTypedArray(new Uint8Array);\n\t * // => true\n\t *\n\t * _.isTypedArray([]);\n\t * // => false\n\t */\n\tvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\t\n\tmodule.exports = isTypedArray;\n\n\n/***/ },\n/* 266 */\n/***/ function(module, exports) {\n\n\t/**\n\t * This method returns `false`.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 4.13.0\n\t * @category Util\n\t * @returns {boolean} Returns `false`.\n\t * @example\n\t *\n\t * _.times(2, _.stubFalse);\n\t * // => [false, false]\n\t */\n\tfunction stubFalse() {\n\t  return false;\n\t}\n\t\n\tmodule.exports = stubFalse;\n\n\n/***/ },\n/* 267 */,\n/* 268 */,\n/* 269 */,\n/* 270 */,\n/* 271 */,\n/* 272 */,\n/* 273 */,\n/* 274 */,\n/* 275 */,\n/* 276 */,\n/* 277 */,\n/* 278 */,\n/* 279 */,\n/* 280 */,\n/* 281 */,\n/* 282 */,\n/* 283 */,\n/* 284 */,\n/* 285 */,\n/* 286 */,\n/* 287 */,\n/* 288 */,\n/* 289 */,\n/* 290 */,\n/* 291 */,\n/* 292 */,\n/* 293 */,\n/* 294 */,\n/* 295 */,\n/* 296 */,\n/* 297 */,\n/* 298 */,\n/* 299 */,\n/* 300 */,\n/* 301 */,\n/* 302 */,\n/* 303 */,\n/* 304 */,\n/* 305 */,\n/* 306 */,\n/* 307 */,\n/* 308 */,\n/* 309 */,\n/* 310 */,\n/* 311 */,\n/* 312 */,\n/* 313 */,\n/* 314 */,\n/* 315 */,\n/* 316 */,\n/* 317 */,\n/* 318 */,\n/* 319 */,\n/* 320 */,\n/* 321 */,\n/* 322 */,\n/* 323 */,\n/* 324 */,\n/* 325 */,\n/* 326 */,\n/* 327 */,\n/* 328 */,\n/* 329 */,\n/* 330 */,\n/* 331 */,\n/* 332 */,\n/* 333 */,\n/* 334 */,\n/* 335 */,\n/* 336 */,\n/* 337 */,\n/* 338 */,\n/* 339 */,\n/* 340 */,\n/* 341 */,\n/* 342 */,\n/* 343 */,\n/* 344 */,\n/* 345 */,\n/* 346 */,\n/* 347 */,\n/* 348 */,\n/* 349 */,\n/* 350 */,\n/* 351 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar map = {\n\t\t\"./NVD3Adapter/index\": 387\n\t};\n\tfunction webpackContext(req) {\n\t\treturn __webpack_require__(webpackContextResolve(req));\n\t};\n\tfunction webpackContextResolve(req) {\n\t\treturn map[req] || (function() { throw new Error(\"Cannot find module '\" + req + \"'.\") }());\n\t};\n\twebpackContext.keys = function webpackContextKeys() {\n\t\treturn Object.keys(map);\n\t};\n\twebpackContext.resolve = webpackContextResolve;\n\tmodule.exports = webpackContext;\n\twebpackContext.id = 351;\n\n\n/***/ },\n/* 352 */,\n/* 353 */,\n/* 354 */,\n/* 355 */,\n/* 356 */,\n/* 357 */,\n/* 358 */,\n/* 359 */,\n/* 360 */,\n/* 361 */,\n/* 362 */,\n/* 363 */,\n/* 364 */,\n/* 365 */,\n/* 366 */,\n/* 367 */,\n/* 368 */,\n/* 369 */,\n/* 370 */,\n/* 371 */,\n/* 372 */,\n/* 373 */,\n/* 374 */,\n/* 375 */,\n/* 376 */,\n/* 377 */,\n/* 378 */,\n/* 379 */,\n/* 380 */,\n/* 381 */,\n/* 382 */,\n/* 383 */,\n/* 384 */,\n/* 385 */,\n/* 386 */,\n/* 387 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _reactNvd = __webpack_require__(472);\n\t\n\tvar _reactNvd2 = _interopRequireDefault(_reactNvd);\n\t\n\tvar _reactAddonsUpdate = __webpack_require__(11);\n\t\n\tvar _reactAddonsUpdate2 = _interopRequireDefault(_reactAddonsUpdate);\n\t\n\tvar _cloneDeep = __webpack_require__(263);\n\t\n\tvar _cloneDeep2 = _interopRequireDefault(_cloneDeep);\n\t\n\tvar _chartTypeUtils = __webpack_require__(53);\n\t\n\tvar _chartTypes = __webpack_require__(39);\n\t\n\tvar _applyTickFormatters = __webpack_require__(89);\n\t\n\tvar _applyTickFormatters2 = _interopRequireDefault(_applyTickFormatters);\n\t\n\tvar _applyYDomain = __webpack_require__(155);\n\t\n\tvar _getNiceDomain = __webpack_require__(156);\n\t\n\tvar _getNiceDomain2 = _interopRequireDefault(_getNiceDomain);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar NVD3Adapter = function (_Component) {\n\t  _inherits(NVD3Adapter, _Component);\n\t\n\t  function NVD3Adapter(props) {\n\t    _classCallCheck(this, NVD3Adapter);\n\t\n\t    var _this = _possibleConstructorReturn(this, (NVD3Adapter.__proto__ || Object.getPrototypeOf(NVD3Adapter)).call(this, props));\n\t\n\t    _this._mapToChartProps = _this._mapToChartProps.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * In editor, merge data into options and add a ref\n\t   * In widget, also recreate function-based options that can't be sent as JSON\n\t   */\n\t\n\t\n\t  _createClass(NVD3Adapter, [{\n\t    key: '_mapToChartProps',\n\t    value: function _mapToChartProps() {\n\t      var _props = this.props,\n\t          options = _props.options,\n\t          data = _props.data,\n\t          widget = _props.widget;\n\t\n\t      var nextState = (0, _reactAddonsUpdate2.default)(options, {\n\t        datum: { $set: this._dataTransform(options.type, data) },\n\t        ref: { $set: 'chartNode' }\n\t      });\n\t\n\t      if (!widget) {\n\t        return nextState;\n\t      }\n\t\n\t      // Widgets need to recreate function-based options\n\t      var typeConfig = (0, _chartTypeUtils.getChartTypeObject)(options.type).config;\n\t\n\t      nextState = (0, _reactAddonsUpdate2.default)(nextState, {\n\t        x: { $set: _chartTypes.nvd3Defaults[typeConfig.dataFormat].x },\n\t        y: { $set: _chartTypes.nvd3Defaults[typeConfig.dataFormat].y },\n\t        yDomain: { $apply: function $apply(oldYDomain) {\n\t            // eslint-disable-line arrow-body-style\n\t            return (0, _applyYDomain.shouldSetupYDomain)(typeConfig) && undefined === oldYDomain ? (0, _getNiceDomain2.default)(typeConfig.dataFormat, data) : oldYDomain;\n\t          } }\n\t      });\n\t\n\t      // tickFormatSettings -> tick formatting functions\n\t      // applyTickFormatters() returns a cloned object\n\t      return (0, _applyTickFormatters2.default)(nextState, typeConfig);\n\t    }\n\t\n\t    /**\n\t     * Apply any special formatting specfic to a chart type\n\t     */\n\t\n\t  }, {\n\t    key: '_dataTransform',\n\t    value: function _dataTransform(chartType, data) {\n\t      switch (chartType) {\n\t        case 'discreteBarChart':\n\t          return [{\n\t            key: '',\n\t            values: data\n\t          }];\n\t\n\t        default:\n\t          return data;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      // We clone the props, because nvd3 will mutate the datum that you pass to it.\n\t      var chartProps = (0, _cloneDeep2.default)(this._mapToChartProps());\n\t\n\t      // Key prop is for forcing re-render of the chart to avoid chart refresh issue when the chart type changes.\n\t      // https://github.com/NuCivic/react-nvd3/issues/59\n\t      return _react2.default.createElement(_reactNvd2.default, _extends({ key: Math.random() }, chartProps));\n\t    }\n\t  }]);\n\t\n\t  return NVD3Adapter;\n\t}(_react.Component);\n\t\n\tvar _default = NVD3Adapter;\n\texports.default = _default;\n\t\n\t\n\tNVD3Adapter.propTypes = {\n\t  data: _react2.default.PropTypes.array,\n\t  options: _react2.default.PropTypes.object,\n\t  widget: _react2.default.PropTypes.oneOfType([_react2.default.PropTypes.string, _react2.default.PropTypes.bool])\n\t};\n\t;\n\t\n\tvar _temp = function () {\n\t  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n\t    return;\n\t  }\n\t\n\t  __REACT_HOT_LOADER__.register(NVD3Adapter, 'NVD3Adapter', '/Users/joshkadis/Sites/broadway/www/simplechart-dev/wp-content/plugins/simplechart-dev-mode/simplechart/app/components/Chart/ChartTypes/NVD3Adapter/index.js');\n\t\n\t  __REACT_HOT_LOADER__.register(_default, 'default', '/Users/joshkadis/Sites/broadway/www/simplechart-dev/wp-content/plugins/simplechart-dev-mode/simplechart/app/components/Chart/ChartTypes/NVD3Adapter/index.js');\n\t}();\n\n\t;\n\n/***/ },\n/* 388 */,\n/* 389 */,\n/* 390 */,\n/* 391 */,\n/* 392 */,\n/* 393 */,\n/* 394 */,\n/* 395 */,\n/* 396 */,\n/* 397 */,\n/* 398 */,\n/* 399 */,\n/* 400 */,\n/* 401 */,\n/* 402 */,\n/* 403 */,\n/* 404 */,\n/* 405 */,\n/* 406 */,\n/* 407 */,\n/* 408 */,\n/* 409 */,\n/* 410 */,\n/* 411 */,\n/* 412 */,\n/* 413 */,\n/* 414 */,\n/* 415 */,\n/* 416 */,\n/* 417 */,\n/* 418 */,\n/* 419 */,\n/* 420 */,\n/* 421 */,\n/* 422 */,\n/* 423 */,\n/* 424 */,\n/* 425 */,\n/* 426 */,\n/* 427 */,\n/* 428 */,\n/* 429 */,\n/* 430 */,\n/* 431 */,\n/* 432 */,\n/* 433 */,\n/* 434 */,\n/* 435 */,\n/* 436 */,\n/* 437 */,\n/* 438 */,\n/* 439 */,\n/* 440 */,\n/* 441 */,\n/* 442 */,\n/* 443 */,\n/* 444 */,\n/* 445 */,\n/* 446 */,\n/* 447 */,\n/* 448 */,\n/* 449 */,\n/* 450 */,\n/* 451 */,\n/* 452 */,\n/* 453 */,\n/* 454 */,\n/* 455 */,\n/* 456 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* nvd3 version 1.8.5 (https://github.com/novus/nvd3) 2016-12-01 */\n\t(function(){\n\t\n\t// set up main nv object\n\tvar nv = {};\n\t\n\t// the major global objects under the nv namespace\n\tnv.dev = false; //set false when in production\n\tnv.tooltip = nv.tooltip || {}; // For the tooltip system\n\tnv.utils = nv.utils || {}; // Utility subsystem\n\tnv.models = nv.models || {}; //stores all the possible models/components\n\tnv.charts = {}; //stores all the ready to use charts\n\tnv.logs = {}; //stores some statistics and potential error messages\n\tnv.dom = {}; //DOM manipulation functions\n\t\n\t// Node/CommonJS - require D3\n\tif (typeof(module) !== 'undefined' && typeof(exports) !== 'undefined' && typeof(d3) == 'undefined') {\n\t    d3 = __webpack_require__(56);\n\t}\n\t\n\tnv.dispatch = d3.dispatch('render_start', 'render_end');\n\t\n\t// Function bind polyfill\n\t// Needed ONLY for phantomJS as it's missing until version 2.0 which is unreleased as of this comment\n\t// https://github.com/ariya/phantomjs/issues/10522\n\t// http://kangax.github.io/compat-table/es5/#Function.prototype.bind\n\t// phantomJS is used for running the test suite\n\tif (!Function.prototype.bind) {\n\t    Function.prototype.bind = function (oThis) {\n\t        if (typeof this !== \"function\") {\n\t            // closest thing possible to the ECMAScript 5 internal IsCallable function\n\t            throw new TypeError(\"Function.prototype.bind - what is trying to be bound is not callable\");\n\t        }\n\t\n\t        var aArgs = Array.prototype.slice.call(arguments, 1),\n\t            fToBind = this,\n\t            fNOP = function () {},\n\t            fBound = function () {\n\t                return fToBind.apply(this instanceof fNOP && oThis\n\t                        ? this\n\t                        : oThis,\n\t                    aArgs.concat(Array.prototype.slice.call(arguments)));\n\t            };\n\t\n\t        fNOP.prototype = this.prototype;\n\t        fBound.prototype = new fNOP();\n\t        return fBound;\n\t    };\n\t}\n\t\n\t//  Development render timers - disabled if dev = false\n\tif (nv.dev) {\n\t    nv.dispatch.on('render_start', function(e) {\n\t        nv.logs.startTime = +new Date();\n\t    });\n\t\n\t    nv.dispatch.on('render_end', function(e) {\n\t        nv.logs.endTime = +new Date();\n\t        nv.logs.totalTime = nv.logs.endTime - nv.logs.startTime;\n\t        nv.log('total', nv.logs.totalTime); // used for development, to keep track of graph generation times\n\t    });\n\t}\n\t\n\t// Logs all arguments, and returns the last so you can test things in place\n\t// Note: in IE8 console.log is an object not a function, and if modernizr is used\n\t// then calling Function.prototype.bind with with anything other than a function\n\t// causes a TypeError to be thrown.\n\tnv.log = function() {\n\t    if (nv.dev && window.console && console.log && console.log.apply)\n\t        console.log.apply(console, arguments);\n\t    else if (nv.dev && window.console && typeof console.log == \"function\" && Function.prototype.bind) {\n\t        var log = Function.prototype.bind.call(console.log, console);\n\t        log.apply(console, arguments);\n\t    }\n\t    return arguments[arguments.length - 1];\n\t};\n\t\n\t// print console warning, should be used by deprecated functions\n\tnv.deprecated = function(name, info) {\n\t    if (console && console.warn) {\n\t        console.warn('nvd3 warning: `' + name + '` has been deprecated. ', info || '');\n\t    }\n\t};\n\t\n\t// The nv.render function is used to queue up chart rendering\n\t// in non-blocking async functions.\n\t// When all queued charts are done rendering, nv.dispatch.render_end is invoked.\n\tnv.render = function render(step) {\n\t    // number of graphs to generate in each timeout loop\n\t    step = step || 1;\n\t\n\t    nv.render.active = true;\n\t    nv.dispatch.render_start();\n\t\n\t    var renderLoop = function() {\n\t        var chart, graph;\n\t\n\t        for (var i = 0; i < step && (graph = nv.render.queue[i]); i++) {\n\t            chart = graph.generate();\n\t            if (typeof graph.callback == typeof(Function)) graph.callback(chart);\n\t        }\n\t\n\t        nv.render.queue.splice(0, i);\n\t\n\t        if (nv.render.queue.length) {\n\t            setTimeout(renderLoop);\n\t        }\n\t        else {\n\t            nv.dispatch.render_end();\n\t            nv.render.active = false;\n\t        }\n\t    };\n\t\n\t    setTimeout(renderLoop);\n\t};\n\t\n\tnv.render.active = false;\n\tnv.render.queue = [];\n\t\n\t/*\n\tAdds a chart to the async rendering queue. This method can take arguments in two forms:\n\tnv.addGraph({\n\t    generate: <Function>\n\t    callback: <Function>\n\t})\n\t\n\tor\n\t\n\tnv.addGraph(<generate Function>, <callback Function>)\n\t\n\tThe generate function should contain code that creates the NVD3 model, sets options\n\ton it, adds data to an SVG element, and invokes the chart model. The generate function\n\tshould return the chart model.  See examples/lineChart.html for a usage example.\n\t\n\tThe callback function is optional, and it is called when the generate function completes.\n\t*/\n\tnv.addGraph = function(obj) {\n\t    if (typeof arguments[0] === typeof(Function)) {\n\t        obj = {generate: arguments[0], callback: arguments[1]};\n\t    }\n\t\n\t    nv.render.queue.push(obj);\n\t\n\t    if (!nv.render.active) {\n\t        nv.render();\n\t    }\n\t};\n\t\n\t// Node/CommonJS exports\n\tif (true) {\n\t  module.exports = nv;\n\t}\n\t\n\tif (typeof(window) !== 'undefined') {\n\t  window.nv = nv;\n\t}\n\t/* Facade for queueing DOM write operations\r\n\t * with Fastdom (https://github.com/wilsonpage/fastdom)\r\n\t * if available.\r\n\t * This could easily be extended to support alternate\r\n\t * implementations in the future.\r\n\t */\r\n\tnv.dom.write = function(callback) {\r\n\t\tif (window.fastdom !== undefined) {\r\n\t\t\treturn fastdom.mutate(callback);\r\n\t\t}\r\n\t\treturn callback();\r\n\t};\r\n\t\r\n\t/* Facade for queueing DOM read operations\r\n\t * with Fastdom (https://github.com/wilsonpage/fastdom)\r\n\t * if available.\r\n\t * This could easily be extended to support alternate\r\n\t * implementations in the future.\r\n\t */\r\n\tnv.dom.read = function(callback) {\r\n\t\tif (window.fastdom !== undefined) {\r\n\t\t\treturn fastdom.measure(callback);\r\n\t\t}\r\n\t\treturn callback();\r\n\t};\r\n\t/* Utility class to handle creation of an interactive layer.\n\t This places a rectangle on top of the chart. When you mouse move over it, it sends a dispatch\n\t containing the X-coordinate. It can also render a vertical line where the mouse is located.\n\t\n\t dispatch.elementMousemove is the important event to latch onto.  It is fired whenever the mouse moves over\n\t the rectangle. The dispatch is given one object which contains the mouseX/Y location.\n\t It also has 'pointXValue', which is the conversion of mouseX to the x-axis scale.\n\t */\n\tnv.interactiveGuideline = function() {\n\t    \"use strict\";\n\t\n\t    var margin = { left: 0, top: 0 } //Pass the chart's top and left magins. Used to calculate the mouseX/Y.\n\t        ,   width = null\n\t        ,   height = null\n\t        ,   xScale = d3.scale.linear()\n\t        ,   dispatch = d3.dispatch('elementMousemove', 'elementMouseout', 'elementClick', 'elementDblclick', 'elementMouseDown', 'elementMouseUp')\n\t        ,   showGuideLine = true\n\t        ,   svgContainer = null // Must pass the chart's svg, we'll use its mousemove event.\n\t        ,   tooltip = nv.models.tooltip()\n\t        ,   isMSIE =  window.ActiveXObject// Checkt if IE by looking for activeX. (excludes IE11)\n\t    ;\n\t\n\t    tooltip\n\t        .duration(0)\n\t        .hideDelay(0)\n\t        .hidden(false);\n\t\n\t    function layer(selection) {\n\t        selection.each(function(data) {\n\t            var container = d3.select(this);\n\t            var availableWidth = (width || 960), availableHeight = (height || 400);\n\t            var wrap = container.selectAll(\"g.nv-wrap.nv-interactiveLineLayer\")\n\t                .data([data]);\n\t            var wrapEnter = wrap.enter()\n\t                .append(\"g\").attr(\"class\", \" nv-wrap nv-interactiveLineLayer\");\n\t            wrapEnter.append(\"g\").attr(\"class\",\"nv-interactiveGuideLine\");\n\t\n\t            if (!svgContainer) {\n\t                return;\n\t            }\n\t\n\t            function mouseHandler() {\n\t                var d3mouse = d3.mouse(this);\n\t                var mouseX = d3mouse[0];\n\t                var mouseY = d3mouse[1];\n\t                var subtractMargin = true;\n\t                var mouseOutAnyReason = false;\n\t                if (isMSIE) {\n\t                    /*\n\t                     D3.js (or maybe SVG.getScreenCTM) has a nasty bug in Internet Explorer 10.\n\t                     d3.mouse() returns incorrect X,Y mouse coordinates when mouse moving\n\t                     over a rect in IE 10.\n\t                     However, d3.event.offsetX/Y also returns the mouse coordinates\n\t                     relative to the triggering <rect>. So we use offsetX/Y on IE.\n\t                     */\n\t                    mouseX = d3.event.offsetX;\n\t                    mouseY = d3.event.offsetY;\n\t\n\t                    /*\n\t                     On IE, if you attach a mouse event listener to the <svg> container,\n\t                     it will actually trigger it for all the child elements (like <path>, <circle>, etc).\n\t                     When this happens on IE, the offsetX/Y is set to where ever the child element\n\t                     is located.\n\t                     As a result, we do NOT need to subtract margins to figure out the mouse X/Y\n\t                     position under this scenario. Removing the line below *will* cause\n\t                     the interactive layer to not work right on IE.\n\t                     */\n\t                    if(d3.event.target.tagName !== \"svg\") {\n\t                        subtractMargin = false;\n\t                    }\n\t\n\t                    if (d3.event.target.className.baseVal.match(\"nv-legend\")) {\n\t                        mouseOutAnyReason = true;\n\t                    }\n\t\n\t                }\n\t\n\t                if(subtractMargin) {\n\t                    mouseX -= margin.left;\n\t                    mouseY -= margin.top;\n\t                }\n\t\n\t                /* If mouseX/Y is outside of the chart's bounds,\n\t                 trigger a mouseOut event.\n\t                 */\n\t                if (d3.event.type === 'mouseout'\n\t                    || mouseX < 0 || mouseY < 0\n\t                    || mouseX > availableWidth || mouseY > availableHeight\n\t                    || (d3.event.relatedTarget && d3.event.relatedTarget.ownerSVGElement === undefined)\n\t                    || mouseOutAnyReason\n\t                    ) {\n\t\n\t                    if (isMSIE) {\n\t                        if (d3.event.relatedTarget\n\t                            && d3.event.relatedTarget.ownerSVGElement === undefined\n\t                            && (d3.event.relatedTarget.className === undefined\n\t                                || d3.event.relatedTarget.className.match(tooltip.nvPointerEventsClass))) {\n\t\n\t                            return;\n\t                        }\n\t                    }\n\t                    dispatch.elementMouseout({\n\t                        mouseX: mouseX,\n\t                        mouseY: mouseY\n\t                    });\n\t                    layer.renderGuideLine(null); //hide the guideline\n\t                    tooltip.hidden(true);\n\t                    return;\n\t                } else {\n\t                    tooltip.hidden(false);\n\t                }\n\t\n\t\n\t                var scaleIsOrdinal = typeof xScale.rangeBands === 'function';\n\t                var pointXValue = undefined;\n\t\n\t                // Ordinal scale has no invert method\n\t                if (scaleIsOrdinal) {\n\t                    var elementIndex = d3.bisect(xScale.range(), mouseX) - 1;\n\t                    // Check if mouseX is in the range band\n\t                    if (xScale.range()[elementIndex] + xScale.rangeBand() >= mouseX) {\n\t                        pointXValue = xScale.domain()[d3.bisect(xScale.range(), mouseX) - 1];\n\t                    }\n\t                    else {\n\t                        dispatch.elementMouseout({\n\t                            mouseX: mouseX,\n\t                            mouseY: mouseY\n\t                        });\n\t                        layer.renderGuideLine(null); //hide the guideline\n\t                        tooltip.hidden(true);\n\t                        return;\n\t                    }\n\t                }\n\t                else {\n\t                    pointXValue = xScale.invert(mouseX);\n\t                }\n\t\n\t                dispatch.elementMousemove({\n\t                    mouseX: mouseX,\n\t                    mouseY: mouseY,\n\t                    pointXValue: pointXValue\n\t                });\n\t\n\t                //If user double clicks the layer, fire a elementDblclick\n\t                if (d3.event.type === \"dblclick\") {\n\t                    dispatch.elementDblclick({\n\t                        mouseX: mouseX,\n\t                        mouseY: mouseY,\n\t                        pointXValue: pointXValue\n\t                    });\n\t                }\n\t\n\t                // if user single clicks the layer, fire elementClick\n\t                if (d3.event.type === 'click') {\n\t                    dispatch.elementClick({\n\t                        mouseX: mouseX,\n\t                        mouseY: mouseY,\n\t                        pointXValue: pointXValue\n\t                    });\n\t                }\n\t\n\t                // if user presses mouse down the layer, fire elementMouseDown\n\t                if (d3.event.type === 'mousedown') {\n\t                \tdispatch.elementMouseDown({\n\t                \t\tmouseX: mouseX,\n\t                \t\tmouseY: mouseY,\n\t                \t\tpointXValue: pointXValue\n\t                \t});\n\t                }\n\t\n\t                // if user presses mouse down the layer, fire elementMouseUp\n\t                if (d3.event.type === 'mouseup') {\n\t                \tdispatch.elementMouseUp({\n\t                \t\tmouseX: mouseX,\n\t                \t\tmouseY: mouseY,\n\t                \t\tpointXValue: pointXValue\n\t                \t});\n\t                }\n\t            }\n\t\n\t            svgContainer\n\t                .on(\"touchmove\",mouseHandler)\n\t                .on(\"mousemove\",mouseHandler, true)\n\t                .on(\"mouseout\" ,mouseHandler,true)\n\t                .on(\"mousedown\" ,mouseHandler,true)\n\t                .on(\"mouseup\" ,mouseHandler,true)\n\t                .on(\"dblclick\" ,mouseHandler)\n\t                .on(\"click\", mouseHandler)\n\t            ;\n\t\n\t            layer.guideLine = null;\n\t            //Draws a vertical guideline at the given X postion.\n\t            layer.renderGuideLine = function(x) {\n\t                if (!showGuideLine) return;\n\t                if (layer.guideLine && layer.guideLine.attr(\"x1\") === x) return;\n\t                nv.dom.write(function() {\n\t                    var line = wrap.select(\".nv-interactiveGuideLine\")\n\t                        .selectAll(\"line\")\n\t                        .data((x != null) ? [nv.utils.NaNtoZero(x)] : [], String);\n\t                    line.enter()\n\t                        .append(\"line\")\n\t                        .attr(\"class\", \"nv-guideline\")\n\t                        .attr(\"x1\", function(d) { return d;})\n\t                        .attr(\"x2\", function(d) { return d;})\n\t                        .attr(\"y1\", availableHeight)\n\t                        .attr(\"y2\",0);\n\t                    line.exit().remove();\n\t                });\n\t            }\n\t        });\n\t    }\n\t\n\t    layer.dispatch = dispatch;\n\t    layer.tooltip = tooltip;\n\t\n\t    layer.margin = function(_) {\n\t        if (!arguments.length) return margin;\n\t        margin.top    = typeof _.top    != 'undefined' ? _.top    : margin.top;\n\t        margin.left   = typeof _.left   != 'undefined' ? _.left   : margin.left;\n\t        return layer;\n\t    };\n\t\n\t    layer.width = function(_) {\n\t        if (!arguments.length) return width;\n\t        width = _;\n\t        return layer;\n\t    };\n\t\n\t    layer.height = function(_) {\n\t        if (!arguments.length) return height;\n\t        height = _;\n\t        return layer;\n\t    };\n\t\n\t    layer.xScale = function(_) {\n\t        if (!arguments.length) return xScale;\n\t        xScale = _;\n\t        return layer;\n\t    };\n\t\n\t    layer.showGuideLine = function(_) {\n\t        if (!arguments.length) return showGuideLine;\n\t        showGuideLine = _;\n\t        return layer;\n\t    };\n\t\n\t    layer.svgContainer = function(_) {\n\t        if (!arguments.length) return svgContainer;\n\t        svgContainer = _;\n\t        return layer;\n\t    };\n\t\n\t    return layer;\n\t};\n\t\n\t/* Utility class that uses d3.bisect to find the index in a given array, where a search value can be inserted.\n\t This is different from normal bisectLeft; this function finds the nearest index to insert the search value.\n\t\n\t For instance, lets say your array is [1,2,3,5,10,30], and you search for 28.\n\t Normal d3.bisectLeft will return 4, because 28 is inserted after the number 10.  But interactiveBisect will return 5\n\t because 28 is closer to 30 than 10.\n\t\n\t Unit tests can be found in: interactiveBisectTest.html\n\t\n\t Has the following known issues:\n\t * Will not work if the data points move backwards (ie, 10,9,8,7, etc) or if the data points are in random order.\n\t * Won't work if there are duplicate x coordinate values.\n\t */\n\tnv.interactiveBisect = function (values, searchVal, xAccessor) {\n\t    \"use strict\";\n\t    if (! (values instanceof Array)) {\n\t        return null;\n\t    }\n\t    var _xAccessor;\n\t    if (typeof xAccessor !== 'function') {\n\t        _xAccessor = function(d) {\n\t            return d.x;\n\t        }\n\t    } else {\n\t        _xAccessor = xAccessor;\n\t    }\n\t    var _cmp = function(d, v) {\n\t        // Accessors are no longer passed the index of the element along with\n\t        // the element itself when invoked by d3.bisector.\n\t        //\n\t        // Starting at D3 v3.4.4, d3.bisector() started inspecting the\n\t        // function passed to determine if it should consider it an accessor\n\t        // or a comparator. This meant that accessors that take two arguments\n\t        // (expecting an index as the second parameter) are treated as\n\t        // comparators where the second argument is the search value against\n\t        // which the first argument is compared.\n\t        return _xAccessor(d) - v;\n\t    };\n\t\n\t    var bisect = d3.bisector(_cmp).left;\n\t    var index = d3.max([0, bisect(values,searchVal) - 1]);\n\t    var currentValue = _xAccessor(values[index]);\n\t\n\t    if (typeof currentValue === 'undefined') {\n\t        currentValue = index;\n\t    }\n\t\n\t    if (currentValue === searchVal) {\n\t        return index; //found exact match\n\t    }\n\t\n\t    var nextIndex = d3.min([index+1, values.length - 1]);\n\t    var nextValue = _xAccessor(values[nextIndex]);\n\t\n\t    if (typeof nextValue === 'undefined') {\n\t        nextValue = nextIndex;\n\t    }\n\t\n\t    if (Math.abs(nextValue - searchVal) >= Math.abs(currentValue - searchVal)) {\n\t        return index;\n\t    } else {\n\t        return nextIndex\n\t    }\n\t};\n\t\n\t/*\n\t Returns the index in the array \"values\" that is closest to searchVal.\n\t Only returns an index if searchVal is within some \"threshold\".\n\t Otherwise, returns null.\n\t */\n\tnv.nearestValueIndex = function (values, searchVal, threshold) {\n\t    \"use strict\";\n\t    var yDistMax = Infinity, indexToHighlight = null;\n\t    values.forEach(function(d,i) {\n\t        var delta = Math.abs(searchVal - d);\n\t        if ( d != null && delta <= yDistMax && delta < threshold) {\n\t            yDistMax = delta;\n\t            indexToHighlight = i;\n\t        }\n\t    });\n\t    return indexToHighlight;\n\t};\n\t\n\t/* Model which can be instantiated to handle tooltip rendering.\n\t Example usage:\n\t var tip = nv.models.tooltip().gravity('w').distance(23)\n\t .data(myDataObject);\n\t\n\t tip();    //just invoke the returned function to render tooltip.\n\t */\n\tnv.models.tooltip = function() {\n\t    \"use strict\";\n\t\n\t    /*\n\t    Tooltip data. If data is given in the proper format, a consistent tooltip is generated.\n\t    Example Format of data:\n\t    {\n\t        key: \"Date\",\n\t        value: \"August 2009\",\n\t        series: [\n\t            {key: \"Series 1\", value: \"Value 1\", color: \"#000\"},\n\t            {key: \"Series 2\", value: \"Value 2\", color: \"#00f\"}\n\t        ]\n\t    }\n\t    */\n\t    var id = \"nvtooltip-\" + Math.floor(Math.random() * 100000) // Generates a unique id when you create a new tooltip() object.\n\t        ,   data = null\n\t        ,   gravity = 'w'   // Can be 'n','s','e','w'. Determines how tooltip is positioned.\n\t        ,   distance = 25 // Distance to offset tooltip from the mouse location.\n\t        ,   snapDistance = 0   // Tolerance allowed before tooltip is moved from its current position (creates 'snapping' effect)\n\t        ,   classes = null  // Attaches additional CSS classes to the tooltip DIV that is created.\n\t        ,   hidden = true  // Start off hidden, toggle with hide/show functions below.\n\t        ,   hideDelay = 200  // Delay (in ms) before the tooltip hides after calling hide().\n\t        ,   tooltip = null // d3 select of the tooltip div.\n\t        ,   lastPosition = { left: null, top: null } // Last position the tooltip was in.\n\t        ,   enabled = true  // True -> tooltips are rendered. False -> don't render tooltips.\n\t        ,   duration = 100 // Tooltip movement duration, in ms.\n\t        ,   headerEnabled = true // If is to show the tooltip header.\n\t        ,   nvPointerEventsClass = \"nv-pointer-events-none\" // CSS class to specify whether element should not have mouse events.\n\t    ;\n\t\n\t    // Format function for the tooltip values column.\n\t    var valueFormatter = function(d, i) {\n\t        return d;\n\t    };\n\t\n\t    // Format function for the tooltip header value.\n\t    var headerFormatter = function(d) {\n\t        return d;\n\t    };\n\t\n\t    var keyFormatter = function(d, i) {\n\t        return d;\n\t    };\n\t\n\t    // By default, the tooltip model renders a beautiful table inside a DIV.\n\t    // You can override this function if a custom tooltip is desired.\n\t    var contentGenerator = function(d) {\n\t        if (d === null) {\n\t            return '';\n\t        }\n\t\n\t        var table = d3.select(document.createElement(\"table\"));\n\t        if (headerEnabled) {\n\t            var theadEnter = table.selectAll(\"thead\")\n\t                .data([d])\n\t                .enter().append(\"thead\");\n\t\n\t            theadEnter.append(\"tr\")\n\t                .append(\"td\")\n\t                .attr(\"colspan\", 3)\n\t                .append(\"strong\")\n\t                .classed(\"x-value\", true)\n\t                .html(headerFormatter(d.value));\n\t        }\n\t\n\t        var tbodyEnter = table.selectAll(\"tbody\")\n\t            .data([d])\n\t            .enter().append(\"tbody\");\n\t\n\t        var trowEnter = tbodyEnter.selectAll(\"tr\")\n\t                .data(function(p) { return p.series})\n\t                .enter()\n\t                .append(\"tr\")\n\t                .classed(\"highlight\", function(p) { return p.highlight});\n\t\n\t        trowEnter.append(\"td\")\n\t            .classed(\"legend-color-guide\",true)\n\t            .append(\"div\")\n\t            .style(\"background-color\", function(p) { return p.color});\n\t\n\t        trowEnter.append(\"td\")\n\t            .classed(\"key\",true)\n\t            .classed(\"total\",function(p) { return !!p.total})\n\t            .html(function(p, i) { return keyFormatter(p.key, i)});\n\t\n\t        trowEnter.append(\"td\")\n\t            .classed(\"value\",true)\n\t            .html(function(p, i) { return valueFormatter(p.value, i) });\n\t\n\t        trowEnter.filter(function (p,i) { return p.percent !== undefined }).append(\"td\")\n\t            .classed(\"percent\", true)\n\t            .html(function(p, i) { return \"(\" + d3.format('%')(p.percent) + \")\" });\n\t\n\t        trowEnter.selectAll(\"td\").each(function(p) {\n\t            if (p.highlight) {\n\t                var opacityScale = d3.scale.linear().domain([0,1]).range([\"#fff\",p.color]);\n\t                var opacity = 0.6;\n\t                d3.select(this)\n\t                    .style(\"border-bottom-color\", opacityScale(opacity))\n\t                    .style(\"border-top-color\", opacityScale(opacity))\n\t                ;\n\t            }\n\t        });\n\t\n\t        var html = table.node().outerHTML;\n\t        if (d.footer !== undefined)\n\t            html += \"<div class='footer'>\" + d.footer + \"</div>\";\n\t        return html;\n\t\n\t    };\n\t\n\t    /*\n\t     Function that returns the position (relative to the viewport/document.body)\n\t     the tooltip should be placed in.\n\t     Should return: {\n\t        left: <leftPos>,\n\t        top: <topPos>\n\t     }\n\t     */\n\t    var position = function() {\n\t        var pos = {\n\t            left: d3.event !== null ? d3.event.clientX : 0,\n\t            top: d3.event !== null ? d3.event.clientY : 0\n\t        };\n\t\n\t        if(getComputedStyle(document.body).transform != 'none') {\n\t            // Take the offset into account, as now the tooltip is relative\n\t            // to document.body.\n\t            var client = document.body.getBoundingClientRect();\n\t            pos.left -= client.left;\n\t            pos.top -= client.top;\n\t        }\n\t\n\t        return pos;\n\t    };\n\t\n\t    var dataSeriesExists = function(d) {\n\t        if (d && d.series) {\n\t            if (nv.utils.isArray(d.series)) {\n\t                return true;\n\t            }\n\t            // if object, it's okay just convert to array of the object\n\t            if (nv.utils.isObject(d.series)) {\n\t                d.series = [d.series];\n\t                return true;\n\t            }\n\t        }\n\t        return false;\n\t    };\n\t\n\t    // Calculates the gravity offset of the tooltip. Parameter is position of tooltip\n\t    // relative to the viewport.\n\t    var calcGravityOffset = function(pos) {\n\t        var height = tooltip.node().offsetHeight,\n\t            width = tooltip.node().offsetWidth,\n\t            clientWidth = document.documentElement.clientWidth, // Don't want scrollbars.\n\t            clientHeight = document.documentElement.clientHeight, // Don't want scrollbars.\n\t            left, top, tmp;\n\t\n\t        // calculate position based on gravity\n\t        switch (gravity) {\n\t            case 'e':\n\t                left = - width - distance;\n\t                top = - (height / 2);\n\t                if(pos.left + left < 0) left = distance;\n\t                if((tmp = pos.top + top) < 0) top -= tmp;\n\t                if((tmp = pos.top + top + height) > clientHeight) top -= tmp - clientHeight;\n\t                break;\n\t            case 'w':\n\t                left = distance;\n\t                top = - (height / 2);\n\t                if (pos.left + left + width > clientWidth) left = - width - distance;\n\t                if ((tmp = pos.top + top) < 0) top -= tmp;\n\t                if ((tmp = pos.top + top + height) > clientHeight) top -= tmp - clientHeight;\n\t                break;\n\t            case 'n':\n\t                left = - (width / 2) - 5; // - 5 is an approximation of the mouse's height.\n\t                top = distance;\n\t                if (pos.top + top + height > clientHeight) top = - height - distance;\n\t                if ((tmp = pos.left + left) < 0) left -= tmp;\n\t                if ((tmp = pos.left + left + width) > clientWidth) left -= tmp - clientWidth;\n\t                break;\n\t            case 's':\n\t                left = - (width / 2);\n\t                top = - height - distance;\n\t                if (pos.top + top < 0) top = distance;\n\t                if ((tmp = pos.left + left) < 0) left -= tmp;\n\t                if ((tmp = pos.left + left + width) > clientWidth) left -= tmp - clientWidth;\n\t                break;\n\t            case 'center':\n\t                left = - (width / 2);\n\t                top = - (height / 2);\n\t                break;\n\t            default:\n\t                left = 0;\n\t                top = 0;\n\t                break;\n\t        }\n\t\n\t        return { 'left': left, 'top': top };\n\t    };\n\t\n\t    /*\n\t     Positions the tooltip in the correct place, as given by the position() function.\n\t     */\n\t    var positionTooltip = function() {\n\t        nv.dom.read(function() {\n\t            var pos = position(),\n\t                gravityOffset = calcGravityOffset(pos),\n\t                left = pos.left + gravityOffset.left,\n\t                top = pos.top + gravityOffset.top;\n\t\n\t            // delay hiding a bit to avoid flickering\n\t            if (hidden) {\n\t                tooltip\n\t                    .interrupt()\n\t                    .transition()\n\t                    .delay(hideDelay)\n\t                    .duration(0)\n\t                    .style('opacity', 0);\n\t            } else {\n\t                // using tooltip.style('transform') returns values un-usable for tween\n\t                var old_translate = 'translate(' + lastPosition.left + 'px, ' + lastPosition.top + 'px)';\n\t                var new_translate = 'translate(' + Math.round(left) + 'px, ' + Math.round(top) + 'px)';\n\t                var translateInterpolator = d3.interpolateString(old_translate, new_translate);\n\t                var is_hidden = tooltip.style('opacity') < 0.1;\n\t\n\t                tooltip\n\t                    .interrupt() // cancel running transitions\n\t                    .transition()\n\t                    .duration(is_hidden ? 0 : duration)\n\t                    // using tween since some versions of d3 can't auto-tween a translate on a div\n\t                    .styleTween('transform', function (d) {\n\t                        return translateInterpolator;\n\t                    }, 'important')\n\t                    // Safari has its own `-webkit-transform` and does not support `transform`\n\t                    .styleTween('-webkit-transform', function (d) {\n\t                        return translateInterpolator;\n\t                    })\n\t                    .style('-ms-transform', new_translate)\n\t                    .style('opacity', 1);\n\t            }\n\t\n\t            lastPosition.left = left;\n\t            lastPosition.top = top;\n\t        });\n\t    };\n\t\n\t    // Creates new tooltip container, or uses existing one on DOM.\n\t    function initTooltip() {\n\t        if (!tooltip || !tooltip.node()) {\n\t            // Create new tooltip div if it doesn't exist on DOM.\n\t\n\t            var data = [1];\n\t            tooltip = d3.select(document.body).select('#'+id).data(data);\n\t\n\t            tooltip.enter().append('div')\n\t                   .attr(\"class\", \"nvtooltip \" + (classes ? classes : \"xy-tooltip\"))\n\t                   .attr(\"id\", id)\n\t                   .style(\"top\", 0).style(\"left\", 0)\n\t                   .style('opacity', 0)\n\t                   .style('position', 'fixed')\n\t                   .selectAll(\"div, table, td, tr\").classed(nvPointerEventsClass, true)\n\t                   .classed(nvPointerEventsClass, true);\n\t\n\t            tooltip.exit().remove()\n\t        }\n\t    }\n\t\n\t    // Draw the tooltip onto the DOM.\n\t    function nvtooltip() {\n\t        if (!enabled) return;\n\t        if (!dataSeriesExists(data)) return;\n\t\n\t        nv.dom.write(function () {\n\t            initTooltip();\n\t            // Generate data and set it into tooltip.\n\t            // Bonus - If you override contentGenerator and return falsey you can use something like\n\t            //         React or Knockout to bind the data for your tooltip.\n\t            var newContent = contentGenerator(data);\n\t            if (newContent) {\n\t                tooltip.node().innerHTML = newContent;\n\t            }\n\t\n\t            positionTooltip();\n\t        });\n\t\n\t        return nvtooltip;\n\t    }\n\t\n\t    nvtooltip.nvPointerEventsClass = nvPointerEventsClass;\n\t    nvtooltip.options = nv.utils.optionsFunc.bind(nvtooltip);\n\t\n\t    nvtooltip._options = Object.create({}, {\n\t        // simple read/write options\n\t        duration: {get: function(){return duration;}, set: function(_){duration=_;}},\n\t        gravity: {get: function(){return gravity;}, set: function(_){gravity=_;}},\n\t        distance: {get: function(){return distance;}, set: function(_){distance=_;}},\n\t        snapDistance: {get: function(){return snapDistance;}, set: function(_){snapDistance=_;}},\n\t        classes: {get: function(){return classes;}, set: function(_){classes=_;}},\n\t        enabled: {get: function(){return enabled;}, set: function(_){enabled=_;}},\n\t        hideDelay: {get: function(){return hideDelay;}, set: function(_){hideDelay=_;}},\n\t        contentGenerator: {get: function(){return contentGenerator;}, set: function(_){contentGenerator=_;}},\n\t        valueFormatter: {get: function(){return valueFormatter;}, set: function(_){valueFormatter=_;}},\n\t        headerFormatter: {get: function(){return headerFormatter;}, set: function(_){headerFormatter=_;}},\n\t        keyFormatter: {get: function(){return keyFormatter;}, set: function(_){keyFormatter=_;}},\n\t        headerEnabled: {get: function(){return headerEnabled;}, set: function(_){headerEnabled=_;}},\n\t        position: {get: function(){return position;}, set: function(_){position=_;}},\n\t\n\t        // Deprecated options\n\t        chartContainer: {get: function(){return document.body;}, set: function(_){\n\t            // deprecated after 1.8.3\n\t            nv.deprecated('chartContainer', 'feature removed after 1.8.3');\n\t        }},\n\t        fixedTop: {get: function(){return null;}, set: function(_){\n\t            // deprecated after 1.8.1\n\t            nv.deprecated('fixedTop', 'feature removed after 1.8.1');\n\t        }},\n\t        offset: {get: function(){return {left: 0, top: 0};}, set: function(_){\n\t            // deprecated after 1.8.1\n\t            nv.deprecated('offset', 'use chart.tooltip.distance() instead');\n\t        }},\n\t\n\t        // options with extra logic\n\t        hidden: {get: function(){return hidden;}, set: function(_){\n\t            if (hidden != _) {\n\t                hidden = !!_;\n\t                nvtooltip();\n\t            }\n\t        }},\n\t        data: {get: function(){return data;}, set: function(_){\n\t            // if showing a single data point, adjust data format with that\n\t            if (_.point) {\n\t                _.value = _.point.x;\n\t                _.series = _.series || {};\n\t                _.series.value = _.point.y;\n\t                _.series.color = _.point.color || _.series.color;\n\t            }\n\t            data = _;\n\t        }},\n\t\n\t        // read only properties\n\t        node: {get: function(){return tooltip.node();}, set: function(_){}},\n\t        id: {get: function(){return id;}, set: function(_){}}\n\t    });\n\t\n\t    nv.utils.initOptions(nvtooltip);\n\t    return nvtooltip;\n\t};\n\t\n\t\n\t/*\n\tGets the browser window size\n\t\n\tReturns object with height and width properties\n\t */\n\tnv.utils.windowSize = function() {\n\t    // Sane defaults\n\t    var size = {width: 640, height: 480};\n\t\n\t    // Most recent browsers use\n\t    if (window.innerWidth && window.innerHeight) {\n\t        size.width = window.innerWidth;\n\t        size.height = window.innerHeight;\n\t        return (size);\n\t    }\n\t\n\t    // IE can use depending on mode it is in\n\t    if (document.compatMode=='CSS1Compat' &&\n\t        document.documentElement &&\n\t        document.documentElement.offsetWidth ) {\n\t\n\t        size.width = document.documentElement.offsetWidth;\n\t        size.height = document.documentElement.offsetHeight;\n\t        return (size);\n\t    }\n\t\n\t    // Earlier IE uses Doc.body\n\t    if (document.body && document.body.offsetWidth) {\n\t        size.width = document.body.offsetWidth;\n\t        size.height = document.body.offsetHeight;\n\t        return (size);\n\t    }\n\t\n\t    return (size);\n\t};\n\t\n\t\n\t/* handle dumb browser quirks...  isinstance breaks if you use frames\n\ttypeof returns 'object' for null, NaN is a number, etc.\n\t */\n\tnv.utils.isArray = Array.isArray;\n\tnv.utils.isObject = function(a) {\n\t    return a !== null && typeof a === 'object';\n\t};\n\tnv.utils.isFunction = function(a) {\n\t    return typeof a === 'function';\n\t};\n\tnv.utils.isDate = function(a) {\n\t    return toString.call(a) === '[object Date]';\n\t};\n\tnv.utils.isNumber = function(a) {\n\t    return !isNaN(a) && typeof a === 'number';\n\t};\n\t\n\t\n\t/*\n\tBinds callback function to run when window is resized\n\t */\n\tnv.utils.windowResize = function(handler) {\n\t    if (window.addEventListener) {\n\t        window.addEventListener('resize', handler);\n\t    } else {\n\t        nv.log(\"ERROR: Failed to bind to window.resize with: \", handler);\n\t    }\n\t    // return object with clear function to remove the single added callback.\n\t    return {\n\t        callback: handler,\n\t        clear: function() {\n\t            window.removeEventListener('resize', handler);\n\t        }\n\t    }\n\t};\n\t\n\t\n\t/*\n\tBackwards compatible way to implement more d3-like coloring of graphs.\n\tCan take in nothing, an array, or a function/scale\n\tTo use a normal scale, get the range and pass that because we must be able\n\tto take two arguments and use the index to keep backward compatibility\n\t*/\n\tnv.utils.getColor = function(color) {\n\t    //if you pass in nothing, get default colors back\n\t    if (color === undefined) {\n\t        return nv.utils.defaultColor();\n\t\n\t    //if passed an array, turn it into a color scale\n\t    } else if(nv.utils.isArray(color)) {\n\t        var color_scale = d3.scale.ordinal().range(color);\n\t        return function(d, i) {\n\t            var key = i === undefined ? d : i;\n\t            return d.color || color_scale(key);\n\t        };\n\t\n\t    //if passed a function or scale, return it, or whatever it may be\n\t    //external libs, such as angularjs-nvd3-directives use this\n\t    } else {\n\t        //can't really help it if someone passes rubbish as color\n\t        return color;\n\t    }\n\t};\n\t\n\t\n\t/*\n\tDefault color chooser uses a color scale of 20 colors from D3\n\t https://github.com/mbostock/d3/wiki/Ordinal-Scales#categorical-colors\n\t */\n\tnv.utils.defaultColor = function() {\n\t    // get range of the scale so we'll turn it into our own function.\n\t    return nv.utils.getColor(d3.scale.category20().range());\n\t};\n\t\n\t\n\t/*\n\tReturns a color function that takes the result of 'getKey' for each series and\n\tlooks for a corresponding color from the dictionary\n\t*/\n\tnv.utils.customTheme = function(dictionary, getKey, defaultColors) {\n\t    // use default series.key if getKey is undefined\n\t    getKey = getKey || function(series) { return series.key };\n\t    defaultColors = defaultColors || d3.scale.category20().range();\n\t\n\t    // start at end of default color list and walk back to index 0\n\t    var defIndex = defaultColors.length;\n\t\n\t    return function(series, index) {\n\t        var key = getKey(series);\n\t        if (nv.utils.isFunction(dictionary[key])) {\n\t            return dictionary[key]();\n\t        } else if (dictionary[key] !== undefined) {\n\t            return dictionary[key];\n\t        } else {\n\t            // no match in dictionary, use a default color\n\t            if (!defIndex) {\n\t                // used all the default colors, start over\n\t                defIndex = defaultColors.length;\n\t            }\n\t            defIndex = defIndex - 1;\n\t            return defaultColors[defIndex];\n\t        }\n\t    };\n\t};\n\t\n\t\n\t/*\n\tFrom the PJAX example on d3js.org, while this is not really directly needed\n\tit's a very cool method for doing pjax, I may expand upon it a little bit,\n\topen to suggestions on anything that may be useful\n\t*/\n\tnv.utils.pjax = function(links, content) {\n\t\n\t    var load = function(href) {\n\t        d3.html(href, function(fragment) {\n\t            var target = d3.select(content).node();\n\t            target.parentNode.replaceChild(\n\t                d3.select(fragment).select(content).node(),\n\t                target);\n\t            nv.utils.pjax(links, content);\n\t        });\n\t    };\n\t\n\t    d3.selectAll(links).on(\"click\", function() {\n\t        history.pushState(this.href, this.textContent, this.href);\n\t        load(this.href);\n\t        d3.event.preventDefault();\n\t    });\n\t\n\t    d3.select(window).on(\"popstate\", function() {\n\t        if (d3.event.state) {\n\t            load(d3.event.state);\n\t        }\n\t    });\n\t};\n\t\n\t\n\t/*\n\tFor when we want to approximate the width in pixels for an SVG:text element.\n\tMost common instance is when the element is in a display:none; container.\n\tForumla is : text.length * font-size * constant_factor\n\t*/\n\tnv.utils.calcApproxTextWidth = function (svgTextElem) {\n\t    if (nv.utils.isFunction(svgTextElem.style) && nv.utils.isFunction(svgTextElem.text)) {\n\t        var fontSize = parseInt(svgTextElem.style(\"font-size\").replace(\"px\",\"\"), 10);\n\t        var textLength = svgTextElem.text().length;\n\t        return nv.utils.NaNtoZero(textLength * fontSize * 0.5);\n\t    }\n\t    return 0;\n\t};\n\t\n\t\n\t/*\n\tNumbers that are undefined, null or NaN, convert them to zeros.\n\t*/\n\tnv.utils.NaNtoZero = function(n) {\n\t    if (!nv.utils.isNumber(n)\n\t        || isNaN(n)\n\t        || n === null\n\t        || n === Infinity\n\t        || n === -Infinity) {\n\t\n\t        return 0;\n\t    }\n\t    return n;\n\t};\n\t\n\t/*\n\tAdd a way to watch for d3 transition ends to d3\n\t*/\n\td3.selection.prototype.watchTransition = function(renderWatch){\n\t    var args = [this].concat([].slice.call(arguments, 1));\n\t    return renderWatch.transition.apply(renderWatch, args);\n\t};\n\t\n\t\n\t/*\n\tHelper object to watch when d3 has rendered something\n\t*/\n\tnv.utils.renderWatch = function(dispatch, duration) {\n\t    if (!(this instanceof nv.utils.renderWatch)) {\n\t        return new nv.utils.renderWatch(dispatch, duration);\n\t    }\n\t\n\t    var _duration = duration !== undefined ? duration : 250;\n\t    var renderStack = [];\n\t    var self = this;\n\t\n\t    this.models = function(models) {\n\t        models = [].slice.call(arguments, 0);\n\t        models.forEach(function(model){\n\t            model.__rendered = false;\n\t            (function(m){\n\t                m.dispatch.on('renderEnd', function(arg){\n\t                    m.__rendered = true;\n\t                    self.renderEnd('model');\n\t                });\n\t            })(model);\n\t\n\t            if (renderStack.indexOf(model) < 0) {\n\t                renderStack.push(model);\n\t            }\n\t        });\n\t    return this;\n\t    };\n\t\n\t    this.reset = function(duration) {\n\t        if (duration !== undefined) {\n\t            _duration = duration;\n\t        }\n\t        renderStack = [];\n\t    };\n\t\n\t    this.transition = function(selection, args, duration) {\n\t        args = arguments.length > 1 ? [].slice.call(arguments, 1) : [];\n\t\n\t        if (args.length > 1) {\n\t            duration = args.pop();\n\t        } else {\n\t            duration = _duration !== undefined ? _duration : 250;\n\t        }\n\t        selection.__rendered = false;\n\t\n\t        if (renderStack.indexOf(selection) < 0) {\n\t            renderStack.push(selection);\n\t        }\n\t\n\t        if (duration === 0) {\n\t            selection.__rendered = true;\n\t            selection.delay = function() { return this; };\n\t            selection.duration = function() { return this; };\n\t            return selection;\n\t        } else {\n\t            if (selection.length === 0) {\n\t                selection.__rendered = true;\n\t            } else if (selection.every( function(d){ return !d.length; } )) {\n\t                selection.__rendered = true;\n\t            } else {\n\t                selection.__rendered = false;\n\t            }\n\t\n\t            var n = 0;\n\t            return selection\n\t                .transition()\n\t                .duration(duration)\n\t                .each(function(){ ++n; })\n\t                .each('end', function(d, i) {\n\t                    if (--n === 0) {\n\t                        selection.__rendered = true;\n\t                        self.renderEnd.apply(this, args);\n\t                    }\n\t                });\n\t        }\n\t    };\n\t\n\t    this.renderEnd = function() {\n\t        if (renderStack.every( function(d){ return d.__rendered; } )) {\n\t            renderStack.forEach( function(d){ d.__rendered = false; });\n\t            dispatch.renderEnd.apply(this, arguments);\n\t        }\n\t    }\n\t\n\t};\n\t\n\t\n\t/*\n\tTakes multiple objects and combines them into the first one (dst)\n\texample:  nv.utils.deepExtend({a: 1}, {a: 2, b: 3}, {c: 4});\n\tgives:  {a: 2, b: 3, c: 4}\n\t*/\n\tnv.utils.deepExtend = function(dst){\n\t    var sources = arguments.length > 1 ? [].slice.call(arguments, 1) : [];\n\t    sources.forEach(function(source) {\n\t        for (var key in source) {\n\t            var isArray = nv.utils.isArray(dst[key]);\n\t            var isObject = nv.utils.isObject(dst[key]);\n\t            var srcObj = nv.utils.isObject(source[key]);\n\t\n\t            if (isObject && !isArray && srcObj) {\n\t                nv.utils.deepExtend(dst[key], source[key]);\n\t            } else {\n\t                dst[key] = source[key];\n\t            }\n\t        }\n\t    });\n\t};\n\t\n\t\n\t/*\n\tstate utility object, used to track d3 states in the models\n\t*/\n\tnv.utils.state = function(){\n\t    if (!(this instanceof nv.utils.state)) {\n\t        return new nv.utils.state();\n\t    }\n\t    var state = {};\n\t    var _self = this;\n\t    var _setState = function(){};\n\t    var _getState = function(){ return {}; };\n\t    var init = null;\n\t    var changed = null;\n\t\n\t    this.dispatch = d3.dispatch('change', 'set');\n\t\n\t    this.dispatch.on('set', function(state){\n\t        _setState(state, true);\n\t    });\n\t\n\t    this.getter = function(fn){\n\t        _getState = fn;\n\t        return this;\n\t    };\n\t\n\t    this.setter = function(fn, callback) {\n\t        if (!callback) {\n\t            callback = function(){};\n\t        }\n\t        _setState = function(state, update){\n\t            fn(state);\n\t            if (update) {\n\t                callback();\n\t            }\n\t        };\n\t        return this;\n\t    };\n\t\n\t    this.init = function(state){\n\t        init = init || {};\n\t        nv.utils.deepExtend(init, state);\n\t    };\n\t\n\t    var _set = function(){\n\t        var settings = _getState();\n\t\n\t        if (JSON.stringify(settings) === JSON.stringify(state)) {\n\t            return false;\n\t        }\n\t\n\t        for (var key in settings) {\n\t            if (state[key] === undefined) {\n\t                state[key] = {};\n\t            }\n\t            state[key] = settings[key];\n\t            changed = true;\n\t        }\n\t        return true;\n\t    };\n\t\n\t    this.update = function(){\n\t        if (init) {\n\t            _setState(init, false);\n\t            init = null;\n\t        }\n\t        if (_set.call(this)) {\n\t            this.dispatch.change(state);\n\t        }\n\t    };\n\t\n\t};\n\t\n\t\n\t/*\n\tSnippet of code you can insert into each nv.models.* to give you the ability to\n\tdo things like:\n\tchart.options({\n\t  showXAxis: true,\n\t  tooltips: true\n\t});\n\t\n\tTo enable in the chart:\n\tchart.options = nv.utils.optionsFunc.bind(chart);\n\t*/\n\tnv.utils.optionsFunc = function(args) {\n\t    if (args) {\n\t        d3.map(args).forEach((function(key,value) {\n\t            if (nv.utils.isFunction(this[key])) {\n\t                this[key](value);\n\t            }\n\t        }).bind(this));\n\t    }\n\t    return this;\n\t};\n\t\n\t\n\t/*\n\tnumTicks:  requested number of ticks\n\tdata:  the chart data\n\t\n\treturns the number of ticks to actually use on X axis, based on chart data\n\tto avoid duplicate ticks with the same value\n\t*/\n\tnv.utils.calcTicksX = function(numTicks, data) {\n\t    // find max number of values from all data streams\n\t    var numValues = 1;\n\t    var i = 0;\n\t    for (i; i < data.length; i += 1) {\n\t        var stream_len = data[i] && data[i].values ? data[i].values.length : 0;\n\t        numValues = stream_len > numValues ? stream_len : numValues;\n\t    }\n\t    nv.log(\"Requested number of ticks: \", numTicks);\n\t    nv.log(\"Calculated max values to be: \", numValues);\n\t    // make sure we don't have more ticks than values to avoid duplicates\n\t    numTicks = numTicks > numValues ? numTicks = numValues - 1 : numTicks;\n\t    // make sure we have at least one tick\n\t    numTicks = numTicks < 1 ? 1 : numTicks;\n\t    // make sure it's an integer\n\t    numTicks = Math.floor(numTicks);\n\t    nv.log(\"Calculating tick count as: \", numTicks);\n\t    return numTicks;\n\t};\n\t\n\t\n\t/*\n\treturns number of ticks to actually use on Y axis, based on chart data\n\t*/\n\tnv.utils.calcTicksY = function(numTicks, data) {\n\t    // currently uses the same logic but we can adjust here if needed later\n\t    return nv.utils.calcTicksX(numTicks, data);\n\t};\n\t\n\t\n\t/*\n\tAdd a particular option from an options object onto chart\n\tOptions exposed on a chart are a getter/setter function that returns chart\n\ton set to mimic typical d3 option chaining, e.g. svg.option1('a').option2('b');\n\t\n\toption objects should be generated via Object.create() to provide\n\tthe option of manipulating data via get/set functions.\n\t*/\n\tnv.utils.initOption = function(chart, name) {\n\t    // if it's a call option, just call it directly, otherwise do get/set\n\t    if (chart._calls && chart._calls[name]) {\n\t        chart[name] = chart._calls[name];\n\t    } else {\n\t        chart[name] = function (_) {\n\t            if (!arguments.length) return chart._options[name];\n\t            chart._overrides[name] = true;\n\t            chart._options[name] = _;\n\t            return chart;\n\t        };\n\t        // calling the option as _option will ignore if set by option already\n\t        // so nvd3 can set options internally but the stop if set manually\n\t        chart['_' + name] = function(_) {\n\t            if (!arguments.length) return chart._options[name];\n\t            if (!chart._overrides[name]) {\n\t                chart._options[name] = _;\n\t            }\n\t            return chart;\n\t        }\n\t    }\n\t};\n\t\n\t\n\t/*\n\tAdd all options in an options object to the chart\n\t*/\n\tnv.utils.initOptions = function(chart) {\n\t    chart._overrides = chart._overrides || {};\n\t    var ops = Object.getOwnPropertyNames(chart._options || {});\n\t    var calls = Object.getOwnPropertyNames(chart._calls || {});\n\t    ops = ops.concat(calls);\n\t    for (var i in ops) {\n\t        nv.utils.initOption(chart, ops[i]);\n\t    }\n\t};\n\t\n\t\n\t/*\n\tInherit options from a D3 object\n\td3.rebind makes calling the function on target actually call it on source\n\tAlso use _d3options so we can track what we inherit for documentation and chained inheritance\n\t*/\n\tnv.utils.inheritOptionsD3 = function(target, d3_source, oplist) {\n\t    target._d3options = oplist.concat(target._d3options || []);\n\t    oplist.unshift(d3_source);\n\t    oplist.unshift(target);\n\t    d3.rebind.apply(this, oplist);\n\t};\n\t\n\t\n\t/*\n\tRemove duplicates from an array\n\t*/\n\tnv.utils.arrayUnique = function(a) {\n\t    return a.sort().filter(function(item, pos) {\n\t        return !pos || item != a[pos - 1];\n\t    });\n\t};\n\t\n\t\n\t/*\n\tKeeps a list of custom symbols to draw from in addition to d3.svg.symbol\n\tNecessary since d3 doesn't let you extend its list -_-\n\tAdd new symbols by doing nv.utils.symbols.set('name', function(size){...});\n\t*/\n\tnv.utils.symbolMap = d3.map();\n\t\n\t\n\t/*\n\tReplaces d3.svg.symbol so that we can look both there and our own map\n\t */\n\tnv.utils.symbol = function() {\n\t    var type,\n\t        size = 64;\n\t    function symbol(d,i) {\n\t        var t = type.call(this,d,i);\n\t        var s = size.call(this,d,i);\n\t        if (d3.svg.symbolTypes.indexOf(t) !== -1) {\n\t            return d3.svg.symbol().type(t).size(s)();\n\t        } else {\n\t            return nv.utils.symbolMap.get(t)(s);\n\t        }\n\t    }\n\t    symbol.type = function(_) {\n\t        if (!arguments.length) return type;\n\t        type = d3.functor(_);\n\t        return symbol;\n\t    };\n\t    symbol.size = function(_) {\n\t        if (!arguments.length) return size;\n\t        size = d3.functor(_);\n\t        return symbol;\n\t    };\n\t    return symbol;\n\t};\n\t\n\t\n\t/*\n\tInherit option getter/setter functions from source to target\n\td3.rebind makes calling the function on target actually call it on source\n\tAlso track via _inherited and _d3options so we can track what we inherit\n\tfor documentation generation purposes and chained inheritance\n\t*/\n\tnv.utils.inheritOptions = function(target, source) {\n\t    // inherit all the things\n\t    var ops = Object.getOwnPropertyNames(source._options || {});\n\t    var calls = Object.getOwnPropertyNames(source._calls || {});\n\t    var inherited = source._inherited || [];\n\t    var d3ops = source._d3options || [];\n\t    var args = ops.concat(calls).concat(inherited).concat(d3ops);\n\t    args.unshift(source);\n\t    args.unshift(target);\n\t    d3.rebind.apply(this, args);\n\t    // pass along the lists to keep track of them, don't allow duplicates\n\t    target._inherited = nv.utils.arrayUnique(ops.concat(calls).concat(inherited).concat(ops).concat(target._inherited || []));\n\t    target._d3options = nv.utils.arrayUnique(d3ops.concat(target._d3options || []));\n\t};\n\t\n\t\n\t/*\n\tRuns common initialize code on the svg before the chart builds\n\t*/\n\tnv.utils.initSVG = function(svg) {\n\t    svg.classed({'nvd3-svg':true});\n\t};\n\t\n\t\n\t/*\n\tSanitize and provide default for the container height.\n\t*/\n\tnv.utils.sanitizeHeight = function(height, container) {\n\t    return (height || parseInt(container.style('height'), 10) || 400);\n\t};\n\t\n\t\n\t/*\n\tSanitize and provide default for the container width.\n\t*/\n\tnv.utils.sanitizeWidth = function(width, container) {\n\t    return (width || parseInt(container.style('width'), 10) || 960);\n\t};\n\t\n\t\n\t/*\n\tCalculate the available height for a chart.\n\t*/\n\tnv.utils.availableHeight = function(height, container, margin) {\n\t    return Math.max(0,nv.utils.sanitizeHeight(height, container) - margin.top - margin.bottom);\n\t};\n\t\n\t/*\n\tCalculate the available width for a chart.\n\t*/\n\tnv.utils.availableWidth = function(width, container, margin) {\n\t    return Math.max(0,nv.utils.sanitizeWidth(width, container) - margin.left - margin.right);\n\t};\n\t\n\t/*\n\tClear any rendered chart components and display a chart's 'noData' message\n\t*/\n\tnv.utils.noData = function(chart, container) {\n\t    var opt = chart.options(),\n\t        margin = opt.margin(),\n\t        noData = opt.noData(),\n\t        data = (noData == null) ? [\"No Data Available.\"] : [noData],\n\t        height = nv.utils.availableHeight(null, container, margin),\n\t        width = nv.utils.availableWidth(null, container, margin),\n\t        x = margin.left + width/2,\n\t        y = margin.top + height/2;\n\t\n\t    //Remove any previously created chart components\n\t    container.selectAll('g').remove();\n\t\n\t    var noDataText = container.selectAll('.nv-noData').data(data);\n\t\n\t    noDataText.enter().append('text')\n\t        .attr('class', 'nvd3 nv-noData')\n\t        .attr('dy', '-.7em')\n\t        .style('text-anchor', 'middle');\n\t\n\t    noDataText\n\t        .attr('x', x)\n\t        .attr('y', y)\n\t        .text(function(t){ return t; });\n\t};\n\t\n\t/*\n\t Wrap long labels.\n\t */\n\tnv.utils.wrapTicks = function (text, width) {\n\t    text.each(function() {\n\t        var text = d3.select(this),\n\t            words = text.text().split(/\\s+/).reverse(),\n\t            word,\n\t            line = [],\n\t            lineNumber = 0,\n\t            lineHeight = 1.1,\n\t            y = text.attr(\"y\"),\n\t            dy = parseFloat(text.attr(\"dy\")),\n\t            tspan = text.text(null).append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", dy + \"em\");\n\t        while (word = words.pop()) {\n\t            line.push(word);\n\t            tspan.text(line.join(\" \"));\n\t            if (tspan.node().getComputedTextLength() > width) {\n\t                line.pop();\n\t                tspan.text(line.join(\" \"));\n\t                line = [word];\n\t                tspan = text.append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", ++lineNumber * lineHeight + dy + \"em\").text(word);\n\t            }\n\t        }\n\t    });\n\t};\n\t\n\t/*\n\tCheck equality of 2 array\n\t*/\n\tnv.utils.arrayEquals = function (array1, array2) {\n\t    if (array1 === array2)\n\t        return true;\n\t\n\t    if (!array1 || !array2)\n\t        return false;\n\t\n\t    // compare lengths - can save a lot of time\n\t    if (array1.length != array2.length)\n\t        return false;\n\t\n\t    for (var i = 0,\n\t        l = array1.length; i < l; i++) {\n\t        // Check if we have nested arrays\n\t        if (array1[i] instanceof Array && array2[i] instanceof Array) {\n\t            // recurse into the nested arrays\n\t            if (!nv.arrayEquals(array1[i], array2[i]))\n\t                return false;\n\t        } else if (array1[i] != array2[i]) {\n\t            // Warning - two different object instances will never be equal: {x:20} != {x:20}\n\t            return false;\n\t        }\n\t    }\n\t    return true;\n\t};\n\tnv.models.axis = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var axis = d3.svg.axis();\n\t    var scale = d3.scale.linear();\n\t\n\t    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n\t        , width = 75 //only used for tickLabel currently\n\t        , height = 60 //only used for tickLabel currently\n\t        , axisLabelText = null\n\t        , showMaxMin = true //TODO: showMaxMin should be disabled on all ordinal scaled axes\n\t        , rotateLabels = 0\n\t        , rotateYLabel = true\n\t        , staggerLabels = false\n\t        , isOrdinal = false\n\t        , ticks = null\n\t        , axisLabelDistance = 0\n\t        , fontSize = undefined\n\t        , duration = 250\n\t        , dispatch = d3.dispatch('renderEnd')\n\t        ;\n\t    axis\n\t        .scale(scale)\n\t        .orient('bottom')\n\t        .tickFormat(function(d) { return d })\n\t    ;\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    var scale0;\n\t    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\t\n\t    function chart(selection) {\n\t        renderWatch.reset();\n\t        selection.each(function(data) {\n\t            var container = d3.select(this);\n\t            nv.utils.initSVG(container);\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = container.selectAll('g.nv-wrap.nv-axis').data([data]);\n\t            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-axis');\n\t            var gEnter = wrapEnter.append('g');\n\t            var g = wrap.select('g');\n\t\n\t            if (ticks !== null)\n\t                axis.ticks(ticks);\n\t            else if (axis.orient() == 'top' || axis.orient() == 'bottom')\n\t                axis.ticks(Math.abs(scale.range()[1] - scale.range()[0]) / 100);\n\t\n\t            //TODO: consider calculating width/height based on whether or not label is added, for reference in charts using this component\n\t            g.watchTransition(renderWatch, 'axis').call(axis);\n\t\n\t            scale0 = scale0 || axis.scale();\n\t\n\t            var fmt = axis.tickFormat();\n\t            if (fmt == null) {\n\t                fmt = scale0.tickFormat();\n\t            }\n\t\n\t            var axisLabel = g.selectAll('text.nv-axislabel')\n\t                .data([axisLabelText || null]);\n\t            axisLabel.exit().remove();\n\t\n\t            //only skip when fontSize is undefined so it can be cleared with a null or blank string\n\t            if (fontSize !== undefined) {\n\t                g.selectAll('g').select(\"text\").style('font-size', fontSize);\n\t            }\n\t\n\t            var xLabelMargin;\n\t            var axisMaxMin;\n\t            var w;\n\t            switch (axis.orient()) {\n\t                case 'top':\n\t                    axisLabel.enter().append('text').attr('class', 'nv-axislabel');\n\t                  w = 0;\n\t                  if (scale.range().length === 1) {\n\t                    w = isOrdinal ? scale.range()[0] * 2 + scale.rangeBand() : 0;\n\t                  } else if (scale.range().length === 2) {\n\t                    w = isOrdinal ? scale.range()[0] + scale.range()[1] + scale.rangeBand() : scale.range()[1];\n\t                  } else if ( scale.range().length > 2){\n\t                    w = scale.range()[scale.range().length-1]+(scale.range()[1]-scale.range()[0]);\n\t                  };\n\t                    axisLabel\n\t                        .attr('text-anchor', 'middle')\n\t                        .attr('y', 0)\n\t                        .attr('x', w/2);\n\t                    if (showMaxMin) {\n\t                        axisMaxMin = wrap.selectAll('g.nv-axisMaxMin')\n\t                            .data(scale.domain());\n\t                        axisMaxMin.enter().append('g').attr('class',function(d,i){\n\t                                return ['nv-axisMaxMin','nv-axisMaxMin-x',(i == 0 ? 'nv-axisMin-x':'nv-axisMax-x')].join(' ')\n\t                        }).append('text');\n\t                        axisMaxMin.exit().remove();\n\t                        axisMaxMin\n\t                            .attr('transform', function(d,i) {\n\t                                return 'translate(' + nv.utils.NaNtoZero(scale(d)) + ',0)'\n\t                            })\n\t                            .select('text')\n\t                            .attr('dy', '-0.5em')\n\t                            .attr('y', -axis.tickPadding())\n\t                            .attr('text-anchor', 'middle')\n\t                            .text(function(d,i) {\n\t                                var v = fmt(d);\n\t                                return ('' + v).match('NaN') ? '' : v;\n\t                            });\n\t                        axisMaxMin.watchTransition(renderWatch, 'min-max top')\n\t                            .attr('transform', function(d,i) {\n\t                                return 'translate(' + nv.utils.NaNtoZero(scale.range()[i]) + ',0)'\n\t                            });\n\t                    }\n\t                    break;\n\t                case 'bottom':\n\t                    xLabelMargin = axisLabelDistance + 36;\n\t                    var maxTextWidth = 30;\n\t                    var textHeight = 0;\n\t                    var xTicks = g.selectAll('g').select(\"text\");\n\t                    var rotateLabelsRule = '';\n\t                    if (rotateLabels%360) {\n\t                        //Reset transform on ticks so textHeight can be calculated correctly\n\t                        xTicks.attr('transform', ''); \n\t                        //Calculate the longest xTick width\n\t                        xTicks.each(function(d,i){\n\t                            var box = this.getBoundingClientRect();\n\t                            var width = box.width;\n\t                            textHeight = box.height;\n\t                            if(width > maxTextWidth) maxTextWidth = width;\n\t                        });\n\t                        rotateLabelsRule = 'rotate(' + rotateLabels + ' 0,' + (textHeight/2 + axis.tickPadding()) + ')';\n\t                        //Convert to radians before calculating sin. Add 30 to margin for healthy padding.\n\t                        var sin = Math.abs(Math.sin(rotateLabels*Math.PI/180));\n\t                        xLabelMargin = (sin ? sin*maxTextWidth : maxTextWidth)+30;\n\t                        //Rotate all xTicks\n\t                        xTicks\n\t                            .attr('transform', rotateLabelsRule)\n\t                            .style('text-anchor', rotateLabels%360 > 0 ? 'start' : 'end');\n\t                    } else {\n\t                        if (staggerLabels) {\n\t                            xTicks\n\t                                .attr('transform', function(d,i) {\n\t                                    return 'translate(0,' + (i % 2 == 0 ? '0' : '12') + ')'\n\t                                });\n\t                        } else {\n\t                            xTicks.attr('transform', \"translate(0,0)\");\n\t                        }\n\t                    }\n\t                    axisLabel.enter().append('text').attr('class', 'nv-axislabel');\n\t                    w = 0;\n\t                    if (scale.range().length === 1) {\n\t                        w = isOrdinal ? scale.range()[0] * 2 + scale.rangeBand() : 0;\n\t                    } else if (scale.range().length === 2) {\n\t                        w = isOrdinal ? scale.range()[0] + scale.range()[1] + scale.rangeBand() : scale.range()[1];\n\t                    } else if ( scale.range().length > 2){\n\t                        w = scale.range()[scale.range().length-1]+(scale.range()[1]-scale.range()[0]);\n\t                    };\n\t                    axisLabel\n\t                        .attr('text-anchor', 'middle')\n\t                        .attr('y', xLabelMargin)\n\t                        .attr('x', w/2);\n\t                    if (showMaxMin) {\n\t                        //if (showMaxMin && !isOrdinal) {\n\t                        axisMaxMin = wrap.selectAll('g.nv-axisMaxMin')\n\t                            //.data(scale.domain())\n\t                            .data([scale.domain()[0], scale.domain()[scale.domain().length - 1]]);\n\t                        axisMaxMin.enter().append('g').attr('class',function(d,i){\n\t                                return ['nv-axisMaxMin','nv-axisMaxMin-x',(i == 0 ? 'nv-axisMin-x':'nv-axisMax-x')].join(' ')\n\t                        }).append('text');\n\t                        axisMaxMin.exit().remove();\n\t                        axisMaxMin\n\t                            .attr('transform', function(d,i) {\n\t                                return 'translate(' + nv.utils.NaNtoZero((scale(d) + (isOrdinal ? scale.rangeBand() / 2 : 0))) + ',0)'\n\t                            })\n\t                            .select('text')\n\t                            .attr('dy', '.71em')\n\t                            .attr('y', axis.tickPadding())\n\t                            .attr('transform', rotateLabelsRule)\n\t                            .style('text-anchor', rotateLabels ? (rotateLabels%360 > 0 ? 'start' : 'end') : 'middle')\n\t                            .text(function(d,i) {\n\t                                var v = fmt(d);\n\t                                return ('' + v).match('NaN') ? '' : v;\n\t                            });\n\t                        axisMaxMin.watchTransition(renderWatch, 'min-max bottom')\n\t                            .attr('transform', function(d,i) {\n\t                                return 'translate(' + nv.utils.NaNtoZero((scale(d) + (isOrdinal ? scale.rangeBand() / 2 : 0))) + ',0)'\n\t                            });\n\t                    }\n\t\n\t                    break;\n\t                case 'right':\n\t                    axisLabel.enter().append('text').attr('class', 'nv-axislabel');\n\t                    axisLabel\n\t                        .style('text-anchor', rotateYLabel ? 'middle' : 'begin')\n\t                        .attr('transform', rotateYLabel ? 'rotate(90)' : '')\n\t                        .attr('y', rotateYLabel ? (-Math.max(margin.right, width) + 12 - (axisLabelDistance || 0)) : -10) //TODO: consider calculating this based on largest tick width... OR at least expose this on chart\n\t                        .attr('x', rotateYLabel ? (d3.max(scale.range()) / 2) : axis.tickPadding());\n\t                    if (showMaxMin) {\n\t                        axisMaxMin = wrap.selectAll('g.nv-axisMaxMin')\n\t                            .data(scale.domain());\n\t                       \taxisMaxMin.enter().append('g').attr('class',function(d,i){\n\t                                return ['nv-axisMaxMin','nv-axisMaxMin-y',(i == 0 ? 'nv-axisMin-y':'nv-axisMax-y')].join(' ')\n\t                        }).append('text')\n\t                            .style('opacity', 0);\n\t                        axisMaxMin.exit().remove();\n\t                        axisMaxMin\n\t                            .attr('transform', function(d,i) {\n\t                                return 'translate(0,' + nv.utils.NaNtoZero(scale(d)) + ')'\n\t                            })\n\t                            .select('text')\n\t                            .attr('dy', '.32em')\n\t                            .attr('y', 0)\n\t                            .attr('x', axis.tickPadding())\n\t                            .style('text-anchor', 'start')\n\t                            .text(function(d, i) {\n\t                                var v = fmt(d);\n\t                                return ('' + v).match('NaN') ? '' : v;\n\t                            });\n\t                        axisMaxMin.watchTransition(renderWatch, 'min-max right')\n\t                            .attr('transform', function(d,i) {\n\t                                return 'translate(0,' + nv.utils.NaNtoZero(scale.range()[i]) + ')'\n\t                            })\n\t                            .select('text')\n\t                            .style('opacity', 1);\n\t                    }\n\t                    break;\n\t                case 'left':\n\t                    /*\n\t                     //For dynamically placing the label. Can be used with dynamically-sized chart axis margins\n\t                     var yTicks = g.selectAll('g').select(\"text\");\n\t                     yTicks.each(function(d,i){\n\t                     var labelPadding = this.getBoundingClientRect().width + axis.tickPadding() + 16;\n\t                     if(labelPadding > width) width = labelPadding;\n\t                     });\n\t                     */\n\t                    axisLabel.enter().append('text').attr('class', 'nv-axislabel');\n\t                    axisLabel\n\t                        .style('text-anchor', rotateYLabel ? 'middle' : 'end')\n\t                        .attr('transform', rotateYLabel ? 'rotate(-90)' : '')\n\t                        .attr('y', rotateYLabel ? (-Math.max(margin.left, width) + 25 - (axisLabelDistance || 0)) : -10)\n\t                        .attr('x', rotateYLabel ? (-d3.max(scale.range()) / 2) : -axis.tickPadding());\n\t                    if (showMaxMin) {\n\t                        axisMaxMin = wrap.selectAll('g.nv-axisMaxMin')\n\t                            .data(scale.domain());\n\t                        axisMaxMin.enter().append('g').attr('class',function(d,i){\n\t                                return ['nv-axisMaxMin','nv-axisMaxMin-y',(i == 0 ? 'nv-axisMin-y':'nv-axisMax-y')].join(' ')\n\t                        }).append('text')\n\t                            .style('opacity', 0);\n\t                        axisMaxMin.exit().remove();\n\t                        axisMaxMin\n\t                            .attr('transform', function(d,i) {\n\t                                return 'translate(0,' + nv.utils.NaNtoZero(scale0(d)) + ')'\n\t                            })\n\t                            .select('text')\n\t                            .attr('dy', '.32em')\n\t                            .attr('y', 0)\n\t                            .attr('x', -axis.tickPadding())\n\t                            .attr('text-anchor', 'end')\n\t                            .text(function(d,i) {\n\t                                var v = fmt(d);\n\t                                return ('' + v).match('NaN') ? '' : v;\n\t                            });\n\t                        axisMaxMin.watchTransition(renderWatch, 'min-max right')\n\t                            .attr('transform', function(d,i) {\n\t                                return 'translate(0,' + nv.utils.NaNtoZero(scale.range()[i]) + ')'\n\t                            })\n\t                            .select('text')\n\t                            .style('opacity', 1);\n\t                    }\n\t                    break;\n\t            }\n\t            axisLabel.text(function(d) { return d });\n\t\n\t            if (showMaxMin && (axis.orient() === 'left' || axis.orient() === 'right')) {\n\t                //check if max and min overlap other values, if so, hide the values that overlap\n\t                g.selectAll('g') // the g's wrapping each tick\n\t                    .each(function(d,i) {\n\t                        d3.select(this).select('text').attr('opacity', 1);\n\t                        if (scale(d) < scale.range()[1] + 10 || scale(d) > scale.range()[0] - 10) { // 10 is assuming text height is 16... if d is 0, leave it!\n\t                            if (d > 1e-10 || d < -1e-10) // accounts for minor floating point errors... though could be problematic if the scale is EXTREMELY SMALL\n\t                                d3.select(this).attr('opacity', 0);\n\t\n\t                            d3.select(this).select('text').attr('opacity', 0); // Don't remove the ZERO line!!\n\t                        }\n\t                    });\n\t\n\t                //if Max and Min = 0 only show min, Issue #281\n\t                if (scale.domain()[0] == scale.domain()[1] && scale.domain()[0] == 0) {\n\t                    wrap.selectAll('g.nv-axisMaxMin').style('opacity', function (d, i) {\n\t                        return !i ? 1 : 0\n\t                    });\n\t                }\n\t            }\n\t\n\t            if (showMaxMin && (axis.orient() === 'top' || axis.orient() === 'bottom')) {\n\t                var maxMinRange = [];\n\t                wrap.selectAll('g.nv-axisMaxMin')\n\t                    .each(function(d,i) {\n\t                        try {\n\t                            if (i) // i== 1, max position\n\t                                maxMinRange.push(scale(d) - this.getBoundingClientRect().width - 4);  //assuming the max and min labels are as wide as the next tick (with an extra 4 pixels just in case)\n\t                            else // i==0, min position\n\t                                maxMinRange.push(scale(d) + this.getBoundingClientRect().width + 4)\n\t                        }catch (err) {\n\t                            if (i) // i== 1, max position\n\t                                maxMinRange.push(scale(d) - 4);  //assuming the max and min labels are as wide as the next tick (with an extra 4 pixels just in case)\n\t                            else // i==0, min position\n\t                                maxMinRange.push(scale(d) + 4);\n\t                        }\n\t                    });\n\t                // the g's wrapping each tick\n\t                g.selectAll('g').each(function(d, i) {\n\t                    if (scale(d) < maxMinRange[0] || scale(d) > maxMinRange[1]) {\n\t                        if (d > 1e-10 || d < -1e-10) // accounts for minor floating point errors... though could be problematic if the scale is EXTREMELY SMALL\n\t                            d3.select(this).remove();\n\t                        else\n\t                            d3.select(this).select('text').remove(); // Don't remove the ZERO line!!\n\t                    }\n\t                });\n\t            }\n\t\n\t            //Highlight zero tick line\n\t            g.selectAll('.tick')\n\t                .filter(function (d) {\n\t                    /*\n\t                    The filter needs to return only ticks at or near zero.\n\t                    Numbers like 0.00001 need to count as zero as well,\n\t                    and the arithmetic trick below solves that.\n\t                    */\n\t                    return !parseFloat(Math.round(d * 100000) / 1000000) && (d !== undefined)\n\t                }) \n\t                .classed('zero', true);\n\t            \n\t            //store old scales for use in transitions on update\n\t            scale0 = scale.copy();\n\t\n\t        });\n\t\n\t        renderWatch.renderEnd('axis immediate');\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    // expose chart's sub-components\n\t    chart.axis = axis;\n\t    chart.dispatch = dispatch;\n\t\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        axisLabelDistance: {get: function(){return axisLabelDistance;}, set: function(_){axisLabelDistance=_;}},\n\t        staggerLabels:     {get: function(){return staggerLabels;}, set: function(_){staggerLabels=_;}},\n\t        rotateLabels:      {get: function(){return rotateLabels;}, set: function(_){rotateLabels=_;}},\n\t        rotateYLabel:      {get: function(){return rotateYLabel;}, set: function(_){rotateYLabel=_;}},\n\t        showMaxMin:        {get: function(){return showMaxMin;}, set: function(_){showMaxMin=_;}},\n\t        axisLabel:         {get: function(){return axisLabelText;}, set: function(_){axisLabelText=_;}},\n\t        height:            {get: function(){return height;}, set: function(_){height=_;}},\n\t        ticks:             {get: function(){return ticks;}, set: function(_){ticks=_;}},\n\t        width:             {get: function(){return width;}, set: function(_){width=_;}},\n\t        fontSize:          {get: function(){return fontSize;}, set: function(_){fontSize=_;}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    = _.top !== undefined    ? _.top    : margin.top;\n\t            margin.right  = _.right !== undefined  ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left !== undefined   ? _.left   : margin.left;\n\t        }},\n\t        duration: {get: function(){return duration;}, set: function(_){\n\t            duration=_;\n\t            renderWatch.reset(duration);\n\t        }},\n\t        scale: {get: function(){return scale;}, set: function(_){\n\t            scale = _;\n\t            axis.scale(scale);\n\t            isOrdinal = typeof scale.rangeBands === 'function';\n\t            nv.utils.inheritOptionsD3(chart, scale, ['domain', 'range', 'rangeBand', 'rangeBands']);\n\t        }}\n\t    });\n\t\n\t    nv.utils.initOptions(chart);\n\t    nv.utils.inheritOptionsD3(chart, axis, ['orient', 'tickValues', 'tickSubdivide', 'tickSize', 'tickPadding', 'tickFormat']);\n\t    nv.utils.inheritOptionsD3(chart, scale, ['domain', 'range', 'rangeBand', 'rangeBands']);\n\t\n\t    return chart;\n\t};\n\tnv.models.boxPlot = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var margin = {top: 0, right: 0, bottom: 0, left: 0},\n\t        width = 960,\n\t        height = 500,\n\t        id = Math.floor(Math.random() * 10000), // Create semi-unique ID in case user doesn't select one\n\t        xScale = d3.scale.ordinal(),\n\t        yScale = d3.scale.linear(),\n\t        getX  = function(d) { return d.label }, // Default data model selectors.\n\t        getQ1 = function(d) { return d.values.Q1 },\n\t        getQ2 = function(d) { return d.values.Q2 },\n\t        getQ3 = function(d) { return d.values.Q3 },\n\t        getWl = function(d) { return d.values.whisker_low },\n\t        getWh = function(d) { return d.values.whisker_high },\n\t        getColor = function(d) { return d.color },\n\t        getOlItems  = function(d) { return d.values.outliers },\n\t        getOlValue = function(d, i, j) { return d },\n\t        getOlLabel = function(d, i, j) { return d },\n\t        getOlColor = function(d, i, j) { return undefined },\n\t        color = nv.utils.defaultColor(),\n\t        container = null,\n\t        xDomain, xRange,\n\t        yDomain, yRange,\n\t        dispatch = d3.dispatch('elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd'),\n\t        duration = 250,\n\t        maxBoxWidth = null;\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    var xScale0, yScale0;\n\t    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\t\n\t    function chart(selection) {\n\t        renderWatch.reset();\n\t        selection.each(function(data) {\n\t            var availableWidth = width - margin.left - margin.right,\n\t                availableHeight = height - margin.top - margin.bottom;\n\t\n\t            container = d3.select(this);\n\t            nv.utils.initSVG(container);\n\t\n\t            // Setup Scales\n\t            xScale.domain(xDomain || data.map(function(d,i) { return getX(d,i); }))\n\t                .rangeBands(xRange || [0, availableWidth], 0.1);\n\t\n\t            // if we know yDomain, no need to calculate\n\t            var yData = []\n\t            if (!yDomain) {\n\t                // (y-range is based on quartiles, whiskers and outliers)\n\t                var values = [], yMin, yMax;\n\t                data.forEach(function (d, i) {\n\t                    var q1 = getQ1(d), q3 = getQ3(d), wl = getWl(d), wh = getWh(d);\n\t                    var olItems = getOlItems(d);\n\t                    if (olItems) {\n\t                        olItems.forEach(function (e, i) {\n\t                            values.push(getOlValue(e, i, undefined));\n\t                        });\n\t                    }\n\t                    if (wl) { values.push(wl) }\n\t                    if (q1) { values.push(q1) }\n\t                    if (q3) { values.push(q3) }\n\t                    if (wh) { values.push(wh) }\n\t                });\n\t                yMin = d3.min(values);\n\t                yMax = d3.max(values);\n\t                yData = [ yMin, yMax ] ;\n\t            }\n\t\n\t            yScale.domain(yDomain || yData);\n\t            yScale.range(yRange || [availableHeight, 0]);\n\t\n\t            //store old scales if they exist\n\t            xScale0 = xScale0 || xScale;\n\t            yScale0 = yScale0 || yScale.copy().range([yScale(0),yScale(0)]);\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = container.selectAll('g.nv-wrap').data([data]);\n\t            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap');\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            var boxplots = wrap.selectAll('.nv-boxplot').data(function(d) { return d });\n\t            var boxEnter = boxplots.enter().append('g').style('stroke-opacity', 1e-6).style('fill-opacity', 1e-6);\n\t            boxplots\n\t                .attr('class', 'nv-boxplot')\n\t                .attr('transform', function(d,i,j) { return 'translate(' + (xScale(getX(d,i)) + xScale.rangeBand() * 0.05) + ', 0)'; })\n\t                .classed('hover', function(d) { return d.hover });\n\t            boxplots\n\t                .watchTransition(renderWatch, 'nv-boxplot: boxplots')\n\t                .style('stroke-opacity', 1)\n\t                .style('fill-opacity', 0.75)\n\t                .delay(function(d,i) { return i * duration / data.length })\n\t                .attr('transform', function(d,i) {\n\t                    return 'translate(' + (xScale(getX(d,i)) + xScale.rangeBand() * 0.05) + ', 0)';\n\t                });\n\t            boxplots.exit().remove();\n\t\n\t            // ----- add the SVG elements for each boxPlot -----\n\t\n\t            // conditionally append whisker lines\n\t            boxEnter.each(function(d,i) {\n\t                var box = d3.select(this);\n\t                [getWl, getWh].forEach(function (f) {\n\t                    if (f(d) !== undefined && f(d) !== null) {\n\t                        var key = (f === getWl) ? 'low' : 'high';\n\t                        box.append('line')\n\t                          .style('stroke', getColor(d) || color(d,i))\n\t                          .attr('class', 'nv-boxplot-whisker nv-boxplot-' + key);\n\t                        box.append('line')\n\t                          .style('stroke', getColor(d) || color(d,i))\n\t                          .attr('class', 'nv-boxplot-tick nv-boxplot-' + key);\n\t                    }\n\t                });\n\t            });\n\t\n\t            var box_width = function() { return (maxBoxWidth === null ? xScale.rangeBand() * 0.9 : Math.min(75, xScale.rangeBand() * 0.9)); };\n\t            var box_left  = function() { return xScale.rangeBand() * 0.45 - box_width()/2; };\n\t            var box_right = function() { return xScale.rangeBand() * 0.45 + box_width()/2; };\n\t\n\t            // update whisker lines and ticks\n\t            [getWl, getWh].forEach(function (f) {\n\t                var key = (f === getWl) ? 'low' : 'high';\n\t                var endpoint = (f === getWl) ? getQ1 : getQ3;\n\t                boxplots.select('line.nv-boxplot-whisker.nv-boxplot-' + key)\n\t                  .watchTransition(renderWatch, 'nv-boxplot: boxplots')\n\t                    .attr('x1', xScale.rangeBand() * 0.45 )\n\t                    .attr('y1', function(d,i) { return yScale(f(d)); })\n\t                    .attr('x2', xScale.rangeBand() * 0.45 )\n\t                    .attr('y2', function(d,i) { return yScale(endpoint(d)); });\n\t                boxplots.select('line.nv-boxplot-tick.nv-boxplot-' + key)\n\t                  .watchTransition(renderWatch, 'nv-boxplot: boxplots')\n\t                    .attr('x1', box_left )\n\t                    .attr('y1', function(d,i) { return yScale(f(d)); })\n\t                    .attr('x2', box_right )\n\t                    .attr('y2', function(d,i) { return yScale(f(d)); });\n\t            });\n\t\n\t            [getWl, getWh].forEach(function (f) {\n\t                var key = (f === getWl) ? 'low' : 'high';\n\t                boxEnter.selectAll('.nv-boxplot-' + key)\n\t                  .on('mouseover', function(d,i,j) {\n\t                      d3.select(this).classed('hover', true);\n\t                      dispatch.elementMouseover({\n\t                          series: { key: f(d), color: getColor(d) || color(d,j) },\n\t                          e: d3.event\n\t                      });\n\t                  })\n\t                  .on('mouseout', function(d,i,j) {\n\t                      d3.select(this).classed('hover', false);\n\t                      dispatch.elementMouseout({\n\t                          series: { key: f(d), color: getColor(d) || color(d,j) },\n\t                          e: d3.event\n\t                      });\n\t                  })\n\t                  .on('mousemove', function(d,i) {\n\t                      dispatch.elementMousemove({e: d3.event});\n\t                  });\n\t            });\n\t\n\t            // boxes\n\t            boxEnter.append('rect')\n\t                .attr('class', 'nv-boxplot-box')\n\t                // tooltip events\n\t                .on('mouseover', function(d,i) {\n\t                    d3.select(this).classed('hover', true);\n\t                    dispatch.elementMouseover({\n\t                        key: getX(d),\n\t                        value: getX(d),\n\t                        series: [\n\t                            { key: 'Q3', value: getQ3(d), color: getColor(d) || color(d,i) },\n\t                            { key: 'Q2', value: getQ2(d), color: getColor(d) || color(d,i) },\n\t                            { key: 'Q1', value: getQ1(d), color: getColor(d) || color(d,i) }\n\t                        ],\n\t                        data: d,\n\t                        index: i,\n\t                        e: d3.event\n\t                    });\n\t                })\n\t                .on('mouseout', function(d,i) {\n\t                    d3.select(this).classed('hover', false);\n\t                    dispatch.elementMouseout({\n\t                        key: getX(d),\n\t                        value: getX(d),\n\t                        series: [\n\t                            { key: 'Q3', value: getQ3(d), color: getColor(d) || color(d,i) },\n\t                            { key: 'Q2', value: getQ2(d), color: getColor(d) || color(d,i) },\n\t                            { key: 'Q1', value: getQ1(d), color: getColor(d) || color(d,i) }\n\t                        ],\n\t                        data: d,\n\t                        index: i,\n\t                        e: d3.event\n\t                    });\n\t                })\n\t                .on('mousemove', function(d,i) {\n\t                    dispatch.elementMousemove({e: d3.event});\n\t                });\n\t\n\t            // box transitions\n\t            boxplots.select('rect.nv-boxplot-box')\n\t              .watchTransition(renderWatch, 'nv-boxplot: boxes')\n\t                .attr('y', function(d,i) { return yScale(getQ3(d)); })\n\t                .attr('width', box_width)\n\t                .attr('x', box_left )\n\t                .attr('height', function(d,i) { return Math.abs(yScale(getQ3(d)) - yScale(getQ1(d))) || 1 })\n\t                .style('fill', function(d,i) { return getColor(d) || color(d,i) })\n\t                .style('stroke', function(d,i) { return getColor(d) || color(d,i) });\n\t\n\t            // median line\n\t            boxEnter.append('line').attr('class', 'nv-boxplot-median');\n\t\n\t            boxplots.select('line.nv-boxplot-median')\n\t              .watchTransition(renderWatch, 'nv-boxplot: boxplots line')\n\t                .attr('x1', box_left)\n\t                .attr('y1', function(d,i) { return yScale(getQ2(d)); })\n\t                .attr('x2', box_right)\n\t                .attr('y2', function(d,i) { return yScale(getQ2(d)); });\n\t\n\t            // outliers\n\t            var outliers = boxplots.selectAll('.nv-boxplot-outlier').data(function(d) {\n\t                return getOlItems(d) || [];\n\t            });\n\t            outliers.enter().append('circle')\n\t                .style('fill', function(d,i,j) { return getOlColor(d,i,j) || color(d,j) })\n\t                .style('stroke', function(d,i,j) { return getOlColor(d,i,j) || color(d,j) })\n\t                .style('z-index', 9000)\n\t                .on('mouseover', function(d,i,j) {\n\t                    d3.select(this).classed('hover', true);\n\t                    dispatch.elementMouseover({\n\t                        series: { key: getOlLabel(d,i,j), color: getOlColor(d,i,j) || color(d,j) },\n\t                        e: d3.event\n\t                    });\n\t                })\n\t                .on('mouseout', function(d,i,j) {\n\t                    d3.select(this).classed('hover', false);\n\t                    dispatch.elementMouseout({\n\t                        series: { key: getOlLabel(d,i,j), color: getOlColor(d,i,j) || color(d,j) },\n\t                        e: d3.event\n\t                    });\n\t                })\n\t                .on('mousemove', function(d,i) {\n\t                    dispatch.elementMousemove({e: d3.event});\n\t                });\n\t            outliers.attr('class', 'nv-boxplot-outlier');\n\t            outliers\n\t              .watchTransition(renderWatch, 'nv-boxplot: nv-boxplot-outlier')\n\t                .attr('cx', xScale.rangeBand() * 0.45)\n\t                .attr('cy', function(d,i,j) { return yScale(getOlValue(d,i,j)); })\n\t                .attr('r', '3');\n\t            outliers.exit().remove();\n\t\n\t            //store old scales for use in transitions on update\n\t            xScale0 = xScale.copy();\n\t            yScale0 = yScale.copy();\n\t        });\n\t\n\t        renderWatch.renderEnd('nv-boxplot immediate');\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    chart.dispatch = dispatch;\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:       {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:      {get: function(){return height;}, set: function(_){height=_;}},\n\t        maxBoxWidth: {get: function(){return maxBoxWidth;}, set: function(_){maxBoxWidth=_;}},\n\t        x:           {get: function(){return getX;}, set: function(_){getX=_;}},\n\t        q1: {get: function(){return getQ1;}, set: function(_){getQ1=_;}},\n\t        q2: {get: function(){return getQ2;}, set: function(_){getQ2=_;}},\n\t        q3: {get: function(){return getQ3;}, set: function(_){getQ3=_;}},\n\t        wl: {get: function(){return getWl;}, set: function(_){getWl=_;}},\n\t        wh: {get: function(){return getWh;}, set: function(_){getWh=_;}},\n\t        itemColor:    {get: function(){return getColor;}, set: function(_){getColor=_;}},\n\t        outliers:     {get: function(){return getOlItems;}, set: function(_){getOlItems=_;}},\n\t        outlierValue: {get: function(){return getOlValue;}, set: function(_){getOlValue=_;}},\n\t        outlierLabel: {get: function(){return getOlLabel;}, set: function(_){getOlLabel=_;}},\n\t        outlierColor: {get: function(){return getOlColor;}, set: function(_){getOlColor=_;}},\n\t        xScale:  {get: function(){return xScale;}, set: function(_){xScale=_;}},\n\t        yScale:  {get: function(){return yScale;}, set: function(_){yScale=_;}},\n\t        xDomain: {get: function(){return xDomain;}, set: function(_){xDomain=_;}},\n\t        yDomain: {get: function(){return yDomain;}, set: function(_){yDomain=_;}},\n\t        xRange:  {get: function(){return xRange;}, set: function(_){xRange=_;}},\n\t        yRange:  {get: function(){return yRange;}, set: function(_){yRange=_;}},\n\t        id:          {get: function(){return id;}, set: function(_){id=_;}},\n\t        // rectClass: {get: function(){return rectClass;}, set: function(_){rectClass=_;}},\n\t        y: {\n\t            get: function() {\n\t                console.warn('BoxPlot \\'y\\' chart option is deprecated. Please use model overrides instead.');\n\t                return {};\n\t            },\n\t            set: function(_) {\n\t                console.warn('BoxPlot \\'y\\' chart option is deprecated. Please use model overrides instead.');\n\t            }\n\t        },\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }},\n\t        color:  {get: function(){return color;}, set: function(_){\n\t            color = nv.utils.getColor(_);\n\t        }},\n\t        duration: {get: function(){return duration;}, set: function(_){\n\t            duration = _;\n\t            renderWatch.reset(duration);\n\t        }}\n\t    });\n\t\n\t    nv.utils.initOptions(chart);\n\t\n\t    return chart;\n\t};\n\tnv.models.boxPlotChart = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var boxplot = nv.models.boxPlot(),\n\t        xAxis = nv.models.axis(),\n\t        yAxis = nv.models.axis();\n\t\n\t    var margin = {top: 15, right: 10, bottom: 50, left: 60},\n\t        width = null,\n\t        height = null,\n\t        color = nv.utils.getColor(),\n\t        showXAxis = true,\n\t        showYAxis = true,\n\t        rightAlignYAxis = false,\n\t        staggerLabels = false,\n\t        tooltip = nv.models.tooltip(),\n\t        x, y,\n\t        noData = 'No Data Available.',\n\t        dispatch = d3.dispatch('beforeUpdate', 'renderEnd'),\n\t        duration = 250;\n\t\n\t    xAxis\n\t        .orient('bottom')\n\t        .showMaxMin(false)\n\t        .tickFormat(function(d) { return d })\n\t    ;\n\t    yAxis\n\t        .orient((rightAlignYAxis) ? 'right' : 'left')\n\t        .tickFormat(d3.format(',.1f'))\n\t    ;\n\t\n\t    tooltip.duration(0);\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\t\n\t    function chart(selection) {\n\t        renderWatch.reset();\n\t        renderWatch.models(boxplot);\n\t        if (showXAxis) renderWatch.models(xAxis);\n\t        if (showYAxis) renderWatch.models(yAxis);\n\t\n\t        selection.each(function(data) {\n\t            var container = d3.select(this), that = this;\n\t            nv.utils.initSVG(container);\n\t            var availableWidth = (width  || parseInt(container.style('width')) || 960) - margin.left - margin.right;\n\t            var availableHeight = (height || parseInt(container.style('height')) || 400) - margin.top - margin.bottom;\n\t\n\t            chart.update = function() {\n\t                dispatch.beforeUpdate();\n\t                container.transition().duration(duration).call(chart);\n\t            };\n\t            chart.container = this;\n\t\n\t            // TODO still need to find a way to validate quartile data presence using boxPlot callbacks.\n\t            // Display No Data message if there's nothing to show. (quartiles required at minimum).\n\t            if (!data || !data.length) {\n\t                var noDataText = container.selectAll('.nv-noData').data([noData]);\n\t\n\t                noDataText.enter().append('text')\n\t                    .attr('class', 'nvd3 nv-noData')\n\t                    .attr('dy', '-.7em')\n\t                    .style('text-anchor', 'middle');\n\t\n\t                noDataText\n\t                    .attr('x', margin.left + availableWidth / 2)\n\t                    .attr('y', margin.top + availableHeight / 2)\n\t                    .text(function(d) { return d });\n\t\n\t                return chart;\n\t            } else {\n\t                container.selectAll('.nv-noData').remove();\n\t            }\n\t\n\t            // Setup Scales\n\t            x = boxplot.xScale();\n\t            y = boxplot.yScale().clamp(true);\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = container.selectAll('g.nv-wrap.nv-boxPlotWithAxes').data([data]);\n\t            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-boxPlotWithAxes').append('g');\n\t            var defsEnter = gEnter.append('defs');\n\t            var g = wrap.select('g');\n\t\n\t            gEnter.append('g').attr('class', 'nv-x nv-axis');\n\t            gEnter.append('g').attr('class', 'nv-y nv-axis')\n\t                .append('g').attr('class', 'nv-zeroLine')\n\t                .append('line');\n\t\n\t            gEnter.append('g').attr('class', 'nv-barsWrap');\n\t            g.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            if (rightAlignYAxis) {\n\t                g.select('.nv-y.nv-axis')\n\t                    .attr('transform', 'translate(' + availableWidth + ',0)');\n\t            }\n\t\n\t            // Main Chart Component(s)\n\t            boxplot.width(availableWidth).height(availableHeight);\n\t\n\t            var barsWrap = g.select('.nv-barsWrap')\n\t                .datum(data.filter(function(d) { return !d.disabled }))\n\t\n\t            barsWrap.transition().call(boxplot);\n\t\n\t            defsEnter.append('clipPath')\n\t                .attr('id', 'nv-x-label-clip-' + boxplot.id())\n\t                .append('rect');\n\t\n\t            g.select('#nv-x-label-clip-' + boxplot.id() + ' rect')\n\t                .attr('width', x.rangeBand() * (staggerLabels ? 2 : 1))\n\t                .attr('height', 16)\n\t                .attr('x', -x.rangeBand() / (staggerLabels ? 1 : 2 ));\n\t\n\t            // Setup Axes\n\t            if (showXAxis) {\n\t                xAxis\n\t                    .scale(x)\n\t                    .ticks( nv.utils.calcTicksX(availableWidth/100, data) )\n\t                    .tickSize(-availableHeight, 0);\n\t\n\t                g.select('.nv-x.nv-axis').attr('transform', 'translate(0,' + y.range()[0] + ')');\n\t                g.select('.nv-x.nv-axis').call(xAxis);\n\t\n\t                var xTicks = g.select('.nv-x.nv-axis').selectAll('g');\n\t                if (staggerLabels) {\n\t                    xTicks\n\t                        .selectAll('text')\n\t                        .attr('transform', function(d,i,j) { return 'translate(0,' + (j % 2 === 0 ? '5' : '17') + ')' })\n\t                }\n\t            }\n\t\n\t            if (showYAxis) {\n\t                yAxis\n\t                    .scale(y)\n\t                    .ticks( Math.floor(availableHeight/36) ) // can't use nv.utils.calcTicksY with Object data\n\t                    .tickSize( -availableWidth, 0);\n\t\n\t                g.select('.nv-y.nv-axis').call(yAxis);\n\t            }\n\t\n\t            // Zero line\n\t            g.select('.nv-zeroLine line')\n\t                .attr('x1',0)\n\t                .attr('x2',availableWidth)\n\t                .attr('y1', y(0))\n\t                .attr('y2', y(0))\n\t            ;\n\t\n\t            //============================================================\n\t            // Event Handling/Dispatching (in chart's scope)\n\t            //------------------------------------------------------------\n\t        });\n\t\n\t        renderWatch.renderEnd('nv-boxplot chart immediate');\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Event Handling/Dispatching (out of chart's scope)\n\t    //------------------------------------------------------------\n\t\n\t    boxplot.dispatch.on('elementMouseover.tooltip', function(evt) {\n\t        tooltip.data(evt).hidden(false);\n\t    });\n\t\n\t    boxplot.dispatch.on('elementMouseout.tooltip', function(evt) {\n\t        tooltip.data(evt).hidden(true);\n\t    });\n\t\n\t    boxplot.dispatch.on('elementMousemove.tooltip', function(evt) {\n\t        tooltip();\n\t    });\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    chart.dispatch = dispatch;\n\t    chart.boxplot = boxplot;\n\t    chart.xAxis = xAxis;\n\t    chart.yAxis = yAxis;\n\t    chart.tooltip = tooltip;\n\t\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:      {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:     {get: function(){return height;}, set: function(_){height=_;}},\n\t        staggerLabels: {get: function(){return staggerLabels;}, set: function(_){staggerLabels=_;}},\n\t        showXAxis: {get: function(){return showXAxis;}, set: function(_){showXAxis=_;}},\n\t        showYAxis: {get: function(){return showYAxis;}, set: function(_){showYAxis=_;}},\n\t        tooltipContent:    {get: function(){return tooltip;}, set: function(_){tooltip=_;}},\n\t        noData:    {get: function(){return noData;}, set: function(_){noData=_;}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }},\n\t        duration: {get: function(){return duration;}, set: function(_){\n\t            duration = _;\n\t            renderWatch.reset(duration);\n\t            boxplot.duration(duration);\n\t            xAxis.duration(duration);\n\t            yAxis.duration(duration);\n\t        }},\n\t        color:  {get: function(){return color;}, set: function(_){\n\t            color = nv.utils.getColor(_);\n\t            boxplot.color(color);\n\t        }},\n\t        rightAlignYAxis: {get: function(){return rightAlignYAxis;}, set: function(_){\n\t            rightAlignYAxis = _;\n\t            yAxis.orient( (_) ? 'right' : 'left');\n\t        }}\n\t    });\n\t\n\t    nv.utils.inheritOptions(chart, boxplot);\n\t    nv.utils.initOptions(chart);\n\t\n\t    return chart;\n\t}\n\t\n\t// Chart design based on the recommendations of Stephen Few. Implementation\n\t// based on the work of Clint Ivy, Jamie Love, and Jason Davies.\n\t// http://projects.instantcognition.com/protovis/bulletchart/\n\t\n\tnv.models.bullet = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n\t        , orient = 'left' // TODO top & bottom\n\t        , reverse = false\n\t        , ranges = function(d) { return d.ranges }\n\t        , markers = function(d) { return d.markers ? d.markers : [] }\n\t        , markerLines = function(d) { return d.markerLines ? d.markerLines : [0] }\n\t        , measures = function(d) { return d.measures }\n\t        , rangeLabels = function(d) { return d.rangeLabels ? d.rangeLabels : [] }\n\t        , markerLabels = function(d) { return d.markerLabels ? d.markerLabels : []  }\n\t        , markerLineLabels = function(d) { return d.markerLineLabels ? d.markerLineLabels : []  }\n\t        , measureLabels = function(d) { return d.measureLabels ? d.measureLabels : []  }\n\t        , forceX = [0] // List of numbers to Force into the X scale (ie. 0, or a max / min, etc.)\n\t        , width = 380\n\t        , height = 30\n\t        , container = null\n\t        , tickFormat = null\n\t        , color = nv.utils.getColor(['#1f77b4'])\n\t        , dispatch = d3.dispatch('elementMouseover', 'elementMouseout', 'elementMousemove')\n\t        , defaultRangeLabels = [\"Maximum\", \"Mean\", \"Minimum\"]\n\t        , legacyRangeClassNames = [\"Max\", \"Avg\", \"Min\"]\n\t        , duration = 1000\n\t        ;\n\t\n\t    function sortLabels(labels, values){\n\t        var lz = labels.slice();\n\t        labels.sort(function(a, b){\n\t            var iA = lz.indexOf(a);\n\t            var iB = lz.indexOf(b);\n\t            return d3.descending(values[iA], values[iB]);\n\t        });\n\t    };\n\t\n\t    function chart(selection) {\n\t        selection.each(function(d, i) {\n\t            var availableWidth = width - margin.left - margin.right,\n\t                availableHeight = height - margin.top - margin.bottom;\n\t\n\t            container = d3.select(this);\n\t            nv.utils.initSVG(container);\n\t\n\t            var rangez = ranges.call(this, d, i).slice(),\n\t                markerz = markers.call(this, d, i).slice(),\n\t                markerLinez = markerLines.call(this, d, i).slice(),\n\t                measurez = measures.call(this, d, i).slice(),\n\t                rangeLabelz = rangeLabels.call(this, d, i).slice(),\n\t                markerLabelz = markerLabels.call(this, d, i).slice(),\n\t                markerLineLabelz = markerLineLabels.call(this, d, i).slice(),\n\t                measureLabelz = measureLabels.call(this, d, i).slice();\n\t\n\t            // Sort labels according to their sorted values\n\t            sortLabels(rangeLabelz, rangez);\n\t            sortLabels(markerLabelz, markerz);\n\t            sortLabels(markerLineLabelz, markerLinez);\n\t            sortLabels(measureLabelz, measurez);\n\t\n\t            // sort values descending\n\t            rangez.sort(d3.descending);\n\t            markerz.sort(d3.descending);\n\t            markerLinez.sort(d3.descending);\n\t            measurez.sort(d3.descending);\n\t\n\t            // Setup Scales\n\t            // Compute the new x-scale.\n\t            var x1 = d3.scale.linear()\n\t                .domain( d3.extent(d3.merge([forceX, rangez])) )\n\t                .range(reverse ? [availableWidth, 0] : [0, availableWidth]);\n\t\n\t            // Retrieve the old x-scale, if this is an update.\n\t            var x0 = this.__chart__ || d3.scale.linear()\n\t                .domain([0, Infinity])\n\t                .range(x1.range());\n\t\n\t            // Stash the new scale.\n\t            this.__chart__ = x1;\n\t\n\t            var rangeMin = d3.min(rangez), //rangez[2]\n\t                rangeMax = d3.max(rangez), //rangez[0]\n\t                rangeAvg = rangez[1];\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = container.selectAll('g.nv-wrap.nv-bullet').data([d]);\n\t            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-bullet');\n\t            var gEnter = wrapEnter.append('g');\n\t            var g = wrap.select('g');\n\t\n\t            for(var i=0,il=rangez.length; i<il; i++){\n\t                var rangeClassNames = 'nv-range nv-range'+i;\n\t                if(i <= 2){\n\t                    rangeClassNames = rangeClassNames + ' nv-range'+legacyRangeClassNames[i];\n\t                }\n\t                gEnter.append('rect').attr('class', rangeClassNames);\n\t            }\n\t\n\t            gEnter.append('rect').attr('class', 'nv-measure');\n\t\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            var w0 = function(d) { return Math.abs(x0(d) - x0(0)) }, // TODO: could optimize by precalculating x0(0) and x1(0)\n\t                w1 = function(d) { return Math.abs(x1(d) - x1(0)) };\n\t            var xp0 = function(d) { return d < 0 ? x0(d) : x0(0) },\n\t                xp1 = function(d) { return d < 0 ? x1(d) : x1(0) };\n\t\n\t            for(var i=0,il=rangez.length; i<il; i++){\n\t                var range = rangez[i];\n\t                g.select('rect.nv-range'+i)\n\t                    .datum(range)\n\t                    .attr('height', availableHeight)\n\t                    .transition()\n\t                    .duration(duration)\n\t                    .attr('width', w1(range))\n\t                    .attr('x', xp1(range))\n\t            }\n\t\n\t            g.select('rect.nv-measure')\n\t                .style('fill', color)\n\t                .attr('height', availableHeight / 3)\n\t                .attr('y', availableHeight / 3)\n\t                .on('mouseover', function() {\n\t                    dispatch.elementMouseover({\n\t                        value: measurez[0],\n\t                        label: measureLabelz[0] || 'Current',\n\t                        color: d3.select(this).style(\"fill\")\n\t                    })\n\t                })\n\t                .on('mousemove', function() {\n\t                    dispatch.elementMousemove({\n\t                        value: measurez[0],\n\t                        label: measureLabelz[0] || 'Current',\n\t                        color: d3.select(this).style(\"fill\")\n\t                    })\n\t                })\n\t                .on('mouseout', function() {\n\t                    dispatch.elementMouseout({\n\t                        value: measurez[0],\n\t                        label: measureLabelz[0] || 'Current',\n\t                        color: d3.select(this).style(\"fill\")\n\t                    })\n\t                })\n\t                .transition()\n\t                .duration(duration)\n\t                .attr('width', measurez < 0 ?\n\t                    x1(0) - x1(measurez[0])\n\t                    : x1(measurez[0]) - x1(0))\n\t                .attr('x', xp1(measurez));\n\t\n\t            var h3 =  availableHeight / 6;\n\t\n\t            var markerData = markerz.map( function(marker, index) {\n\t                return {value: marker, label: markerLabelz[index]}\n\t            });\n\t            gEnter\n\t              .selectAll(\"path.nv-markerTriangle\")\n\t              .data(markerData)\n\t              .enter()\n\t              .append('path')\n\t              .attr('class', 'nv-markerTriangle')\n\t              .attr('d', 'M0,' + h3 + 'L' + h3 + ',' + (-h3) + ' ' + (-h3) + ',' + (-h3) + 'Z')\n\t              .on('mouseover', function(d) {\n\t                dispatch.elementMouseover({\n\t                  value: d.value,\n\t                  label: d.label || 'Previous',\n\t                  color: d3.select(this).style(\"fill\"),\n\t                  pos: [x1(d.value), availableHeight/2]\n\t                })\n\t\n\t              })\n\t              .on('mousemove', function(d) {\n\t                  dispatch.elementMousemove({\n\t                      value: d.value,\n\t                      label: d.label || 'Previous',\n\t                      color: d3.select(this).style(\"fill\")\n\t                  })\n\t              })\n\t              .on('mouseout', function(d, i) {\n\t                  dispatch.elementMouseout({\n\t                      value: d.value,\n\t                      label: d.label || 'Previous',\n\t                      color: d3.select(this).style(\"fill\")\n\t                  })\n\t              });\n\t\n\t            g.selectAll(\"path.nv-markerTriangle\")\n\t              .data(markerData)\n\t              .transition()\n\t              .duration(duration)\n\t              .attr('transform', function(d) { return 'translate(' + x1(d.value) + ',' + (availableHeight / 2) + ')' });\n\t\n\t            var markerLinesData = markerLinez.map( function(marker, index) {\n\t                return {value: marker, label: markerLineLabelz[index]}\n\t            });\n\t            gEnter\n\t              .selectAll(\"line.nv-markerLine\")\n\t              .data(markerLinesData)\n\t              .enter()\n\t              .append('line')\n\t              .attr('cursor', '')\n\t              .attr('class', 'nv-markerLine')\n\t              .attr('x1', function(d) { return x1(d.value) })\n\t              .attr('y1', '2')\n\t              .attr('x2', function(d) { return x1(d.value) })\n\t              .attr('y2', availableHeight - 2)\n\t              .on('mouseover', function(d) {\n\t                dispatch.elementMouseover({\n\t                  value: d.value,\n\t                  label: d.label || 'Previous',\n\t                  color: d3.select(this).style(\"fill\"),\n\t                  pos: [x1(d.value), availableHeight/2]\n\t                })\n\t\n\t              })\n\t              .on('mousemove', function(d) {\n\t                  dispatch.elementMousemove({\n\t                      value: d.value,\n\t                      label: d.label || 'Previous',\n\t                      color: d3.select(this).style(\"fill\")\n\t                  })\n\t              })\n\t              .on('mouseout', function(d, i) {\n\t                  dispatch.elementMouseout({\n\t                      value: d.value,\n\t                      label: d.label || 'Previous',\n\t                      color: d3.select(this).style(\"fill\")\n\t                  })\n\t              });\n\t\n\t            g.selectAll(\"line.nv-markerLine\")\n\t              .data(markerLinesData)\n\t              .transition()\n\t              .duration(duration)\n\t              .attr('x1', function(d) { return x1(d.value) })\n\t              .attr('x2', function(d) { return x1(d.value) });\n\t\n\t            wrap.selectAll('.nv-range')\n\t                .on('mouseover', function(d,i) {\n\t                    var label = rangeLabelz[i] || defaultRangeLabels[i];\n\t                    dispatch.elementMouseover({\n\t                        value: d,\n\t                        label: label,\n\t                        color: d3.select(this).style(\"fill\")\n\t                    })\n\t                })\n\t                .on('mousemove', function() {\n\t                    dispatch.elementMousemove({\n\t                        value: measurez[0],\n\t                        label: measureLabelz[0] || 'Previous',\n\t                        color: d3.select(this).style(\"fill\")\n\t                    })\n\t                })\n\t                .on('mouseout', function(d,i) {\n\t                    var label = rangeLabelz[i] || defaultRangeLabels[i];\n\t                    dispatch.elementMouseout({\n\t                        value: d,\n\t                        label: label,\n\t                        color: d3.select(this).style(\"fill\")\n\t                    })\n\t                });\n\t        });\n\t\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    chart.dispatch = dispatch;\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        ranges:      {get: function(){return ranges;}, set: function(_){ranges=_;}}, // ranges (bad, satisfactory, good)\n\t        markers:     {get: function(){return markers;}, set: function(_){markers=_;}}, // markers (previous, goal)\n\t        measures: {get: function(){return measures;}, set: function(_){measures=_;}}, // measures (actual, forecast)\n\t        forceX:      {get: function(){return forceX;}, set: function(_){forceX=_;}},\n\t        width:    {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:    {get: function(){return height;}, set: function(_){height=_;}},\n\t        tickFormat:    {get: function(){return tickFormat;}, set: function(_){tickFormat=_;}},\n\t        duration:    {get: function(){return duration;}, set: function(_){duration=_;}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }},\n\t        orient: {get: function(){return orient;}, set: function(_){ // left, right, top, bottom\n\t            orient = _;\n\t            reverse = orient == 'right' || orient == 'bottom';\n\t        }},\n\t        color:  {get: function(){return color;}, set: function(_){\n\t            color = nv.utils.getColor(_);\n\t        }}\n\t    });\n\t\n\t    nv.utils.initOptions(chart);\n\t    return chart;\n\t};\n\t\n\t\n\t\n\t// Chart design based on the recommendations of Stephen Few. Implementation\n\t// based on the work of Clint Ivy, Jamie Love, and Jason Davies.\n\t// http://projects.instantcognition.com/protovis/bulletchart/\n\tnv.models.bulletChart = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var bullet = nv.models.bullet();\n\t    var tooltip = nv.models.tooltip();\n\t\n\t    var orient = 'left' // TODO top & bottom\n\t        , reverse = false\n\t        , margin = {top: 5, right: 40, bottom: 20, left: 120}\n\t        , ranges = function(d) { return d.ranges }\n\t        , markers = function(d) { return d.markers ? d.markers : [] }\n\t        , measures = function(d) { return d.measures }\n\t        , width = null\n\t        , height = 55\n\t        , tickFormat = null\n\t        , ticks = null\n\t        , noData = null\n\t        , dispatch = d3.dispatch()\n\t        ;\n\t\n\t    tooltip\n\t        .duration(0)\n\t        .headerEnabled(false);\n\t\n\t    function chart(selection) {\n\t        selection.each(function(d, i) {\n\t            var container = d3.select(this);\n\t            nv.utils.initSVG(container);\n\t\n\t            var availableWidth = nv.utils.availableWidth(width, container, margin),\n\t                availableHeight = height - margin.top - margin.bottom,\n\t                that = this;\n\t\n\t            chart.update = function() { chart(selection) };\n\t            chart.container = this;\n\t\n\t            // Display No Data message if there's nothing to show.\n\t            if (!d || !ranges.call(this, d, i)) {\n\t                nv.utils.noData(chart, container)\n\t                return chart;\n\t            } else {\n\t                container.selectAll('.nv-noData').remove();\n\t            }\n\t\n\t            var rangez = ranges.call(this, d, i).slice().sort(d3.descending),\n\t                markerz = markers.call(this, d, i).slice().sort(d3.descending),\n\t                measurez = measures.call(this, d, i).slice().sort(d3.descending);\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = container.selectAll('g.nv-wrap.nv-bulletChart').data([d]);\n\t            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-bulletChart');\n\t            var gEnter = wrapEnter.append('g');\n\t            var g = wrap.select('g');\n\t\n\t            gEnter.append('g').attr('class', 'nv-bulletWrap');\n\t            gEnter.append('g').attr('class', 'nv-titles');\n\t\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            // Compute the new x-scale.\n\t            var x1 = d3.scale.linear()\n\t                .domain([0, Math.max(rangez[0], (markerz[0] || 0), measurez[0])])  // TODO: need to allow forceX and forceY, and xDomain, yDomain\n\t                .range(reverse ? [availableWidth, 0] : [0, availableWidth]);\n\t\n\t            // Retrieve the old x-scale, if this is an update.\n\t            var x0 = this.__chart__ || d3.scale.linear()\n\t                .domain([0, Infinity])\n\t                .range(x1.range());\n\t\n\t            // Stash the new scale.\n\t            this.__chart__ = x1;\n\t\n\t            var w0 = function(d) { return Math.abs(x0(d) - x0(0)) }, // TODO: could optimize by precalculating x0(0) and x1(0)\n\t                w1 = function(d) { return Math.abs(x1(d) - x1(0)) };\n\t\n\t            var title = gEnter.select('.nv-titles').append('g')\n\t                .attr('text-anchor', 'end')\n\t                .attr('transform', 'translate(-6,' + (height - margin.top - margin.bottom) / 2 + ')');\n\t            title.append('text')\n\t                .attr('class', 'nv-title')\n\t                .text(function(d) { return d.title; });\n\t\n\t            title.append('text')\n\t                .attr('class', 'nv-subtitle')\n\t                .attr('dy', '1em')\n\t                .text(function(d) { return d.subtitle; });\n\t\n\t            bullet\n\t                .width(availableWidth)\n\t                .height(availableHeight);\n\t\n\t            var bulletWrap = g.select('.nv-bulletWrap');\n\t            d3.transition(bulletWrap).call(bullet);\n\t\n\t            // Compute the tick format.\n\t            var format = tickFormat || x1.tickFormat( availableWidth / 100 );\n\t\n\t            // Update the tick groups.\n\t            var tick = g.selectAll('g.nv-tick')\n\t                .data(x1.ticks( ticks ? ticks : (availableWidth / 50) ), function(d) {\n\t                    return this.textContent || format(d);\n\t                });\n\t\n\t            // Initialize the ticks with the old scale, x0.\n\t            var tickEnter = tick.enter().append('g')\n\t                .attr('class', 'nv-tick')\n\t                .attr('transform', function(d) { return 'translate(' + x0(d) + ',0)' })\n\t                .style('opacity', 1e-6);\n\t\n\t            tickEnter.append('line')\n\t                .attr('y1', availableHeight)\n\t                .attr('y2', availableHeight * 7 / 6);\n\t\n\t            tickEnter.append('text')\n\t                .attr('text-anchor', 'middle')\n\t                .attr('dy', '1em')\n\t                .attr('y', availableHeight * 7 / 6)\n\t                .text(format);\n\t\n\t            // Transition the updating ticks to the new scale, x1.\n\t            var tickUpdate = d3.transition(tick)\n\t                .transition()\n\t                .duration(bullet.duration())\n\t                .attr('transform', function(d) { return 'translate(' + x1(d) + ',0)' })\n\t                .style('opacity', 1);\n\t\n\t            tickUpdate.select('line')\n\t                .attr('y1', availableHeight)\n\t                .attr('y2', availableHeight * 7 / 6);\n\t\n\t            tickUpdate.select('text')\n\t                .attr('y', availableHeight * 7 / 6);\n\t\n\t            // Transition the exiting ticks to the new scale, x1.\n\t            d3.transition(tick.exit())\n\t                .transition()\n\t                .duration(bullet.duration())\n\t                .attr('transform', function(d) { return 'translate(' + x1(d) + ',0)' })\n\t                .style('opacity', 1e-6)\n\t                .remove();\n\t        });\n\t\n\t        d3.timer.flush();\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Event Handling/Dispatching (out of chart's scope)\n\t    //------------------------------------------------------------\n\t\n\t    bullet.dispatch.on('elementMouseover.tooltip', function(evt) {\n\t        evt['series'] = {\n\t            key: evt.label,\n\t            value: evt.value,\n\t            color: evt.color\n\t        };\n\t        tooltip.data(evt).hidden(false);\n\t    });\n\t\n\t    bullet.dispatch.on('elementMouseout.tooltip', function(evt) {\n\t        tooltip.hidden(true);\n\t    });\n\t\n\t    bullet.dispatch.on('elementMousemove.tooltip', function(evt) {\n\t        tooltip();\n\t    });\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    chart.bullet = bullet;\n\t    chart.dispatch = dispatch;\n\t    chart.tooltip = tooltip;\n\t\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        ranges:      {get: function(){return ranges;}, set: function(_){ranges=_;}}, // ranges (bad, satisfactory, good)\n\t        markers:     {get: function(){return markers;}, set: function(_){markers=_;}}, // markers (previous, goal)\n\t        measures: {get: function(){return measures;}, set: function(_){measures=_;}}, // measures (actual, forecast)\n\t        width:    {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:    {get: function(){return height;}, set: function(_){height=_;}},\n\t        tickFormat:    {get: function(){return tickFormat;}, set: function(_){tickFormat=_;}},\n\t        ticks:    {get: function(){return ticks;}, set: function(_){ticks=_;}},\n\t        noData:    {get: function(){return noData;}, set: function(_){noData=_;}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }},\n\t        orient: {get: function(){return orient;}, set: function(_){ // left, right, top, bottom\n\t            orient = _;\n\t            reverse = orient == 'right' || orient == 'bottom';\n\t        }}\n\t    });\n\t\n\t    nv.utils.inheritOptions(chart, bullet);\n\t    nv.utils.initOptions(chart);\n\t\n\t    return chart;\n\t};\n\t\n\t\n\t\n\tnv.models.candlestickBar = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n\t        , width = null\n\t        , height = null\n\t        , id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n\t        , container\n\t        , x = d3.scale.linear()\n\t        , y = d3.scale.linear()\n\t        , getX = function(d) { return d.x }\n\t        , getY = function(d) { return d.y }\n\t        , getOpen = function(d) { return d.open }\n\t        , getClose = function(d) { return d.close }\n\t        , getHigh = function(d) { return d.high }\n\t        , getLow = function(d) { return d.low }\n\t        , forceX = []\n\t        , forceY = []\n\t        , padData     = false // If true, adds half a data points width to front and back, for lining up a line chart with a bar chart\n\t        , clipEdge = true\n\t        , color = nv.utils.defaultColor()\n\t        , interactive = false\n\t        , xDomain\n\t        , yDomain\n\t        , xRange\n\t        , yRange\n\t        , dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd', 'chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove')\n\t        ;\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    function chart(selection) {\n\t        selection.each(function(data) {\n\t            container = d3.select(this);\n\t            var availableWidth = nv.utils.availableWidth(width, container, margin),\n\t                availableHeight = nv.utils.availableHeight(height, container, margin);\n\t\n\t            nv.utils.initSVG(container);\n\t\n\t            // Width of the candlestick bars.\n\t            var barWidth = (availableWidth / data[0].values.length) * .45;\n\t\n\t            // Setup Scales\n\t            x.domain(xDomain || d3.extent(data[0].values.map(getX).concat(forceX) ));\n\t\n\t            if (padData)\n\t                x.range(xRange || [availableWidth * .5 / data[0].values.length, availableWidth * (data[0].values.length - .5)  / data[0].values.length ]);\n\t            else\n\t                x.range(xRange || [5 + barWidth / 2, availableWidth - barWidth / 2 - 5]);\n\t\n\t            y.domain(yDomain || [\n\t                    d3.min(data[0].values.map(getLow).concat(forceY)),\n\t                    d3.max(data[0].values.map(getHigh).concat(forceY))\n\t                ]\n\t            ).range(yRange || [availableHeight, 0]);\n\t\n\t            // If scale's domain don't have a range, slightly adjust to make one... so a chart can show a single data point\n\t            if (x.domain()[0] === x.domain()[1])\n\t                x.domain()[0] ?\n\t                    x.domain([x.domain()[0] - x.domain()[0] * 0.01, x.domain()[1] + x.domain()[1] * 0.01])\n\t                    : x.domain([-1,1]);\n\t\n\t            if (y.domain()[0] === y.domain()[1])\n\t                y.domain()[0] ?\n\t                    y.domain([y.domain()[0] + y.domain()[0] * 0.01, y.domain()[1] - y.domain()[1] * 0.01])\n\t                    : y.domain([-1,1]);\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = d3.select(this).selectAll('g.nv-wrap.nv-candlestickBar').data([data[0].values]);\n\t            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-candlestickBar');\n\t            var defsEnter = wrapEnter.append('defs');\n\t            var gEnter = wrapEnter.append('g');\n\t            var g = wrap.select('g');\n\t\n\t            gEnter.append('g').attr('class', 'nv-ticks');\n\t\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            container\n\t                .on('click', function(d,i) {\n\t                    dispatch.chartClick({\n\t                        data: d,\n\t                        index: i,\n\t                        pos: d3.event,\n\t                        id: id\n\t                    });\n\t                });\n\t\n\t            defsEnter.append('clipPath')\n\t                .attr('id', 'nv-chart-clip-path-' + id)\n\t                .append('rect');\n\t\n\t            wrap.select('#nv-chart-clip-path-' + id + ' rect')\n\t                .attr('width', availableWidth)\n\t                .attr('height', availableHeight);\n\t\n\t            g   .attr('clip-path', clipEdge ? 'url(#nv-chart-clip-path-' + id + ')' : '');\n\t\n\t            var ticks = wrap.select('.nv-ticks').selectAll('.nv-tick')\n\t                .data(function(d) { return d });\n\t            ticks.exit().remove();\n\t\n\t            var tickGroups = ticks.enter().append('g');\n\t\n\t            // The colors are currently controlled by CSS.\n\t            ticks\n\t                .attr('class', function(d, i, j) { return (getOpen(d, i) > getClose(d, i) ? 'nv-tick negative' : 'nv-tick positive') + ' nv-tick-' + j + '-' + i});\n\t\n\t            var lines = tickGroups.append('line')\n\t                .attr('class', 'nv-candlestick-lines')\n\t                .attr('transform', function(d, i) { return 'translate(' + x(getX(d, i)) + ',0)'; })\n\t                .attr('x1', 0)\n\t                .attr('y1', function(d, i) { return y(getHigh(d, i)); })\n\t                .attr('x2', 0)\n\t                .attr('y2', function(d, i) { return y(getLow(d, i)); });\n\t\n\t            var rects = tickGroups.append('rect')\n\t                .attr('class', 'nv-candlestick-rects nv-bars')\n\t                .attr('transform', function(d, i) {\n\t                    return 'translate(' + (x(getX(d, i)) - barWidth/2) + ','\n\t                    + (y(getY(d, i)) - (getOpen(d, i) > getClose(d, i) ? (y(getClose(d, i)) - y(getOpen(d, i))) : 0))\n\t                    + ')';\n\t                })\n\t                .attr('x', 0)\n\t                .attr('y', 0)\n\t                .attr('width', barWidth)\n\t                .attr('height', function(d, i) {\n\t                    var open = getOpen(d, i);\n\t                    var close = getClose(d, i);\n\t                    return open > close ? y(close) - y(open) : y(open) - y(close);\n\t                });\n\t\n\t            ticks.select('.nv-candlestick-lines').transition()\n\t                .attr('transform', function(d, i) { return 'translate(' + x(getX(d, i)) + ',0)'; })\n\t                .attr('x1', 0)\n\t                .attr('y1', function(d, i) { return y(getHigh(d, i)); })\n\t                .attr('x2', 0)\n\t                .attr('y2', function(d, i) { return y(getLow(d, i)); });\n\t\n\t            ticks.select('.nv-candlestick-rects').transition()\n\t                .attr('transform', function(d, i) {\n\t                    return 'translate(' + (x(getX(d, i)) - barWidth/2) + ','\n\t                    + (y(getY(d, i)) - (getOpen(d, i) > getClose(d, i) ? (y(getClose(d, i)) - y(getOpen(d, i))) : 0))\n\t                    + ')';\n\t                })\n\t                .attr('x', 0)\n\t                .attr('y', 0)\n\t                .attr('width', barWidth)\n\t                .attr('height', function(d, i) {\n\t                    var open = getOpen(d, i);\n\t                    var close = getClose(d, i);\n\t                    return open > close ? y(close) - y(open) : y(open) - y(close);\n\t                });\n\t        });\n\t\n\t        return chart;\n\t    }\n\t\n\t\n\t    //Create methods to allow outside functions to highlight a specific bar.\n\t    chart.highlightPoint = function(pointIndex, isHoverOver) {\n\t        chart.clearHighlights();\n\t        container.select(\".nv-candlestickBar .nv-tick-0-\" + pointIndex)\n\t            .classed(\"hover\", isHoverOver)\n\t        ;\n\t    };\n\t\n\t    chart.clearHighlights = function() {\n\t        container.select(\".nv-candlestickBar .nv-tick.hover\")\n\t            .classed(\"hover\", false)\n\t        ;\n\t    };\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    chart.dispatch = dispatch;\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:    {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:   {get: function(){return height;}, set: function(_){height=_;}},\n\t        xScale:   {get: function(){return x;}, set: function(_){x=_;}},\n\t        yScale:   {get: function(){return y;}, set: function(_){y=_;}},\n\t        xDomain:  {get: function(){return xDomain;}, set: function(_){xDomain=_;}},\n\t        yDomain:  {get: function(){return yDomain;}, set: function(_){yDomain=_;}},\n\t        xRange:   {get: function(){return xRange;}, set: function(_){xRange=_;}},\n\t        yRange:   {get: function(){return yRange;}, set: function(_){yRange=_;}},\n\t        forceX:   {get: function(){return forceX;}, set: function(_){forceX=_;}},\n\t        forceY:   {get: function(){return forceY;}, set: function(_){forceY=_;}},\n\t        padData:  {get: function(){return padData;}, set: function(_){padData=_;}},\n\t        clipEdge: {get: function(){return clipEdge;}, set: function(_){clipEdge=_;}},\n\t        id:       {get: function(){return id;}, set: function(_){id=_;}},\n\t        interactive: {get: function(){return interactive;}, set: function(_){interactive=_;}},\n\t\n\t        x:     {get: function(){return getX;}, set: function(_){getX=_;}},\n\t        y:     {get: function(){return getY;}, set: function(_){getY=_;}},\n\t        open:  {get: function(){return getOpen();}, set: function(_){getOpen=_;}},\n\t        close: {get: function(){return getClose();}, set: function(_){getClose=_;}},\n\t        high:  {get: function(){return getHigh;}, set: function(_){getHigh=_;}},\n\t        low:   {get: function(){return getLow;}, set: function(_){getLow=_;}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    = _.top    != undefined ? _.top    : margin.top;\n\t            margin.right  = _.right  != undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom != undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   != undefined ? _.left   : margin.left;\n\t        }},\n\t        color:  {get: function(){return color;}, set: function(_){\n\t            color = nv.utils.getColor(_);\n\t        }}\n\t    });\n\t\n\t    nv.utils.initOptions(chart);\n\t    return chart;\n\t};\n\t\n\tnv.models.cumulativeLineChart = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var lines = nv.models.line()\n\t        , xAxis = nv.models.axis()\n\t        , yAxis = nv.models.axis()\n\t        , legend = nv.models.legend()\n\t        , controls = nv.models.legend()\n\t        , interactiveLayer = nv.interactiveGuideline()\n\t        , tooltip = nv.models.tooltip()\n\t        ;\n\t\n\t    var margin = {top: 30, right: 30, bottom: 50, left: 60}\n\t        , marginTop = null\n\t        , color = nv.utils.defaultColor()\n\t        , width = null\n\t        , height = null\n\t        , showLegend = true\n\t        , showXAxis = true\n\t        , showYAxis = true\n\t        , rightAlignYAxis = false\n\t        , showControls = true\n\t        , useInteractiveGuideline = false\n\t        , rescaleY = true\n\t        , x //can be accessed via chart.xScale()\n\t        , y //can be accessed via chart.yScale()\n\t        , id = lines.id()\n\t        , state = nv.utils.state()\n\t        , defaultState = null\n\t        , noData = null\n\t        , average = function(d) { return d.average }\n\t        , dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd')\n\t        , transitionDuration = 250\n\t        , duration = 250\n\t        , noErrorCheck = false  //if set to TRUE, will bypass an error check in the indexify function.\n\t        ;\n\t\n\t    state.index = 0;\n\t    state.rescaleY = rescaleY;\n\t\n\t    xAxis.orient('bottom').tickPadding(7);\n\t    yAxis.orient((rightAlignYAxis) ? 'right' : 'left');\n\t\n\t    tooltip.valueFormatter(function(d, i) {\n\t        return yAxis.tickFormat()(d, i);\n\t    }).headerFormatter(function(d, i) {\n\t        return xAxis.tickFormat()(d, i);\n\t    });\n\t\n\t    controls.updateState(false);\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    var dx = d3.scale.linear()\n\t        , index = {i: 0, x: 0}\n\t        , renderWatch = nv.utils.renderWatch(dispatch, duration)\n\t        ;\n\t\n\t    var stateGetter = function(data) {\n\t        return function(){\n\t            return {\n\t                active: data.map(function(d) { return !d.disabled }),\n\t                index: index.i,\n\t                rescaleY: rescaleY\n\t            };\n\t        }\n\t    };\n\t\n\t    var stateSetter = function(data) {\n\t        return function(state) {\n\t            if (state.index !== undefined)\n\t                index.i = state.index;\n\t            if (state.rescaleY !== undefined)\n\t                rescaleY = state.rescaleY;\n\t            if (state.active !== undefined)\n\t                data.forEach(function(series,i) {\n\t                    series.disabled = !state.active[i];\n\t                });\n\t        }\n\t    };\n\t\n\t    function chart(selection) {\n\t        renderWatch.reset();\n\t        renderWatch.models(lines);\n\t        if (showXAxis) renderWatch.models(xAxis);\n\t        if (showYAxis) renderWatch.models(yAxis);\n\t        selection.each(function(data) {\n\t            var container = d3.select(this);\n\t            nv.utils.initSVG(container);\n\t            container.classed('nv-chart-' + id, true);\n\t            var that = this;\n\t\n\t            var availableWidth = nv.utils.availableWidth(width, container, margin),\n\t                availableHeight = nv.utils.availableHeight(height, container, margin);\n\t\n\t            chart.update = function() {\n\t                if (duration === 0)\n\t                    container.call(chart);\n\t                else\n\t                    container.transition().duration(duration).call(chart)\n\t            };\n\t            chart.container = this;\n\t\n\t            state\n\t                .setter(stateSetter(data), chart.update)\n\t                .getter(stateGetter(data))\n\t                .update();\n\t\n\t            // DEPRECATED set state.disableddisabled\n\t            state.disabled = data.map(function(d) { return !!d.disabled });\n\t\n\t            if (!defaultState) {\n\t                var key;\n\t                defaultState = {};\n\t                for (key in state) {\n\t                    if (state[key] instanceof Array)\n\t                        defaultState[key] = state[key].slice(0);\n\t                    else\n\t                        defaultState[key] = state[key];\n\t                }\n\t            }\n\t\n\t            var indexDrag = d3.behavior.drag()\n\t                .on('dragstart', dragStart)\n\t                .on('drag', dragMove)\n\t                .on('dragend', dragEnd);\n\t\n\t\n\t            function dragStart(d,i) {\n\t                d3.select(chart.container)\n\t                    .style('cursor', 'ew-resize');\n\t            }\n\t\n\t            function dragMove(d,i) {\n\t                index.x = d3.event.x;\n\t                index.i = Math.round(dx.invert(index.x));\n\t                updateZero();\n\t            }\n\t\n\t            function dragEnd(d,i) {\n\t                d3.select(chart.container)\n\t                    .style('cursor', 'auto');\n\t\n\t                // update state and send stateChange with new index\n\t                state.index = index.i;\n\t                dispatch.stateChange(state);\n\t            }\n\t\n\t            // Display No Data message if there's nothing to show.\n\t            if (!data || !data.length || !data.filter(function(d) { return d.values.length }).length) {\n\t                nv.utils.noData(chart, container)\n\t                return chart;\n\t            } else {\n\t                container.selectAll('.nv-noData').remove();\n\t            }\n\t\n\t            // Setup Scales\n\t            x = lines.xScale();\n\t            y = lines.yScale();\n\t\n\t            if (!rescaleY) {\n\t                var seriesDomains = data\n\t                    .filter(function(series) { return !series.disabled })\n\t                    .map(function(series,i) {\n\t                        var initialDomain = d3.extent(series.values, lines.y());\n\t\n\t                        //account for series being disabled when losing 95% or more\n\t                        if (initialDomain[0] < -.95) initialDomain[0] = -.95;\n\t\n\t                        return [\n\t                                (initialDomain[0] - initialDomain[1]) / (1 + initialDomain[1]),\n\t                                (initialDomain[1] - initialDomain[0]) / (1 + initialDomain[0])\n\t                        ];\n\t                    });\n\t\n\t                var completeDomain = [\n\t                    d3.min(seriesDomains, function(d) { return d[0] }),\n\t                    d3.max(seriesDomains, function(d) { return d[1] })\n\t                ];\n\t\n\t                lines.yDomain(completeDomain);\n\t            } else {\n\t                lines.yDomain(null);\n\t            }\n\t\n\t            dx.domain([0, data[0].values.length - 1]) //Assumes all series have same length\n\t                .range([0, availableWidth])\n\t                .clamp(true);\n\t\n\t            var data = indexify(index.i, data);\n\t\n\t            // Setup containers and skeleton of chart\n\t            var interactivePointerEvents = (useInteractiveGuideline) ? \"none\" : \"all\";\n\t            var wrap = container.selectAll('g.nv-wrap.nv-cumulativeLine').data([data]);\n\t            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-cumulativeLine').append('g');\n\t            var g = wrap.select('g');\n\t\n\t            gEnter.append('g').attr('class', 'nv-interactive');\n\t            gEnter.append('g').attr('class', 'nv-x nv-axis').style(\"pointer-events\",\"none\");\n\t            gEnter.append('g').attr('class', 'nv-y nv-axis');\n\t            gEnter.append('g').attr('class', 'nv-background');\n\t            gEnter.append('g').attr('class', 'nv-linesWrap').style(\"pointer-events\",interactivePointerEvents);\n\t            gEnter.append('g').attr('class', 'nv-avgLinesWrap').style(\"pointer-events\",\"none\");\n\t            gEnter.append('g').attr('class', 'nv-legendWrap');\n\t            gEnter.append('g').attr('class', 'nv-controlsWrap');\n\t\n\t            // Legend\n\t            if (!showLegend) {\n\t                g.select('.nv-legendWrap').selectAll('*').remove();\n\t            } else {\n\t                legend.width(availableWidth);\n\t\n\t                g.select('.nv-legendWrap')\n\t                    .datum(data)\n\t                    .call(legend);\n\t\n\t                if (!marginTop && legend.height() !== margin.top) {\n\t                    margin.top = legend.height();\n\t                    availableHeight = nv.utils.availableHeight(height, container, margin);\n\t                }\n\t\n\t                g.select('.nv-legendWrap')\n\t                    .attr('transform', 'translate(0,' + (-margin.top) +')')\n\t            }\n\t\n\t            // Controls\n\t            if (!showControls) {\n\t                 g.select('.nv-controlsWrap').selectAll('*').remove();\n\t            } else {\n\t                var controlsData = [\n\t                    { key: 'Re-scale y-axis', disabled: !rescaleY }\n\t                ];\n\t\n\t                controls\n\t                    .width(140)\n\t                    .color(['#444', '#444', '#444'])\n\t                    .rightAlign(false)\n\t                    .margin({top: 5, right: 0, bottom: 5, left: 20})\n\t                ;\n\t\n\t                g.select('.nv-controlsWrap')\n\t                    .datum(controlsData)\n\t                    .attr('transform', 'translate(0,' + (-margin.top) +')')\n\t                    .call(controls);\n\t            }\n\t\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            if (rightAlignYAxis) {\n\t                g.select(\".nv-y.nv-axis\")\n\t                    .attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n\t            }\n\t\n\t            // Show error if series goes below 100%\n\t            var tempDisabled = data.filter(function(d) { return d.tempDisabled });\n\t\n\t            wrap.select('.tempDisabled').remove(); //clean-up and prevent duplicates\n\t            if (tempDisabled.length) {\n\t                wrap.append('text').attr('class', 'tempDisabled')\n\t                    .attr('x', availableWidth / 2)\n\t                    .attr('y', '-.71em')\n\t                    .style('text-anchor', 'end')\n\t                    .text(tempDisabled.map(function(d) { return d.key }).join(', ') + ' values cannot be calculated for this time period.');\n\t            }\n\t\n\t            //Set up interactive layer\n\t            if (useInteractiveGuideline) {\n\t                interactiveLayer\n\t                    .width(availableWidth)\n\t                    .height(availableHeight)\n\t                    .margin({left:margin.left,top:margin.top})\n\t                    .svgContainer(container)\n\t                    .xScale(x);\n\t                wrap.select(\".nv-interactive\").call(interactiveLayer);\n\t            }\n\t\n\t            gEnter.select('.nv-background')\n\t                .append('rect');\n\t\n\t            g.select('.nv-background rect')\n\t                .attr('width', availableWidth)\n\t                .attr('height', availableHeight);\n\t\n\t            lines\n\t                //.x(function(d) { return d.x })\n\t                .y(function(d) { return d.display.y })\n\t                .width(availableWidth)\n\t                .height(availableHeight)\n\t                .color(data.map(function(d,i) {\n\t                    return d.color || color(d, i);\n\t                }).filter(function(d,i) { return !data[i].disabled && !data[i].tempDisabled; }));\n\t\n\t            var linesWrap = g.select('.nv-linesWrap')\n\t                .datum(data.filter(function(d) { return  !d.disabled && !d.tempDisabled }));\n\t\n\t            linesWrap.call(lines);\n\t\n\t            //Store a series index number in the data array.\n\t            data.forEach(function(d,i) {\n\t                d.seriesIndex = i;\n\t            });\n\t\n\t            var avgLineData = data.filter(function(d) {\n\t                return !d.disabled && !!average(d);\n\t            });\n\t\n\t            var avgLines = g.select(\".nv-avgLinesWrap\").selectAll(\"line\")\n\t                .data(avgLineData, function(d) { return d.key; });\n\t\n\t            var getAvgLineY = function(d) {\n\t                //If average lines go off the svg element, clamp them to the svg bounds.\n\t                var yVal = y(average(d));\n\t                if (yVal < 0) return 0;\n\t                if (yVal > availableHeight) return availableHeight;\n\t                return yVal;\n\t            };\n\t\n\t            avgLines.enter()\n\t                .append('line')\n\t                .style('stroke-width',2)\n\t                .style('stroke-dasharray','10,10')\n\t                .style('stroke',function (d,i) {\n\t                    return lines.color()(d,d.seriesIndex);\n\t                })\n\t                .attr('x1',0)\n\t                .attr('x2',availableWidth)\n\t                .attr('y1', getAvgLineY)\n\t                .attr('y2', getAvgLineY);\n\t\n\t            avgLines\n\t                .style('stroke-opacity',function(d){\n\t                    //If average lines go offscreen, make them transparent\n\t                    var yVal = y(average(d));\n\t                    if (yVal < 0 || yVal > availableHeight) return 0;\n\t                    return 1;\n\t                })\n\t                .attr('x1',0)\n\t                .attr('x2',availableWidth)\n\t                .attr('y1', getAvgLineY)\n\t                .attr('y2', getAvgLineY);\n\t\n\t            avgLines.exit().remove();\n\t\n\t            //Create index line\n\t            var indexLine = linesWrap.selectAll('.nv-indexLine')\n\t                .data([index]);\n\t            indexLine.enter().append('rect').attr('class', 'nv-indexLine')\n\t                .attr('width', 3)\n\t                .attr('x', -2)\n\t                .attr('fill', 'red')\n\t                .attr('fill-opacity', .5)\n\t                .style(\"pointer-events\",\"all\")\n\t                .call(indexDrag);\n\t\n\t            indexLine\n\t                .attr('transform', function(d) { return 'translate(' + dx(d.i) + ',0)' })\n\t                .attr('height', availableHeight);\n\t\n\t            // Setup Axes\n\t            if (showXAxis) {\n\t                xAxis\n\t                    .scale(x)\n\t                    ._ticks( nv.utils.calcTicksX(availableWidth/70, data) )\n\t                    .tickSize(-availableHeight, 0);\n\t\n\t                g.select('.nv-x.nv-axis')\n\t                    .attr('transform', 'translate(0,' + y.range()[0] + ')');\n\t                g.select('.nv-x.nv-axis')\n\t                    .call(xAxis);\n\t            }\n\t\n\t            if (showYAxis) {\n\t                yAxis\n\t                    .scale(y)\n\t                    ._ticks( nv.utils.calcTicksY(availableHeight/36, data) )\n\t                    .tickSize( -availableWidth, 0);\n\t\n\t                g.select('.nv-y.nv-axis')\n\t                    .call(yAxis);\n\t            }\n\t\n\t            //============================================================\n\t            // Event Handling/Dispatching (in chart's scope)\n\t            //------------------------------------------------------------\n\t\n\t            function updateZero() {\n\t                indexLine\n\t                    .data([index]);\n\t\n\t                //When dragging the index line, turn off line transitions.\n\t                // Then turn them back on when done dragging.\n\t                var oldDuration = chart.duration();\n\t                chart.duration(0);\n\t                chart.update();\n\t                chart.duration(oldDuration);\n\t            }\n\t\n\t            g.select('.nv-background rect')\n\t                .on('click', function() {\n\t                    index.x = d3.mouse(this)[0];\n\t                    index.i = Math.round(dx.invert(index.x));\n\t\n\t                    // update state and send stateChange with new index\n\t                    state.index = index.i;\n\t                    dispatch.stateChange(state);\n\t\n\t                    updateZero();\n\t                });\n\t\n\t            lines.dispatch.on('elementClick', function(e) {\n\t                index.i = e.pointIndex;\n\t                index.x = dx(index.i);\n\t\n\t                // update state and send stateChange with new index\n\t                state.index = index.i;\n\t                dispatch.stateChange(state);\n\t\n\t                updateZero();\n\t            });\n\t\n\t            controls.dispatch.on('legendClick', function(d,i) {\n\t                d.disabled = !d.disabled;\n\t                rescaleY = !d.disabled;\n\t\n\t                state.rescaleY = rescaleY;\n\t                dispatch.stateChange(state);\n\t                chart.update();\n\t            });\n\t\n\t            legend.dispatch.on('stateChange', function(newState) {\n\t                for (var key in newState)\n\t                    state[key] = newState[key];\n\t                dispatch.stateChange(state);\n\t                chart.update();\n\t            });\n\t\n\t            interactiveLayer.dispatch.on('elementMousemove', function(e) {\n\t                lines.clearHighlights();\n\t                var singlePoint, pointIndex, pointXLocation, allData = [];\n\t\n\t                data\n\t                    .filter(function(series, i) {\n\t                        series.seriesIndex = i;\n\t                        return !series.disabled;\n\t                    })\n\t                    .forEach(function(series,i) {\n\t                        pointIndex = nv.interactiveBisect(series.values, e.pointXValue, chart.x());\n\t                        lines.highlightPoint(i, pointIndex, true);\n\t                        var point = series.values[pointIndex];\n\t                        if (typeof point === 'undefined') return;\n\t                        if (typeof singlePoint === 'undefined') singlePoint = point;\n\t                        if (typeof pointXLocation === 'undefined') pointXLocation = chart.xScale()(chart.x()(point,pointIndex));\n\t                        allData.push({\n\t                            key: series.key,\n\t                            value: chart.y()(point, pointIndex),\n\t                            color: color(series,series.seriesIndex)\n\t                        });\n\t                    });\n\t\n\t                //Highlight the tooltip entry based on which point the mouse is closest to.\n\t                if (allData.length > 2) {\n\t                    var yValue = chart.yScale().invert(e.mouseY);\n\t                    var domainExtent = Math.abs(chart.yScale().domain()[0] - chart.yScale().domain()[1]);\n\t                    var threshold = 0.03 * domainExtent;\n\t                    var indexToHighlight = nv.nearestValueIndex(allData.map(function(d){return d.value}),yValue,threshold);\n\t                    if (indexToHighlight !== null)\n\t                        allData[indexToHighlight].highlight = true;\n\t                }\n\t\n\t                var xValue = xAxis.tickFormat()(chart.x()(singlePoint,pointIndex), pointIndex);\n\t                interactiveLayer.tooltip\n\t                    .valueFormatter(function(d,i) {\n\t                        return yAxis.tickFormat()(d);\n\t                    })\n\t                    .data(\n\t                    {\n\t                        value: xValue,\n\t                        series: allData\n\t                    }\n\t                )();\n\t\n\t                interactiveLayer.renderGuideLine(pointXLocation);\n\t            });\n\t\n\t            interactiveLayer.dispatch.on(\"elementMouseout\",function(e) {\n\t                lines.clearHighlights();\n\t            });\n\t\n\t            // Update chart from a state object passed to event handler\n\t            dispatch.on('changeState', function(e) {\n\t                if (typeof e.disabled !== 'undefined') {\n\t                    data.forEach(function(series,i) {\n\t                        series.disabled = e.disabled[i];\n\t                    });\n\t\n\t                    state.disabled = e.disabled;\n\t                }\n\t\n\t                if (typeof e.index !== 'undefined') {\n\t                    index.i = e.index;\n\t                    index.x = dx(index.i);\n\t\n\t                    state.index = e.index;\n\t\n\t                    indexLine\n\t                        .data([index]);\n\t                }\n\t\n\t                if (typeof e.rescaleY !== 'undefined') {\n\t                    rescaleY = e.rescaleY;\n\t                }\n\t\n\t                chart.update();\n\t            });\n\t\n\t        });\n\t\n\t        renderWatch.renderEnd('cumulativeLineChart immediate');\n\t\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Event Handling/Dispatching (out of chart's scope)\n\t    //------------------------------------------------------------\n\t\n\t    lines.dispatch.on('elementMouseover.tooltip', function(evt) {\n\t        var point = {\n\t            x: chart.x()(evt.point),\n\t            y: chart.y()(evt.point),\n\t            color: evt.point.color\n\t        };\n\t        evt.point = point;\n\t        tooltip.data(evt).hidden(false);\n\t    });\n\t\n\t    lines.dispatch.on('elementMouseout.tooltip', function(evt) {\n\t        tooltip.hidden(true)\n\t    });\n\t\n\t    //============================================================\n\t    // Functions\n\t    //------------------------------------------------------------\n\t\n\t    var indexifyYGetter = null;\n\t    /* Normalize the data according to an index point. */\n\t    function indexify(idx, data) {\n\t        if (!indexifyYGetter) indexifyYGetter = lines.y();\n\t        return data.map(function(line, i) {\n\t            if (!line.values) {\n\t                return line;\n\t            }\n\t            var indexValue = line.values[idx];\n\t            if (indexValue == null) {\n\t                return line;\n\t            }\n\t            var v = indexifyYGetter(indexValue, idx);\n\t\n\t            //TODO: implement check below, and disable series if series loses 100% or more cause divide by 0 issue\n\t            if (v < -.95 && !noErrorCheck) {\n\t                //if a series loses more than 100%, calculations fail.. anything close can cause major distortion (but is mathematically correct till it hits 100)\n\t\n\t                line.tempDisabled = true;\n\t                return line;\n\t            }\n\t\n\t            line.tempDisabled = false;\n\t\n\t            line.values = line.values.map(function(point, pointIndex) {\n\t                point.display = {'y': (indexifyYGetter(point, pointIndex) - v) / (1 + v) };\n\t                return point;\n\t            });\n\t\n\t            return line;\n\t        })\n\t    }\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    // expose chart's sub-components\n\t    chart.dispatch = dispatch;\n\t    chart.lines = lines;\n\t    chart.legend = legend;\n\t    chart.controls = controls;\n\t    chart.xAxis = xAxis;\n\t    chart.yAxis = yAxis;\n\t    chart.interactiveLayer = interactiveLayer;\n\t    chart.state = state;\n\t    chart.tooltip = tooltip;\n\t\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:      {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:     {get: function(){return height;}, set: function(_){height=_;}},\n\t        rescaleY:     {get: function(){return rescaleY;}, set: function(_){rescaleY=_;}},\n\t        showControls:     {get: function(){return showControls;}, set: function(_){showControls=_;}},\n\t        showLegend: {get: function(){return showLegend;}, set: function(_){showLegend=_;}},\n\t        average: {get: function(){return average;}, set: function(_){average=_;}},\n\t        defaultState:    {get: function(){return defaultState;}, set: function(_){defaultState=_;}},\n\t        noData:    {get: function(){return noData;}, set: function(_){noData=_;}},\n\t        showXAxis:    {get: function(){return showXAxis;}, set: function(_){showXAxis=_;}},\n\t        showYAxis:    {get: function(){return showYAxis;}, set: function(_){showYAxis=_;}},\n\t        noErrorCheck:    {get: function(){return noErrorCheck;}, set: function(_){noErrorCheck=_;}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            if (_.top !== undefined) {\n\t                margin.top = _.top;\n\t                marginTop = _.top;\n\t            }\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }},\n\t        color:  {get: function(){return color;}, set: function(_){\n\t            color = nv.utils.getColor(_);\n\t            legend.color(color);\n\t        }},\n\t        useInteractiveGuideline: {get: function(){return useInteractiveGuideline;}, set: function(_){\n\t            useInteractiveGuideline = _;\n\t            if (_ === true) {\n\t                chart.interactive(false);\n\t                chart.useVoronoi(false);\n\t            }\n\t        }},\n\t        rightAlignYAxis: {get: function(){return rightAlignYAxis;}, set: function(_){\n\t            rightAlignYAxis = _;\n\t            yAxis.orient( (_) ? 'right' : 'left');\n\t        }},\n\t        duration:    {get: function(){return duration;}, set: function(_){\n\t            duration = _;\n\t            lines.duration(duration);\n\t            xAxis.duration(duration);\n\t            yAxis.duration(duration);\n\t            renderWatch.reset(duration);\n\t        }}\n\t    });\n\t\n\t    nv.utils.inheritOptions(chart, lines);\n\t    nv.utils.initOptions(chart);\n\t\n\t    return chart;\n\t};\n\t//TODO: consider deprecating by adding necessary features to multiBar model\n\tnv.models.discreteBar = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n\t        , width = 960\n\t        , height = 500\n\t        , id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n\t        , container\n\t        , x = d3.scale.ordinal()\n\t        , y = d3.scale.linear()\n\t        , getX = function(d) { return d.x }\n\t        , getY = function(d) { return d.y }\n\t        , forceY = [0] // 0 is forced by default.. this makes sense for the majority of bar graphs... user can always do chart.forceY([]) to remove\n\t        , color = nv.utils.defaultColor()\n\t        , showValues = false\n\t        , valueFormat = d3.format(',.2f')\n\t        , xDomain\n\t        , yDomain\n\t        , xRange\n\t        , yRange\n\t        , dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd')\n\t        , rectClass = 'discreteBar'\n\t        , duration = 250\n\t        ;\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    var x0, y0;\n\t    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\t\n\t    function chart(selection) {\n\t        renderWatch.reset();\n\t        selection.each(function(data) {\n\t            var availableWidth = width - margin.left - margin.right,\n\t                availableHeight = height - margin.top - margin.bottom;\n\t\n\t            container = d3.select(this);\n\t            nv.utils.initSVG(container);\n\t\n\t            //add series index to each data point for reference\n\t            data.forEach(function(series, i) {\n\t                series.values.forEach(function(point) {\n\t                    point.series = i;\n\t                });\n\t            });\n\t\n\t            // Setup Scales\n\t            // remap and flatten the data for use in calculating the scales' domains\n\t            var seriesData = (xDomain && yDomain) ? [] : // if we know xDomain and yDomain, no need to calculate\n\t                data.map(function(d) {\n\t                    return d.values.map(function(d,i) {\n\t                        return { x: getX(d,i), y: getY(d,i), y0: d.y0 }\n\t                    })\n\t                });\n\t\n\t            x   .domain(xDomain || d3.merge(seriesData).map(function(d) { return d.x }))\n\t                .rangeBands(xRange || [0, availableWidth], .1);\n\t            y   .domain(yDomain || d3.extent(d3.merge(seriesData).map(function(d) { return d.y }).concat(forceY)));\n\t\n\t            // If showValues, pad the Y axis range to account for label height\n\t            if (showValues) y.range(yRange || [availableHeight - (y.domain()[0] < 0 ? 12 : 0), y.domain()[1] > 0 ? 12 : 0]);\n\t            else y.range(yRange || [availableHeight, 0]);\n\t\n\t            //store old scales if they exist\n\t            x0 = x0 || x;\n\t            y0 = y0 || y.copy().range([y(0),y(0)]);\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = container.selectAll('g.nv-wrap.nv-discretebar').data([data]);\n\t            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-discretebar');\n\t            var gEnter = wrapEnter.append('g');\n\t            var g = wrap.select('g');\n\t\n\t            gEnter.append('g').attr('class', 'nv-groups');\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            //TODO: by definition, the discrete bar should not have multiple groups, will modify/remove later\n\t            var groups = wrap.select('.nv-groups').selectAll('.nv-group')\n\t                .data(function(d) { return d }, function(d) { return d.key });\n\t            groups.enter().append('g')\n\t                .style('stroke-opacity', 1e-6)\n\t                .style('fill-opacity', 1e-6);\n\t            groups.exit()\n\t                .watchTransition(renderWatch, 'discreteBar: exit groups')\n\t                .style('stroke-opacity', 1e-6)\n\t                .style('fill-opacity', 1e-6)\n\t                .remove();\n\t            groups\n\t                .attr('class', function(d,i) { return 'nv-group nv-series-' + i })\n\t                .classed('hover', function(d) { return d.hover });\n\t            groups\n\t                .watchTransition(renderWatch, 'discreteBar: groups')\n\t                .style('stroke-opacity', 1)\n\t                .style('fill-opacity', .75);\n\t\n\t            var bars = groups.selectAll('g.nv-bar')\n\t                .data(function(d) { return d.values });\n\t            bars.exit().remove();\n\t\n\t            var barsEnter = bars.enter().append('g')\n\t                .attr('transform', function(d,i,j) {\n\t                    return 'translate(' + (x(getX(d,i)) + x.rangeBand() * .05 ) + ', ' + y(0) + ')'\n\t                })\n\t                .on('mouseover', function(d,i) { //TODO: figure out why j works above, but not here\n\t                    d3.select(this).classed('hover', true);\n\t                    dispatch.elementMouseover({\n\t                        data: d,\n\t                        index: i,\n\t                        color: d3.select(this).style(\"fill\")\n\t                    });\n\t                })\n\t                .on('mouseout', function(d,i) {\n\t                    d3.select(this).classed('hover', false);\n\t                    dispatch.elementMouseout({\n\t                        data: d,\n\t                        index: i,\n\t                        color: d3.select(this).style(\"fill\")\n\t                    });\n\t                })\n\t                .on('mousemove', function(d,i) {\n\t                    dispatch.elementMousemove({\n\t                        data: d,\n\t                        index: i,\n\t                        color: d3.select(this).style(\"fill\")\n\t                    });\n\t                })\n\t                .on('click', function(d,i) {\n\t                    var element = this;\n\t                    dispatch.elementClick({\n\t                        data: d,\n\t                        index: i,\n\t                        color: d3.select(this).style(\"fill\"),\n\t                        event: d3.event,\n\t                        element: element\n\t                    });\n\t                    d3.event.stopPropagation();\n\t                })\n\t                .on('dblclick', function(d,i) {\n\t                    dispatch.elementDblClick({\n\t                        data: d,\n\t                        index: i,\n\t                        color: d3.select(this).style(\"fill\")\n\t                    });\n\t                    d3.event.stopPropagation();\n\t                });\n\t\n\t            barsEnter.append('rect')\n\t                .attr('height', 0)\n\t                .attr('width', x.rangeBand() * .9 / data.length )\n\t\n\t            if (showValues) {\n\t                barsEnter.append('text')\n\t                    .attr('text-anchor', 'middle')\n\t                ;\n\t\n\t                bars.select('text')\n\t                    .text(function(d,i) { return valueFormat(getY(d,i)) })\n\t                    .watchTransition(renderWatch, 'discreteBar: bars text')\n\t                    .attr('x', x.rangeBand() * .9 / 2)\n\t                    .attr('y', function(d,i) { return getY(d,i) < 0 ? y(getY(d,i)) - y(0) + 12 : -4 })\n\t\n\t                ;\n\t            } else {\n\t                bars.selectAll('text').remove();\n\t            }\n\t\n\t            bars\n\t                .attr('class', function(d,i) { return getY(d,i) < 0 ? 'nv-bar negative' : 'nv-bar positive' })\n\t                .style('fill', function(d,i) { return d.color || color(d,i) })\n\t                .style('stroke', function(d,i) { return d.color || color(d,i) })\n\t                .select('rect')\n\t                .attr('class', rectClass)\n\t                .watchTransition(renderWatch, 'discreteBar: bars rect')\n\t                .attr('width', x.rangeBand() * .9 / data.length);\n\t            bars.watchTransition(renderWatch, 'discreteBar: bars')\n\t                //.delay(function(d,i) { return i * 1200 / data[0].values.length })\n\t                .attr('transform', function(d,i) {\n\t                    var left = x(getX(d,i)) + x.rangeBand() * .05,\n\t                        top = getY(d,i) < 0 ?\n\t                            y(0) :\n\t                                y(0) - y(getY(d,i)) < 1 ?\n\t                            y(0) - 1 : //make 1 px positive bars show up above y=0\n\t                            y(getY(d,i));\n\t\n\t                    return 'translate(' + left + ', ' + top + ')'\n\t                })\n\t                .select('rect')\n\t                .attr('height', function(d,i) {\n\t                    return  Math.max(Math.abs(y(getY(d,i)) - y(0)), 1)\n\t                });\n\t\n\t\n\t            //store old scales for use in transitions on update\n\t            x0 = x.copy();\n\t            y0 = y.copy();\n\t\n\t        });\n\t\n\t        renderWatch.renderEnd('discreteBar immediate');\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    chart.dispatch = dispatch;\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:   {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:  {get: function(){return height;}, set: function(_){height=_;}},\n\t        forceY:  {get: function(){return forceY;}, set: function(_){forceY=_;}},\n\t        showValues: {get: function(){return showValues;}, set: function(_){showValues=_;}},\n\t        x:       {get: function(){return getX;}, set: function(_){getX=_;}},\n\t        y:       {get: function(){return getY;}, set: function(_){getY=_;}},\n\t        xScale:  {get: function(){return x;}, set: function(_){x=_;}},\n\t        yScale:  {get: function(){return y;}, set: function(_){y=_;}},\n\t        xDomain: {get: function(){return xDomain;}, set: function(_){xDomain=_;}},\n\t        yDomain: {get: function(){return yDomain;}, set: function(_){yDomain=_;}},\n\t        xRange:  {get: function(){return xRange;}, set: function(_){xRange=_;}},\n\t        yRange:  {get: function(){return yRange;}, set: function(_){yRange=_;}},\n\t        valueFormat:    {get: function(){return valueFormat;}, set: function(_){valueFormat=_;}},\n\t        id:          {get: function(){return id;}, set: function(_){id=_;}},\n\t        rectClass: {get: function(){return rectClass;}, set: function(_){rectClass=_;}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }},\n\t        color:  {get: function(){return color;}, set: function(_){\n\t            color = nv.utils.getColor(_);\n\t        }},\n\t        duration: {get: function(){return duration;}, set: function(_){\n\t            duration = _;\n\t            renderWatch.reset(duration);\n\t        }}\n\t    });\n\t\n\t    nv.utils.initOptions(chart);\n\t\n\t    return chart;\n\t};\n\t\n\tnv.models.discreteBarChart = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var discretebar = nv.models.discreteBar()\n\t        , xAxis = nv.models.axis()\n\t        , yAxis = nv.models.axis()\n\t\t, legend = nv.models.legend()\n\t        , tooltip = nv.models.tooltip()\n\t        ;\n\t\n\t    var margin = {top: 15, right: 10, bottom: 50, left: 60}\n\t        , marginTop = null\n\t        , width = null\n\t        , height = null\n\t        , color = nv.utils.getColor()\n\t\t, showLegend = false\n\t        , showXAxis = true\n\t        , showYAxis = true\n\t        , rightAlignYAxis = false\n\t        , staggerLabels = false\n\t        , wrapLabels = false\n\t        , rotateLabels = 0\n\t        , x\n\t        , y\n\t        , noData = null\n\t        , dispatch = d3.dispatch('beforeUpdate','renderEnd')\n\t        , duration = 250\n\t        ;\n\t\n\t    xAxis\n\t        .orient('bottom')\n\t        .showMaxMin(false)\n\t        .tickFormat(function(d) { return d })\n\t    ;\n\t    yAxis\n\t        .orient((rightAlignYAxis) ? 'right' : 'left')\n\t        .tickFormat(d3.format(',.1f'))\n\t    ;\n\t\n\t    tooltip\n\t        .duration(0)\n\t        .headerEnabled(false)\n\t        .valueFormatter(function(d, i) {\n\t            return yAxis.tickFormat()(d, i);\n\t        })\n\t        .keyFormatter(function(d, i) {\n\t            return xAxis.tickFormat()(d, i);\n\t        });\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\t\n\t    function chart(selection) {\n\t        renderWatch.reset();\n\t        renderWatch.models(discretebar);\n\t        if (showXAxis) renderWatch.models(xAxis);\n\t        if (showYAxis) renderWatch.models(yAxis);\n\t\n\t        selection.each(function(data) {\n\t            var container = d3.select(this),\n\t                that = this;\n\t            nv.utils.initSVG(container);\n\t            var availableWidth = nv.utils.availableWidth(width, container, margin),\n\t                availableHeight = nv.utils.availableHeight(height, container, margin);\n\t\n\t            chart.update = function() {\n\t                dispatch.beforeUpdate();\n\t                container.transition().duration(duration).call(chart);\n\t            };\n\t            chart.container = this;\n\t\n\t            // Display No Data message if there's nothing to show.\n\t            if (!data || !data.length || !data.filter(function(d) { return d.values.length }).length) {\n\t                nv.utils.noData(chart, container);\n\t                return chart;\n\t            } else {\n\t                container.selectAll('.nv-noData').remove();\n\t            }\n\t\n\t            // Setup Scales\n\t            x = discretebar.xScale();\n\t            y = discretebar.yScale().clamp(true);\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = container.selectAll('g.nv-wrap.nv-discreteBarWithAxes').data([data]);\n\t            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-discreteBarWithAxes').append('g');\n\t            var defsEnter = gEnter.append('defs');\n\t            var g = wrap.select('g');\n\t\n\t            gEnter.append('g').attr('class', 'nv-x nv-axis');\n\t            gEnter.append('g').attr('class', 'nv-y nv-axis')\n\t                .append('g').attr('class', 'nv-zeroLine')\n\t                .append('line');\n\t\n\t            gEnter.append('g').attr('class', 'nv-barsWrap');\n\t\t    gEnter.append('g').attr('class', 'nv-legendWrap');\n\t\n\t            g.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            // Legend\n\t            if (!showLegend) {\n\t                g.select('.nv-legendWrap').selectAll('*').remove();\n\t            } else {\n\t                legend.width(availableWidth);\n\t\n\t                g.select('.nv-legendWrap')\n\t                    .datum(data)\n\t                    .call(legend);\n\t\n\t                if (!marginTop && legend.height() !== margin.top) {\n\t                    margin.top = legend.height();\n\t                    availableHeight = nv.utils.availableHeight(height, container, margin);\n\t                }\n\t\n\t                wrap.select('.nv-legendWrap')\n\t                    .attr('transform', 'translate(0,' + (-margin.top) +')')\n\t            }\n\t\n\t            if (rightAlignYAxis) {\n\t                g.select(\".nv-y.nv-axis\")\n\t                    .attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n\t            }\n\t\n\t            // Main Chart Component(s)\n\t            discretebar\n\t                .width(availableWidth)\n\t                .height(availableHeight);\n\t\n\t            var barsWrap = g.select('.nv-barsWrap')\n\t                .datum(data.filter(function(d) { return !d.disabled }));\n\t\n\t            barsWrap.transition().call(discretebar);\n\t\n\t\n\t            defsEnter.append('clipPath')\n\t                .attr('id', 'nv-x-label-clip-' + discretebar.id())\n\t                .append('rect');\n\t\n\t            g.select('#nv-x-label-clip-' + discretebar.id() + ' rect')\n\t                .attr('width', x.rangeBand() * (staggerLabels ? 2 : 1))\n\t                .attr('height', 16)\n\t                .attr('x', -x.rangeBand() / (staggerLabels ? 1 : 2 ));\n\t\n\t            // Setup Axes\n\t            if (showXAxis) {\n\t                xAxis\n\t                    .scale(x)\n\t                    ._ticks( nv.utils.calcTicksX(availableWidth/100, data) )\n\t                    .tickSize(-availableHeight, 0);\n\t\n\t                g.select('.nv-x.nv-axis')\n\t                    .attr('transform', 'translate(0,' + (y.range()[0] + ((discretebar.showValues() && y.domain()[0] < 0) ? 16 : 0)) + ')');\n\t                g.select('.nv-x.nv-axis').call(xAxis);\n\t\n\t                var xTicks = g.select('.nv-x.nv-axis').selectAll('g');\n\t                if (staggerLabels) {\n\t                    xTicks\n\t                        .selectAll('text')\n\t                        .attr('transform', function(d,i,j) { return 'translate(0,' + (j % 2 == 0 ? '5' : '17') + ')' })\n\t                }\n\t\n\t                if (rotateLabels) {\n\t                    xTicks\n\t                        .selectAll('.tick text')\n\t                        .attr('transform', 'rotate(' + rotateLabels + ' 0,0)')\n\t                        .style('text-anchor', rotateLabels > 0 ? 'start' : 'end');\n\t                }\n\t\n\t                if (wrapLabels) {\n\t                    g.selectAll('.tick text')\n\t                        .call(nv.utils.wrapTicks, chart.xAxis.rangeBand())\n\t                }\n\t            }\n\t\n\t            if (showYAxis) {\n\t                yAxis\n\t                    .scale(y)\n\t                    ._ticks( nv.utils.calcTicksY(availableHeight/36, data) )\n\t                    .tickSize( -availableWidth, 0);\n\t\n\t                g.select('.nv-y.nv-axis').call(yAxis);\n\t            }\n\t\n\t            // Zero line\n\t            g.select(\".nv-zeroLine line\")\n\t                .attr(\"x1\",0)\n\t                .attr(\"x2\",(rightAlignYAxis) ? -availableWidth : availableWidth)\n\t                .attr(\"y1\", y(0))\n\t                .attr(\"y2\", y(0))\n\t            ;\n\t        });\n\t\n\t        renderWatch.renderEnd('discreteBar chart immediate');\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Event Handling/Dispatching (out of chart's scope)\n\t    //------------------------------------------------------------\n\t\n\t    discretebar.dispatch.on('elementMouseover.tooltip', function(evt) {\n\t        evt['series'] = {\n\t            key: chart.x()(evt.data),\n\t            value: chart.y()(evt.data),\n\t            color: evt.color\n\t        };\n\t        tooltip.data(evt).hidden(false);\n\t    });\n\t\n\t    discretebar.dispatch.on('elementMouseout.tooltip', function(evt) {\n\t        tooltip.hidden(true);\n\t    });\n\t\n\t    discretebar.dispatch.on('elementMousemove.tooltip', function(evt) {\n\t        tooltip();\n\t    });\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    chart.dispatch = dispatch;\n\t    chart.discretebar = discretebar;\n\t    chart.legend = legend;\n\t    chart.xAxis = xAxis;\n\t    chart.yAxis = yAxis;\n\t    chart.tooltip = tooltip;\n\t\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:      {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:     {get: function(){return height;}, set: function(_){height=_;}},\n\t\tshowLegend: {get: function(){return showLegend;}, set: function(_){showLegend=_;}},\n\t        staggerLabels: {get: function(){return staggerLabels;}, set: function(_){staggerLabels=_;}},\n\t        rotateLabels:  {get: function(){return rotateLabels;}, set: function(_){rotateLabels=_;}},\n\t        wrapLabels:  {get: function(){return wrapLabels;}, set: function(_){wrapLabels=!!_;}},\n\t        showXAxis: {get: function(){return showXAxis;}, set: function(_){showXAxis=_;}},\n\t        showYAxis: {get: function(){return showYAxis;}, set: function(_){showYAxis=_;}},\n\t        noData:    {get: function(){return noData;}, set: function(_){noData=_;}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            if (_.top !== undefined) {\n\t                margin.top = _.top;\n\t                marginTop = _.top;\n\t            }\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }},\n\t        duration: {get: function(){return duration;}, set: function(_){\n\t            duration = _;\n\t            renderWatch.reset(duration);\n\t            discretebar.duration(duration);\n\t            xAxis.duration(duration);\n\t            yAxis.duration(duration);\n\t        }},\n\t        color:  {get: function(){return color;}, set: function(_){\n\t            color = nv.utils.getColor(_);\n\t            discretebar.color(color);\n\t\t    legend.color(color);\n\t        }},\n\t        rightAlignYAxis: {get: function(){return rightAlignYAxis;}, set: function(_){\n\t            rightAlignYAxis = _;\n\t            yAxis.orient( (_) ? 'right' : 'left');\n\t        }}\n\t    });\n\t\n\t    nv.utils.inheritOptions(chart, discretebar);\n\t    nv.utils.initOptions(chart);\n\t\n\t    return chart;\n\t}\n\t\n\tnv.models.distribution = function() {\n\t    \"use strict\";\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n\t        , width = 400 //technically width or height depending on x or y....\n\t        , size = 8\n\t        , axis = 'x' // 'x' or 'y'... horizontal or vertical\n\t        , getData = function(d) { return d[axis] }  // defaults d.x or d.y\n\t        , color = nv.utils.defaultColor()\n\t        , scale = d3.scale.linear()\n\t        , domain\n\t        , duration = 250\n\t        , dispatch = d3.dispatch('renderEnd')\n\t        ;\n\t\n\t    //============================================================\n\t\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    var scale0;\n\t    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\t\n\t    //============================================================\n\t\n\t\n\t    function chart(selection) {\n\t        renderWatch.reset();\n\t        selection.each(function(data) {\n\t            var availableLength = width - (axis === 'x' ? margin.left + margin.right : margin.top + margin.bottom),\n\t                naxis = axis == 'x' ? 'y' : 'x',\n\t                container = d3.select(this);\n\t            nv.utils.initSVG(container);\n\t\n\t            //------------------------------------------------------------\n\t            // Setup Scales\n\t\n\t            scale0 = scale0 || scale;\n\t\n\t            //------------------------------------------------------------\n\t\n\t\n\t            //------------------------------------------------------------\n\t            // Setup containers and skeleton of chart\n\t\n\t            var wrap = container.selectAll('g.nv-distribution').data([data]);\n\t            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-distribution');\n\t            var gEnter = wrapEnter.append('g');\n\t            var g = wrap.select('g');\n\t\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')')\n\t\n\t            //------------------------------------------------------------\n\t\n\t\n\t            var distWrap = g.selectAll('g.nv-dist')\n\t                .data(function(d) { return d }, function(d) { return d.key });\n\t\n\t            distWrap.enter().append('g');\n\t            distWrap\n\t                .attr('class', function(d,i) { return 'nv-dist nv-series-' + i })\n\t                .style('stroke', function(d,i) { return color(d, i) });\n\t\n\t            var dist = distWrap.selectAll('line.nv-dist' + axis)\n\t                .data(function(d) { return d.values })\n\t            dist.enter().append('line')\n\t                .attr(axis + '1', function(d,i) { return scale0(getData(d,i)) })\n\t                .attr(axis + '2', function(d,i) { return scale0(getData(d,i)) })\n\t            renderWatch.transition(distWrap.exit().selectAll('line.nv-dist' + axis), 'dist exit')\n\t                // .transition()\n\t                .attr(axis + '1', function(d,i) { return scale(getData(d,i)) })\n\t                .attr(axis + '2', function(d,i) { return scale(getData(d,i)) })\n\t                .style('stroke-opacity', 0)\n\t                .remove();\n\t            dist\n\t                .attr('class', function(d,i) { return 'nv-dist' + axis + ' nv-dist' + axis + '-' + i })\n\t                .attr(naxis + '1', 0)\n\t                .attr(naxis + '2', size);\n\t            renderWatch.transition(dist, 'dist')\n\t                // .transition()\n\t                .attr(axis + '1', function(d,i) { return scale(getData(d,i)) })\n\t                .attr(axis + '2', function(d,i) { return scale(getData(d,i)) })\n\t\n\t\n\t            scale0 = scale.copy();\n\t\n\t        });\n\t        renderWatch.renderEnd('distribution immediate');\n\t        return chart;\n\t    }\n\t\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t    chart.dispatch = dispatch;\n\t\n\t    chart.margin = function(_) {\n\t        if (!arguments.length) return margin;\n\t        margin.top    = typeof _.top    != 'undefined' ? _.top    : margin.top;\n\t        margin.right  = typeof _.right  != 'undefined' ? _.right  : margin.right;\n\t        margin.bottom = typeof _.bottom != 'undefined' ? _.bottom : margin.bottom;\n\t        margin.left   = typeof _.left   != 'undefined' ? _.left   : margin.left;\n\t        return chart;\n\t    };\n\t\n\t    chart.width = function(_) {\n\t        if (!arguments.length) return width;\n\t        width = _;\n\t        return chart;\n\t    };\n\t\n\t    chart.axis = function(_) {\n\t        if (!arguments.length) return axis;\n\t        axis = _;\n\t        return chart;\n\t    };\n\t\n\t    chart.size = function(_) {\n\t        if (!arguments.length) return size;\n\t        size = _;\n\t        return chart;\n\t    };\n\t\n\t    chart.getData = function(_) {\n\t        if (!arguments.length) return getData;\n\t        getData = d3.functor(_);\n\t        return chart;\n\t    };\n\t\n\t    chart.scale = function(_) {\n\t        if (!arguments.length) return scale;\n\t        scale = _;\n\t        return chart;\n\t    };\n\t\n\t    chart.color = function(_) {\n\t        if (!arguments.length) return color;\n\t        color = nv.utils.getColor(_);\n\t        return chart;\n\t    };\n\t\n\t    chart.duration = function(_) {\n\t        if (!arguments.length) return duration;\n\t        duration = _;\n\t        renderWatch.reset(duration);\n\t        return chart;\n\t    };\n\t    //============================================================\n\t\n\t\n\t    return chart;\n\t}\n\tnv.models.focus = function(content) {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var content = content || nv.models.line()\n\t        , xAxis = nv.models.axis()\n\t        , yAxis = nv.models.axis()\n\t        , brush = d3.svg.brush()\n\t        ;\n\t\n\t    var margin = {top: 10, right: 0, bottom: 30, left: 0}\n\t        , color = nv.utils.defaultColor()\n\t        , width = null\n\t        , height = 70\n\t        , showXAxis = true\n\t        , showYAxis = false\n\t        , rightAlignYAxis = false\n\t        , ticks = null\n\t        , x\n\t        , y\n\t        , brushExtent = null\n\t        , duration = 250\n\t        , dispatch = d3.dispatch('brush', 'onBrush', 'renderEnd')\n\t        , syncBrushing = true\n\t        ;\n\t\n\t    content.interactive(false);\n\t    content.pointActive(function(d) { return false; });\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\t\n\t    function chart(selection) {\n\t        renderWatch.reset();\n\t        renderWatch.models(content);\n\t        if (showXAxis) renderWatch.models(xAxis);\n\t        if (showYAxis) renderWatch.models(yAxis);\n\t\n\t        selection.each(function(data) {\n\t            var container = d3.select(this);\n\t            nv.utils.initSVG(container);\n\t            var availableWidth = nv.utils.availableWidth(width, container, margin),\n\t                availableHeight = height - margin.top - margin.bottom;\n\t\n\t            chart.update = function() { \n\t                if( duration === 0 ) {\n\t                    container.call( chart );\n\t                } else {\n\t                    container.transition().duration(duration).call(chart);\n\t                }\n\t            };\n\t            chart.container = this;\n\t\n\t            // Setup Scales\n\t            x = content.xScale();\n\t            y = content.yScale();\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = container.selectAll('g.nv-focus').data([data]);\n\t            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-focus').append('g');\n\t            var g = wrap.select('g');\n\t\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            gEnter.append('g').attr('class', 'nv-background').append('rect');\n\t            gEnter.append('g').attr('class', 'nv-x nv-axis');\n\t            gEnter.append('g').attr('class', 'nv-y nv-axis');\n\t            gEnter.append('g').attr('class', 'nv-contentWrap');\n\t            gEnter.append('g').attr('class', 'nv-brushBackground');\n\t            gEnter.append('g').attr('class', 'nv-x nv-brush');\n\t\n\t            if (rightAlignYAxis) {\n\t                g.select(\".nv-y.nv-axis\")\n\t                    .attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n\t            }\n\t\n\t            g.select('.nv-background rect')\n\t                .attr('width', availableWidth)\n\t                .attr('height', availableHeight);\n\t                \n\t            content\n\t                .width(availableWidth)\n\t                .height(availableHeight)\n\t                .color(data.map(function(d,i) {\n\t                    return d.color || color(d, i);\n\t                }).filter(function(d,i) { return !data[i].disabled; }));\n\t\n\t            var contentWrap = g.select('.nv-contentWrap')\n\t                .datum(data.filter(function(d) { return !d.disabled; }));\n\t\n\t            d3.transition(contentWrap).call(content);\n\t            \n\t            // Setup Brush\n\t            brush\n\t                .x(x)\n\t                .on('brush', function() {\n\t                    onBrush(syncBrushing);\n\t                });\n\t\n\t            brush.on('brushend', function () {\n\t                if (!syncBrushing) {\n\t                    dispatch.onBrush(brush.empty() ? x.domain() : brush.extent());\n\t                }\n\t            });\n\t\n\t            if (brushExtent) brush.extent(brushExtent);\n\t\n\t            var brushBG = g.select('.nv-brushBackground').selectAll('g')\n\t                .data([brushExtent || brush.extent()]);\n\t    \n\t            var brushBGenter = brushBG.enter()\n\t                .append('g');\n\t\n\t            brushBGenter.append('rect')\n\t                .attr('class', 'left')\n\t                .attr('x', 0)\n\t                .attr('y', 0)\n\t                .attr('height', availableHeight);\n\t\n\t            brushBGenter.append('rect')\n\t                .attr('class', 'right')\n\t                .attr('x', 0)\n\t                .attr('y', 0)\n\t                .attr('height', availableHeight);\n\t\n\t            var gBrush = g.select('.nv-x.nv-brush')\n\t                .call(brush);\n\t            gBrush.selectAll('rect')\n\t                .attr('height', availableHeight);\n\t            gBrush.selectAll('.resize').append('path').attr('d', resizePath);\n\t\n\t            onBrush(true);\n\t\n\t            g.select('.nv-background rect')\n\t                .attr('width', availableWidth)\n\t                .attr('height', availableHeight);\n\t\n\t            if (showXAxis) {\n\t                xAxis.scale(x)\n\t                    ._ticks( nv.utils.calcTicksX(availableWidth/100, data) )\n\t                    .tickSize(-availableHeight, 0);\n\t  \n\t                g.select('.nv-x.nv-axis')\n\t                    .attr('transform', 'translate(0,' + y.range()[0] + ')');\n\t                d3.transition(g.select('.nv-x.nv-axis'))\n\t                    .call(xAxis);\n\t            }\n\t\n\t            if (showYAxis) {\n\t                yAxis\n\t                    .scale(y)\n\t                    ._ticks( nv.utils.calcTicksY(availableHeight/36, data) )\n\t                    .tickSize( -availableWidth, 0);\n\t\n\t                d3.transition(g.select('.nv-y.nv-axis'))\n\t                    .call(yAxis);\n\t            }\n\t            \n\t            g.select('.nv-x.nv-axis')\n\t                .attr('transform', 'translate(0,' + y.range()[0] + ')');\n\t\n\t            //============================================================\n\t            // Event Handling/Dispatching (in chart's scope)\n\t            //------------------------------------------------------------\n\t\n\t            //============================================================\n\t            // Functions\n\t            //------------------------------------------------------------\n\t    \n\t            // Taken from crossfilter (http://square.github.com/crossfilter/)\n\t            function resizePath(d) {\n\t                var e = +(d == 'e'),\n\t                    x = e ? 1 : -1,\n\t                    y = availableHeight / 3;\n\t                return 'M' + (0.5 * x) + ',' + y\n\t                    + 'A6,6 0 0 ' + e + ' ' + (6.5 * x) + ',' + (y + 6)\n\t                    + 'V' + (2 * y - 6)\n\t                    + 'A6,6 0 0 ' + e + ' ' + (0.5 * x) + ',' + (2 * y)\n\t                    + 'Z'\n\t                    + 'M' + (2.5 * x) + ',' + (y + 8)\n\t                    + 'V' + (2 * y - 8)\n\t                    + 'M' + (4.5 * x) + ',' + (y + 8)\n\t                    + 'V' + (2 * y - 8);\n\t            }\n\t    \n\t    \n\t            function updateBrushBG() {\n\t                if (!brush.empty()) brush.extent(brushExtent);\n\t                brushBG\n\t                    .data([brush.empty() ? x.domain() : brushExtent])\n\t                    .each(function(d,i) {\n\t                        var leftWidth = x(d[0]) - x.range()[0],\n\t                            rightWidth = availableWidth - x(d[1]);\n\t                        d3.select(this).select('.left')\n\t                            .attr('width',  leftWidth < 0 ? 0 : leftWidth);\n\t    \n\t                        d3.select(this).select('.right')\n\t                            .attr('x', x(d[1]))\n\t                            .attr('width', rightWidth < 0 ? 0 : rightWidth);\n\t                    });\n\t            }\n\t\n\t\n\t            function onBrush(shouldDispatch) {\n\t                brushExtent = brush.empty() ? null : brush.extent();\n\t                var extent = brush.empty() ? x.domain() : brush.extent();\n\t                dispatch.brush({extent: extent, brush: brush});\n\t                updateBrushBG();\n\t                if (shouldDispatch) {\n\t                    dispatch.onBrush(extent);\n\t                }\n\t            }\n\t        });\n\t\n\t        renderWatch.renderEnd('focus immediate');\n\t        return chart;\n\t    }\n\t\n\t\n\t    //============================================================\n\t    // Event Handling/Dispatching (out of chart's scope)\n\t    //------------------------------------------------------------\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    // expose chart's sub-components\n\t    chart.dispatch = dispatch;\n\t    chart.content = content;\n\t    chart.brush = brush;\n\t    chart.xAxis = xAxis;\n\t    chart.yAxis = yAxis;\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:      {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:     {get: function(){return height;}, set: function(_){height=_;}},\n\t        showXAxis:      {get: function(){return showXAxis;}, set: function(_){showXAxis=_;}},\n\t        showYAxis:    {get: function(){return showYAxis;}, set: function(_){showYAxis=_;}},\n\t        brushExtent: {get: function(){return brushExtent;}, set: function(_){brushExtent=_;}},\n\t        syncBrushing: {get: function(){return syncBrushing;}, set: function(_){syncBrushing=_;}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }},\n\t        duration: {get: function(){return duration;}, set: function(_){\n\t            duration = _;\n\t            renderWatch.reset(duration);\n\t            content.duration(duration);\n\t            xAxis.duration(duration);\n\t            yAxis.duration(duration);\n\t        }},\n\t        color:  {get: function(){return color;}, set: function(_){\n\t            color = nv.utils.getColor(_);\n\t            content.color(color);\n\t        }},\n\t        interpolate: {get: function(){return content.interpolate();}, set: function(_){\n\t            content.interpolate(_);\n\t        }},\n\t        xTickFormat: {get: function(){return xAxis.tickFormat();}, set: function(_){\n\t            xAxis.tickFormat(_);\n\t        }},\n\t        yTickFormat: {get: function(){return yAxis.tickFormat();}, set: function(_){\n\t            yAxis.tickFormat(_);\n\t        }},\n\t        x: {get: function(){return content.x();}, set: function(_){\n\t            content.x(_);\n\t        }},\n\t        y: {get: function(){return content.y();}, set: function(_){\n\t            content.y(_);\n\t        }},\n\t        rightAlignYAxis: {get: function(){return rightAlignYAxis;}, set: function(_){\n\t            rightAlignYAxis = _;\n\t            yAxis.orient( rightAlignYAxis ? 'right' : 'left');\n\t        }}\n\t    });\n\t\n\t    nv.utils.inheritOptions(chart, content);\n\t    nv.utils.initOptions(chart);\n\t\n\t    return chart;\n\t};\n\tnv.models.forceDirectedGraph = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t    var margin = {top: 2, right: 0, bottom: 2, left: 0}\n\t        , width = 400\n\t        , height = 32\n\t        , container = null\n\t        , dispatch = d3.dispatch('renderEnd')\n\t        , color = nv.utils.getColor(['#000'])\n\t        , tooltip      = nv.models.tooltip()\n\t        , noData = null\n\t        // Force directed graph specific parameters [default values]\n\t        , linkStrength = 0.1\n\t        , friction = 0.9\n\t        , linkDist = 30\n\t        , charge = -120\n\t        , gravity = 0.1\n\t        , theta = 0.8\n\t        , alpha = 0.1\n\t        , radius = 5\n\t        // These functions allow to add extra attributes to ndes and links\n\t        ,nodeExtras = function(nodes) { /* Do nothing */ }\n\t        ,linkExtras = function(links) { /* Do nothing */ }\n\t        ;\n\t\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    var renderWatch = nv.utils.renderWatch(dispatch);\n\t\n\t    function chart(selection) {\n\t        renderWatch.reset();\n\t\n\t        selection.each(function(data) {\n\t          container = d3.select(this);\n\t          nv.utils.initSVG(container);\n\t\n\t          var availableWidth = nv.utils.availableWidth(width, container, margin),\n\t              availableHeight = nv.utils.availableHeight(height, container, margin);\n\t\n\t          container\n\t                  .attr(\"width\", availableWidth)\n\t                  .attr(\"height\", availableHeight);\n\t\n\t          // Display No Data message if there's nothing to show.\n\t          if (!data || !data.links || !data.nodes) {\n\t              nv.utils.noData(chart, container)\n\t              return chart;\n\t          } else {\n\t              container.selectAll('.nv-noData').remove();\n\t          }\n\t          container.selectAll('*').remove();\n\t\n\t          // Collect names of all fields in the nodes\n\t          var nodeFieldSet = new Set();\n\t          data.nodes.forEach(function(node) {\n\t            var keys = Object.keys(node);\n\t            keys.forEach(function(key) {\n\t              nodeFieldSet.add(key);\n\t            });\n\t          });\n\t\n\t          var force = d3.layout.force()\n\t                .nodes(data.nodes)\n\t                .links(data.links)\n\t                .size([availableWidth, availableHeight])\n\t                .linkStrength(linkStrength)\n\t                .friction(friction)\n\t                .linkDistance(linkDist)\n\t                .charge(charge)\n\t                .gravity(gravity)\n\t                .theta(theta)\n\t                .alpha(alpha)\n\t                .start();\n\t\n\t          var link = container.selectAll(\".link\")\n\t                .data(data.links)\n\t                .enter().append(\"line\")\n\t                .attr(\"class\", \"nv-force-link\")\n\t                .style(\"stroke-width\", function(d) { return Math.sqrt(d.value); });\n\t\n\t          var node = container.selectAll(\".node\")\n\t                .data(data.nodes)\n\t                .enter()\n\t                .append(\"g\")\n\t                .attr(\"class\", \"nv-force-node\")\n\t                .call(force.drag);\n\t\n\t          node\n\t            .append(\"circle\")\n\t            .attr(\"r\", radius)\n\t            .style(\"fill\", function(d) { return color(d) } )\n\t            .on(\"mouseover\", function(evt) {\n\t              container.select('.nv-series-' + evt.seriesIndex + ' .nv-distx-' + evt.pointIndex)\n\t                  .attr('y1', evt.py);\n\t              container.select('.nv-series-' + evt.seriesIndex + ' .nv-disty-' + evt.pointIndex)\n\t                  .attr('x2', evt.px);\n\t\n\t              // Add 'series' object to\n\t              var nodeColor = color(evt);\n\t              evt.series = [];\n\t              nodeFieldSet.forEach(function(field) {\n\t                evt.series.push({\n\t                  color: nodeColor,\n\t                  key:   field,\n\t                  value: evt[field]\n\t                });\n\t              });\n\t              tooltip.data(evt).hidden(false);\n\t            })\n\t            .on(\"mouseout\",  function(d) {\n\t              tooltip.hidden(true);\n\t            });\n\t\n\t          tooltip.headerFormatter(function(d) {return \"Node\";});\n\t\n\t          // Apply extra attributes to nodes and links (if any)\n\t          linkExtras(link);\n\t          nodeExtras(node);\n\t\n\t          force.on(\"tick\", function() {\n\t              link.attr(\"x1\", function(d) { return d.source.x; })\n\t                  .attr(\"y1\", function(d) { return d.source.y; })\n\t                  .attr(\"x2\", function(d) { return d.target.x; })\n\t                  .attr(\"y2\", function(d) { return d.target.y; });\n\t\n\t              node.attr(\"transform\", function(d) {\n\t                return \"translate(\" + d.x + \", \" + d.y + \")\";\n\t              });\n\t            });\n\t        });\n\t\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:     {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:    {get: function(){return height;}, set: function(_){height=_;}},\n\t\n\t        // Force directed graph specific parameters\n\t        linkStrength:{get: function(){return linkStrength;}, set: function(_){linkStrength=_;}},\n\t        friction:    {get: function(){return friction;}, set: function(_){friction=_;}},\n\t        linkDist:    {get: function(){return linkDist;}, set: function(_){linkDist=_;}},\n\t        charge:      {get: function(){return charge;}, set: function(_){charge=_;}},\n\t        gravity:     {get: function(){return gravity;}, set: function(_){gravity=_;}},\n\t        theta:       {get: function(){return theta;}, set: function(_){theta=_;}},\n\t        alpha:       {get: function(){return alpha;}, set: function(_){alpha=_;}},\n\t        radius:      {get: function(){return radius;}, set: function(_){radius=_;}},\n\t\n\t        //functor options\n\t        x: {get: function(){return getX;}, set: function(_){getX=d3.functor(_);}},\n\t        y: {get: function(){return getY;}, set: function(_){getY=d3.functor(_);}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }},\n\t        color:  {get: function(){return color;}, set: function(_){\n\t            color = nv.utils.getColor(_);\n\t        }},\n\t        noData:    {get: function(){return noData;}, set: function(_){noData=_;}},\n\t        nodeExtras: {get: function(){return nodeExtras;}, set: function(_){\n\t            nodeExtras = _;\n\t        }},\n\t        linkExtras: {get: function(){return linkExtras;}, set: function(_){\n\t            linkExtras = _;\n\t        }}\n\t    });\n\t\n\t    chart.dispatch = dispatch;\n\t    chart.tooltip = tooltip;\n\t    nv.utils.initOptions(chart);\n\t    return chart;\n\t};\n\tnv.models.furiousLegend = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var margin = {top: 5, right: 0, bottom: 5, left: 0}\n\t        , width = 400\n\t        , height = 20\n\t        , getKey = function(d) { return d.key }\n\t        , keyFormatter = function (d) { return d }\n\t        , color = nv.utils.getColor()\n\t        , maxKeyLength = 20 //default value for key lengths\n\t        , align = true\n\t        , padding = 28 //define how much space between legend items. - recommend 32 for furious version\n\t        , rightAlign = true\n\t        , updateState = true   //If true, legend will update data.disabled and trigger a 'stateChange' dispatch.\n\t        , radioButtonMode = false   //If true, clicking legend items will cause it to behave like a radio button. (only one can be selected at a time)\n\t        , expanded = false\n\t        , dispatch = d3.dispatch('legendClick', 'legendDblclick', 'legendMouseover', 'legendMouseout', 'stateChange')\n\t        , vers = 'classic' //Options are \"classic\" and \"furious\"\n\t        ;\n\t\n\t    function chart(selection) {\n\t        selection.each(function(data) {\n\t            var availableWidth = width - margin.left - margin.right,\n\t                container = d3.select(this);\n\t            nv.utils.initSVG(container);\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = container.selectAll('g.nv-legend').data([data]);\n\t            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-legend').append('g');\n\t            var g = wrap.select('g');\n\t\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            var series = g.selectAll('.nv-series')\n\t                .data(function(d) {\n\t                    if(vers != 'furious') return d;\n\t\n\t                    return d.filter(function(n) {\n\t                        return expanded ? true : !n.disengaged;\n\t                    });\n\t                });\n\t            var seriesEnter = series.enter().append('g').attr('class', 'nv-series')\n\t\n\t            var seriesShape;\n\t\n\t            if(vers == 'classic') {\n\t                seriesEnter.append('circle')\n\t                    .style('stroke-width', 2)\n\t                    .attr('class','nv-legend-symbol')\n\t                    .attr('r', 5);\n\t\n\t                seriesShape = series.select('circle');\n\t            } else if (vers == 'furious') {\n\t                seriesEnter.append('rect')\n\t                    .style('stroke-width', 2)\n\t                    .attr('class','nv-legend-symbol')\n\t                    .attr('rx', 3)\n\t                    .attr('ry', 3);\n\t\n\t                seriesShape = series.select('rect');\n\t\n\t                seriesEnter.append('g')\n\t                    .attr('class', 'nv-check-box')\n\t                    .property('innerHTML','<path d=\"M0.5,5 L22.5,5 L22.5,26.5 L0.5,26.5 L0.5,5 Z\" class=\"nv-box\"></path><path d=\"M5.5,12.8618467 L11.9185089,19.2803556 L31,0.198864511\" class=\"nv-check\"></path>')\n\t                    .attr('transform', 'translate(-10,-8)scale(0.5)');\n\t\n\t                var seriesCheckbox = series.select('.nv-check-box');\n\t\n\t                seriesCheckbox.each(function(d,i) {\n\t                    d3.select(this).selectAll('path')\n\t                        .attr('stroke', setTextColor(d,i));\n\t                });\n\t            }\n\t\n\t            seriesEnter.append('text')\n\t                .attr('text-anchor', 'start')\n\t                .attr('class','nv-legend-text')\n\t                .attr('dy', '.32em')\n\t                .attr('dx', '8');\n\t\n\t            var seriesText = series.select('text.nv-legend-text');\n\t\n\t            series\n\t                .on('mouseover', function(d,i) {\n\t                    dispatch.legendMouseover(d,i);  //TODO: Make consistent with other event objects\n\t                })\n\t                .on('mouseout', function(d,i) {\n\t                    dispatch.legendMouseout(d,i);\n\t                })\n\t                .on('click', function(d,i) {\n\t                    dispatch.legendClick(d,i);\n\t                    // make sure we re-get data in case it was modified\n\t                    var data = series.data();\n\t                    if (updateState) {\n\t                        if(vers =='classic') {\n\t                            if (radioButtonMode) {\n\t                                //Radio button mode: set every series to disabled,\n\t                                //  and enable the clicked series.\n\t                                data.forEach(function(series) { series.disabled = true});\n\t                                d.disabled = false;\n\t                            }\n\t                            else {\n\t                                d.disabled = !d.disabled;\n\t                                if (data.every(function(series) { return series.disabled})) {\n\t                                    //the default behavior of NVD3 legends is, if every single series\n\t                                    // is disabled, turn all series' back on.\n\t                                    data.forEach(function(series) { series.disabled = false});\n\t                                }\n\t                            }\n\t                        } else if(vers == 'furious') {\n\t                            if(expanded) {\n\t                                d.disengaged = !d.disengaged;\n\t                                d.userDisabled = d.userDisabled == undefined ? !!d.disabled : d.userDisabled;\n\t                                d.disabled = d.disengaged || d.userDisabled;\n\t                            } else if (!expanded) {\n\t                                d.disabled = !d.disabled;\n\t                                d.userDisabled = d.disabled;\n\t                                var engaged = data.filter(function(d) { return !d.disengaged; });\n\t                                if (engaged.every(function(series) { return series.userDisabled })) {\n\t                                    //the default behavior of NVD3 legends is, if every single series\n\t                                    // is disabled, turn all series' back on.\n\t                                    data.forEach(function(series) {\n\t                                        series.disabled = series.userDisabled = false;\n\t                                    });\n\t                                }\n\t                            }\n\t                        }\n\t                        dispatch.stateChange({\n\t                            disabled: data.map(function(d) { return !!d.disabled }),\n\t                            disengaged: data.map(function(d) { return !!d.disengaged })\n\t                        });\n\t\n\t                    }\n\t                })\n\t                .on('dblclick', function(d,i) {\n\t                    if(vers == 'furious' && expanded) return;\n\t                    dispatch.legendDblclick(d,i);\n\t                    if (updateState) {\n\t                        // make sure we re-get data in case it was modified\n\t                        var data = series.data();\n\t                        //the default behavior of NVD3 legends, when double clicking one,\n\t                        // is to set all other series' to false, and make the double clicked series enabled.\n\t                        data.forEach(function(series) {\n\t                            series.disabled = true;\n\t                            if(vers == 'furious') series.userDisabled = series.disabled;\n\t                        });\n\t                        d.disabled = false;\n\t                        if(vers == 'furious') d.userDisabled = d.disabled;\n\t                        dispatch.stateChange({\n\t                            disabled: data.map(function(d) { return !!d.disabled })\n\t                        });\n\t                    }\n\t                });\n\t\n\t            series.classed('nv-disabled', function(d) { return d.userDisabled });\n\t            series.exit().remove();\n\t\n\t            seriesText\n\t                .attr('fill', setTextColor)\n\t                .text(function (d) { return keyFormatter(getKey(d)) });\n\t\n\t            //TODO: implement fixed-width and max-width options (max-width is especially useful with the align option)\n\t            // NEW ALIGNING CODE, TODO: clean up\n\t\n\t            var versPadding;\n\t            switch(vers) {\n\t                case 'furious' :\n\t                    versPadding = 23;\n\t                    break;\n\t                case 'classic' :\n\t                    versPadding = 20;\n\t            }\n\t\n\t            if (align) {\n\t\n\t                var seriesWidths = [];\n\t                series.each(function(d,i) {\n\t                    var legendText;\n\t                    if (keyFormatter(getKey(d)) && keyFormatter(getKey(d)).length > maxKeyLength) {\n\t                        var trimmedKey = keyFormatter(getKey(d)).substring(0, maxKeyLength);\n\t                        legendText = d3.select(this).select('text').text(trimmedKey + \"...\");\n\t                        d3.select(this).append(\"svg:title\").text(keyFormatter(getKey(d)));\n\t                    } else {\n\t                        legendText = d3.select(this).select('text');\n\t                    }\n\t                    var nodeTextLength;\n\t                    try {\n\t                        nodeTextLength = legendText.node().getComputedTextLength();\n\t                        // If the legendText is display:none'd (nodeTextLength == 0), simulate an error so we approximate, instead\n\t                        if(nodeTextLength <= 0) throw Error();\n\t                    }\n\t                    catch(e) {\n\t                        nodeTextLength = nv.utils.calcApproxTextWidth(legendText);\n\t                    }\n\t\n\t                    seriesWidths.push(nodeTextLength + padding);\n\t                });\n\t\n\t                var seriesPerRow = 0;\n\t                var legendWidth = 0;\n\t                var columnWidths = [];\n\t\n\t                while ( legendWidth < availableWidth && seriesPerRow < seriesWidths.length) {\n\t                    columnWidths[seriesPerRow] = seriesWidths[seriesPerRow];\n\t                    legendWidth += seriesWidths[seriesPerRow++];\n\t                }\n\t                if (seriesPerRow === 0) seriesPerRow = 1; //minimum of one series per row\n\t\n\t                while ( legendWidth > availableWidth && seriesPerRow > 1 ) {\n\t                    columnWidths = [];\n\t                    seriesPerRow--;\n\t\n\t                    for (var k = 0; k < seriesWidths.length; k++) {\n\t                        if (seriesWidths[k] > (columnWidths[k % seriesPerRow] || 0) )\n\t                            columnWidths[k % seriesPerRow] = seriesWidths[k];\n\t                    }\n\t\n\t                    legendWidth = columnWidths.reduce(function(prev, cur, index, array) {\n\t                        return prev + cur;\n\t                    });\n\t                }\n\t\n\t                var xPositions = [];\n\t                for (var i = 0, curX = 0; i < seriesPerRow; i++) {\n\t                    xPositions[i] = curX;\n\t                    curX += columnWidths[i];\n\t                }\n\t\n\t                series\n\t                    .attr('transform', function(d, i) {\n\t                        return 'translate(' + xPositions[i % seriesPerRow] + ',' + (5 + Math.floor(i / seriesPerRow) * versPadding) + ')';\n\t                    });\n\t\n\t                //position legend as far right as possible within the total width\n\t                if (rightAlign) {\n\t                    g.attr('transform', 'translate(' + (width - margin.right - legendWidth) + ',' + margin.top + ')');\n\t                }\n\t                else {\n\t                    g.attr('transform', 'translate(0' + ',' + margin.top + ')');\n\t                }\n\t\n\t                height = margin.top + margin.bottom + (Math.ceil(seriesWidths.length / seriesPerRow) * versPadding);\n\t\n\t            } else {\n\t\n\t                var ypos = 5,\n\t                    newxpos = 5,\n\t                    maxwidth = 0,\n\t                    xpos;\n\t                series\n\t                    .attr('transform', function(d, i) {\n\t                        var length = d3.select(this).select('text').node().getComputedTextLength() + padding;\n\t                        xpos = newxpos;\n\t\n\t                        if (width < margin.left + margin.right + xpos + length) {\n\t                            newxpos = xpos = 5;\n\t                            ypos += versPadding;\n\t                        }\n\t\n\t                        newxpos += length;\n\t                        if (newxpos > maxwidth) maxwidth = newxpos;\n\t\n\t                        return 'translate(' + xpos + ',' + ypos + ')';\n\t                    });\n\t\n\t                //position legend as far right as possible within the total width\n\t                g.attr('transform', 'translate(' + (width - margin.right - maxwidth) + ',' + margin.top + ')');\n\t\n\t                height = margin.top + margin.bottom + ypos + 15;\n\t            }\n\t\n\t            if(vers == 'furious') {\n\t                // Size rectangles after text is placed\n\t                seriesShape\n\t                    .attr('width', function(d,i) {\n\t                        return seriesText[0][i].getComputedTextLength() + 27;\n\t                    })\n\t                    .attr('height', 18)\n\t                    .attr('y', -9)\n\t                    .attr('x', -15)\n\t            }\n\t\n\t            seriesShape\n\t                .style('fill', setBGColor)\n\t                .style('stroke', function(d,i) { return d.color || color(d, i) });\n\t        });\n\t\n\t        function setTextColor(d,i) {\n\t            if(vers != 'furious') return '#000';\n\t            if(expanded) {\n\t                return d.disengaged ? color(d,i) : '#fff';\n\t            } else if (!expanded) {\n\t                return !!d.disabled ? color(d,i) : '#fff';\n\t            }\n\t        }\n\t\n\t        function setBGColor(d,i) {\n\t            if(expanded && vers == 'furious') {\n\t                return d.disengaged ? '#fff' : color(d,i);\n\t            } else {\n\t                return !!d.disabled ? '#fff' : color(d,i);\n\t            }\n\t        }\n\t\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    chart.dispatch = dispatch;\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:          {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:         {get: function(){return height;}, set: function(_){height=_;}},\n\t        key:            {get: function(){return getKey;}, set: function(_){getKey=_;}},\n\t        keyFormatter:   {get: function(){return keyFormatter;}, set: function(_){keyFormatter=_;}},\n\t        align:          {get: function(){return align;}, set: function(_){align=_;}},\n\t        rightAlign:     {get: function(){return rightAlign;}, set: function(_){rightAlign=_;}},\n\t        maxKeyLength:   {get: function(){return maxKeyLength;}, set: function(_){maxKeyLength=_;}},\n\t        padding:        {get: function(){return padding;}, set: function(_){padding=_;}},\n\t        updateState:    {get: function(){return updateState;}, set: function(_){updateState=_;}},\n\t        radioButtonMode:{get: function(){return radioButtonMode;}, set: function(_){radioButtonMode=_;}},\n\t        expanded:       {get: function(){return expanded;}, set: function(_){expanded=_;}},\n\t        vers:           {get: function(){return vers;}, set: function(_){vers=_;}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }},\n\t        color:  {get: function(){return color;}, set: function(_){\n\t            color = nv.utils.getColor(_);\n\t        }}\n\t    });\n\t\n\t    nv.utils.initOptions(chart);\n\t\n\t    return chart;\n\t};\n\t//TODO: consider deprecating and using multibar with single series for this\n\tnv.models.historicalBar = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n\t        , width = null\n\t        , height = null\n\t        , id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n\t        , container = null\n\t        , x = d3.scale.linear()\n\t        , y = d3.scale.linear()\n\t        , getX = function(d) { return d.x }\n\t        , getY = function(d) { return d.y }\n\t        , forceX = []\n\t        , forceY = [0]\n\t        , padData = false\n\t        , clipEdge = true\n\t        , color = nv.utils.defaultColor()\n\t        , xDomain\n\t        , yDomain\n\t        , xRange\n\t        , yRange\n\t        , dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd')\n\t        , interactive = true\n\t        ;\n\t\n\t    var renderWatch = nv.utils.renderWatch(dispatch, 0);\n\t\n\t    function chart(selection) {\n\t        selection.each(function(data) {\n\t            renderWatch.reset();\n\t\n\t            container = d3.select(this);\n\t            var availableWidth = nv.utils.availableWidth(width, container, margin),\n\t                availableHeight = nv.utils.availableHeight(height, container, margin);\n\t\n\t            nv.utils.initSVG(container);\n\t\n\t            // Setup Scales\n\t            x.domain(xDomain || d3.extent(data[0].values.map(getX).concat(forceX) ));\n\t\n\t            if (padData)\n\t                x.range(xRange || [availableWidth * .5 / data[0].values.length, availableWidth * (data[0].values.length - .5)  / data[0].values.length ]);\n\t            else\n\t                x.range(xRange || [0, availableWidth]);\n\t\n\t            y.domain(yDomain || d3.extent(data[0].values.map(getY).concat(forceY) ))\n\t                .range(yRange || [availableHeight, 0]);\n\t\n\t            // If scale's domain don't have a range, slightly adjust to make one... so a chart can show a single data point\n\t            if (x.domain()[0] === x.domain()[1])\n\t                x.domain()[0] ?\n\t                    x.domain([x.domain()[0] - x.domain()[0] * 0.01, x.domain()[1] + x.domain()[1] * 0.01])\n\t                    : x.domain([-1,1]);\n\t\n\t            if (y.domain()[0] === y.domain()[1])\n\t                y.domain()[0] ?\n\t                    y.domain([y.domain()[0] + y.domain()[0] * 0.01, y.domain()[1] - y.domain()[1] * 0.01])\n\t                    : y.domain([-1,1]);\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = container.selectAll('g.nv-wrap.nv-historicalBar-' + id).data([data[0].values]);\n\t            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-historicalBar-' + id);\n\t            var defsEnter = wrapEnter.append('defs');\n\t            var gEnter = wrapEnter.append('g');\n\t            var g = wrap.select('g');\n\t\n\t            gEnter.append('g').attr('class', 'nv-bars');\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            container\n\t                .on('click', function(d,i) {\n\t                    dispatch.chartClick({\n\t                        data: d,\n\t                        index: i,\n\t                        pos: d3.event,\n\t                        id: id\n\t                    });\n\t                });\n\t\n\t            defsEnter.append('clipPath')\n\t                .attr('id', 'nv-chart-clip-path-' + id)\n\t                .append('rect');\n\t\n\t            wrap.select('#nv-chart-clip-path-' + id + ' rect')\n\t                .attr('width', availableWidth)\n\t                .attr('height', availableHeight);\n\t\n\t            g.attr('clip-path', clipEdge ? 'url(#nv-chart-clip-path-' + id + ')' : '');\n\t\n\t            var bars = wrap.select('.nv-bars').selectAll('.nv-bar')\n\t                .data(function(d) { return d }, function(d,i) {return getX(d,i)});\n\t            bars.exit().remove();\n\t\n\t            bars.enter().append('rect')\n\t                .attr('x', 0 )\n\t                .attr('y', function(d,i) {  return nv.utils.NaNtoZero(y(Math.max(0, getY(d,i)))) })\n\t                .attr('height', function(d,i) { return nv.utils.NaNtoZero(Math.abs(y(getY(d,i)) - y(0))) })\n\t                .attr('transform', function(d,i) { return 'translate(' + (x(getX(d,i)) - availableWidth / data[0].values.length * .45) + ',0)'; })\n\t                .on('mouseover', function(d,i) {\n\t                    if (!interactive) return;\n\t                    d3.select(this).classed('hover', true);\n\t                    dispatch.elementMouseover({\n\t                        data: d,\n\t                        index: i,\n\t                        color: d3.select(this).style(\"fill\")\n\t                    });\n\t\n\t                })\n\t                .on('mouseout', function(d,i) {\n\t                    if (!interactive) return;\n\t                    d3.select(this).classed('hover', false);\n\t                    dispatch.elementMouseout({\n\t                        data: d,\n\t                        index: i,\n\t                        color: d3.select(this).style(\"fill\")\n\t                    });\n\t                })\n\t                .on('mousemove', function(d,i) {\n\t                    if (!interactive) return;\n\t                    dispatch.elementMousemove({\n\t                        data: d,\n\t                        index: i,\n\t                        color: d3.select(this).style(\"fill\")\n\t                    });\n\t                })\n\t                .on('click', function(d,i) {\n\t                    if (!interactive) return;\n\t                    var element = this;\n\t                    dispatch.elementClick({\n\t                        data: d,\n\t                        index: i,\n\t                        color: d3.select(this).style(\"fill\"),\n\t                        event: d3.event,\n\t                        element: element\n\t                    });\n\t                    d3.event.stopPropagation();\n\t                })\n\t                .on('dblclick', function(d,i) {\n\t                    if (!interactive) return;\n\t                    dispatch.elementDblClick({\n\t                        data: d,\n\t                        index: i,\n\t                        color: d3.select(this).style(\"fill\")\n\t                    });\n\t                    d3.event.stopPropagation();\n\t                });\n\t\n\t            bars\n\t                .attr('fill', function(d,i) { return color(d, i); })\n\t                .attr('class', function(d,i,j) { return (getY(d,i) < 0 ? 'nv-bar negative' : 'nv-bar positive') + ' nv-bar-' + j + '-' + i })\n\t                .watchTransition(renderWatch, 'bars')\n\t                .attr('transform', function(d,i) { return 'translate(' + (x(getX(d,i)) - availableWidth / data[0].values.length * .45) + ',0)'; })\n\t                //TODO: better width calculations that don't assume always uniform data spacing;w\n\t                .attr('width', (availableWidth / data[0].values.length) * .9 );\n\t\n\t            bars.watchTransition(renderWatch, 'bars')\n\t                .attr('y', function(d,i) {\n\t                    var rval = getY(d,i) < 0 ?\n\t                        y(0) :\n\t                            y(0) - y(getY(d,i)) < 1 ?\n\t                        y(0) - 1 :\n\t                        y(getY(d,i));\n\t                    return nv.utils.NaNtoZero(rval);\n\t                })\n\t                .attr('height', function(d,i) { return nv.utils.NaNtoZero(Math.max(Math.abs(y(getY(d,i)) - y(0)),1)) });\n\t\n\t        });\n\t\n\t        renderWatch.renderEnd('historicalBar immediate');\n\t        return chart;\n\t    }\n\t\n\t    //Create methods to allow outside functions to highlight a specific bar.\n\t    chart.highlightPoint = function(pointIndex, isHoverOver) {\n\t        container\n\t            .select(\".nv-bars .nv-bar-0-\" + pointIndex)\n\t            .classed(\"hover\", isHoverOver)\n\t        ;\n\t    };\n\t\n\t    chart.clearHighlights = function() {\n\t        container\n\t            .select(\".nv-bars .nv-bar.hover\")\n\t            .classed(\"hover\", false)\n\t        ;\n\t    };\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    chart.dispatch = dispatch;\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:   {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:  {get: function(){return height;}, set: function(_){height=_;}},\n\t        forceX:  {get: function(){return forceX;}, set: function(_){forceX=_;}},\n\t        forceY:  {get: function(){return forceY;}, set: function(_){forceY=_;}},\n\t        padData: {get: function(){return padData;}, set: function(_){padData=_;}},\n\t        x:       {get: function(){return getX;}, set: function(_){getX=_;}},\n\t        y:       {get: function(){return getY;}, set: function(_){getY=_;}},\n\t        xScale:  {get: function(){return x;}, set: function(_){x=_;}},\n\t        yScale:  {get: function(){return y;}, set: function(_){y=_;}},\n\t        xDomain: {get: function(){return xDomain;}, set: function(_){xDomain=_;}},\n\t        yDomain: {get: function(){return yDomain;}, set: function(_){yDomain=_;}},\n\t        xRange:  {get: function(){return xRange;}, set: function(_){xRange=_;}},\n\t        yRange:  {get: function(){return yRange;}, set: function(_){yRange=_;}},\n\t        clipEdge:    {get: function(){return clipEdge;}, set: function(_){clipEdge=_;}},\n\t        id:          {get: function(){return id;}, set: function(_){id=_;}},\n\t        interactive: {get: function(){return interactive;}, set: function(_){interactive=_;}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }},\n\t        color:  {get: function(){return color;}, set: function(_){\n\t            color = nv.utils.getColor(_);\n\t        }}\n\t    });\n\t\n\t    nv.utils.initOptions(chart);\n\t\n\t    return chart;\n\t};\n\t\n\tnv.models.historicalBarChart = function(bar_model) {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var bars = bar_model || nv.models.historicalBar()\n\t        , xAxis = nv.models.axis()\n\t        , yAxis = nv.models.axis()\n\t        , legend = nv.models.legend()\n\t        , interactiveLayer = nv.interactiveGuideline()\n\t        , tooltip = nv.models.tooltip()\n\t        ;\n\t\n\t\n\t    var margin = {top: 30, right: 90, bottom: 50, left: 90}\n\t        , marginTop = null\n\t        , color = nv.utils.defaultColor()\n\t        , width = null\n\t        , height = null\n\t        , showLegend = false\n\t        , showXAxis = true\n\t        , showYAxis = true\n\t        , rightAlignYAxis = false\n\t        , useInteractiveGuideline = false\n\t        , x\n\t        , y\n\t        , state = {}\n\t        , defaultState = null\n\t        , noData = null\n\t        , dispatch = d3.dispatch('tooltipHide', 'stateChange', 'changeState', 'renderEnd')\n\t        , transitionDuration = 250\n\t        ;\n\t\n\t    xAxis.orient('bottom').tickPadding(7);\n\t    yAxis.orient( (rightAlignYAxis) ? 'right' : 'left');\n\t    tooltip\n\t        .duration(0)\n\t        .headerEnabled(false)\n\t        .valueFormatter(function(d, i) {\n\t            return yAxis.tickFormat()(d, i);\n\t        })\n\t        .headerFormatter(function(d, i) {\n\t            return xAxis.tickFormat()(d, i);\n\t        });\n\t\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    var renderWatch = nv.utils.renderWatch(dispatch, 0);\n\t\n\t    function chart(selection) {\n\t        selection.each(function(data) {\n\t            renderWatch.reset();\n\t            renderWatch.models(bars);\n\t            if (showXAxis) renderWatch.models(xAxis);\n\t            if (showYAxis) renderWatch.models(yAxis);\n\t\n\t            var container = d3.select(this),\n\t                that = this;\n\t            nv.utils.initSVG(container);\n\t            var availableWidth = nv.utils.availableWidth(width, container, margin),\n\t                availableHeight = nv.utils.availableHeight(height, container, margin);\n\t\n\t            chart.update = function() { container.transition().duration(transitionDuration).call(chart) };\n\t            chart.container = this;\n\t\n\t            //set state.disabled\n\t            state.disabled = data.map(function(d) { return !!d.disabled });\n\t\n\t            if (!defaultState) {\n\t                var key;\n\t                defaultState = {};\n\t                for (key in state) {\n\t                    if (state[key] instanceof Array)\n\t                        defaultState[key] = state[key].slice(0);\n\t                    else\n\t                        defaultState[key] = state[key];\n\t                }\n\t            }\n\t\n\t            // Display noData message if there's nothing to show.\n\t            if (!data || !data.length || !data.filter(function(d) { return d.values.length }).length) {\n\t                nv.utils.noData(chart, container)\n\t                return chart;\n\t            } else {\n\t                container.selectAll('.nv-noData').remove();\n\t            }\n\t\n\t            // Setup Scales\n\t            x = bars.xScale();\n\t            y = bars.yScale();\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = container.selectAll('g.nv-wrap.nv-historicalBarChart').data([data]);\n\t            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-historicalBarChart').append('g');\n\t            var g = wrap.select('g');\n\t\n\t            gEnter.append('g').attr('class', 'nv-x nv-axis');\n\t            gEnter.append('g').attr('class', 'nv-y nv-axis');\n\t            gEnter.append('g').attr('class', 'nv-barsWrap');\n\t            gEnter.append('g').attr('class', 'nv-legendWrap');\n\t            gEnter.append('g').attr('class', 'nv-interactive');\n\t\n\t            // Legend\n\t            if (!showLegend) {\n\t                g.select('.nv-legendWrap').selectAll('*').remove();\n\t            } else {\n\t                legend.width(availableWidth);\n\t\n\t                g.select('.nv-legendWrap')\n\t                    .datum(data)\n\t                    .call(legend);\n\t\n\t                if (!marginTop && legend.height() !== margin.top) {\n\t                    margin.top = legend.height();\n\t                    availableHeight = nv.utils.availableHeight(height, container, margin);\n\t                }\n\t\n\t                wrap.select('.nv-legendWrap')\n\t                    .attr('transform', 'translate(0,' + (-margin.top) +')')\n\t            }\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            if (rightAlignYAxis) {\n\t                g.select(\".nv-y.nv-axis\")\n\t                    .attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n\t            }\n\t\n\t            //Set up interactive layer\n\t            if (useInteractiveGuideline) {\n\t                interactiveLayer\n\t                    .width(availableWidth)\n\t                    .height(availableHeight)\n\t                    .margin({left:margin.left, top:margin.top})\n\t                    .svgContainer(container)\n\t                    .xScale(x);\n\t                wrap.select(\".nv-interactive\").call(interactiveLayer);\n\t            }\n\t            bars\n\t                .width(availableWidth)\n\t                .height(availableHeight)\n\t                .color(data.map(function(d,i) {\n\t                    return d.color || color(d, i);\n\t                }).filter(function(d,i) { return !data[i].disabled }));\n\t\n\t            var barsWrap = g.select('.nv-barsWrap')\n\t                .datum(data.filter(function(d) { return !d.disabled }));\n\t            barsWrap.transition().call(bars);\n\t\n\t            // Setup Axes\n\t            if (showXAxis) {\n\t                xAxis\n\t                    .scale(x)\n\t                    ._ticks( nv.utils.calcTicksX(availableWidth/100, data) )\n\t                    .tickSize(-availableHeight, 0);\n\t\n\t                g.select('.nv-x.nv-axis')\n\t                    .attr('transform', 'translate(0,' + y.range()[0] + ')');\n\t                g.select('.nv-x.nv-axis')\n\t                    .transition()\n\t                    .call(xAxis);\n\t            }\n\t\n\t            if (showYAxis) {\n\t                yAxis\n\t                    .scale(y)\n\t                    ._ticks( nv.utils.calcTicksY(availableHeight/36, data) )\n\t                    .tickSize( -availableWidth, 0);\n\t\n\t                g.select('.nv-y.nv-axis')\n\t                    .transition()\n\t                    .call(yAxis);\n\t            }\n\t\n\t            //============================================================\n\t            // Event Handling/Dispatching (in chart's scope)\n\t            //------------------------------------------------------------\n\t\n\t            interactiveLayer.dispatch.on('elementMousemove', function(e) {\n\t                bars.clearHighlights();\n\t\n\t                var singlePoint, pointIndex, pointXLocation, allData = [];\n\t                data\n\t                    .filter(function(series, i) {\n\t                        series.seriesIndex = i;\n\t                        return !series.disabled;\n\t                    })\n\t                    .forEach(function(series,i) {\n\t                        pointIndex = nv.interactiveBisect(series.values, e.pointXValue, chart.x());\n\t                        bars.highlightPoint(pointIndex,true);\n\t                        var point = series.values[pointIndex];\n\t                        if (point === undefined) return;\n\t                        if (singlePoint === undefined) singlePoint = point;\n\t                        if (pointXLocation === undefined) pointXLocation = chart.xScale()(chart.x()(point,pointIndex));\n\t                        allData.push({\n\t                            key: series.key,\n\t                            value: chart.y()(point, pointIndex),\n\t                            color: color(series,series.seriesIndex),\n\t                            data: series.values[pointIndex]\n\t                        });\n\t                    });\n\t\n\t                var xValue = xAxis.tickFormat()(chart.x()(singlePoint,pointIndex));\n\t                interactiveLayer.tooltip\n\t                    .valueFormatter(function(d,i) {\n\t                        return yAxis.tickFormat()(d);\n\t                    })\n\t                    .data({\n\t                        value: xValue,\n\t                        index: pointIndex,\n\t                        series: allData\n\t                    })();\n\t\n\t                interactiveLayer.renderGuideLine(pointXLocation);\n\t\n\t            });\n\t\n\t            interactiveLayer.dispatch.on(\"elementMouseout\",function(e) {\n\t                dispatch.tooltipHide();\n\t                bars.clearHighlights();\n\t            });\n\t\n\t            legend.dispatch.on('legendClick', function(d,i) {\n\t                d.disabled = !d.disabled;\n\t\n\t                if (!data.filter(function(d) { return !d.disabled }).length) {\n\t                    data.map(function(d) {\n\t                        d.disabled = false;\n\t                        wrap.selectAll('.nv-series').classed('disabled', false);\n\t                        return d;\n\t                    });\n\t                }\n\t\n\t                state.disabled = data.map(function(d) { return !!d.disabled });\n\t                dispatch.stateChange(state);\n\t\n\t                selection.transition().call(chart);\n\t            });\n\t\n\t            legend.dispatch.on('legendDblclick', function(d) {\n\t                //Double clicking should always enable current series, and disabled all others.\n\t                data.forEach(function(d) {\n\t                    d.disabled = true;\n\t                });\n\t                d.disabled = false;\n\t\n\t                state.disabled = data.map(function(d) { return !!d.disabled });\n\t                dispatch.stateChange(state);\n\t                chart.update();\n\t            });\n\t\n\t            dispatch.on('changeState', function(e) {\n\t                if (typeof e.disabled !== 'undefined') {\n\t                    data.forEach(function(series,i) {\n\t                        series.disabled = e.disabled[i];\n\t                    });\n\t\n\t                    state.disabled = e.disabled;\n\t                }\n\t\n\t                chart.update();\n\t            });\n\t        });\n\t\n\t        renderWatch.renderEnd('historicalBarChart immediate');\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Event Handling/Dispatching (out of chart's scope)\n\t    //------------------------------------------------------------\n\t\n\t    bars.dispatch.on('elementMouseover.tooltip', function(evt) {\n\t        evt['series'] = {\n\t            key: chart.x()(evt.data),\n\t            value: chart.y()(evt.data),\n\t            color: evt.color\n\t        };\n\t        tooltip.data(evt).hidden(false);\n\t    });\n\t\n\t    bars.dispatch.on('elementMouseout.tooltip', function(evt) {\n\t        tooltip.hidden(true);\n\t    });\n\t\n\t    bars.dispatch.on('elementMousemove.tooltip', function(evt) {\n\t        tooltip();\n\t    });\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    // expose chart's sub-components\n\t    chart.dispatch = dispatch;\n\t    chart.bars = bars;\n\t    chart.legend = legend;\n\t    chart.xAxis = xAxis;\n\t    chart.yAxis = yAxis;\n\t    chart.interactiveLayer = interactiveLayer;\n\t    chart.tooltip = tooltip;\n\t\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:      {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:     {get: function(){return height;}, set: function(_){height=_;}},\n\t        showLegend: {get: function(){return showLegend;}, set: function(_){showLegend=_;}},\n\t        showXAxis: {get: function(){return showXAxis;}, set: function(_){showXAxis=_;}},\n\t        showYAxis: {get: function(){return showYAxis;}, set: function(_){showYAxis=_;}},\n\t        defaultState:    {get: function(){return defaultState;}, set: function(_){defaultState=_;}},\n\t        noData:    {get: function(){return noData;}, set: function(_){noData=_;}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            if (_.top !== undefined) {\n\t                margin.top = _.top;\n\t                marginTop = _.top;\n\t            }\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }},\n\t        color:  {get: function(){return color;}, set: function(_){\n\t            color = nv.utils.getColor(_);\n\t            legend.color(color);\n\t            bars.color(color);\n\t        }},\n\t        duration:    {get: function(){return transitionDuration;}, set: function(_){\n\t            transitionDuration=_;\n\t            renderWatch.reset(transitionDuration);\n\t            yAxis.duration(transitionDuration);\n\t            xAxis.duration(transitionDuration);\n\t        }},\n\t        rightAlignYAxis: {get: function(){return rightAlignYAxis;}, set: function(_){\n\t            rightAlignYAxis = _;\n\t            yAxis.orient( (_) ? 'right' : 'left');\n\t        }},\n\t        useInteractiveGuideline: {get: function(){return useInteractiveGuideline;}, set: function(_){\n\t            useInteractiveGuideline = _;\n\t            if (_ === true) {\n\t                chart.interactive(false);\n\t            }\n\t        }}\n\t    });\n\t\n\t    nv.utils.inheritOptions(chart, bars);\n\t    nv.utils.initOptions(chart);\n\t\n\t    return chart;\n\t};\n\t\n\t\n\t// ohlcChart is just a historical chart with ohlc bars and some tweaks\n\tnv.models.ohlcBarChart = function() {\n\t    var chart = nv.models.historicalBarChart(nv.models.ohlcBar());\n\t\n\t    // special default tooltip since we show multiple values per x\n\t    chart.useInteractiveGuideline(true);\n\t    chart.interactiveLayer.tooltip.contentGenerator(function(data) {\n\t        // we assume only one series exists for this chart\n\t        var d = data.series[0].data;\n\t        // match line colors as defined in nv.d3.css\n\t        var color = d.open < d.close ? \"2ca02c\" : \"d62728\";\n\t        return '' +\n\t            '<h3 style=\"color: #' + color + '\">' + data.value + '</h3>' +\n\t            '<table>' +\n\t            '<tr><td>open:</td><td>' + chart.yAxis.tickFormat()(d.open) + '</td></tr>' +\n\t            '<tr><td>close:</td><td>' + chart.yAxis.tickFormat()(d.close) + '</td></tr>' +\n\t            '<tr><td>high</td><td>' + chart.yAxis.tickFormat()(d.high) + '</td></tr>' +\n\t            '<tr><td>low:</td><td>' + chart.yAxis.tickFormat()(d.low) + '</td></tr>' +\n\t            '</table>';\n\t    });\n\t    return chart;\n\t};\n\t\n\t// candlestickChart is just a historical chart with candlestick bars and some tweaks\n\tnv.models.candlestickBarChart = function() {\n\t    var chart = nv.models.historicalBarChart(nv.models.candlestickBar());\n\t\n\t    // special default tooltip since we show multiple values per x\n\t    chart.useInteractiveGuideline(true);\n\t    chart.interactiveLayer.tooltip.contentGenerator(function(data) {\n\t        // we assume only one series exists for this chart\n\t        var d = data.series[0].data;\n\t        // match line colors as defined in nv.d3.css\n\t        var color = d.open < d.close ? \"2ca02c\" : \"d62728\";\n\t        return '' +\n\t            '<h3 style=\"color: #' + color + '\">' + data.value + '</h3>' +\n\t            '<table>' +\n\t            '<tr><td>open:</td><td>' + chart.yAxis.tickFormat()(d.open) + '</td></tr>' +\n\t            '<tr><td>close:</td><td>' + chart.yAxis.tickFormat()(d.close) + '</td></tr>' +\n\t            '<tr><td>high</td><td>' + chart.yAxis.tickFormat()(d.high) + '</td></tr>' +\n\t            '<tr><td>low:</td><td>' + chart.yAxis.tickFormat()(d.low) + '</td></tr>' +\n\t            '</table>';\n\t    });\n\t    return chart;\n\t};\n\tnv.models.legend = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var margin = {top: 5, right: 0, bottom: 5, left: 0}\n\t        , width = 400\n\t        , height = 20\n\t        , getKey = function(d) { return d.key }\n\t        , keyFormatter = function (d) { return d }\n\t        , color = nv.utils.getColor()\n\t        , maxKeyLength = 20 //default value for key lengths\n\t        , align = true\n\t        , padding = 32 //define how much space between legend items. - recommend 32 for furious version\n\t        , rightAlign = true\n\t        , updateState = true   //If true, legend will update data.disabled and trigger a 'stateChange' dispatch.\n\t        , radioButtonMode = false   //If true, clicking legend items will cause it to behave like a radio button. (only one can be selected at a time)\n\t        , expanded = false\n\t        , dispatch = d3.dispatch('legendClick', 'legendDblclick', 'legendMouseover', 'legendMouseout', 'stateChange')\n\t        , vers = 'classic' //Options are \"classic\" and \"furious\"\n\t        ;\n\t\n\t    function chart(selection) {\n\t        selection.each(function(data) {\n\t            var availableWidth = width - margin.left - margin.right,\n\t                container = d3.select(this);\n\t            nv.utils.initSVG(container);\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = container.selectAll('g.nv-legend').data([data]);\n\t            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-legend').append('g');\n\t            var g = wrap.select('g');\n\t\n\t            if (rightAlign)\n\t                wrap.attr('transform', 'translate(' + (- margin.right) + ',' + margin.top + ')');\n\t            else\n\t                wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            var series = g.selectAll('.nv-series')\n\t                .data(function(d) {\n\t                    if(vers != 'furious') return d;\n\t\n\t                    return d.filter(function(n) {\n\t                        return expanded ? true : !n.disengaged;\n\t                    });\n\t                });\n\t\n\t            var seriesEnter = series.enter().append('g').attr('class', 'nv-series');\n\t            var seriesShape;\n\t\n\t            var versPadding;\n\t            switch(vers) {\n\t                case 'furious' :\n\t                    versPadding = 23;\n\t                    break;\n\t                case 'classic' :\n\t                    versPadding = 20;\n\t            }\n\t\n\t            if(vers == 'classic') {\n\t                seriesEnter.append('circle')\n\t                    .style('stroke-width', 2)\n\t                    .attr('class','nv-legend-symbol')\n\t                    .attr('r', 5);\n\t\n\t                seriesShape = series.select('.nv-legend-symbol');\n\t            } else if (vers == 'furious') {\n\t                seriesEnter.append('rect')\n\t                    .style('stroke-width', 2)\n\t                    .attr('class','nv-legend-symbol')\n\t                    .attr('rx', 3)\n\t                    .attr('ry', 3);\n\t                seriesShape = series.select('.nv-legend-symbol');\n\t\n\t                seriesEnter.append('g')\n\t                    .attr('class', 'nv-check-box')\n\t                    .property('innerHTML','<path d=\"M0.5,5 L22.5,5 L22.5,26.5 L0.5,26.5 L0.5,5 Z\" class=\"nv-box\"></path><path d=\"M5.5,12.8618467 L11.9185089,19.2803556 L31,0.198864511\" class=\"nv-check\"></path>')\n\t                    .attr('transform', 'translate(-10,-8)scale(0.5)');\n\t\n\t                var seriesCheckbox = series.select('.nv-check-box');\n\t\n\t                seriesCheckbox.each(function(d,i) {\n\t                    d3.select(this).selectAll('path')\n\t                        .attr('stroke', setTextColor(d,i));\n\t                });\n\t            }\n\t\n\t            seriesEnter.append('text')\n\t                .attr('text-anchor', 'start')\n\t                .attr('class','nv-legend-text')\n\t                .attr('dy', '.32em')\n\t                .attr('dx', '8');\n\t\n\t            var seriesText = series.select('text.nv-legend-text');\n\t\n\t            series\n\t                .on('mouseover', function(d,i) {\n\t                    dispatch.legendMouseover(d,i);  //TODO: Make consistent with other event objects\n\t                })\n\t                .on('mouseout', function(d,i) {\n\t                    dispatch.legendMouseout(d,i);\n\t                })\n\t                .on('click', function(d,i) {\n\t                    dispatch.legendClick(d,i);\n\t                    // make sure we re-get data in case it was modified\n\t                    var data = series.data();\n\t                    if (updateState) {\n\t                        if(vers =='classic') {\n\t                            if (radioButtonMode) {\n\t                                //Radio button mode: set every series to disabled,\n\t                                //  and enable the clicked series.\n\t                                data.forEach(function(series) { series.disabled = true});\n\t                                d.disabled = false;\n\t                            }\n\t                            else {\n\t                                d.disabled = !d.disabled;\n\t                                if (data.every(function(series) { return series.disabled})) {\n\t                                    //the default behavior of NVD3 legends is, if every single series\n\t                                    // is disabled, turn all series' back on.\n\t                                    data.forEach(function(series) { series.disabled = false});\n\t                                }\n\t                            }\n\t                        } else if(vers == 'furious') {\n\t                            if(expanded) {\n\t                                d.disengaged = !d.disengaged;\n\t                                d.userDisabled = d.userDisabled == undefined ? !!d.disabled : d.userDisabled;\n\t                                d.disabled = d.disengaged || d.userDisabled;\n\t                            } else if (!expanded) {\n\t                                d.disabled = !d.disabled;\n\t                                d.userDisabled = d.disabled;\n\t                                var engaged = data.filter(function(d) { return !d.disengaged; });\n\t                                if (engaged.every(function(series) { return series.userDisabled })) {\n\t                                    //the default behavior of NVD3 legends is, if every single series\n\t                                    // is disabled, turn all series' back on.\n\t                                    data.forEach(function(series) {\n\t                                        series.disabled = series.userDisabled = false;\n\t                                    });\n\t                                }\n\t                            }\n\t                        }\n\t                        dispatch.stateChange({\n\t                            disabled: data.map(function(d) { return !!d.disabled }),\n\t                            disengaged: data.map(function(d) { return !!d.disengaged })\n\t                        });\n\t\n\t                    }\n\t                })\n\t                .on('dblclick', function(d,i) {\n\t                    if(vers == 'furious' && expanded) return;\n\t                    dispatch.legendDblclick(d,i);\n\t                    if (updateState) {\n\t                        // make sure we re-get data in case it was modified\n\t                        var data = series.data();\n\t                        //the default behavior of NVD3 legends, when double clicking one,\n\t                        // is to set all other series' to false, and make the double clicked series enabled.\n\t                        data.forEach(function(series) {\n\t                            series.disabled = true;\n\t                            if(vers == 'furious') series.userDisabled = series.disabled;\n\t                        });\n\t                        d.disabled = false;\n\t                        if(vers == 'furious') d.userDisabled = d.disabled;\n\t                        dispatch.stateChange({\n\t                            disabled: data.map(function(d) { return !!d.disabled })\n\t                        });\n\t                    }\n\t                });\n\t\n\t            series.classed('nv-disabled', function(d) { return d.userDisabled });\n\t            series.exit().remove();\n\t\n\t            seriesText\n\t                .attr('fill', setTextColor)\n\t                .text(function (d) { return keyFormatter(getKey(d)) });\n\t\n\t            //TODO: implement fixed-width and max-width options (max-width is especially useful with the align option)\n\t            // NEW ALIGNING CODE, TODO: clean up\n\t            var legendWidth = 0;\n\t            if (align) {\n\t\n\t                var seriesWidths = [];\n\t                series.each(function(d,i) {\n\t                    var legendText;\n\t                    if (keyFormatter(getKey(d)) && keyFormatter(getKey(d)).length > maxKeyLength) {\n\t                        var trimmedKey = keyFormatter(getKey(d)).substring(0, maxKeyLength);\n\t                        legendText = d3.select(this).select('text').text(trimmedKey + \"...\");\n\t                        d3.select(this).append(\"svg:title\").text(keyFormatter(getKey(d)));\n\t                    } else {\n\t                        legendText = d3.select(this).select('text');\n\t                    }\n\t                    var nodeTextLength;\n\t                    try {\n\t                        nodeTextLength = legendText.node().getComputedTextLength();\n\t                        // If the legendText is display:none'd (nodeTextLength == 0), simulate an error so we approximate, instead\n\t                        if(nodeTextLength <= 0) throw Error();\n\t                    }\n\t                    catch(e) {\n\t                        nodeTextLength = nv.utils.calcApproxTextWidth(legendText);\n\t                    }\n\t\n\t                    seriesWidths.push(nodeTextLength + padding);\n\t                });\n\t\n\t                var seriesPerRow = 0;\n\t                var columnWidths = [];\n\t                legendWidth = 0;\n\t\n\t                while ( legendWidth < availableWidth && seriesPerRow < seriesWidths.length) {\n\t                    columnWidths[seriesPerRow] = seriesWidths[seriesPerRow];\n\t                    legendWidth += seriesWidths[seriesPerRow++];\n\t                }\n\t                if (seriesPerRow === 0) seriesPerRow = 1; //minimum of one series per row\n\t\n\t                while ( legendWidth > availableWidth && seriesPerRow > 1 ) {\n\t                    columnWidths = [];\n\t                    seriesPerRow--;\n\t\n\t                    for (var k = 0; k < seriesWidths.length; k++) {\n\t                        if (seriesWidths[k] > (columnWidths[k % seriesPerRow] || 0) )\n\t                            columnWidths[k % seriesPerRow] = seriesWidths[k];\n\t                    }\n\t\n\t                    legendWidth = columnWidths.reduce(function(prev, cur, index, array) {\n\t                        return prev + cur;\n\t                    });\n\t                }\n\t\n\t                var xPositions = [];\n\t                for (var i = 0, curX = 0; i < seriesPerRow; i++) {\n\t                    xPositions[i] = curX;\n\t                    curX += columnWidths[i];\n\t                }\n\t\n\t                series\n\t                    .attr('transform', function(d, i) {\n\t                        return 'translate(' + xPositions[i % seriesPerRow] + ',' + (5 + Math.floor(i / seriesPerRow) * versPadding) + ')';\n\t                    });\n\t\n\t                //position legend as far right as possible within the total width\n\t                if (rightAlign) {\n\t                    g.attr('transform', 'translate(' + (width - margin.right - legendWidth) + ',' + margin.top + ')');\n\t                }\n\t                else {\n\t                    g.attr('transform', 'translate(0' + ',' + margin.top + ')');\n\t                }\n\t\n\t                height = margin.top + margin.bottom + (Math.ceil(seriesWidths.length / seriesPerRow) * versPadding);\n\t\n\t            } else {\n\t\n\t                var ypos = 5,\n\t                    newxpos = 5,\n\t                    maxwidth = 0,\n\t                    xpos;\n\t                series\n\t                    .attr('transform', function(d, i) {\n\t                        var length = d3.select(this).select('text').node().getComputedTextLength() + padding;\n\t                        xpos = newxpos;\n\t\n\t                        if (width < margin.left + margin.right + xpos + length) {\n\t                            newxpos = xpos = 5;\n\t                            ypos += versPadding;\n\t                        }\n\t\n\t                        newxpos += length;\n\t                        if (newxpos > maxwidth) maxwidth = newxpos;\n\t\n\t                        if(legendWidth < xpos + maxwidth) {\n\t                            legendWidth = xpos + maxwidth;\n\t                        }\n\t                        return 'translate(' + xpos + ',' + ypos + ')';\n\t                    });\n\t\n\t                //position legend as far right as possible within the total width\n\t                g.attr('transform', 'translate(' + (width - margin.right - maxwidth) + ',' + margin.top + ')');\n\t\n\t                height = margin.top + margin.bottom + ypos + 15;\n\t            }\n\t\n\t            if(vers == 'furious') {\n\t                // Size rectangles after text is placed\n\t                seriesShape\n\t                    .attr('width', function(d,i) {\n\t                        return seriesText[0][i].getComputedTextLength() + 27;\n\t                    })\n\t                    .attr('height', 18)\n\t                    .attr('y', -9)\n\t                    .attr('x', -15);\n\t\n\t                // The background for the expanded legend (UI)\n\t                gEnter.insert('rect',':first-child')\n\t                    .attr('class', 'nv-legend-bg')\n\t                    .attr('fill', '#eee')\n\t                    // .attr('stroke', '#444')\n\t                    .attr('opacity',0);\n\t\n\t                var seriesBG = g.select('.nv-legend-bg');\n\t\n\t                seriesBG\n\t                .transition().duration(300)\n\t                    .attr('x', -versPadding )\n\t                    .attr('width', legendWidth + versPadding - 12)\n\t                    .attr('height', height + 10)\n\t                    .attr('y', -margin.top - 10)\n\t                    .attr('opacity', expanded ? 1 : 0);\n\t\n\t\n\t            }\n\t\n\t            seriesShape\n\t                .style('fill', setBGColor)\n\t                .style('fill-opacity', setBGOpacity)\n\t                .style('stroke', setBGColor);\n\t        });\n\t\n\t        function setTextColor(d,i) {\n\t            if(vers != 'furious') return '#000';\n\t            if(expanded) {\n\t                return d.disengaged ? '#000' : '#fff';\n\t            } else if (!expanded) {\n\t                if(!d.color) d.color = color(d,i);\n\t                return !!d.disabled ? d.color : '#fff';\n\t            }\n\t        }\n\t\n\t        function setBGColor(d,i) {\n\t            if(expanded && vers == 'furious') {\n\t                return d.disengaged ? '#eee' : d.color || color(d,i);\n\t            } else {\n\t                return d.color || color(d,i);\n\t            }\n\t        }\n\t\n\t\n\t        function setBGOpacity(d,i) {\n\t            if(expanded && vers == 'furious') {\n\t                return 1;\n\t            } else {\n\t                return !!d.disabled ? 0 : 1;\n\t            }\n\t        }\n\t\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    chart.dispatch = dispatch;\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:          {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:         {get: function(){return height;}, set: function(_){height=_;}},\n\t        key:            {get: function(){return getKey;}, set: function(_){getKey=_;}},\n\t        keyFormatter:   {get: function(){return keyFormatter;}, set: function(_){keyFormatter=_;}},\n\t        align:          {get: function(){return align;}, set: function(_){align=_;}},\n\t        maxKeyLength:   {get: function(){return maxKeyLength;}, set: function(_){maxKeyLength=_;}},\n\t        rightAlign:     {get: function(){return rightAlign;}, set: function(_){rightAlign=_;}},\n\t        padding:        {get: function(){return padding;}, set: function(_){padding=_;}},\n\t        updateState:    {get: function(){return updateState;}, set: function(_){updateState=_;}},\n\t        radioButtonMode:{get: function(){return radioButtonMode;}, set: function(_){radioButtonMode=_;}},\n\t        expanded:       {get: function(){return expanded;}, set: function(_){expanded=_;}},\n\t        vers:           {get: function(){return vers;}, set: function(_){vers=_;}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }},\n\t        color:  {get: function(){return color;}, set: function(_){\n\t            color = nv.utils.getColor(_);\n\t        }}\n\t    });\n\t\n\t    nv.utils.initOptions(chart);\n\t\n\t    return chart;\n\t};\n\t\n\tnv.models.line = function() {\n\t    \"use strict\";\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var  scatter = nv.models.scatter()\n\t        ;\n\t\n\t    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n\t        , width = 960\n\t        , height = 500\n\t        , container = null\n\t        , strokeWidth = 1.5\n\t        , color = nv.utils.defaultColor() // a function that returns a color\n\t        , getX = function(d) { return d.x } // accessor to get the x value from a data point\n\t        , getY = function(d) { return d.y } // accessor to get the y value from a data point\n\t        , defined = function(d,i) { return !isNaN(getY(d,i)) && getY(d,i) !== null } // allows a line to be not continuous when it is not defined\n\t        , isArea = function(d) { return d.area } // decides if a line is an area or just a line\n\t        , clipEdge = false // if true, masks lines within x and y scale\n\t        , x //can be accessed via chart.xScale()\n\t        , y //can be accessed via chart.yScale()\n\t        , interpolate = \"linear\" // controls the line interpolation\n\t        , duration = 250\n\t        , dispatch = d3.dispatch('elementClick', 'elementMouseover', 'elementMouseout', 'renderEnd')\n\t        ;\n\t\n\t    scatter\n\t        .pointSize(16) // default size\n\t        .pointDomain([16,256]) //set to speed up calculation, needs to be unset if there is a custom size accessor\n\t    ;\n\t\n\t    //============================================================\n\t\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    var x0, y0 //used to store previous scales\n\t        , renderWatch = nv.utils.renderWatch(dispatch, duration)\n\t        ;\n\t\n\t    //============================================================\n\t\n\t\n\t    function chart(selection) {\n\t        renderWatch.reset();\n\t        renderWatch.models(scatter);\n\t        selection.each(function(data) {\n\t            container = d3.select(this);\n\t            var availableWidth = nv.utils.availableWidth(width, container, margin),\n\t                availableHeight = nv.utils.availableHeight(height, container, margin);\n\t            nv.utils.initSVG(container);\n\t\n\t            // Setup Scales\n\t            x = scatter.xScale();\n\t            y = scatter.yScale();\n\t\n\t            x0 = x0 || x;\n\t            y0 = y0 || y;\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = container.selectAll('g.nv-wrap.nv-line').data([data]);\n\t            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-line');\n\t            var defsEnter = wrapEnter.append('defs');\n\t            var gEnter = wrapEnter.append('g');\n\t            var g = wrap.select('g');\n\t\n\t            gEnter.append('g').attr('class', 'nv-groups');\n\t            gEnter.append('g').attr('class', 'nv-scatterWrap');\n\t\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            scatter\n\t                .width(availableWidth)\n\t                .height(availableHeight);\n\t\n\t            var scatterWrap = wrap.select('.nv-scatterWrap');\n\t            scatterWrap.call(scatter);\n\t\n\t            defsEnter.append('clipPath')\n\t                .attr('id', 'nv-edge-clip-' + scatter.id())\n\t                .append('rect');\n\t\n\t            wrap.select('#nv-edge-clip-' + scatter.id() + ' rect')\n\t                .attr('width', availableWidth)\n\t                .attr('height', (availableHeight > 0) ? availableHeight : 0);\n\t\n\t            g   .attr('clip-path', clipEdge ? 'url(#nv-edge-clip-' + scatter.id() + ')' : '');\n\t            scatterWrap\n\t                .attr('clip-path', clipEdge ? 'url(#nv-edge-clip-' + scatter.id() + ')' : '');\n\t\n\t            var groups = wrap.select('.nv-groups').selectAll('.nv-group')\n\t                .data(function(d) { return d }, function(d) { return d.key });\n\t            groups.enter().append('g')\n\t                .style('stroke-opacity', 1e-6)\n\t                .style('stroke-width', function(d) { return d.strokeWidth || strokeWidth })\n\t                .style('fill-opacity', 1e-6);\n\t\n\t            groups.exit().remove();\n\t\n\t            groups\n\t                .attr('class', function(d,i) {\n\t                    return (d.classed || '') + ' nv-group nv-series-' + i;\n\t                })\n\t                .classed('hover', function(d) { return d.hover })\n\t                .style('fill', function(d,i){ return color(d, i) })\n\t                .style('stroke', function(d,i){ return color(d, i)});\n\t            groups.watchTransition(renderWatch, 'line: groups')\n\t                .style('stroke-opacity', 1)\n\t                .style('fill-opacity', function(d) { return d.fillOpacity || .5});\n\t\n\t            var areaPaths = groups.selectAll('path.nv-area')\n\t                .data(function(d) { return isArea(d) ? [d] : [] }); // this is done differently than lines because I need to check if series is an area\n\t            areaPaths.enter().append('path')\n\t                .attr('class', 'nv-area')\n\t                .attr('d', function(d) {\n\t                    return d3.svg.area()\n\t                        .interpolate(interpolate)\n\t                        .defined(defined)\n\t                        .x(function(d,i) { return nv.utils.NaNtoZero(x0(getX(d,i))) })\n\t                        .y0(function(d,i) { return nv.utils.NaNtoZero(y0(getY(d,i))) })\n\t                        .y1(function(d,i) { return y0( y.domain()[0] <= 0 ? y.domain()[1] >= 0 ? 0 : y.domain()[1] : y.domain()[0] ) })\n\t                        //.y1(function(d,i) { return y0(0) }) //assuming 0 is within y domain.. may need to tweak this\n\t                        .apply(this, [d.values])\n\t                });\n\t            groups.exit().selectAll('path.nv-area')\n\t                .remove();\n\t\n\t            areaPaths.watchTransition(renderWatch, 'line: areaPaths')\n\t                .attr('d', function(d) {\n\t                    return d3.svg.area()\n\t                        .interpolate(interpolate)\n\t                        .defined(defined)\n\t                        .x(function(d,i) { return nv.utils.NaNtoZero(x(getX(d,i))) })\n\t                        .y0(function(d,i) { return nv.utils.NaNtoZero(y(getY(d,i))) })\n\t                        .y1(function(d,i) { return y( y.domain()[0] <= 0 ? y.domain()[1] >= 0 ? 0 : y.domain()[1] : y.domain()[0] ) })\n\t                        //.y1(function(d,i) { return y0(0) }) //assuming 0 is within y domain.. may need to tweak this\n\t                        .apply(this, [d.values])\n\t                });\n\t\n\t            var linePaths = groups.selectAll('path.nv-line')\n\t                .data(function(d) { return [d.values] });\n\t\n\t            linePaths.enter().append('path')\n\t                .attr('class', 'nv-line')\n\t                .attr('d',\n\t                    d3.svg.line()\n\t                    .interpolate(interpolate)\n\t                    .defined(defined)\n\t                    .x(function(d,i) { return nv.utils.NaNtoZero(x0(getX(d,i))) })\n\t                    .y(function(d,i) { return nv.utils.NaNtoZero(y0(getY(d,i))) })\n\t            );\n\t\n\t            linePaths.watchTransition(renderWatch, 'line: linePaths')\n\t                .attr('d',\n\t                    d3.svg.line()\n\t                    .interpolate(interpolate)\n\t                    .defined(defined)\n\t                    .x(function(d,i) { return nv.utils.NaNtoZero(x(getX(d,i))) })\n\t                    .y(function(d,i) { return nv.utils.NaNtoZero(y(getY(d,i))) })\n\t            );\n\t\n\t            //store old scales for use in transitions on update\n\t            x0 = x.copy();\n\t            y0 = y.copy();\n\t        });\n\t        renderWatch.renderEnd('line immediate');\n\t        return chart;\n\t    }\n\t\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    chart.dispatch = dispatch;\n\t    chart.scatter = scatter;\n\t    // Pass through events\n\t    scatter.dispatch.on('elementClick', function(){ dispatch.elementClick.apply(this, arguments); });\n\t    scatter.dispatch.on('elementMouseover', function(){ dispatch.elementMouseover.apply(this, arguments); });\n\t    scatter.dispatch.on('elementMouseout', function(){ dispatch.elementMouseout.apply(this, arguments); });\n\t\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:      {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:     {get: function(){return height;}, set: function(_){height=_;}},\n\t        defined: {get: function(){return defined;}, set: function(_){defined=_;}},\n\t        interpolate:      {get: function(){return interpolate;}, set: function(_){interpolate=_;}},\n\t        clipEdge:    {get: function(){return clipEdge;}, set: function(_){clipEdge=_;}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }},\n\t        duration: {get: function(){return duration;}, set: function(_){\n\t            duration = _;\n\t            renderWatch.reset(duration);\n\t            scatter.duration(duration);\n\t        }},\n\t        isArea: {get: function(){return isArea;}, set: function(_){\n\t            isArea = d3.functor(_);\n\t        }},\n\t        x: {get: function(){return getX;}, set: function(_){\n\t            getX = _;\n\t            scatter.x(_);\n\t        }},\n\t        y: {get: function(){return getY;}, set: function(_){\n\t            getY = _;\n\t            scatter.y(_);\n\t        }},\n\t        color:  {get: function(){return color;}, set: function(_){\n\t            color = nv.utils.getColor(_);\n\t            scatter.color(color);\n\t        }}\n\t    });\n\t\n\t    nv.utils.inheritOptions(chart, scatter);\n\t    nv.utils.initOptions(chart);\n\t\n\t    return chart;\n\t};\n\tnv.models.lineChart = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var lines = nv.models.line()\n\t        , xAxis = nv.models.axis()\n\t        , yAxis = nv.models.axis()\n\t        , legend = nv.models.legend()\n\t        , interactiveLayer = nv.interactiveGuideline()\n\t        , tooltip = nv.models.tooltip()\n\t        , focus = nv.models.focus(nv.models.line())\n\t        ;\n\t\n\t    var margin = {top: 30, right: 20, bottom: 50, left: 60}\n\t        , marginTop = null\n\t        , color = nv.utils.defaultColor()\n\t        , width = null\n\t        , height = null\n\t        , showLegend = true\n\t        , legendPosition = 'top'\n\t        , showXAxis = true\n\t        , showYAxis = true\n\t        , rightAlignYAxis = false\n\t        , useInteractiveGuideline = false\n\t        , x\n\t        , y\n\t        , focusEnable = false\n\t        , state = nv.utils.state()\n\t        , defaultState = null\n\t        , noData = null\n\t        , dispatch = d3.dispatch('tooltipShow', 'tooltipHide', 'stateChange', 'changeState', 'renderEnd')\n\t        , duration = 250\n\t        ;\n\t\n\t    // set options on sub-objects for this chart\n\t    xAxis.orient('bottom').tickPadding(7);\n\t    yAxis.orient(rightAlignYAxis ? 'right' : 'left');\n\t\n\t    lines.clipEdge(true).duration(0);\n\t\n\t    tooltip.valueFormatter(function(d, i) {\n\t        return yAxis.tickFormat()(d, i);\n\t    }).headerFormatter(function(d, i) {\n\t        return xAxis.tickFormat()(d, i);\n\t    });\n\t\n\t    interactiveLayer.tooltip.valueFormatter(function(d, i) {\n\t        return yAxis.tickFormat()(d, i);\n\t    }).headerFormatter(function(d, i) {\n\t        return xAxis.tickFormat()(d, i);\n\t    });\n\t\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\t\n\t    var stateGetter = function(data) {\n\t        return function(){\n\t            return {\n\t                active: data.map(function(d) { return !d.disabled; })\n\t            };\n\t        };\n\t    };\n\t\n\t    var stateSetter = function(data) {\n\t        return function(state) {\n\t            if (state.active !== undefined)\n\t                data.forEach(function(series,i) {\n\t                    series.disabled = !state.active[i];\n\t                });\n\t        };\n\t    };\n\t\n\t    function chart(selection) {\n\t        renderWatch.reset();\n\t        renderWatch.models(lines);\n\t        if (showXAxis) renderWatch.models(xAxis);\n\t        if (showYAxis) renderWatch.models(yAxis);\n\t\n\t        selection.each(function(data) {\n\t            var container = d3.select(this);\n\t            nv.utils.initSVG(container);\n\t            var availableWidth = nv.utils.availableWidth(width, container, margin),\n\t                availableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n\t            chart.update = function() {\n\t                if( duration === 0 ) {\n\t                    container.call( chart );\n\t                } else {\n\t                    container.transition().duration(duration).call(chart);\n\t                }\n\t            };\n\t            chart.container = this;\n\t\n\t            state\n\t                .setter(stateSetter(data), chart.update)\n\t                .getter(stateGetter(data))\n\t                .update();\n\t\n\t            // DEPRECATED set state.disabled\n\t            state.disabled = data.map(function(d) { return !!d.disabled; });\n\t\n\t            if (!defaultState) {\n\t                var key;\n\t                defaultState = {};\n\t                for (key in state) {\n\t                    if (state[key] instanceof Array)\n\t                        defaultState[key] = state[key].slice(0);\n\t                    else\n\t                        defaultState[key] = state[key];\n\t                }\n\t            }\n\t\n\t            // Display noData message if there's nothing to show.\n\t            if (!data || !data.length || !data.filter(function(d) { return d.values.length; }).length) {\n\t                nv.utils.noData(chart, container);\n\t                return chart;\n\t            } else {\n\t                container.selectAll('.nv-noData').remove();\n\t            }\n\t\n\t            /* Update `main' graph on brush update. */\n\t            focus.dispatch.on(\"onBrush\", function(extent) {\n\t                onBrush(extent);\n\t            });\n\t\n\t            // Setup Scales\n\t            x = lines.xScale();\n\t            y = lines.yScale();\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = container.selectAll('g.nv-wrap.nv-lineChart').data([data]);\n\t            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-lineChart').append('g');\n\t            var g = wrap.select('g');\n\t\n\t            gEnter.append('g').attr('class', 'nv-legendWrap');\n\t\n\t            var focusEnter = gEnter.append('g').attr('class', 'nv-focus');\n\t            focusEnter.append('g').attr('class', 'nv-background').append('rect');\n\t            focusEnter.append('g').attr('class', 'nv-x nv-axis');\n\t            focusEnter.append('g').attr('class', 'nv-y nv-axis');\n\t            focusEnter.append('g').attr('class', 'nv-linesWrap');\n\t            focusEnter.append('g').attr('class', 'nv-interactive');\n\t\n\t            var contextEnter = gEnter.append('g').attr('class', 'nv-focusWrap');\n\t\n\t            // Legend\n\t            if (!showLegend) {\n\t                g.select('.nv-legendWrap').selectAll('*').remove();\n\t            } else {\n\t                legend.width(availableWidth);\n\t\n\t                g.select('.nv-legendWrap')\n\t                    .datum(data)\n\t                    .call(legend);\n\t\n\t                if (legendPosition === 'bottom') {\n\t                    wrap.select('.nv-legendWrap')\n\t                        .attr('transform', 'translate(0,' + availableHeight +')');\n\t                } else if (legendPosition === 'top') {\n\t                    if (!marginTop && legend.height() !== margin.top) {\n\t                        margin.top = legend.height();\n\t                        availableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n\t                    }\n\t\n\t                    wrap.select('.nv-legendWrap')\n\t                        .attr('transform', 'translate(0,' + (-margin.top) +')');\n\t                }\n\t            }\n\t\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            if (rightAlignYAxis) {\n\t                g.select(\".nv-y.nv-axis\")\n\t                    .attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n\t            }\n\t\n\t            //Set up interactive layer\n\t            if (useInteractiveGuideline) {\n\t                interactiveLayer\n\t                    .width(availableWidth)\n\t                    .height(availableHeight)\n\t                    .margin({left:margin.left, top:margin.top})\n\t                    .svgContainer(container)\n\t                    .xScale(x);\n\t                wrap.select(\".nv-interactive\").call(interactiveLayer);\n\t            }\n\t\n\t            g.select('.nv-focus .nv-background rect')\n\t                .attr('width', availableWidth)\n\t                .attr('height', availableHeight);\n\t\n\t            lines\n\t                .width(availableWidth)\n\t                .height(availableHeight)\n\t                .color(data.map(function(d,i) {\n\t                    return d.color || color(d, i);\n\t                }).filter(function(d,i) { return !data[i].disabled; }));\n\t\n\t            var linesWrap = g.select('.nv-linesWrap')\n\t                .datum(data.filter(function(d) { return !d.disabled; }));\n\t\n\t\n\t            // Setup Main (Focus) Axes\n\t            if (showXAxis) {\n\t                xAxis\n\t                    .scale(x)\n\t                    ._ticks(nv.utils.calcTicksX(availableWidth/100, data) )\n\t                    .tickSize(-availableHeight, 0);\n\t            }\n\t\n\t            if (showYAxis) {\n\t                yAxis\n\t                    .scale(y)\n\t                    ._ticks( nv.utils.calcTicksY(availableHeight/36, data) )\n\t                    .tickSize( -availableWidth, 0);\n\t            }\n\t\n\t            //============================================================\n\t            // Update Axes\n\t            //============================================================\n\t            function updateXAxis() {\n\t              if(showXAxis) {\n\t                g.select('.nv-focus .nv-x.nv-axis')\n\t                  .transition()\n\t                  .duration(duration)\n\t                  .call(xAxis)\n\t                ;\n\t              }\n\t            }\n\t\n\t            function updateYAxis() {\n\t              if(showYAxis) {\n\t                g.select('.nv-focus .nv-y.nv-axis')\n\t                  .transition()\n\t                  .duration(duration)\n\t                  .call(yAxis)\n\t                ;\n\t              }\n\t            }\n\t\n\t            g.select('.nv-focus .nv-x.nv-axis')\n\t                .attr('transform', 'translate(0,' + availableHeight + ')');\n\t\n\t            //============================================================\n\t            // Update Focus\n\t            //============================================================\n\t            if(!focusEnable) {\n\t                linesWrap.call(lines);\n\t                updateXAxis();\n\t                updateYAxis();\n\t            } else {\n\t                focus.width(availableWidth);\n\t                g.select('.nv-focusWrap')\n\t                    .attr('transform', 'translate(0,' + ( availableHeight + margin.bottom + focus.margin().top) + ')')\n\t                    .datum(data.filter(function(d) { return !d.disabled; }))\n\t                    .call(focus);\n\t                var extent = focus.brush.empty() ? focus.xDomain() : focus.brush.extent();\n\t                if(extent !== null){\n\t                    onBrush(extent);\n\t                }\n\t            }\n\t            //============================================================\n\t            // Event Handling/Dispatching (in chart's scope)\n\t            //------------------------------------------------------------\n\t\n\t            legend.dispatch.on('stateChange', function(newState) {\n\t                for (var key in newState)\n\t                    state[key] = newState[key];\n\t                dispatch.stateChange(state);\n\t                chart.update();\n\t            });\n\t\n\t            interactiveLayer.dispatch.on('elementMousemove', function(e) {\n\t                lines.clearHighlights();\n\t                var singlePoint, pointIndex, pointXLocation, allData = [];\n\t                data\n\t                    .filter(function(series, i) {\n\t                        series.seriesIndex = i;\n\t                        return !series.disabled && !series.disableTooltip;\n\t                    })\n\t                    .forEach(function(series,i) {\n\t                        var extent = focusEnable ? (focus.brush.empty() ? focus.xScale().domain() : focus.brush.extent()) : x.domain();\n\t                        var currentValues = series.values.filter(function(d,i) {\n\t                            // Checks if the x point is between the extents, handling case where extent[0] is greater than extent[1]\n\t                            // (e.g. x domain is manually set to reverse the x-axis)\n\t                            if(extent[0] <= extent[1]) {\n\t                                return lines.x()(d,i) >= extent[0] && lines.x()(d,i) <= extent[1];\n\t                            } else {\n\t                                return lines.x()(d,i) >= extent[1] && lines.x()(d,i) <= extent[0];\n\t                            }\n\t                        });\n\t\n\t                        pointIndex = nv.interactiveBisect(currentValues, e.pointXValue, lines.x());\n\t                        var point = currentValues[pointIndex];\n\t                        var pointYValue = chart.y()(point, pointIndex);\n\t                        if (pointYValue !== null) {\n\t                            lines.highlightPoint(i, pointIndex, true);\n\t                        }\n\t                        if (point === undefined) return;\n\t                        if (singlePoint === undefined) singlePoint = point;\n\t                        if (pointXLocation === undefined) pointXLocation = chart.xScale()(chart.x()(point,pointIndex));\n\t                        allData.push({\n\t                            key: series.key,\n\t                            value: pointYValue,\n\t                            color: color(series,series.seriesIndex),\n\t                            data: point\n\t                        });\n\t                    });\n\t                //Highlight the tooltip entry based on which point the mouse is closest to.\n\t                if (allData.length > 2) {\n\t                    var yValue = chart.yScale().invert(e.mouseY);\n\t                    var domainExtent = Math.abs(chart.yScale().domain()[0] - chart.yScale().domain()[1]);\n\t                    var threshold = 0.03 * domainExtent;\n\t                    var indexToHighlight = nv.nearestValueIndex(allData.map(function(d){return d.value;}),yValue,threshold);\n\t                    if (indexToHighlight !== null)\n\t                        allData[indexToHighlight].highlight = true;\n\t                }\n\t\n\t                var defaultValueFormatter = function(d,i) {\n\t                    return d == null ? \"N/A\" : yAxis.tickFormat()(d);\n\t                };\n\t\n\t                interactiveLayer.tooltip\n\t                    .valueFormatter(interactiveLayer.tooltip.valueFormatter() || defaultValueFormatter)\n\t                    .data({\n\t                        value: chart.x()( singlePoint,pointIndex ),\n\t                        index: pointIndex,\n\t                        series: allData\n\t                    })();\n\t\n\t                interactiveLayer.renderGuideLine(pointXLocation);\n\t\n\t            });\n\t\n\t            interactiveLayer.dispatch.on('elementClick', function(e) {\n\t                var pointXLocation, allData = [];\n\t\n\t                data.filter(function(series, i) {\n\t                    series.seriesIndex = i;\n\t                    return !series.disabled;\n\t                }).forEach(function(series) {\n\t                    var pointIndex = nv.interactiveBisect(series.values, e.pointXValue, chart.x());\n\t                    var point = series.values[pointIndex];\n\t                    if (typeof point === 'undefined') return;\n\t                    if (typeof pointXLocation === 'undefined') pointXLocation = chart.xScale()(chart.x()(point,pointIndex));\n\t                    var yPos = chart.yScale()(chart.y()(point,pointIndex));\n\t                    allData.push({\n\t                        point: point,\n\t                        pointIndex: pointIndex,\n\t                        pos: [pointXLocation, yPos],\n\t                        seriesIndex: series.seriesIndex,\n\t                        series: series\n\t                    });\n\t                });\n\t\n\t                lines.dispatch.elementClick(allData);\n\t            });\n\t\n\t            interactiveLayer.dispatch.on(\"elementMouseout\",function(e) {\n\t                lines.clearHighlights();\n\t            });\n\t\n\t            dispatch.on('changeState', function(e) {\n\t                if (typeof e.disabled !== 'undefined' && data.length === e.disabled.length) {\n\t                    data.forEach(function(series,i) {\n\t                        series.disabled = e.disabled[i];\n\t                    });\n\t\n\t                    state.disabled = e.disabled;\n\t                }\n\t                chart.update();\n\t            });\n\t\n\t            //============================================================\n\t            // Functions\n\t            //------------------------------------------------------------\n\t\n\t            // Taken from crossfilter (http://square.github.com/crossfilter/)\n\t            function resizePath(d) {\n\t                var e = +(d == 'e'),\n\t                    x = e ? 1 : -1,\n\t                    y = availableHeight / 3;\n\t                return 'M' + (0.5 * x) + ',' + y\n\t                    + 'A6,6 0 0 ' + e + ' ' + (6.5 * x) + ',' + (y + 6)\n\t                    + 'V' + (2 * y - 6)\n\t                    + 'A6,6 0 0 ' + e + ' ' + (0.5 * x) + ',' + (2 * y)\n\t                    + 'Z'\n\t                    + 'M' + (2.5 * x) + ',' + (y + 8)\n\t                    + 'V' + (2 * y - 8)\n\t                    + 'M' + (4.5 * x) + ',' + (y + 8)\n\t                    + 'V' + (2 * y - 8);\n\t            }\n\t\n\t            function onBrush(extent) {\n\t                // Update Main (Focus)\n\t                var focusLinesWrap = g.select('.nv-focus .nv-linesWrap')\n\t                    .datum(\n\t                    data.filter(function(d) { return !d.disabled; })\n\t                        .map(function(d,i) {\n\t                            return {\n\t                                key: d.key,\n\t                                area: d.area,\n\t                                classed: d.classed,\n\t                                values: d.values.filter(function(d,i) {\n\t                                    return lines.x()(d,i) >= extent[0] && lines.x()(d,i) <= extent[1];\n\t                                }),\n\t                                disableTooltip: d.disableTooltip\n\t                            };\n\t                        })\n\t                );\n\t                focusLinesWrap.transition().duration(duration).call(lines);\n\t\n\t                // Update Main (Focus) Axes\n\t                updateXAxis();\n\t                updateYAxis();\n\t            }\n\t        });\n\t\n\t        renderWatch.renderEnd('lineChart immediate');\n\t        return chart;\n\t    }\n\t\n\t\n\t    //============================================================\n\t    // Event Handling/Dispatching (out of chart's scope)\n\t    //------------------------------------------------------------\n\t\n\t    lines.dispatch.on('elementMouseover.tooltip', function(evt) {\n\t        if(!evt.series.disableTooltip){\n\t            tooltip.data(evt).hidden(false);\n\t        }\n\t    });\n\t\n\t    lines.dispatch.on('elementMouseout.tooltip', function(evt) {\n\t        tooltip.hidden(true);\n\t    });\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    // expose chart's sub-components\n\t    chart.dispatch = dispatch;\n\t    chart.lines = lines;\n\t    chart.legend = legend;\n\t    chart.focus = focus;\n\t    chart.xAxis = xAxis;\n\t    chart.x2Axis = focus.xAxis\n\t    chart.yAxis = yAxis;\n\t    chart.y2Axis = focus.yAxis\n\t    chart.interactiveLayer = interactiveLayer;\n\t    chart.tooltip = tooltip;\n\t    chart.state = state;\n\t    chart.dispatch = dispatch;\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:      {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:     {get: function(){return height;}, set: function(_){height=_;}},\n\t        showLegend: {get: function(){return showLegend;}, set: function(_){showLegend=_;}},\n\t        legendPosition: {get: function(){return legendPosition;}, set: function(_){legendPosition=_;}},\n\t        showXAxis:      {get: function(){return showXAxis;}, set: function(_){showXAxis=_;}},\n\t        showYAxis:    {get: function(){return showYAxis;}, set: function(_){showYAxis=_;}},\n\t        defaultState:    {get: function(){return defaultState;}, set: function(_){defaultState=_;}},\n\t        noData:    {get: function(){return noData;}, set: function(_){noData=_;}},\n\t        // Focus options, mostly passed onto focus model.\n\t        focusEnable:    {get: function(){return focusEnable;}, set: function(_){focusEnable=_;}},\n\t        focusHeight:     {get: function(){return focus.height();}, set: function(_){focus.height(_);}},\n\t        focusShowAxisX:    {get: function(){return focus.showXAxis();}, set: function(_){focus.showXAxis(_);}},\n\t        focusShowAxisY:    {get: function(){return focus.showYAxis();}, set: function(_){focus.showYAxis(_);}},\n\t        brushExtent: {get: function(){return focus.brushExtent();}, set: function(_){focus.brushExtent(_);}},\n\t\n\t        // options that require extra logic in the setter\n\t        focusMargin: {get: function(){return focus.margin}, set: function(_){\n\t            if (_.top !== undefined) {\n\t                margin.top = _.top;\n\t                marginTop = _.top;\n\t            }\n\t            focus.margin.right  = _.right  !== undefined ? _.right  : focus.margin.right;\n\t            focus.margin.bottom = _.bottom !== undefined ? _.bottom : focus.margin.bottom;\n\t            focus.margin.left   = _.left   !== undefined ? _.left   : focus.margin.left;\n\t        }},\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }},\n\t        duration: {get: function(){return duration;}, set: function(_){\n\t            duration = _;\n\t            renderWatch.reset(duration);\n\t            lines.duration(duration);\n\t            focus.duration(duration);\n\t            xAxis.duration(duration);\n\t            yAxis.duration(duration);\n\t        }},\n\t        color:  {get: function(){return color;}, set: function(_){\n\t            color = nv.utils.getColor(_);\n\t            legend.color(color);\n\t            lines.color(color);\n\t            focus.color(color);\n\t        }},\n\t        interpolate: {get: function(){return lines.interpolate();}, set: function(_){\n\t            lines.interpolate(_);\n\t            focus.interpolate(_);\n\t        }},\n\t        xTickFormat: {get: function(){return xAxis.tickFormat();}, set: function(_){\n\t            xAxis.tickFormat(_);\n\t            focus.xTickFormat(_);\n\t        }},\n\t        yTickFormat: {get: function(){return yAxis.tickFormat();}, set: function(_){\n\t            yAxis.tickFormat(_);\n\t            focus.yTickFormat(_);\n\t        }},\n\t        x: {get: function(){return lines.x();}, set: function(_){\n\t            lines.x(_);\n\t            focus.x(_);\n\t        }},\n\t        y: {get: function(){return lines.y();}, set: function(_){\n\t            lines.y(_);\n\t            focus.y(_);\n\t        }},\n\t        rightAlignYAxis: {get: function(){return rightAlignYAxis;}, set: function(_){\n\t            rightAlignYAxis = _;\n\t            yAxis.orient( rightAlignYAxis ? 'right' : 'left');\n\t        }},\n\t        useInteractiveGuideline: {get: function(){return useInteractiveGuideline;}, set: function(_){\n\t            useInteractiveGuideline = _;\n\t            if (useInteractiveGuideline) {\n\t                lines.interactive(false);\n\t                lines.useVoronoi(false);\n\t            }\n\t        }}\n\t    });\n\t\n\t    nv.utils.inheritOptions(chart, lines);\n\t    nv.utils.initOptions(chart);\n\t\n\t    return chart;\n\t};\n\t\n\tnv.models.lineWithFocusChart = function() {\n\t  return nv.models.lineChart()\n\t    .margin({ bottom: 30 })\n\t    .focusEnable( true );\n\t};\n\tnv.models.linePlusBarChart = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var lines = nv.models.line()\n\t        , lines2 = nv.models.line()\n\t        , bars = nv.models.historicalBar()\n\t        , bars2 = nv.models.historicalBar()\n\t        , xAxis = nv.models.axis()\n\t        , x2Axis = nv.models.axis()\n\t        , y1Axis = nv.models.axis()\n\t        , y2Axis = nv.models.axis()\n\t        , y3Axis = nv.models.axis()\n\t        , y4Axis = nv.models.axis()\n\t        , legend = nv.models.legend()\n\t        , brush = d3.svg.brush()\n\t        , tooltip = nv.models.tooltip()\n\t        ;\n\t\n\t    var margin = {top: 30, right: 30, bottom: 30, left: 60}\n\t        , marginTop = null\n\t        , margin2 = {top: 0, right: 30, bottom: 20, left: 60}\n\t        , width = null\n\t        , height = null\n\t        , getX = function(d) { return d.x }\n\t        , getY = function(d) { return d.y }\n\t        , color = nv.utils.defaultColor()\n\t        , showLegend = true\n\t        , focusEnable = true\n\t        , focusShowAxisY = false\n\t        , focusShowAxisX = true\n\t        , focusHeight = 50\n\t        , extent\n\t        , brushExtent = null\n\t        , x\n\t        , x2\n\t        , y1\n\t        , y2\n\t        , y3\n\t        , y4\n\t        , noData = null\n\t        , dispatch = d3.dispatch('brush', 'stateChange', 'changeState')\n\t        , transitionDuration = 0\n\t        , state = nv.utils.state()\n\t        , defaultState = null\n\t        , legendLeftAxisHint = ' (left axis)'\n\t        , legendRightAxisHint = ' (right axis)'\n\t        , switchYAxisOrder = false\n\t        ;\n\t\n\t    lines.clipEdge(true);\n\t    lines2.interactive(false);\n\t    // We don't want any points emitted for the focus chart's scatter graph.\n\t    lines2.pointActive(function(d) { return false });\n\t    xAxis.orient('bottom').tickPadding(5);\n\t    y1Axis.orient('left');\n\t    y2Axis.orient('right');\n\t    x2Axis.orient('bottom').tickPadding(5);\n\t    y3Axis.orient('left');\n\t    y4Axis.orient('right');\n\t\n\t    tooltip.headerEnabled(true).headerFormatter(function(d, i) {\n\t        return xAxis.tickFormat()(d, i);\n\t    });\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    var getBarsAxis = function() {\n\t        return switchYAxisOrder\n\t            ? { main: y2Axis, focus: y4Axis }\n\t            : { main: y1Axis, focus: y3Axis }\n\t    }\n\t\n\t    var getLinesAxis = function() {\n\t        return switchYAxisOrder\n\t            ? { main: y1Axis, focus: y3Axis }\n\t            : { main: y2Axis, focus: y4Axis }\n\t    }\n\t\n\t    var stateGetter = function(data) {\n\t        return function(){\n\t            return {\n\t                active: data.map(function(d) { return !d.disabled })\n\t            };\n\t        }\n\t    };\n\t\n\t    var stateSetter = function(data) {\n\t        return function(state) {\n\t            if (state.active !== undefined)\n\t                data.forEach(function(series,i) {\n\t                    series.disabled = !state.active[i];\n\t                });\n\t        }\n\t    };\n\t\n\t    var allDisabled = function(data) {\n\t      return data.every(function(series) {\n\t        return series.disabled;\n\t      });\n\t    }\n\t\n\t    function chart(selection) {\n\t        selection.each(function(data) {\n\t            var container = d3.select(this),\n\t                that = this;\n\t            nv.utils.initSVG(container);\n\t            var availableWidth = nv.utils.availableWidth(width, container, margin),\n\t                availableHeight1 = nv.utils.availableHeight(height, container, margin)\n\t                    - (focusEnable ? focusHeight : 0),\n\t                availableHeight2 = focusHeight - margin2.top - margin2.bottom;\n\t\n\t            chart.update = function() { container.transition().duration(transitionDuration).call(chart); };\n\t            chart.container = this;\n\t\n\t            state\n\t                .setter(stateSetter(data), chart.update)\n\t                .getter(stateGetter(data))\n\t                .update();\n\t\n\t            // DEPRECATED set state.disableddisabled\n\t            state.disabled = data.map(function(d) { return !!d.disabled });\n\t\n\t            if (!defaultState) {\n\t                var key;\n\t                defaultState = {};\n\t                for (key in state) {\n\t                    if (state[key] instanceof Array)\n\t                        defaultState[key] = state[key].slice(0);\n\t                    else\n\t                        defaultState[key] = state[key];\n\t                }\n\t            }\n\t\n\t            // Display No Data message if there's nothing to show.\n\t            if (!data || !data.length || !data.filter(function(d) { return d.values.length }).length) {\n\t                nv.utils.noData(chart, container)\n\t                return chart;\n\t            } else {\n\t                container.selectAll('.nv-noData').remove();\n\t            }\n\t\n\t            // Setup Scales\n\t            var dataBars = data.filter(function(d) { return !d.disabled && d.bar });\n\t            var dataLines = data.filter(function(d) { return !d.bar }); // removed the !d.disabled clause here to fix Issue #240\n\t\n\t            if (dataBars.length && !switchYAxisOrder) {\n\t                x = bars.xScale();\n\t            } else {\n\t                x = lines.xScale();\n\t            }\n\t\n\t            x2 = x2Axis.scale();\n\t\n\t            // select the scales and series based on the position of the yAxis\n\t            y1 = switchYAxisOrder ? lines.yScale() : bars.yScale();\n\t            y2 = switchYAxisOrder ? bars.yScale() : lines.yScale();\n\t            y3 = switchYAxisOrder ? lines2.yScale() : bars2.yScale();\n\t            y4 = switchYAxisOrder ? bars2.yScale() : lines2.yScale();\n\t\n\t            var series1 = data\n\t                .filter(function(d) { return !d.disabled && (switchYAxisOrder ? !d.bar : d.bar) })\n\t                .map(function(d) {\n\t                    return d.values.map(function(d,i) {\n\t                        return { x: getX(d,i), y: getY(d,i) }\n\t                    })\n\t                });\n\t\n\t            var series2 = data\n\t                .filter(function(d) { return !d.disabled && (switchYAxisOrder ? d.bar : !d.bar) })\n\t                .map(function(d) {\n\t                    return d.values.map(function(d,i) {\n\t                        return { x: getX(d,i), y: getY(d,i) }\n\t                    })\n\t                });\n\t\n\t            x.range([0, availableWidth]);\n\t\n\t            x2  .domain(d3.extent(d3.merge(series1.concat(series2)), function(d) { return d.x } ))\n\t                .range([0, availableWidth]);\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = container.selectAll('g.nv-wrap.nv-linePlusBar').data([data]);\n\t            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-linePlusBar').append('g');\n\t            var g = wrap.select('g');\n\t\n\t            gEnter.append('g').attr('class', 'nv-legendWrap');\n\t\n\t            // this is the main chart\n\t            var focusEnter = gEnter.append('g').attr('class', 'nv-focus');\n\t            focusEnter.append('g').attr('class', 'nv-x nv-axis');\n\t            focusEnter.append('g').attr('class', 'nv-y1 nv-axis');\n\t            focusEnter.append('g').attr('class', 'nv-y2 nv-axis');\n\t            focusEnter.append('g').attr('class', 'nv-barsWrap');\n\t            focusEnter.append('g').attr('class', 'nv-linesWrap');\n\t\n\t            // context chart is where you can focus in\n\t            var contextEnter = gEnter.append('g').attr('class', 'nv-context');\n\t            contextEnter.append('g').attr('class', 'nv-x nv-axis');\n\t            contextEnter.append('g').attr('class', 'nv-y1 nv-axis');\n\t            contextEnter.append('g').attr('class', 'nv-y2 nv-axis');\n\t            contextEnter.append('g').attr('class', 'nv-barsWrap');\n\t            contextEnter.append('g').attr('class', 'nv-linesWrap');\n\t            contextEnter.append('g').attr('class', 'nv-brushBackground');\n\t            contextEnter.append('g').attr('class', 'nv-x nv-brush');\n\t\n\t            //============================================================\n\t            // Legend\n\t            //------------------------------------------------------------\n\t\n\t            if (!showLegend) {\n\t                g.select('.nv-legendWrap').selectAll('*').remove();\n\t            } else {\n\t                var legendWidth = legend.align() ? availableWidth / 2 : availableWidth;\n\t                var legendXPosition = legend.align() ? legendWidth : 0;\n\t\n\t                legend.width(legendWidth);\n\t\n\t                g.select('.nv-legendWrap')\n\t                    .datum(data.map(function(series) {\n\t                        series.originalKey = series.originalKey === undefined ? series.key : series.originalKey;\n\t                        if(switchYAxisOrder) {\n\t                            series.key = series.originalKey + (series.bar ? legendRightAxisHint : legendLeftAxisHint);\n\t                        } else {\n\t                            series.key = series.originalKey + (series.bar ? legendLeftAxisHint : legendRightAxisHint);\n\t                        }\n\t                        return series;\n\t                    }))\n\t                    .call(legend);\n\t\n\t                if (!marginTop && legend.height() !== margin.top) {\n\t                    margin.top = legend.height();\n\t                    // FIXME: shouldn't this be \"- (focusEnabled ? focusHeight : 0)\"?\n\t                    availableHeight1 = nv.utils.availableHeight(height, container, margin) - focusHeight;\n\t                }\n\t\n\t                g.select('.nv-legendWrap')\n\t                    .attr('transform', 'translate(' + legendXPosition + ',' + (-margin.top) +')');\n\t            }\n\t\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            //============================================================\n\t            // Context chart (focus chart) components\n\t            //------------------------------------------------------------\n\t\n\t            // hide or show the focus context chart\n\t            g.select('.nv-context').style('display', focusEnable ? 'initial' : 'none');\n\t\n\t            bars2\n\t                .width(availableWidth)\n\t                .height(availableHeight2)\n\t                .color(data.map(function (d, i) {\n\t                    return d.color || color(d, i);\n\t                }).filter(function (d, i) {\n\t                    return !data[i].disabled && data[i].bar\n\t                }));\n\t            lines2\n\t                .width(availableWidth)\n\t                .height(availableHeight2)\n\t                .color(data.map(function (d, i) {\n\t                    return d.color || color(d, i);\n\t                }).filter(function (d, i) {\n\t                    return !data[i].disabled && !data[i].bar\n\t                }));\n\t\n\t            var bars2Wrap = g.select('.nv-context .nv-barsWrap')\n\t                .datum(dataBars.length ? dataBars : [\n\t                    {values: []}\n\t                ]);\n\t            var lines2Wrap = g.select('.nv-context .nv-linesWrap')\n\t                .datum(allDisabled(dataLines) ?\n\t                       [{values: []}] :\n\t                       dataLines.filter(function(dataLine) {\n\t                         return !dataLine.disabled;\n\t                       }));\n\t\n\t            g.select('.nv-context')\n\t                .attr('transform', 'translate(0,' + ( availableHeight1 + margin.bottom + margin2.top) + ')');\n\t\n\t            bars2Wrap.transition().call(bars2);\n\t            lines2Wrap.transition().call(lines2);\n\t\n\t            // context (focus chart) axis controls\n\t            if (focusShowAxisX) {\n\t                x2Axis\n\t                    ._ticks( nv.utils.calcTicksX(availableWidth / 100, data))\n\t                    .tickSize(-availableHeight2, 0);\n\t                g.select('.nv-context .nv-x.nv-axis')\n\t                    .attr('transform', 'translate(0,' + y3.range()[0] + ')');\n\t                g.select('.nv-context .nv-x.nv-axis').transition()\n\t                    .call(x2Axis);\n\t            }\n\t\n\t            if (focusShowAxisY) {\n\t                y3Axis\n\t                    .scale(y3)\n\t                    ._ticks( availableHeight2 / 36 )\n\t                    .tickSize( -availableWidth, 0);\n\t                y4Axis\n\t                    .scale(y4)\n\t                    ._ticks( availableHeight2 / 36 )\n\t                    .tickSize(dataBars.length ? 0 : -availableWidth, 0); // Show the y2 rules only if y1 has none\n\t\n\t                g.select('.nv-context .nv-y3.nv-axis')\n\t                    .style('opacity', dataBars.length ? 1 : 0)\n\t                    .attr('transform', 'translate(0,' + x2.range()[0] + ')');\n\t                g.select('.nv-context .nv-y2.nv-axis')\n\t                    .style('opacity', dataLines.length ? 1 : 0)\n\t                    .attr('transform', 'translate(' + x2.range()[1] + ',0)');\n\t\n\t                g.select('.nv-context .nv-y1.nv-axis').transition()\n\t                    .call(y3Axis);\n\t                g.select('.nv-context .nv-y2.nv-axis').transition()\n\t                    .call(y4Axis);\n\t            }\n\t\n\t            // Setup Brush\n\t            brush.x(x2).on('brush', onBrush);\n\t\n\t            if (brushExtent) brush.extent(brushExtent);\n\t\n\t            var brushBG = g.select('.nv-brushBackground').selectAll('g')\n\t                .data([brushExtent || brush.extent()]);\n\t\n\t            var brushBGenter = brushBG.enter()\n\t                .append('g');\n\t\n\t            brushBGenter.append('rect')\n\t                .attr('class', 'left')\n\t                .attr('x', 0)\n\t                .attr('y', 0)\n\t                .attr('height', availableHeight2);\n\t\n\t            brushBGenter.append('rect')\n\t                .attr('class', 'right')\n\t                .attr('x', 0)\n\t                .attr('y', 0)\n\t                .attr('height', availableHeight2);\n\t\n\t            var gBrush = g.select('.nv-x.nv-brush')\n\t                .call(brush);\n\t            gBrush.selectAll('rect')\n\t                //.attr('y', -5)\n\t                .attr('height', availableHeight2);\n\t            gBrush.selectAll('.resize').append('path').attr('d', resizePath);\n\t\n\t            //============================================================\n\t            // Event Handling/Dispatching (in chart's scope)\n\t            //------------------------------------------------------------\n\t\n\t            legend.dispatch.on('stateChange', function(newState) {\n\t                for (var key in newState)\n\t                    state[key] = newState[key];\n\t                dispatch.stateChange(state);\n\t                chart.update();\n\t            });\n\t\n\t            // Update chart from a state object passed to event handler\n\t            dispatch.on('changeState', function(e) {\n\t                if (typeof e.disabled !== 'undefined') {\n\t                    data.forEach(function(series,i) {\n\t                        series.disabled = e.disabled[i];\n\t                    });\n\t                    state.disabled = e.disabled;\n\t                }\n\t                chart.update();\n\t            });\n\t\n\t            //============================================================\n\t            // Functions\n\t            //------------------------------------------------------------\n\t\n\t            // Taken from crossfilter (http://square.github.com/crossfilter/)\n\t            function resizePath(d) {\n\t                var e = +(d == 'e'),\n\t                    x = e ? 1 : -1,\n\t                    y = availableHeight2 / 3;\n\t                return 'M' + (.5 * x) + ',' + y\n\t                    + 'A6,6 0 0 ' + e + ' ' + (6.5 * x) + ',' + (y + 6)\n\t                    + 'V' + (2 * y - 6)\n\t                    + 'A6,6 0 0 ' + e + ' ' + (.5 * x) + ',' + (2 * y)\n\t                    + 'Z'\n\t                    + 'M' + (2.5 * x) + ',' + (y + 8)\n\t                    + 'V' + (2 * y - 8)\n\t                    + 'M' + (4.5 * x) + ',' + (y + 8)\n\t                    + 'V' + (2 * y - 8);\n\t            }\n\t\n\t\n\t            function updateBrushBG() {\n\t                if (!brush.empty()) brush.extent(brushExtent);\n\t                brushBG\n\t                    .data([brush.empty() ? x2.domain() : brushExtent])\n\t                    .each(function(d,i) {\n\t                        var leftWidth = x2(d[0]) - x2.range()[0],\n\t                            rightWidth = x2.range()[1] - x2(d[1]);\n\t                        d3.select(this).select('.left')\n\t                            .attr('width',  leftWidth < 0 ? 0 : leftWidth);\n\t\n\t                        d3.select(this).select('.right')\n\t                            .attr('x', x2(d[1]))\n\t                            .attr('width', rightWidth < 0 ? 0 : rightWidth);\n\t                    });\n\t            }\n\t\n\t            function onBrush() {\n\t                brushExtent = brush.empty() ? null : brush.extent();\n\t                extent = brush.empty() ? x2.domain() : brush.extent();\n\t                dispatch.brush({extent: extent, brush: brush});\n\t                updateBrushBG();\n\t\n\t                // Prepare Main (Focus) Bars and Lines\n\t                bars\n\t                    .width(availableWidth)\n\t                    .height(availableHeight1)\n\t                    .color(data.map(function(d,i) {\n\t                        return d.color || color(d, i);\n\t                    }).filter(function(d,i) { return !data[i].disabled && data[i].bar }));\n\t\n\t                lines\n\t                    .width(availableWidth)\n\t                    .height(availableHeight1)\n\t                    .color(data.map(function(d,i) {\n\t                        return d.color || color(d, i);\n\t                    }).filter(function(d,i) { return !data[i].disabled && !data[i].bar }));\n\t\n\t                var focusBarsWrap = g.select('.nv-focus .nv-barsWrap')\n\t                    .datum(!dataBars.length ? [{values:[]}] :\n\t                        dataBars\n\t                            .map(function(d,i) {\n\t                                return {\n\t                                    key: d.key,\n\t                                    values: d.values.filter(function(d,i) {\n\t                                        return bars.x()(d,i) >= extent[0] && bars.x()(d,i) <= extent[1];\n\t                                    })\n\t                                }\n\t                            })\n\t                );\n\t\n\t                var focusLinesWrap = g.select('.nv-focus .nv-linesWrap')\n\t                    .datum(allDisabled(dataLines) ? [{values:[]}] :\n\t                           dataLines\n\t                           .filter(function(dataLine) { return !dataLine.disabled; })\n\t                           .map(function(d,i) {\n\t                                return {\n\t                                    area: d.area,\n\t                                    fillOpacity: d.fillOpacity,\n\t                                    strokeWidth: d.strokeWidth,\n\t                                    key: d.key,\n\t                                    values: d.values.filter(function(d,i) {\n\t                                        return lines.x()(d,i) >= extent[0] && lines.x()(d,i) <= extent[1];\n\t                                    })\n\t                                }\n\t                            })\n\t                );\n\t\n\t                // Update Main (Focus) X Axis\n\t                if (dataBars.length && !switchYAxisOrder) {\n\t                    x = bars.xScale();\n\t                } else {\n\t                    x = lines.xScale();\n\t                }\n\t\n\t                xAxis\n\t                    .scale(x)\n\t                    ._ticks( nv.utils.calcTicksX(availableWidth/100, data) )\n\t                    .tickSize(-availableHeight1, 0);\n\t\n\t                xAxis.domain([Math.ceil(extent[0]), Math.floor(extent[1])]);\n\t\n\t                g.select('.nv-x.nv-axis').transition().duration(transitionDuration)\n\t                    .call(xAxis);\n\t\n\t                // Update Main (Focus) Bars and Lines\n\t                focusBarsWrap.transition().duration(transitionDuration).call(bars);\n\t                focusLinesWrap.transition().duration(transitionDuration).call(lines);\n\t\n\t                // Setup and Update Main (Focus) Y Axes\n\t                g.select('.nv-focus .nv-x.nv-axis')\n\t                    .attr('transform', 'translate(0,' + y1.range()[0] + ')');\n\t\n\t                y1Axis\n\t                    .scale(y1)\n\t                    ._ticks( nv.utils.calcTicksY(availableHeight1/36, data) )\n\t                    .tickSize(-availableWidth, 0);\n\t                y2Axis\n\t                    .scale(y2)\n\t                    ._ticks( nv.utils.calcTicksY(availableHeight1/36, data) );\n\t\n\t                // Show the y2 rules only if y1 has none\n\t                if(!switchYAxisOrder) {\n\t                    y2Axis.tickSize(dataBars.length ? 0 : -availableWidth, 0);\n\t                } else {\n\t                    y2Axis.tickSize(dataLines.length ? 0 : -availableWidth, 0);\n\t                }\n\t\n\t                // Calculate opacity of the axis\n\t                var barsOpacity = dataBars.length ? 1 : 0;\n\t                var linesOpacity = dataLines.length && !allDisabled(dataLines) ? 1 : 0;\n\t\n\t                var y1Opacity = switchYAxisOrder ? linesOpacity : barsOpacity;\n\t                var y2Opacity = switchYAxisOrder ? barsOpacity : linesOpacity;\n\t\n\t                g.select('.nv-focus .nv-y1.nv-axis')\n\t                    .style('opacity', y1Opacity);\n\t                g.select('.nv-focus .nv-y2.nv-axis')\n\t                    .style('opacity', y2Opacity)\n\t                    .attr('transform', 'translate(' + x.range()[1] + ',0)');\n\t\n\t                g.select('.nv-focus .nv-y1.nv-axis').transition().duration(transitionDuration)\n\t                    .call(y1Axis);\n\t                g.select('.nv-focus .nv-y2.nv-axis').transition().duration(transitionDuration)\n\t                    .call(y2Axis);\n\t            }\n\t\n\t            onBrush();\n\t\n\t        });\n\t\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Event Handling/Dispatching (out of chart's scope)\n\t    //------------------------------------------------------------\n\t\n\t    lines.dispatch.on('elementMouseover.tooltip', function(evt) {\n\t        tooltip\n\t            .duration(100)\n\t            .valueFormatter(function(d, i) {\n\t                return getLinesAxis().main.tickFormat()(d, i);\n\t            })\n\t            .data(evt)\n\t            .hidden(false);\n\t    });\n\t\n\t    lines.dispatch.on('elementMouseout.tooltip', function(evt) {\n\t        tooltip.hidden(true)\n\t    });\n\t\n\t    bars.dispatch.on('elementMouseover.tooltip', function(evt) {\n\t        evt.value = chart.x()(evt.data);\n\t        evt['series'] = {\n\t            value: chart.y()(evt.data),\n\t            color: evt.color\n\t        };\n\t        tooltip\n\t            .duration(0)\n\t            .valueFormatter(function(d, i) {\n\t                return getBarsAxis().main.tickFormat()(d, i);\n\t            })\n\t            .data(evt)\n\t            .hidden(false);\n\t    });\n\t\n\t    bars.dispatch.on('elementMouseout.tooltip', function(evt) {\n\t        tooltip.hidden(true);\n\t    });\n\t\n\t    bars.dispatch.on('elementMousemove.tooltip', function(evt) {\n\t        tooltip();\n\t    });\n\t\n\t    //============================================================\n\t\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    // expose chart's sub-components\n\t    chart.dispatch = dispatch;\n\t    chart.legend = legend;\n\t    chart.lines = lines;\n\t    chart.lines2 = lines2;\n\t    chart.bars = bars;\n\t    chart.bars2 = bars2;\n\t    chart.xAxis = xAxis;\n\t    chart.x2Axis = x2Axis;\n\t    chart.y1Axis = y1Axis;\n\t    chart.y2Axis = y2Axis;\n\t    chart.y3Axis = y3Axis;\n\t    chart.y4Axis = y4Axis;\n\t    chart.tooltip = tooltip;\n\t\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:      {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:     {get: function(){return height;}, set: function(_){height=_;}},\n\t        showLegend: {get: function(){return showLegend;}, set: function(_){showLegend=_;}},\n\t        brushExtent:    {get: function(){return brushExtent;}, set: function(_){brushExtent=_;}},\n\t        noData:    {get: function(){return noData;}, set: function(_){noData=_;}},\n\t        focusEnable:    {get: function(){return focusEnable;}, set: function(_){focusEnable=_;}},\n\t        focusHeight:    {get: function(){return focusHeight;}, set: function(_){focusHeight=_;}},\n\t        focusShowAxisX:    {get: function(){return focusShowAxisX;}, set: function(_){focusShowAxisX=_;}},\n\t        focusShowAxisY:    {get: function(){return focusShowAxisY;}, set: function(_){focusShowAxisY=_;}},\n\t        legendLeftAxisHint:    {get: function(){return legendLeftAxisHint;}, set: function(_){legendLeftAxisHint=_;}},\n\t        legendRightAxisHint:    {get: function(){return legendRightAxisHint;}, set: function(_){legendRightAxisHint=_;}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            if (_.top !== undefined) {\n\t                margin.top = _.top;\n\t                marginTop = _.top;\n\t            }\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }},\n\t        focusMargin: {get: function(){return margin2;}, set: function(_){\n\t            margin2.top    = _.top    !== undefined ? _.top    : margin2.top;\n\t            margin2.right  = _.right  !== undefined ? _.right  : margin2.right;\n\t            margin2.bottom = _.bottom !== undefined ? _.bottom : margin2.bottom;\n\t            margin2.left   = _.left   !== undefined ? _.left   : margin2.left;\n\t        }},\n\t        duration: {get: function(){return transitionDuration;}, set: function(_){\n\t            transitionDuration = _;\n\t        }},\n\t        color:  {get: function(){return color;}, set: function(_){\n\t            color = nv.utils.getColor(_);\n\t            legend.color(color);\n\t        }},\n\t        x: {get: function(){return getX;}, set: function(_){\n\t            getX = _;\n\t            lines.x(_);\n\t            lines2.x(_);\n\t            bars.x(_);\n\t            bars2.x(_);\n\t        }},\n\t        y: {get: function(){return getY;}, set: function(_){\n\t            getY = _;\n\t            lines.y(_);\n\t            lines2.y(_);\n\t            bars.y(_);\n\t            bars2.y(_);\n\t        }},\n\t        switchYAxisOrder:    {get: function(){return switchYAxisOrder;}, set: function(_){\n\t            // Switch the tick format for the yAxis\n\t            if(switchYAxisOrder !== _) {\n\t                var y1 = y1Axis;\n\t                y1Axis = y2Axis;\n\t                y2Axis = y1;\n\t\n\t                var y3 = y3Axis;\n\t                y3Axis = y4Axis;\n\t                y4Axis = y3;\n\t            }\n\t            switchYAxisOrder=_;\n\t\n\t            y1Axis.orient('left');\n\t            y2Axis.orient('right');\n\t            y3Axis.orient('left');\n\t            y4Axis.orient('right');\n\t        }}\n\t    });\n\t\n\t    nv.utils.inheritOptions(chart, lines);\n\t    nv.utils.initOptions(chart);\n\t\n\t    return chart;\n\t};\n\t\n\tnv.models.multiBar = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n\t        , width = 960\n\t        , height = 500\n\t        , x = d3.scale.ordinal()\n\t        , y = d3.scale.linear()\n\t        , id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n\t        , container = null\n\t        , getX = function(d) { return d.x }\n\t        , getY = function(d) { return d.y }\n\t        , forceY = [0] // 0 is forced by default.. this makes sense for the majority of bar graphs... user can always do chart.forceY([]) to remove\n\t        , clipEdge = true\n\t        , stacked = false\n\t        , stackOffset = 'zero' // options include 'silhouette', 'wiggle', 'expand', 'zero', or a custom function\n\t        , color = nv.utils.defaultColor()\n\t        , hideable = false\n\t        , barColor = null // adding the ability to set the color for each rather than the whole group\n\t        , disabled // used in conjunction with barColor to communicate from multiBarHorizontalChart what series are disabled\n\t        , duration = 500\n\t        , xDomain\n\t        , yDomain\n\t        , xRange\n\t        , yRange\n\t        , groupSpacing = 0.1\n\t        , fillOpacity = 0.75\n\t        , dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd')\n\t        ;\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    var x0, y0 //used to store previous scales\n\t        , renderWatch = nv.utils.renderWatch(dispatch, duration)\n\t        ;\n\t\n\t    var last_datalength = 0;\n\t\n\t    function chart(selection) {\n\t        renderWatch.reset();\n\t        selection.each(function(data) {\n\t            var availableWidth = width - margin.left - margin.right,\n\t                availableHeight = height - margin.top - margin.bottom;\n\t\n\t            container = d3.select(this);\n\t            nv.utils.initSVG(container);\n\t            var nonStackableCount = 0;\n\t            // This function defines the requirements for render complete\n\t            var endFn = function(d, i) {\n\t                if (d.series === data.length - 1 && i === data[0].values.length - 1)\n\t                    return true;\n\t                return false;\n\t            };\n\t\n\t            if(hideable && data.length) hideable = [{\n\t                values: data[0].values.map(function(d) {\n\t                        return {\n\t                            x: d.x,\n\t                            y: 0,\n\t                            series: d.series,\n\t                            size: 0.01\n\t                        };}\n\t                )}];\n\t\n\t            if (stacked) {\n\t                var parsed = d3.layout.stack()\n\t                    .offset(stackOffset)\n\t                    .values(function(d){ return d.values })\n\t                    .y(getY)\n\t                (!data.length && hideable ? hideable : data);\n\t\n\t                parsed.forEach(function(series, i){\n\t                    // if series is non-stackable, use un-parsed data\n\t                    if (series.nonStackable) {\n\t                        data[i].nonStackableSeries = nonStackableCount++;\n\t                        parsed[i] = data[i];\n\t                    } else {\n\t                        // don't stack this seires on top of the nonStackable seriees\n\t                        if (i > 0 && parsed[i - 1].nonStackable){\n\t                            parsed[i].values.map(function(d,j){\n\t                                d.y0 -= parsed[i - 1].values[j].y;\n\t                                d.y1 = d.y0 + d.y;\n\t                            });\n\t                        }\n\t                    }\n\t                });\n\t                data = parsed;\n\t            }\n\t            //add series index and key to each data point for reference\n\t            data.forEach(function(series, i) {\n\t                series.values.forEach(function(point) {\n\t                    point.series = i;\n\t                    point.key = series.key;\n\t                });\n\t            });\n\t\n\t            // HACK for negative value stacking\n\t            if (stacked && data.length > 0) {\n\t                data[0].values.map(function(d,i) {\n\t                    var posBase = 0, negBase = 0;\n\t                    data.map(function(d, idx) {\n\t                        if (!data[idx].nonStackable) {\n\t                            var f = d.values[i]\n\t                            f.size = Math.abs(f.y);\n\t                            if (f.y<0)  {\n\t                                f.y1 = negBase;\n\t                                negBase = negBase - f.size;\n\t                            } else\n\t                            {\n\t                                f.y1 = f.size + posBase;\n\t                                posBase = posBase + f.size;\n\t                            }\n\t                        }\n\t\n\t                    });\n\t                });\n\t            }\n\t            // Setup Scales\n\t            // remap and flatten the data for use in calculating the scales' domains\n\t            var seriesData = (xDomain && yDomain) ? [] : // if we know xDomain and yDomain, no need to calculate\n\t                data.map(function(d, idx) {\n\t                    return d.values.map(function(d,i) {\n\t                        return { x: getX(d,i), y: getY(d,i), y0: d.y0, y1: d.y1, idx:idx }\n\t                    })\n\t                });\n\t\n\t            x.domain(xDomain || d3.merge(seriesData).map(function(d) { return d.x }))\n\t                .rangeBands(xRange || [0, availableWidth], groupSpacing);\n\t\n\t            y.domain(yDomain || d3.extent(d3.merge(seriesData).map(function(d) {\n\t                var domain = d.y;\n\t                // increase the domain range if this series is stackable\n\t                if (stacked && !data[d.idx].nonStackable) {\n\t                    if (d.y > 0){\n\t                        domain = d.y1\n\t                    } else {\n\t                        domain = d.y1 + d.y\n\t                    }\n\t                }\n\t                return domain;\n\t            }).concat(forceY)))\n\t            .range(yRange || [availableHeight, 0]);\n\t\n\t            // If scale's domain don't have a range, slightly adjust to make one... so a chart can show a single data point\n\t            if (x.domain()[0] === x.domain()[1])\n\t                x.domain()[0] ?\n\t                    x.domain([x.domain()[0] - x.domain()[0] * 0.01, x.domain()[1] + x.domain()[1] * 0.01])\n\t                    : x.domain([-1,1]);\n\t\n\t            if (y.domain()[0] === y.domain()[1])\n\t                y.domain()[0] ?\n\t                    y.domain([y.domain()[0] + y.domain()[0] * 0.01, y.domain()[1] - y.domain()[1] * 0.01])\n\t                    : y.domain([-1,1]);\n\t\n\t            x0 = x0 || x;\n\t            y0 = y0 || y;\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = container.selectAll('g.nv-wrap.nv-multibar').data([data]);\n\t            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-multibar');\n\t            var defsEnter = wrapEnter.append('defs');\n\t            var gEnter = wrapEnter.append('g');\n\t            var g = wrap.select('g');\n\t\n\t            gEnter.append('g').attr('class', 'nv-groups');\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            defsEnter.append('clipPath')\n\t                .attr('id', 'nv-edge-clip-' + id)\n\t                .append('rect');\n\t            wrap.select('#nv-edge-clip-' + id + ' rect')\n\t                .attr('width', availableWidth)\n\t                .attr('height', availableHeight);\n\t\n\t            g.attr('clip-path', clipEdge ? 'url(#nv-edge-clip-' + id + ')' : '');\n\t\n\t            var groups = wrap.select('.nv-groups').selectAll('.nv-group')\n\t                .data(function(d) { return d }, function(d,i) { return i });\n\t            groups.enter().append('g')\n\t                .style('stroke-opacity', 1e-6)\n\t                .style('fill-opacity', 1e-6);\n\t\n\t            var exitTransition = renderWatch\n\t                .transition(groups.exit().selectAll('rect.nv-bar'), 'multibarExit', Math.min(100, duration))\n\t                .attr('y', function(d, i, j) {\n\t                    var yVal = y0(0) || 0;\n\t                    if (stacked) {\n\t                        if (data[d.series] && !data[d.series].nonStackable) {\n\t                            yVal = y0(d.y0);\n\t                        }\n\t                    }\n\t                    return yVal;\n\t                })\n\t                .attr('height', 0)\n\t                .remove();\n\t            if (exitTransition.delay)\n\t                exitTransition.delay(function(d,i) {\n\t                    var delay = i * (duration / (last_datalength + 1)) - i;\n\t                    return delay;\n\t                });\n\t            groups\n\t                .attr('class', function(d,i) { return 'nv-group nv-series-' + i })\n\t                .classed('hover', function(d) { return d.hover })\n\t                .style('fill', function(d,i){ return color(d, i) })\n\t                .style('stroke', function(d,i){ return color(d, i) });\n\t            groups\n\t                .style('stroke-opacity', 1)\n\t                .style('fill-opacity', fillOpacity);\n\t\n\t            var bars = groups.selectAll('rect.nv-bar')\n\t                .data(function(d) { return (hideable && !data.length) ? hideable.values : d.values });\n\t            bars.exit().remove();\n\t\n\t            var barsEnter = bars.enter().append('rect')\n\t                    .attr('class', function(d,i) { return getY(d,i) < 0 ? 'nv-bar negative' : 'nv-bar positive'})\n\t                    .attr('x', function(d,i,j) {\n\t                        return stacked && !data[j].nonStackable ? 0 : (j * x.rangeBand() / data.length )\n\t                    })\n\t                    .attr('y', function(d,i,j) { return y0(stacked && !data[j].nonStackable ? d.y0 : 0) || 0 })\n\t                    .attr('height', 0)\n\t                    .attr('width', function(d,i,j) { return x.rangeBand() / (stacked && !data[j].nonStackable ? 1 : data.length) })\n\t                    .attr('transform', function(d,i) { return 'translate(' + x(getX(d,i)) + ',0)'; })\n\t                ;\n\t            bars\n\t                .style('fill', function(d,i,j){ return color(d, j, i);  })\n\t                .style('stroke', function(d,i,j){ return color(d, j, i); })\n\t                .on('mouseover', function(d,i) { //TODO: figure out why j works above, but not here\n\t                    d3.select(this).classed('hover', true);\n\t                    dispatch.elementMouseover({\n\t                        data: d,\n\t                        index: i,\n\t                        color: d3.select(this).style(\"fill\")\n\t                    });\n\t                })\n\t                .on('mouseout', function(d,i) {\n\t                    d3.select(this).classed('hover', false);\n\t                    dispatch.elementMouseout({\n\t                        data: d,\n\t                        index: i,\n\t                        color: d3.select(this).style(\"fill\")\n\t                    });\n\t                })\n\t                .on('mousemove', function(d,i) {\n\t                    dispatch.elementMousemove({\n\t                        data: d,\n\t                        index: i,\n\t                        color: d3.select(this).style(\"fill\")\n\t                    });\n\t                })\n\t                .on('click', function(d,i) {\n\t                    var element = this;\n\t                    dispatch.elementClick({\n\t                        data: d,\n\t                        index: i,\n\t                        color: d3.select(this).style(\"fill\"),\n\t                        event: d3.event,\n\t                        element: element\n\t                    });\n\t                    d3.event.stopPropagation();\n\t                })\n\t                .on('dblclick', function(d,i) {\n\t                    dispatch.elementDblClick({\n\t                        data: d,\n\t                        index: i,\n\t                        color: d3.select(this).style(\"fill\")\n\t                    });\n\t                    d3.event.stopPropagation();\n\t                });\n\t            bars\n\t                .attr('class', function(d,i) { return getY(d,i) < 0 ? 'nv-bar negative' : 'nv-bar positive'})\n\t                .attr('transform', function(d,i) { return 'translate(' + x(getX(d,i)) + ',0)'; })\n\t\n\t            if (barColor) {\n\t                if (!disabled) disabled = data.map(function() { return true });\n\t                bars\n\t                    .style('fill', function(d,i,j) { return d3.rgb(barColor(d,i)).darker(  disabled.map(function(d,i) { return i }).filter(function(d,i){ return !disabled[i]  })[j]   ).toString(); })\n\t                    .style('stroke', function(d,i,j) { return d3.rgb(barColor(d,i)).darker(  disabled.map(function(d,i) { return i }).filter(function(d,i){ return !disabled[i]  })[j]   ).toString(); });\n\t            }\n\t\n\t            var barSelection =\n\t                bars.watchTransition(renderWatch, 'multibar', Math.min(250, duration))\n\t                    .delay(function(d,i) {\n\t                        return i * duration / data[0].values.length;\n\t                    });\n\t            if (stacked){\n\t                barSelection\n\t                    .attr('y', function(d,i,j) {\n\t                        var yVal = 0;\n\t                        // if stackable, stack it on top of the previous series\n\t                        if (!data[j].nonStackable) {\n\t                            yVal = y(d.y1);\n\t                        } else {\n\t                            if (getY(d,i) < 0){\n\t                                yVal = y(0);\n\t                            } else {\n\t                                if (y(0) - y(getY(d,i)) < -1){\n\t                                    yVal = y(0) - 1;\n\t                                } else {\n\t                                    yVal = y(getY(d, i)) || 0;\n\t                                }\n\t                            }\n\t                        }\n\t                        return yVal;\n\t                    })\n\t                    .attr('height', function(d,i,j) {\n\t                        if (!data[j].nonStackable) {\n\t                            return Math.max(Math.abs(y(d.y+d.y0) - y(d.y0)), 0);\n\t                        } else {\n\t                            return Math.max(Math.abs(y(getY(d,i)) - y(0)), 0) || 0;\n\t                        }\n\t                    })\n\t                    .attr('x', function(d,i,j) {\n\t                        var width = 0;\n\t                        if (data[j].nonStackable) {\n\t                            width = d.series * x.rangeBand() / data.length;\n\t                            if (data.length !== nonStackableCount){\n\t                                width = data[j].nonStackableSeries * x.rangeBand()/(nonStackableCount*2);\n\t                            }\n\t                        }\n\t                        return width;\n\t                    })\n\t                    .attr('width', function(d,i,j){\n\t                        if (!data[j].nonStackable) {\n\t                            return x.rangeBand();\n\t                        } else {\n\t                            // if all series are nonStacable, take the full width\n\t                            var width = (x.rangeBand() / nonStackableCount);\n\t                            // otherwise, nonStackable graph will be only taking the half-width\n\t                            // of the x rangeBand\n\t                            if (data.length !== nonStackableCount) {\n\t                                width = x.rangeBand()/(nonStackableCount*2);\n\t                            }\n\t                            return width;\n\t                        }\n\t                    });\n\t            }\n\t            else {\n\t                barSelection\n\t                    .attr('x', function(d,i) {\n\t                        return d.series * x.rangeBand() / data.length;\n\t                    })\n\t                    .attr('width', x.rangeBand() / data.length)\n\t                    .attr('y', function(d,i) {\n\t                        return getY(d,i) < 0 ?\n\t                            y(0) :\n\t                                y(0) - y(getY(d,i)) < 1 ?\n\t                            y(0) - 1 :\n\t                            y(getY(d,i)) || 0;\n\t                    })\n\t                    .attr('height', function(d,i) {\n\t                        return Math.max(Math.abs(y(getY(d,i)) - y(0)),1) || 0;\n\t                    });\n\t            }\n\t\n\t            //store old scales for use in transitions on update\n\t            x0 = x.copy();\n\t            y0 = y.copy();\n\t\n\t            // keep track of the last data value length for transition calculations\n\t            if (data[0] && data[0].values) {\n\t                last_datalength = data[0].values.length;\n\t            }\n\t\n\t        });\n\t\n\t        renderWatch.renderEnd('multibar immediate');\n\t\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    chart.dispatch = dispatch;\n\t\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:   {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:  {get: function(){return height;}, set: function(_){height=_;}},\n\t        x:       {get: function(){return getX;}, set: function(_){getX=_;}},\n\t        y:       {get: function(){return getY;}, set: function(_){getY=_;}},\n\t        xScale:  {get: function(){return x;}, set: function(_){x=_;}},\n\t        yScale:  {get: function(){return y;}, set: function(_){y=_;}},\n\t        xDomain: {get: function(){return xDomain;}, set: function(_){xDomain=_;}},\n\t        yDomain: {get: function(){return yDomain;}, set: function(_){yDomain=_;}},\n\t        xRange:  {get: function(){return xRange;}, set: function(_){xRange=_;}},\n\t        yRange:  {get: function(){return yRange;}, set: function(_){yRange=_;}},\n\t        forceY:  {get: function(){return forceY;}, set: function(_){forceY=_;}},\n\t        stacked: {get: function(){return stacked;}, set: function(_){stacked=_;}},\n\t        stackOffset: {get: function(){return stackOffset;}, set: function(_){stackOffset=_;}},\n\t        clipEdge:    {get: function(){return clipEdge;}, set: function(_){clipEdge=_;}},\n\t        disabled:    {get: function(){return disabled;}, set: function(_){disabled=_;}},\n\t        id:          {get: function(){return id;}, set: function(_){id=_;}},\n\t        hideable:    {get: function(){return hideable;}, set: function(_){hideable=_;}},\n\t        groupSpacing:{get: function(){return groupSpacing;}, set: function(_){groupSpacing=_;}},\n\t        fillOpacity: {get: function(){return fillOpacity;}, set: function(_){fillOpacity=_;}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }},\n\t        duration: {get: function(){return duration;}, set: function(_){\n\t            duration = _;\n\t            renderWatch.reset(duration);\n\t        }},\n\t        color:  {get: function(){return color;}, set: function(_){\n\t            color = nv.utils.getColor(_);\n\t        }},\n\t        barColor:  {get: function(){return barColor;}, set: function(_){\n\t            barColor = _ ? nv.utils.getColor(_) : null;\n\t        }}\n\t    });\n\t\n\t    nv.utils.initOptions(chart);\n\t\n\t    return chart;\n\t};\n\tnv.models.multiBarChart = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var multibar = nv.models.multiBar()\n\t        , xAxis = nv.models.axis()\n\t        , yAxis = nv.models.axis()\n\t        , interactiveLayer = nv.interactiveGuideline()\n\t        , legend = nv.models.legend()\n\t        , controls = nv.models.legend()\n\t        , tooltip = nv.models.tooltip()\n\t        ;\n\t\n\t    var margin = {top: 30, right: 20, bottom: 50, left: 60}\n\t        , marginTop = null\n\t        , width = null\n\t        , height = null\n\t        , color = nv.utils.defaultColor()\n\t        , showControls = true\n\t        , controlLabels = {}\n\t        , showLegend = true\n\t        , showXAxis = true\n\t        , showYAxis = true\n\t        , rightAlignYAxis = false\n\t        , reduceXTicks = true // if false a tick will show for every data point\n\t        , staggerLabels = false\n\t        , wrapLabels = false\n\t        , rotateLabels = 0\n\t        , x //can be accessed via chart.xScale()\n\t        , y //can be accessed via chart.yScale()\n\t        , state = nv.utils.state()\n\t        , defaultState = null\n\t        , noData = null\n\t        , dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd')\n\t        , controlWidth = function() { return showControls ? 180 : 0 }\n\t        , duration = 250\n\t        , useInteractiveGuideline = false\n\t        ;\n\t\n\t    state.stacked = false // DEPRECATED Maintained for backward compatibility\n\t\n\t    multibar.stacked(false);\n\t    xAxis\n\t        .orient('bottom')\n\t        .tickPadding(7)\n\t        .showMaxMin(false)\n\t        .tickFormat(function(d) { return d })\n\t    ;\n\t    yAxis\n\t        .orient((rightAlignYAxis) ? 'right' : 'left')\n\t        .tickFormat(d3.format(',.1f'))\n\t    ;\n\t\n\t    tooltip\n\t        .duration(0)\n\t        .valueFormatter(function(d, i) {\n\t            return yAxis.tickFormat()(d, i);\n\t        })\n\t        .headerFormatter(function(d, i) {\n\t            return xAxis.tickFormat()(d, i);\n\t        });\n\t\n\t    interactiveLayer.tooltip\n\t        .valueFormatter(function(d, i) {\n\t            return d == null ? \"N/A\" : yAxis.tickFormat()(d, i);\n\t        })\n\t        .headerFormatter(function(d, i) {\n\t            return xAxis.tickFormat()(d, i);\n\t        });\n\t\n\t    interactiveLayer.tooltip\n\t        .valueFormatter(function (d, i) {\n\t            return d == null ? \"N/A\" : yAxis.tickFormat()(d, i);\n\t        })\n\t        .headerFormatter(function (d, i) {\n\t            return xAxis.tickFormat()(d, i);\n\t        });\n\t\n\t    interactiveLayer.tooltip\n\t        .duration(0)\n\t        .valueFormatter(function(d, i) {\n\t            return yAxis.tickFormat()(d, i);\n\t        })\n\t        .headerFormatter(function(d, i) {\n\t            return xAxis.tickFormat()(d, i);\n\t        });\n\t\n\t    controls.updateState(false);\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    var renderWatch = nv.utils.renderWatch(dispatch);\n\t    var stacked = false;\n\t\n\t    var stateGetter = function(data) {\n\t        return function(){\n\t            return {\n\t                active: data.map(function(d) { return !d.disabled }),\n\t                stacked: stacked\n\t            };\n\t        }\n\t    };\n\t\n\t    var stateSetter = function(data) {\n\t        return function(state) {\n\t            if (state.stacked !== undefined)\n\t                stacked = state.stacked;\n\t            if (state.active !== undefined)\n\t                data.forEach(function(series,i) {\n\t                    series.disabled = !state.active[i];\n\t                });\n\t        }\n\t    };\n\t\n\t    function chart(selection) {\n\t        renderWatch.reset();\n\t        renderWatch.models(multibar);\n\t        if (showXAxis) renderWatch.models(xAxis);\n\t        if (showYAxis) renderWatch.models(yAxis);\n\t\n\t        selection.each(function(data) {\n\t            var container = d3.select(this),\n\t                that = this;\n\t            nv.utils.initSVG(container);\n\t            var availableWidth = nv.utils.availableWidth(width, container, margin),\n\t                availableHeight = nv.utils.availableHeight(height, container, margin);\n\t\n\t            chart.update = function() {\n\t                if (duration === 0)\n\t                    container.call(chart);\n\t                else\n\t                    container.transition()\n\t                        .duration(duration)\n\t                        .call(chart);\n\t            };\n\t            chart.container = this;\n\t\n\t            state\n\t                .setter(stateSetter(data), chart.update)\n\t                .getter(stateGetter(data))\n\t                .update();\n\t\n\t            // DEPRECATED set state.disableddisabled\n\t            state.disabled = data.map(function(d) { return !!d.disabled });\n\t\n\t            if (!defaultState) {\n\t                var key;\n\t                defaultState = {};\n\t                for (key in state) {\n\t                    if (state[key] instanceof Array)\n\t                        defaultState[key] = state[key].slice(0);\n\t                    else\n\t                        defaultState[key] = state[key];\n\t                }\n\t            }\n\t\n\t            // Display noData message if there's nothing to show.\n\t            if (!data || !data.length || !data.filter(function(d) { return d.values.length }).length) {\n\t                nv.utils.noData(chart, container)\n\t                return chart;\n\t            } else {\n\t                container.selectAll('.nv-noData').remove();\n\t            }\n\t\n\t            // Setup Scales\n\t            x = multibar.xScale();\n\t            y = multibar.yScale();\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = container.selectAll('g.nv-wrap.nv-multiBarWithLegend').data([data]);\n\t            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-multiBarWithLegend').append('g');\n\t            var g = wrap.select('g');\n\t\n\t            gEnter.append('g').attr('class', 'nv-x nv-axis');\n\t            gEnter.append('g').attr('class', 'nv-y nv-axis');\n\t            gEnter.append('g').attr('class', 'nv-barsWrap');\n\t            gEnter.append('g').attr('class', 'nv-legendWrap');\n\t            gEnter.append('g').attr('class', 'nv-controlsWrap');\n\t            gEnter.append('g').attr('class', 'nv-interactive');\n\t\n\t            // Legend\n\t            if (!showLegend) {\n\t                g.select('.nv-legendWrap').selectAll('*').remove();\n\t            } else {\n\t                legend.width(availableWidth - controlWidth());\n\t\n\t                g.select('.nv-legendWrap')\n\t                    .datum(data)\n\t                    .call(legend);\n\t\n\t                if (!marginTop && legend.height() !== margin.top) {\n\t                    margin.top = legend.height();\n\t                    availableHeight = nv.utils.availableHeight(height, container, margin);\n\t                }\n\t\n\t                g.select('.nv-legendWrap')\n\t                    .attr('transform', 'translate(' + controlWidth() + ',' + (-margin.top) +')');\n\t            }\n\t\n\t            // Controls\n\t            if (!showControls) {\n\t                 g.select('.nv-controlsWrap').selectAll('*').remove();\n\t            } else {\n\t                var controlsData = [\n\t                    { key: controlLabels.grouped || 'Grouped', disabled: multibar.stacked() },\n\t                    { key: controlLabels.stacked || 'Stacked', disabled: !multibar.stacked() }\n\t                ];\n\t\n\t                controls.width(controlWidth()).color(['#444', '#444', '#444']);\n\t                g.select('.nv-controlsWrap')\n\t                    .datum(controlsData)\n\t                    .attr('transform', 'translate(0,' + (-margin.top) +')')\n\t                    .call(controls);\n\t            }\n\t\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t            if (rightAlignYAxis) {\n\t                g.select(\".nv-y.nv-axis\")\n\t                    .attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n\t            }\n\t\n\t            // Main Chart Component(s)\n\t            multibar\n\t                .disabled(data.map(function(series) { return series.disabled }))\n\t                .width(availableWidth)\n\t                .height(availableHeight)\n\t                .color(data.map(function(d,i) {\n\t                    return d.color || color(d, i);\n\t                }).filter(function(d,i) { return !data[i].disabled }));\n\t\n\t\n\t            var barsWrap = g.select('.nv-barsWrap')\n\t                .datum(data.filter(function(d) { return !d.disabled }));\n\t\n\t            barsWrap.call(multibar);\n\t\n\t            // Setup Axes\n\t            if (showXAxis) {\n\t                xAxis\n\t                    .scale(x)\n\t                    ._ticks( nv.utils.calcTicksX(availableWidth/100, data) )\n\t                    .tickSize(-availableHeight, 0);\n\t\n\t                g.select('.nv-x.nv-axis')\n\t                    .attr('transform', 'translate(0,' + y.range()[0] + ')');\n\t                g.select('.nv-x.nv-axis')\n\t                    .call(xAxis);\n\t\n\t                var xTicks = g.select('.nv-x.nv-axis > g').selectAll('g');\n\t\n\t                xTicks\n\t                    .selectAll('line, text')\n\t                    .style('opacity', 1)\n\t\n\t                if (staggerLabels) {\n\t                    var getTranslate = function(x,y) {\n\t                        return \"translate(\" + x + \",\" + y + \")\";\n\t                    };\n\t\n\t                    var staggerUp = 5, staggerDown = 17;  //pixels to stagger by\n\t                    // Issue #140\n\t                    xTicks\n\t                        .selectAll(\"text\")\n\t                        .attr('transform', function(d,i,j) {\n\t                            return  getTranslate(0, (j % 2 == 0 ? staggerUp : staggerDown));\n\t                        });\n\t\n\t                    var totalInBetweenTicks = d3.selectAll(\".nv-x.nv-axis .nv-wrap g g text\")[0].length;\n\t                    g.selectAll(\".nv-x.nv-axis .nv-axisMaxMin text\")\n\t                        .attr(\"transform\", function(d,i) {\n\t                            return getTranslate(0, (i === 0 || totalInBetweenTicks % 2 !== 0) ? staggerDown : staggerUp);\n\t                        });\n\t                }\n\t\n\t                if (wrapLabels) {\n\t                    g.selectAll('.tick text')\n\t                        .call(nv.utils.wrapTicks, chart.xAxis.rangeBand())\n\t                }\n\t\n\t                if (reduceXTicks)\n\t                    xTicks\n\t                        .filter(function(d,i) {\n\t                            return i % Math.ceil(data[0].values.length / (availableWidth / 100)) !== 0;\n\t                        })\n\t                        .selectAll('text, line')\n\t                        .style('opacity', 0);\n\t\n\t                if(rotateLabels)\n\t                    xTicks\n\t                        .selectAll('.tick text')\n\t                        .attr('transform', 'rotate(' + rotateLabels + ' 0,0)')\n\t                        .style('text-anchor', rotateLabels > 0 ? 'start' : 'end');\n\t\n\t                g.select('.nv-x.nv-axis').selectAll('g.nv-axisMaxMin text')\n\t                    .style('opacity', 1);\n\t            }\n\t\n\t            if (showYAxis) {\n\t                yAxis\n\t                    .scale(y)\n\t                    ._ticks( nv.utils.calcTicksY(availableHeight/36, data) )\n\t                    .tickSize( -availableWidth, 0);\n\t\n\t                g.select('.nv-y.nv-axis')\n\t                    .call(yAxis);\n\t            }\n\t\n\t            //Set up interactive layer\n\t            if (useInteractiveGuideline) {\n\t                interactiveLayer\n\t                    .width(availableWidth)\n\t                    .height(availableHeight)\n\t                    .margin({left:margin.left, top:margin.top})\n\t                    .svgContainer(container)\n\t                    .xScale(x);\n\t                wrap.select(\".nv-interactive\").call(interactiveLayer);\n\t            }\n\t\n\t            //============================================================\n\t            // Event Handling/Dispatching (in chart's scope)\n\t            //------------------------------------------------------------\n\t\n\t            legend.dispatch.on('stateChange', function(newState) {\n\t                for (var key in newState)\n\t                    state[key] = newState[key];\n\t                dispatch.stateChange(state);\n\t                chart.update();\n\t            });\n\t\n\t            controls.dispatch.on('legendClick', function(d,i) {\n\t                if (!d.disabled) return;\n\t                controlsData = controlsData.map(function(s) {\n\t                    s.disabled = true;\n\t                    return s;\n\t                });\n\t                d.disabled = false;\n\t\n\t                switch (d.key) {\n\t                    case 'Grouped':\n\t                    case controlLabels.grouped:\n\t                        multibar.stacked(false);\n\t                        break;\n\t                    case 'Stacked':\n\t                    case controlLabels.stacked:\n\t                        multibar.stacked(true);\n\t                        break;\n\t                }\n\t\n\t                state.stacked = multibar.stacked();\n\t                dispatch.stateChange(state);\n\t                chart.update();\n\t            });\n\t\n\t            // Update chart from a state object passed to event handler\n\t            dispatch.on('changeState', function(e) {\n\t                if (typeof e.disabled !== 'undefined') {\n\t                    data.forEach(function(series,i) {\n\t                        series.disabled = e.disabled[i];\n\t                    });\n\t                    state.disabled = e.disabled;\n\t                }\n\t                if (typeof e.stacked !== 'undefined') {\n\t                    multibar.stacked(e.stacked);\n\t                    state.stacked = e.stacked;\n\t                    stacked = e.stacked;\n\t                }\n\t                chart.update();\n\t            });\n\t\n\t            if (useInteractiveGuideline) {\n\t                interactiveLayer.dispatch.on('elementMousemove', function(e) {\n\t                    if (e.pointXValue == undefined) return;\n\t\n\t                    var singlePoint, pointIndex, pointXLocation, xValue, allData = [];\n\t                    data\n\t                        .filter(function(series, i) {\n\t                            series.seriesIndex = i;\n\t                            return !series.disabled;\n\t                        })\n\t                        .forEach(function(series,i) {\n\t                            pointIndex = x.domain().indexOf(e.pointXValue)\n\t\n\t                            var point = series.values[pointIndex];\n\t                            if (point === undefined) return;\n\t\n\t                            xValue = point.x;\n\t                            if (singlePoint === undefined) singlePoint = point;\n\t                            if (pointXLocation === undefined) pointXLocation = e.mouseX\n\t                            allData.push({\n\t                                key: series.key,\n\t                                value: chart.y()(point, pointIndex),\n\t                                color: color(series,series.seriesIndex),\n\t                                data: series.values[pointIndex]\n\t                            });\n\t                        });\n\t\n\t                    interactiveLayer.tooltip\n\t                        .data({\n\t                            value: xValue,\n\t                            index: pointIndex,\n\t                            series: allData\n\t                        })();\n\t\n\t                    interactiveLayer.renderGuideLine(pointXLocation);\n\t                });\n\t\n\t                interactiveLayer.dispatch.on(\"elementMouseout\",function(e) {\n\t                    interactiveLayer.tooltip.hidden(true);\n\t                });\n\t            }\n\t            else {\n\t                multibar.dispatch.on('elementMouseover.tooltip', function(evt) {\n\t                    evt.value = chart.x()(evt.data);\n\t                    evt['series'] = {\n\t                        key: evt.data.key,\n\t                        value: chart.y()(evt.data),\n\t                        color: evt.color\n\t                    };\n\t                    tooltip.data(evt).hidden(false);\n\t                });\n\t\n\t                multibar.dispatch.on('elementMouseout.tooltip', function(evt) {\n\t                    tooltip.hidden(true);\n\t                });\n\t\n\t                multibar.dispatch.on('elementMousemove.tooltip', function(evt) {\n\t                    tooltip();\n\t                });\n\t            }\n\t        });\n\t\n\t        renderWatch.renderEnd('multibarchart immediate');\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    // expose chart's sub-components\n\t    chart.dispatch = dispatch;\n\t    chart.multibar = multibar;\n\t    chart.legend = legend;\n\t    chart.controls = controls;\n\t    chart.xAxis = xAxis;\n\t    chart.yAxis = yAxis;\n\t    chart.state = state;\n\t    chart.tooltip = tooltip;\n\t    chart.interactiveLayer = interactiveLayer;\n\t\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:      {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:     {get: function(){return height;}, set: function(_){height=_;}},\n\t        showLegend: {get: function(){return showLegend;}, set: function(_){showLegend=_;}},\n\t        showControls: {get: function(){return showControls;}, set: function(_){showControls=_;}},\n\t        controlLabels: {get: function(){return controlLabels;}, set: function(_){controlLabels=_;}},\n\t        showXAxis:      {get: function(){return showXAxis;}, set: function(_){showXAxis=_;}},\n\t        showYAxis:    {get: function(){return showYAxis;}, set: function(_){showYAxis=_;}},\n\t        defaultState:    {get: function(){return defaultState;}, set: function(_){defaultState=_;}},\n\t        noData:    {get: function(){return noData;}, set: function(_){noData=_;}},\n\t        reduceXTicks:    {get: function(){return reduceXTicks;}, set: function(_){reduceXTicks=_;}},\n\t        rotateLabels:    {get: function(){return rotateLabels;}, set: function(_){rotateLabels=_;}},\n\t        staggerLabels:    {get: function(){return staggerLabels;}, set: function(_){staggerLabels=_;}},\n\t        wrapLabels:   {get: function(){return wrapLabels;}, set: function(_){wrapLabels=!!_;}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            if (_.top !== undefined) {\n\t                margin.top = _.top;\n\t                marginTop = _.top;\n\t            }\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }},\n\t        duration: {get: function(){return duration;}, set: function(_){\n\t            duration = _;\n\t            multibar.duration(duration);\n\t            xAxis.duration(duration);\n\t            yAxis.duration(duration);\n\t            renderWatch.reset(duration);\n\t        }},\n\t        color:  {get: function(){return color;}, set: function(_){\n\t            color = nv.utils.getColor(_);\n\t            legend.color(color);\n\t        }},\n\t        rightAlignYAxis: {get: function(){return rightAlignYAxis;}, set: function(_){\n\t            rightAlignYAxis = _;\n\t            yAxis.orient( rightAlignYAxis ? 'right' : 'left');\n\t        }},\n\t        useInteractiveGuideline: {get: function(){return useInteractiveGuideline;}, set: function(_){\n\t            useInteractiveGuideline = _;\n\t        }},\n\t        barColor:  {get: function(){return multibar.barColor;}, set: function(_){\n\t            multibar.barColor(_);\n\t            legend.color(function(d,i) {return d3.rgb('#ccc').darker(i * 1.5).toString();})\n\t        }}\n\t    });\n\t\n\t    nv.utils.inheritOptions(chart, multibar);\n\t    nv.utils.initOptions(chart);\n\t\n\t    return chart;\n\t};\n\t\n\tnv.models.multiBarHorizontal = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n\t        , width = 960\n\t        , height = 500\n\t        , id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n\t        , container = null\n\t        , x = d3.scale.ordinal()\n\t        , y = d3.scale.linear()\n\t        , getX = function(d) { return d.x }\n\t        , getY = function(d) { return d.y }\n\t        , getYerr = function(d) { return d.yErr }\n\t        , forceY = [0] // 0 is forced by default.. this makes sense for the majority of bar graphs... user can always do chart.forceY([]) to remove\n\t        , color = nv.utils.defaultColor()\n\t        , barColor = null // adding the ability to set the color for each rather than the whole group\n\t        , disabled // used in conjunction with barColor to communicate from multiBarHorizontalChart what series are disabled\n\t        , stacked = false\n\t        , showValues = false\n\t        , showBarLabels = false\n\t        , valuePadding = 60\n\t        , groupSpacing = 0.1\n\t        , fillOpacity = 0.75\n\t        , valueFormat = d3.format(',.2f')\n\t        , delay = 1200\n\t        , xDomain\n\t        , yDomain\n\t        , xRange\n\t        , yRange\n\t        , duration = 250\n\t        , dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd')\n\t        ;\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    var x0, y0; //used to store previous scales\n\t    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\t\n\t    function chart(selection) {\n\t        renderWatch.reset();\n\t        selection.each(function(data) {\n\t            var availableWidth = width - margin.left - margin.right,\n\t                availableHeight = height - margin.top - margin.bottom;\n\t\n\t            container = d3.select(this);\n\t            nv.utils.initSVG(container);\n\t\n\t            if (stacked)\n\t                data = d3.layout.stack()\n\t                    .offset('zero')\n\t                    .values(function(d){ return d.values })\n\t                    .y(getY)\n\t                (data);\n\t\n\t            //add series index and key to each data point for reference\n\t            data.forEach(function(series, i) {\n\t                series.values.forEach(function(point) {\n\t                    point.series = i;\n\t                    point.key = series.key;\n\t                });\n\t            });\n\t\n\t            // HACK for negative value stacking\n\t            if (stacked)\n\t                data[0].values.map(function(d,i) {\n\t                    var posBase = 0, negBase = 0;\n\t                    data.map(function(d) {\n\t                        var f = d.values[i]\n\t                        f.size = Math.abs(f.y);\n\t                        if (f.y<0)  {\n\t                            f.y1 = negBase - f.size;\n\t                            negBase = negBase - f.size;\n\t                        } else\n\t                        {\n\t                            f.y1 = posBase;\n\t                            posBase = posBase + f.size;\n\t                        }\n\t                    });\n\t                });\n\t\n\t            // Setup Scales\n\t            // remap and flatten the data for use in calculating the scales' domains\n\t            var seriesData = (xDomain && yDomain) ? [] : // if we know xDomain and yDomain, no need to calculate\n\t                data.map(function(d) {\n\t                    return d.values.map(function(d,i) {\n\t                        return { x: getX(d,i), y: getY(d,i), y0: d.y0, y1: d.y1 }\n\t                    })\n\t                });\n\t\n\t            x.domain(xDomain || d3.merge(seriesData).map(function(d) { return d.x }))\n\t                .rangeBands(xRange || [0, availableHeight], groupSpacing);\n\t\n\t            y.domain(yDomain || d3.extent(d3.merge(seriesData).map(function(d) { return stacked ? (d.y > 0 ? d.y1 + d.y : d.y1 ) : d.y }).concat(forceY)))\n\t\n\t            if (showValues && !stacked)\n\t                y.range(yRange || [(y.domain()[0] < 0 ? valuePadding : 0), availableWidth - (y.domain()[1] > 0 ? valuePadding : 0) ]);\n\t            else\n\t                y.range(yRange || [0, availableWidth]);\n\t\n\t            x0 = x0 || x;\n\t            y0 = y0 || d3.scale.linear().domain(y.domain()).range([y(0),y(0)]);\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = d3.select(this).selectAll('g.nv-wrap.nv-multibarHorizontal').data([data]);\n\t            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-multibarHorizontal');\n\t            var defsEnter = wrapEnter.append('defs');\n\t            var gEnter = wrapEnter.append('g');\n\t            var g = wrap.select('g');\n\t\n\t            gEnter.append('g').attr('class', 'nv-groups');\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            var groups = wrap.select('.nv-groups').selectAll('.nv-group')\n\t                .data(function(d) { return d }, function(d,i) { return i });\n\t            groups.enter().append('g')\n\t                .style('stroke-opacity', 1e-6)\n\t                .style('fill-opacity', 1e-6);\n\t            groups.exit().watchTransition(renderWatch, 'multibarhorizontal: exit groups')\n\t                .style('stroke-opacity', 1e-6)\n\t                .style('fill-opacity', 1e-6)\n\t                .remove();\n\t            groups\n\t                .attr('class', function(d,i) { return 'nv-group nv-series-' + i })\n\t                .classed('hover', function(d) { return d.hover })\n\t                .style('fill', function(d,i){ return color(d, i) })\n\t                .style('stroke', function(d,i){ return color(d, i) });\n\t            groups.watchTransition(renderWatch, 'multibarhorizontal: groups')\n\t                .style('stroke-opacity', 1)\n\t                .style('fill-opacity', fillOpacity);\n\t\n\t            var bars = groups.selectAll('g.nv-bar')\n\t                .data(function(d) { return d.values });\n\t            bars.exit().remove();\n\t\n\t            var barsEnter = bars.enter().append('g')\n\t                .attr('transform', function(d,i,j) {\n\t                    return 'translate(' + y0(stacked ? d.y0 : 0) + ',' + (stacked ? 0 : (j * x.rangeBand() / data.length ) + x(getX(d,i))) + ')'\n\t                });\n\t\n\t            barsEnter.append('rect')\n\t                .attr('width', 0)\n\t                .attr('height', x.rangeBand() / (stacked ? 1 : data.length) )\n\t\n\t            bars\n\t                .on('mouseover', function(d,i) { //TODO: figure out why j works above, but not here\n\t                    d3.select(this).classed('hover', true);\n\t                    dispatch.elementMouseover({\n\t                        data: d,\n\t                        index: i,\n\t                        color: d3.select(this).style(\"fill\")\n\t                    });\n\t                })\n\t                .on('mouseout', function(d,i) {\n\t                    d3.select(this).classed('hover', false);\n\t                    dispatch.elementMouseout({\n\t                        data: d,\n\t                        index: i,\n\t                        color: d3.select(this).style(\"fill\")\n\t                    });\n\t                })\n\t                .on('mouseout', function(d,i) {\n\t                    dispatch.elementMouseout({\n\t                        data: d,\n\t                        index: i,\n\t                        color: d3.select(this).style(\"fill\")\n\t                    });\n\t                })\n\t                .on('mousemove', function(d,i) {\n\t                    dispatch.elementMousemove({\n\t                        data: d,\n\t                        index: i,\n\t                        color: d3.select(this).style(\"fill\")\n\t                    });\n\t                })\n\t                .on('click', function(d,i) {\n\t                    var element = this;\n\t                    dispatch.elementClick({\n\t                        data: d,\n\t                        index: i,\n\t                        color: d3.select(this).style(\"fill\"),\n\t                        event: d3.event,\n\t                        element: element\n\t                    });\n\t                    d3.event.stopPropagation();\n\t                })\n\t                .on('dblclick', function(d,i) {\n\t                    dispatch.elementDblClick({\n\t                        data: d,\n\t                        index: i,\n\t                        color: d3.select(this).style(\"fill\")\n\t                    });\n\t                    d3.event.stopPropagation();\n\t                });\n\t\n\t            if (getYerr(data[0],0)) {\n\t                barsEnter.append('polyline');\n\t\n\t                bars.select('polyline')\n\t                    .attr('fill', 'none')\n\t                    .attr('points', function(d,i) {\n\t                        var xerr = getYerr(d,i)\n\t                            , mid = 0.8 * x.rangeBand() / ((stacked ? 1 : data.length) * 2);\n\t                        xerr = xerr.length ? xerr : [-Math.abs(xerr), Math.abs(xerr)];\n\t                        xerr = xerr.map(function(e) { return y(e) - y(0); });\n\t                        var a = [[xerr[0],-mid], [xerr[0],mid], [xerr[0],0], [xerr[1],0], [xerr[1],-mid], [xerr[1],mid]];\n\t                        return a.map(function (path) { return path.join(',') }).join(' ');\n\t                    })\n\t                    .attr('transform', function(d,i) {\n\t                        var mid = x.rangeBand() / ((stacked ? 1 : data.length) * 2);\n\t                        return 'translate(' + (getY(d,i) < 0 ? 0 : y(getY(d,i)) - y(0)) + ', ' + mid + ')'\n\t                    });\n\t            }\n\t\n\t            barsEnter.append('text');\n\t\n\t            if (showValues && !stacked) {\n\t                bars.select('text')\n\t                    .attr('text-anchor', function(d,i) { return getY(d,i) < 0 ? 'end' : 'start' })\n\t                    .attr('y', x.rangeBand() / (data.length * 2))\n\t                    .attr('dy', '.32em')\n\t                    .text(function(d,i) {\n\t                        var t = valueFormat(getY(d,i))\n\t                            , yerr = getYerr(d,i);\n\t                        if (yerr === undefined)\n\t                            return t;\n\t                        if (!yerr.length)\n\t                            return t + '±' + valueFormat(Math.abs(yerr));\n\t                        return t + '+' + valueFormat(Math.abs(yerr[1])) + '-' + valueFormat(Math.abs(yerr[0]));\n\t                    });\n\t                bars.watchTransition(renderWatch, 'multibarhorizontal: bars')\n\t                    .select('text')\n\t                    .attr('x', function(d,i) { return getY(d,i) < 0 ? -4 : y(getY(d,i)) - y(0) + 4 })\n\t            } else {\n\t                bars.selectAll('text').text('');\n\t            }\n\t\n\t            if (showBarLabels && !stacked) {\n\t                barsEnter.append('text').classed('nv-bar-label',true);\n\t                bars.select('text.nv-bar-label')\n\t                    .attr('text-anchor', function(d,i) { return getY(d,i) < 0 ? 'start' : 'end' })\n\t                    .attr('y', x.rangeBand() / (data.length * 2))\n\t                    .attr('dy', '.32em')\n\t                    .text(function(d,i) { return getX(d,i) });\n\t                bars.watchTransition(renderWatch, 'multibarhorizontal: bars')\n\t                    .select('text.nv-bar-label')\n\t                    .attr('x', function(d,i) { return getY(d,i) < 0 ? y(0) - y(getY(d,i)) + 4 : -4 });\n\t            }\n\t            else {\n\t                bars.selectAll('text.nv-bar-label').text('');\n\t            }\n\t\n\t            bars\n\t                .attr('class', function(d,i) { return getY(d,i) < 0 ? 'nv-bar negative' : 'nv-bar positive'})\n\t\n\t            if (barColor) {\n\t                if (!disabled) disabled = data.map(function() { return true });\n\t                bars\n\t                    .style('fill', function(d,i,j) { return d3.rgb(barColor(d,i)).darker(  disabled.map(function(d,i) { return i }).filter(function(d,i){ return !disabled[i]  })[j]   ).toString(); })\n\t                    .style('stroke', function(d,i,j) { return d3.rgb(barColor(d,i)).darker(  disabled.map(function(d,i) { return i }).filter(function(d,i){ return !disabled[i]  })[j]   ).toString(); });\n\t            }\n\t\n\t            if (stacked)\n\t                bars.watchTransition(renderWatch, 'multibarhorizontal: bars')\n\t                    .attr('transform', function(d,i) {\n\t                        return 'translate(' + y(d.y1) + ',' + x(getX(d,i)) + ')'\n\t                    })\n\t                    .select('rect')\n\t                    .attr('width', function(d,i) {\n\t                        return Math.abs(y(getY(d,i) + d.y0) - y(d.y0)) || 0\n\t                    })\n\t                    .attr('height', x.rangeBand() );\n\t            else\n\t                bars.watchTransition(renderWatch, 'multibarhorizontal: bars')\n\t                    .attr('transform', function(d,i) {\n\t                        //TODO: stacked must be all positive or all negative, not both?\n\t                        return 'translate(' +\n\t                            (getY(d,i) < 0 ? y(getY(d,i)) : y(0))\n\t                            + ',' +\n\t                            (d.series * x.rangeBand() / data.length\n\t                                +\n\t                                x(getX(d,i)) )\n\t                            + ')'\n\t                    })\n\t                    .select('rect')\n\t                    .attr('height', x.rangeBand() / data.length )\n\t                    .attr('width', function(d,i) {\n\t                        return Math.max(Math.abs(y(getY(d,i)) - y(0)),1) || 0\n\t                    });\n\t\n\t            //store old scales for use in transitions on update\n\t            x0 = x.copy();\n\t            y0 = y.copy();\n\t\n\t        });\n\t\n\t        renderWatch.renderEnd('multibarHorizontal immediate');\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    chart.dispatch = dispatch;\n\t\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:   {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:  {get: function(){return height;}, set: function(_){height=_;}},\n\t        x:       {get: function(){return getX;}, set: function(_){getX=_;}},\n\t        y:       {get: function(){return getY;}, set: function(_){getY=_;}},\n\t        yErr:       {get: function(){return getYerr;}, set: function(_){getYerr=_;}},\n\t        xScale:  {get: function(){return x;}, set: function(_){x=_;}},\n\t        yScale:  {get: function(){return y;}, set: function(_){y=_;}},\n\t        xDomain: {get: function(){return xDomain;}, set: function(_){xDomain=_;}},\n\t        yDomain: {get: function(){return yDomain;}, set: function(_){yDomain=_;}},\n\t        xRange:  {get: function(){return xRange;}, set: function(_){xRange=_;}},\n\t        yRange:  {get: function(){return yRange;}, set: function(_){yRange=_;}},\n\t        forceY:  {get: function(){return forceY;}, set: function(_){forceY=_;}},\n\t        stacked: {get: function(){return stacked;}, set: function(_){stacked=_;}},\n\t        showValues: {get: function(){return showValues;}, set: function(_){showValues=_;}},\n\t        // this shows the group name, seems pointless?\n\t        //showBarLabels:    {get: function(){return showBarLabels;}, set: function(_){showBarLabels=_;}},\n\t        disabled:     {get: function(){return disabled;}, set: function(_){disabled=_;}},\n\t        id:           {get: function(){return id;}, set: function(_){id=_;}},\n\t        valueFormat:  {get: function(){return valueFormat;}, set: function(_){valueFormat=_;}},\n\t        valuePadding: {get: function(){return valuePadding;}, set: function(_){valuePadding=_;}},\n\t        groupSpacing: {get: function(){return groupSpacing;}, set: function(_){groupSpacing=_;}},\n\t        fillOpacity:  {get: function(){return fillOpacity;}, set: function(_){fillOpacity=_;}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }},\n\t        duration: {get: function(){return duration;}, set: function(_){\n\t            duration = _;\n\t            renderWatch.reset(duration);\n\t        }},\n\t        color:  {get: function(){return color;}, set: function(_){\n\t            color = nv.utils.getColor(_);\n\t        }},\n\t        barColor:  {get: function(){return barColor;}, set: function(_){\n\t            barColor = _ ? nv.utils.getColor(_) : null;\n\t        }}\n\t    });\n\t\n\t    nv.utils.initOptions(chart);\n\t\n\t    return chart;\n\t};\n\t\n\tnv.models.multiBarHorizontalChart = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var multibar = nv.models.multiBarHorizontal()\n\t        , xAxis = nv.models.axis()\n\t        , yAxis = nv.models.axis()\n\t        , legend = nv.models.legend().height(30)\n\t        , controls = nv.models.legend().height(30)\n\t        , tooltip = nv.models.tooltip()\n\t        ;\n\t\n\t    var margin = {top: 30, right: 20, bottom: 50, left: 60}\n\t        , marginTop = null\n\t        , width = null\n\t        , height = null\n\t        , color = nv.utils.defaultColor()\n\t        , showControls = true\n\t        , controlLabels = {}\n\t        , showLegend = true\n\t        , showXAxis = true\n\t        , showYAxis = true\n\t        , stacked = false\n\t        , x //can be accessed via chart.xScale()\n\t        , y //can be accessed via chart.yScale()\n\t        , state = nv.utils.state()\n\t        , defaultState = null\n\t        , noData = null\n\t        , dispatch = d3.dispatch('stateChange', 'changeState','renderEnd')\n\t        , controlWidth = function() { return showControls ? 180 : 0 }\n\t        , duration = 250\n\t        ;\n\t\n\t    state.stacked = false; // DEPRECATED Maintained for backward compatibility\n\t\n\t    multibar.stacked(stacked);\n\t\n\t    xAxis\n\t        .orient('left')\n\t        .tickPadding(5)\n\t        .showMaxMin(false)\n\t        .tickFormat(function(d) { return d })\n\t    ;\n\t    yAxis\n\t        .orient('bottom')\n\t        .tickFormat(d3.format(',.1f'))\n\t    ;\n\t\n\t    tooltip\n\t        .duration(0)\n\t        .valueFormatter(function(d, i) {\n\t            return yAxis.tickFormat()(d, i);\n\t        })\n\t        .headerFormatter(function(d, i) {\n\t            return xAxis.tickFormat()(d, i);\n\t        });\n\t\n\t    controls.updateState(false);\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    var stateGetter = function(data) {\n\t        return function(){\n\t            return {\n\t                active: data.map(function(d) { return !d.disabled }),\n\t                stacked: stacked\n\t            };\n\t        }\n\t    };\n\t\n\t    var stateSetter = function(data) {\n\t        return function(state) {\n\t            if (state.stacked !== undefined)\n\t                stacked = state.stacked;\n\t            if (state.active !== undefined)\n\t                data.forEach(function(series,i) {\n\t                    series.disabled = !state.active[i];\n\t                });\n\t        }\n\t    };\n\t\n\t    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\t\n\t    function chart(selection) {\n\t        renderWatch.reset();\n\t        renderWatch.models(multibar);\n\t        if (showXAxis) renderWatch.models(xAxis);\n\t        if (showYAxis) renderWatch.models(yAxis);\n\t\n\t        selection.each(function(data) {\n\t            var container = d3.select(this),\n\t                that = this;\n\t            nv.utils.initSVG(container);\n\t            var availableWidth = nv.utils.availableWidth(width, container, margin),\n\t                availableHeight = nv.utils.availableHeight(height, container, margin);\n\t\n\t            chart.update = function() { container.transition().duration(duration).call(chart) };\n\t            chart.container = this;\n\t\n\t            stacked = multibar.stacked();\n\t\n\t            state\n\t                .setter(stateSetter(data), chart.update)\n\t                .getter(stateGetter(data))\n\t                .update();\n\t\n\t            // DEPRECATED set state.disableddisabled\n\t            state.disabled = data.map(function(d) { return !!d.disabled });\n\t\n\t            if (!defaultState) {\n\t                var key;\n\t                defaultState = {};\n\t                for (key in state) {\n\t                    if (state[key] instanceof Array)\n\t                        defaultState[key] = state[key].slice(0);\n\t                    else\n\t                        defaultState[key] = state[key];\n\t                }\n\t            }\n\t\n\t            // Display No Data message if there's nothing to show.\n\t            if (!data || !data.length || !data.filter(function(d) { return d.values.length }).length) {\n\t                nv.utils.noData(chart, container)\n\t                return chart;\n\t            } else {\n\t                container.selectAll('.nv-noData').remove();\n\t            }\n\t\n\t            // Setup Scales\n\t            x = multibar.xScale();\n\t            y = multibar.yScale().clamp(true);\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = container.selectAll('g.nv-wrap.nv-multiBarHorizontalChart').data([data]);\n\t            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-multiBarHorizontalChart').append('g');\n\t            var g = wrap.select('g');\n\t\n\t            gEnter.append('g').attr('class', 'nv-x nv-axis');\n\t            gEnter.append('g').attr('class', 'nv-y nv-axis')\n\t                .append('g').attr('class', 'nv-zeroLine')\n\t                .append('line');\n\t            gEnter.append('g').attr('class', 'nv-barsWrap');\n\t            gEnter.append('g').attr('class', 'nv-legendWrap');\n\t            gEnter.append('g').attr('class', 'nv-controlsWrap');\n\t\n\t            // Legend\n\t            if (!showLegend) {\n\t                g.select('.nv-legendWrap').selectAll('*').remove();\n\t            } else {\n\t                legend.width(availableWidth - controlWidth());\n\t\n\t                g.select('.nv-legendWrap')\n\t                    .datum(data)\n\t                    .call(legend);\n\t\n\t                if (!marginTop && legend.height() !== margin.top) {\n\t                    margin.top = legend.height();\n\t                    availableHeight = nv.utils.availableHeight(height, container, margin);\n\t                }\n\t\n\t                g.select('.nv-legendWrap')\n\t                    .attr('transform', 'translate(' + controlWidth() + ',' + (-margin.top) +')');\n\t            }\n\t\n\t            // Controls\n\t            if (!showControls) {\n\t                 g.select('.nv-controlsWrap').selectAll('*').remove();\n\t            } else {\n\t                var controlsData = [\n\t                    { key: controlLabels.grouped || 'Grouped', disabled: multibar.stacked() },\n\t                    { key: controlLabels.stacked || 'Stacked', disabled: !multibar.stacked() }\n\t                ];\n\t\n\t                controls.width(controlWidth()).color(['#444', '#444', '#444']);\n\t                g.select('.nv-controlsWrap')\n\t                    .datum(controlsData)\n\t                    .attr('transform', 'translate(0,' + (-margin.top) +')')\n\t                    .call(controls);\n\t            }\n\t\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            // Main Chart Component(s)\n\t            multibar\n\t                .disabled(data.map(function(series) { return series.disabled }))\n\t                .width(availableWidth)\n\t                .height(availableHeight)\n\t                .color(data.map(function(d,i) {\n\t                    return d.color || color(d, i);\n\t                }).filter(function(d,i) { return !data[i].disabled }));\n\t\n\t            var barsWrap = g.select('.nv-barsWrap')\n\t                .datum(data.filter(function(d) { return !d.disabled }));\n\t\n\t            barsWrap.transition().call(multibar);\n\t\n\t            // Setup Axes\n\t            if (showXAxis) {\n\t                xAxis\n\t                    .scale(x)\n\t                    ._ticks( nv.utils.calcTicksY(availableHeight/24, data) )\n\t                    .tickSize(-availableWidth, 0);\n\t\n\t                g.select('.nv-x.nv-axis').call(xAxis);\n\t\n\t                var xTicks = g.select('.nv-x.nv-axis').selectAll('g');\n\t\n\t                xTicks\n\t                    .selectAll('line, text');\n\t            }\n\t\n\t            if (showYAxis) {\n\t                yAxis\n\t                    .scale(y)\n\t                    ._ticks( nv.utils.calcTicksX(availableWidth/100, data) )\n\t                    .tickSize( -availableHeight, 0);\n\t\n\t                g.select('.nv-y.nv-axis')\n\t                    .attr('transform', 'translate(0,' + availableHeight + ')');\n\t                g.select('.nv-y.nv-axis').call(yAxis);\n\t            }\n\t\n\t            // Zero line\n\t            g.select(\".nv-zeroLine line\")\n\t                .attr(\"x1\", y(0))\n\t                .attr(\"x2\", y(0))\n\t                .attr(\"y1\", 0)\n\t                .attr(\"y2\", -availableHeight)\n\t            ;\n\t\n\t            //============================================================\n\t            // Event Handling/Dispatching (in chart's scope)\n\t            //------------------------------------------------------------\n\t\n\t            legend.dispatch.on('stateChange', function(newState) {\n\t                for (var key in newState)\n\t                    state[key] = newState[key];\n\t                dispatch.stateChange(state);\n\t                chart.update();\n\t            });\n\t\n\t            controls.dispatch.on('legendClick', function(d,i) {\n\t                if (!d.disabled) return;\n\t                controlsData = controlsData.map(function(s) {\n\t                    s.disabled = true;\n\t                    return s;\n\t                });\n\t                d.disabled = false;\n\t\n\t                switch (d.key) {\n\t                    case 'Grouped':\n\t                    case controlLabels.grouped:\n\t                        multibar.stacked(false);\n\t                        break;\n\t                    case 'Stacked':\n\t                    case controlLabels.stacked:\n\t                        multibar.stacked(true);\n\t                        break;\n\t                }\n\t\n\t                state.stacked = multibar.stacked();\n\t                dispatch.stateChange(state);\n\t                stacked = multibar.stacked();\n\t\n\t                chart.update();\n\t            });\n\t\n\t            // Update chart from a state object passed to event handler\n\t            dispatch.on('changeState', function(e) {\n\t\n\t                if (typeof e.disabled !== 'undefined') {\n\t                    data.forEach(function(series,i) {\n\t                        series.disabled = e.disabled[i];\n\t                    });\n\t\n\t                    state.disabled = e.disabled;\n\t                }\n\t\n\t                if (typeof e.stacked !== 'undefined') {\n\t                    multibar.stacked(e.stacked);\n\t                    state.stacked = e.stacked;\n\t                    stacked = e.stacked;\n\t                }\n\t\n\t                chart.update();\n\t            });\n\t        });\n\t        renderWatch.renderEnd('multibar horizontal chart immediate');\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Event Handling/Dispatching (out of chart's scope)\n\t    //------------------------------------------------------------\n\t\n\t    multibar.dispatch.on('elementMouseover.tooltip', function(evt) {\n\t        evt.value = chart.x()(evt.data);\n\t        evt['series'] = {\n\t            key: evt.data.key,\n\t            value: chart.y()(evt.data),\n\t            color: evt.color\n\t        };\n\t        tooltip.data(evt).hidden(false);\n\t    });\n\t\n\t    multibar.dispatch.on('elementMouseout.tooltip', function(evt) {\n\t        tooltip.hidden(true);\n\t    });\n\t\n\t    multibar.dispatch.on('elementMousemove.tooltip', function(evt) {\n\t        tooltip();\n\t    });\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    // expose chart's sub-components\n\t    chart.dispatch = dispatch;\n\t    chart.multibar = multibar;\n\t    chart.legend = legend;\n\t    chart.controls = controls;\n\t    chart.xAxis = xAxis;\n\t    chart.yAxis = yAxis;\n\t    chart.state = state;\n\t    chart.tooltip = tooltip;\n\t\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:      {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:     {get: function(){return height;}, set: function(_){height=_;}},\n\t        showLegend: {get: function(){return showLegend;}, set: function(_){showLegend=_;}},\n\t        showControls: {get: function(){return showControls;}, set: function(_){showControls=_;}},\n\t        controlLabels: {get: function(){return controlLabels;}, set: function(_){controlLabels=_;}},\n\t        showXAxis:      {get: function(){return showXAxis;}, set: function(_){showXAxis=_;}},\n\t        showYAxis:    {get: function(){return showYAxis;}, set: function(_){showYAxis=_;}},\n\t        defaultState:    {get: function(){return defaultState;}, set: function(_){defaultState=_;}},\n\t        noData:    {get: function(){return noData;}, set: function(_){noData=_;}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            if (_.top !== undefined) {\n\t                margin.top = _.top;\n\t                marginTop = _.top;\n\t            }\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }},\n\t        duration: {get: function(){return duration;}, set: function(_){\n\t            duration = _;\n\t            renderWatch.reset(duration);\n\t            multibar.duration(duration);\n\t            xAxis.duration(duration);\n\t            yAxis.duration(duration);\n\t        }},\n\t        color:  {get: function(){return color;}, set: function(_){\n\t            color = nv.utils.getColor(_);\n\t            legend.color(color);\n\t        }},\n\t        barColor:  {get: function(){return multibar.barColor;}, set: function(_){\n\t            multibar.barColor(_);\n\t            legend.color(function(d,i) {return d3.rgb('#ccc').darker(i * 1.5).toString();})\n\t        }}\n\t    });\n\t\n\t    nv.utils.inheritOptions(chart, multibar);\n\t    nv.utils.initOptions(chart);\n\t\n\t    return chart;\n\t};\n\tnv.models.multiChart = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var margin = {top: 30, right: 20, bottom: 50, left: 60},\n\t        marginTop = null,\n\t        color = nv.utils.defaultColor(),\n\t        width = null,\n\t        height = null,\n\t        showLegend = true,\n\t        noData = null,\n\t        yDomain1,\n\t        yDomain2,\n\t        getX = function(d) { return d.x },\n\t        getY = function(d) { return d.y},\n\t        interpolate = 'linear',\n\t        useVoronoi = true,\n\t        interactiveLayer = nv.interactiveGuideline(),\n\t        useInteractiveGuideline = false,\n\t        legendRightAxisHint = ' (right axis)',\n\t        duration = 250\n\t        ;\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    var x = d3.scale.linear(),\n\t        yScale1 = d3.scale.linear(),\n\t        yScale2 = d3.scale.linear(),\n\t\n\t        lines1 = nv.models.line().yScale(yScale1).duration(duration),\n\t        lines2 = nv.models.line().yScale(yScale2).duration(duration),\n\t\n\t        scatters1 = nv.models.scatter().yScale(yScale1).duration(duration),\n\t        scatters2 = nv.models.scatter().yScale(yScale2).duration(duration),\n\t\n\t        bars1 = nv.models.multiBar().stacked(false).yScale(yScale1).duration(duration),\n\t        bars2 = nv.models.multiBar().stacked(false).yScale(yScale2).duration(duration),\n\t\n\t        stack1 = nv.models.stackedArea().yScale(yScale1).duration(duration),\n\t        stack2 = nv.models.stackedArea().yScale(yScale2).duration(duration),\n\t\n\t        xAxis = nv.models.axis().scale(x).orient('bottom').tickPadding(5).duration(duration),\n\t        yAxis1 = nv.models.axis().scale(yScale1).orient('left').duration(duration),\n\t        yAxis2 = nv.models.axis().scale(yScale2).orient('right').duration(duration),\n\t\n\t        legend = nv.models.legend().height(30),\n\t        tooltip = nv.models.tooltip(),\n\t        dispatch = d3.dispatch();\n\t\n\t    var charts = [lines1, lines2, scatters1, scatters2, bars1, bars2, stack1, stack2];\n\t\n\t    function chart(selection) {\n\t        selection.each(function(data) {\n\t            var container = d3.select(this),\n\t                that = this;\n\t            nv.utils.initSVG(container);\n\t\n\t            chart.update = function() { container.transition().call(chart); };\n\t            chart.container = this;\n\t\n\t            var availableWidth = nv.utils.availableWidth(width, container, margin),\n\t                availableHeight = nv.utils.availableHeight(height, container, margin);\n\t\n\t            var dataLines1 = data.filter(function(d) {return d.type == 'line' && d.yAxis == 1});\n\t            var dataLines2 = data.filter(function(d) {return d.type == 'line' && d.yAxis == 2});\n\t            var dataScatters1 = data.filter(function(d) {return d.type == 'scatter' && d.yAxis == 1});\n\t            var dataScatters2 = data.filter(function(d) {return d.type == 'scatter' && d.yAxis == 2});\n\t            var dataBars1 =  data.filter(function(d) {return d.type == 'bar'  && d.yAxis == 1});\n\t            var dataBars2 =  data.filter(function(d) {return d.type == 'bar'  && d.yAxis == 2});\n\t            var dataStack1 = data.filter(function(d) {return d.type == 'area' && d.yAxis == 1});\n\t            var dataStack2 = data.filter(function(d) {return d.type == 'area' && d.yAxis == 2});\n\t\n\t            // Display noData message if there's nothing to show.\n\t            if (!data || !data.length || !data.filter(function(d) { return d.values.length }).length) {\n\t                nv.utils.noData(chart, container);\n\t                return chart;\n\t            } else {\n\t                container.selectAll('.nv-noData').remove();\n\t            }\n\t\n\t            var series1 = data.filter(function(d) {return !d.disabled && d.yAxis == 1})\n\t                .map(function(d) {\n\t                    return d.values.map(function(d,i) {\n\t                        return { x: getX(d), y: getY(d) }\n\t                    })\n\t                });\n\t\n\t            var series2 = data.filter(function(d) {return !d.disabled && d.yAxis == 2})\n\t                .map(function(d) {\n\t                    return d.values.map(function(d,i) {\n\t                        return { x: getX(d), y: getY(d) }\n\t                    })\n\t                });\n\t\n\t            x   .domain(d3.extent(d3.merge(series1.concat(series2)), function(d) { return d.x }))\n\t                .range([0, availableWidth]);\n\t\n\t            var wrap = container.selectAll('g.wrap.multiChart').data([data]);\n\t            var gEnter = wrap.enter().append('g').attr('class', 'wrap nvd3 multiChart').append('g');\n\t\n\t            gEnter.append('g').attr('class', 'nv-x nv-axis');\n\t            gEnter.append('g').attr('class', 'nv-y1 nv-axis');\n\t            gEnter.append('g').attr('class', 'nv-y2 nv-axis');\n\t            gEnter.append('g').attr('class', 'stack1Wrap');\n\t            gEnter.append('g').attr('class', 'stack2Wrap');\n\t            gEnter.append('g').attr('class', 'bars1Wrap');\n\t            gEnter.append('g').attr('class', 'bars2Wrap');\n\t            gEnter.append('g').attr('class', 'scatters1Wrap');\n\t            gEnter.append('g').attr('class', 'scatters2Wrap');\n\t            gEnter.append('g').attr('class', 'lines1Wrap');\n\t            gEnter.append('g').attr('class', 'lines2Wrap');\n\t            gEnter.append('g').attr('class', 'legendWrap');\n\t            gEnter.append('g').attr('class', 'nv-interactive');\n\t\n\t            var g = wrap.select('g');\n\t\n\t            var color_array = data.map(function(d,i) {\n\t                return data[i].color || color(d, i);\n\t            });\n\t\n\t            // Legend\n\t            if (!showLegend) {\n\t                g.select('.legendWrap').selectAll('*').remove();\n\t            } else {\n\t                var legendWidth = legend.align() ? availableWidth / 2 : availableWidth;\n\t                var legendXPosition = legend.align() ? legendWidth : 0;\n\t\n\t                legend.width(legendWidth);\n\t                legend.color(color_array);\n\t\n\t                g.select('.legendWrap')\n\t                    .datum(data.map(function(series) {\n\t                        series.originalKey = series.originalKey === undefined ? series.key : series.originalKey;\n\t                        series.key = series.originalKey + (series.yAxis == 1 ? '' : legendRightAxisHint);\n\t                        return series;\n\t                    }))\n\t                    .call(legend);\n\t\n\t                if (!marginTop && legend.height() !== margin.top) {\n\t                    margin.top = legend.height();\n\t                    availableHeight = nv.utils.availableHeight(height, container, margin);\n\t                }\n\t\n\t                g.select('.legendWrap')\n\t                    .attr('transform', 'translate(' + legendXPosition + ',' + (-margin.top) +')');\n\t            }\n\t\n\t            lines1\n\t                .width(availableWidth)\n\t                .height(availableHeight)\n\t                .interpolate(interpolate)\n\t                .color(color_array.filter(function(d,i) { return !data[i].disabled && data[i].yAxis == 1 && data[i].type == 'line'}));\n\t            lines2\n\t                .width(availableWidth)\n\t                .height(availableHeight)\n\t                .interpolate(interpolate)\n\t                .color(color_array.filter(function(d,i) { return !data[i].disabled && data[i].yAxis == 2 && data[i].type == 'line'}));\n\t            scatters1\n\t                .width(availableWidth)\n\t                .height(availableHeight)\n\t                .color(color_array.filter(function(d,i) { return !data[i].disabled && data[i].yAxis == 1 && data[i].type == 'scatter'}));\n\t            scatters2\n\t                .width(availableWidth)\n\t                .height(availableHeight)\n\t                .color(color_array.filter(function(d,i) { return !data[i].disabled && data[i].yAxis == 2 && data[i].type == 'scatter'}));\n\t            bars1\n\t                .width(availableWidth)\n\t                .height(availableHeight)\n\t                .color(color_array.filter(function(d,i) { return !data[i].disabled && data[i].yAxis == 1 && data[i].type == 'bar'}));\n\t            bars2\n\t                .width(availableWidth)\n\t                .height(availableHeight)\n\t                .color(color_array.filter(function(d,i) { return !data[i].disabled && data[i].yAxis == 2 && data[i].type == 'bar'}));\n\t            stack1\n\t                .width(availableWidth)\n\t                .height(availableHeight)\n\t                .interpolate(interpolate)\n\t                .color(color_array.filter(function(d,i) { return !data[i].disabled && data[i].yAxis == 1 && data[i].type == 'area'}));\n\t            stack2\n\t                .width(availableWidth)\n\t                .height(availableHeight)\n\t                .interpolate(interpolate)\n\t                .color(color_array.filter(function(d,i) { return !data[i].disabled && data[i].yAxis == 2 && data[i].type == 'area'}));\n\t\n\t            g.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            var lines1Wrap = g.select('.lines1Wrap')\n\t                .datum(dataLines1.filter(function(d){return !d.disabled}));\n\t            var scatters1Wrap = g.select('.scatters1Wrap')\n\t                .datum(dataScatters1.filter(function(d){return !d.disabled}));\n\t            var bars1Wrap = g.select('.bars1Wrap')\n\t                .datum(dataBars1.filter(function(d){return !d.disabled}));\n\t            var stack1Wrap = g.select('.stack1Wrap')\n\t                .datum(dataStack1.filter(function(d){return !d.disabled}));\n\t            var lines2Wrap = g.select('.lines2Wrap')\n\t                .datum(dataLines2.filter(function(d){return !d.disabled}));\n\t            var scatters2Wrap = g.select('.scatters2Wrap')\n\t                .datum(dataScatters2.filter(function(d){return !d.disabled}));\n\t            var bars2Wrap = g.select('.bars2Wrap')\n\t                .datum(dataBars2.filter(function(d){return !d.disabled}));\n\t            var stack2Wrap = g.select('.stack2Wrap')\n\t                .datum(dataStack2.filter(function(d){return !d.disabled}));\n\t\n\t            var extraValue1 = dataStack1.length ? dataStack1.map(function(a){return a.values}).reduce(function(a,b){\n\t                return a.map(function(aVal,i){return {x: aVal.x, y: aVal.y + b[i].y}})\n\t            }).concat([{x:0, y:0}]) : [];\n\t            var extraValue2 = dataStack2.length ? dataStack2.map(function(a){return a.values}).reduce(function(a,b){\n\t                return a.map(function(aVal,i){return {x: aVal.x, y: aVal.y + b[i].y}})\n\t            }).concat([{x:0, y:0}]) : [];\n\t\n\t            yScale1 .domain(yDomain1 || d3.extent(d3.merge(series1).concat(extraValue1), function(d) { return d.y } ))\n\t                .range([0, availableHeight]);\n\t\n\t            yScale2 .domain(yDomain2 || d3.extent(d3.merge(series2).concat(extraValue2), function(d) { return d.y } ))\n\t                .range([0, availableHeight]);\n\t\n\t            lines1.yDomain(yScale1.domain());\n\t            scatters1.yDomain(yScale1.domain());\n\t            bars1.yDomain(yScale1.domain());\n\t            stack1.yDomain(yScale1.domain());\n\t\n\t            lines2.yDomain(yScale2.domain());\n\t            scatters2.yDomain(yScale2.domain());\n\t            bars2.yDomain(yScale2.domain());\n\t            stack2.yDomain(yScale2.domain());\n\t\n\t            if(dataStack1.length){d3.transition(stack1Wrap).call(stack1);}\n\t            if(dataStack2.length){d3.transition(stack2Wrap).call(stack2);}\n\t\n\t            if(dataBars1.length){d3.transition(bars1Wrap).call(bars1);}\n\t            if(dataBars2.length){d3.transition(bars2Wrap).call(bars2);}\n\t\n\t            if(dataLines1.length){d3.transition(lines1Wrap).call(lines1);}\n\t            if(dataLines2.length){d3.transition(lines2Wrap).call(lines2);}\n\t\n\t            if(dataScatters1.length){d3.transition(scatters1Wrap).call(scatters1);}\n\t            if(dataScatters2.length){d3.transition(scatters2Wrap).call(scatters2);}\n\t\n\t            xAxis\n\t                ._ticks( nv.utils.calcTicksX(availableWidth/100, data) )\n\t                .tickSize(-availableHeight, 0);\n\t\n\t            g.select('.nv-x.nv-axis')\n\t                .attr('transform', 'translate(0,' + availableHeight + ')');\n\t            d3.transition(g.select('.nv-x.nv-axis'))\n\t                .call(xAxis);\n\t\n\t            yAxis1\n\t                ._ticks( nv.utils.calcTicksY(availableHeight/36, data) )\n\t                .tickSize( -availableWidth, 0);\n\t\n\t\n\t            d3.transition(g.select('.nv-y1.nv-axis'))\n\t                .call(yAxis1);\n\t\n\t            yAxis2\n\t                ._ticks( nv.utils.calcTicksY(availableHeight/36, data) )\n\t                .tickSize( -availableWidth, 0);\n\t\n\t            d3.transition(g.select('.nv-y2.nv-axis'))\n\t                .call(yAxis2);\n\t\n\t            g.select('.nv-y1.nv-axis')\n\t                .classed('nv-disabled', series1.length ? false : true)\n\t                .attr('transform', 'translate(' + x.range()[0] + ',0)');\n\t\n\t            g.select('.nv-y2.nv-axis')\n\t                .classed('nv-disabled', series2.length ? false : true)\n\t                .attr('transform', 'translate(' + x.range()[1] + ',0)');\n\t\n\t            legend.dispatch.on('stateChange', function(newState) {\n\t                chart.update();\n\t            });\n\t\n\t            if(useInteractiveGuideline){\n\t                interactiveLayer\n\t                    .width(availableWidth)\n\t                    .height(availableHeight)\n\t                    .margin({left:margin.left, top:margin.top})\n\t                    .svgContainer(container)\n\t                    .xScale(x);\n\t                wrap.select(\".nv-interactive\").call(interactiveLayer);\n\t            }\n\t\n\t            //============================================================\n\t            // Event Handling/Dispatching\n\t            //------------------------------------------------------------\n\t\n\t            function mouseover_line(evt) {\n\t                var yaxis = data[evt.seriesIndex].yAxis === 2 ? yAxis2 : yAxis1;\n\t                evt.value = evt.point.x;\n\t                evt.series = {\n\t                    value: evt.point.y,\n\t                    color: evt.point.color,\n\t                    key: evt.series.key\n\t                };\n\t                tooltip\n\t                    .duration(0)\n\t                    .headerFormatter(function(d, i) {\n\t                    \treturn xAxis.tickFormat()(d, i);\n\t                    })\n\t                    .valueFormatter(function(d, i) {\n\t                        return yaxis.tickFormat()(d, i);\n\t                    })\n\t                    .data(evt)\n\t                    .hidden(false);\n\t            }\n\t\n\t            function mouseover_scatter(evt) {\n\t                var yaxis = data[evt.seriesIndex].yAxis === 2 ? yAxis2 : yAxis1;\n\t                evt.value = evt.point.x;\n\t                evt.series = {\n\t                    value: evt.point.y,\n\t                    color: evt.point.color,\n\t                    key: evt.series.key\n\t                };\n\t                tooltip\n\t                    .duration(100)\n\t                    .headerFormatter(function(d, i) {\n\t                    \treturn xAxis.tickFormat()(d, i);\n\t                    })\n\t                    .valueFormatter(function(d, i) {\n\t                        return yaxis.tickFormat()(d, i);\n\t                    })\n\t                    .data(evt)\n\t                    .hidden(false);\n\t            }\n\t\n\t            function mouseover_stack(evt) {\n\t                var yaxis = data[evt.seriesIndex].yAxis === 2 ? yAxis2 : yAxis1;\n\t                evt.point['x'] = stack1.x()(evt.point);\n\t                evt.point['y'] = stack1.y()(evt.point);\n\t                tooltip\n\t                    .duration(0)\n\t                    .headerFormatter(function(d, i) {\n\t                    \treturn xAxis.tickFormat()(d, i);\n\t                    })\n\t                    .valueFormatter(function(d, i) {\n\t                        return yaxis.tickFormat()(d, i);\n\t                    })\n\t                    .data(evt)\n\t                    .hidden(false);\n\t            }\n\t\n\t            function mouseover_bar(evt) {\n\t                var yaxis = data[evt.data.series].yAxis === 2 ? yAxis2 : yAxis1;\n\t\n\t                evt.value = bars1.x()(evt.data);\n\t                evt['series'] = {\n\t                    value: bars1.y()(evt.data),\n\t                    color: evt.color,\n\t                    key: evt.data.key\n\t                };\n\t                tooltip\n\t                    .duration(0)\n\t                    .headerFormatter(function(d, i) {\n\t                    \treturn xAxis.tickFormat()(d, i);\n\t                    })\n\t                    .valueFormatter(function(d, i) {\n\t                        return yaxis.tickFormat()(d, i);\n\t                    })\n\t                    .data(evt)\n\t                    .hidden(false);\n\t            }\n\t\n\t\n\t\n\t            function clearHighlights() {\n\t              for(var i=0, il=charts.length; i < il; i++){\n\t                var chart = charts[i];\n\t                try {\n\t                  chart.clearHighlights();\n\t                } catch(e){}\n\t              }\n\t            }\n\t\n\t            function highlightPoint(serieIndex, pointIndex, b){\n\t              for(var i=0, il=charts.length; i < il; i++){\n\t                var chart = charts[i];\n\t                try {\n\t                  chart.highlightPoint(serieIndex, pointIndex, b);\n\t                } catch(e){}\n\t              }\n\t            }\n\t\n\t            if(useInteractiveGuideline){\n\t                interactiveLayer.dispatch.on('elementMousemove', function(e) {\n\t                    clearHighlights();\n\t                    var singlePoint, pointIndex, pointXLocation, allData = [];\n\t                    data\n\t                    .filter(function(series, i) {\n\t                        series.seriesIndex = i;\n\t                        return !series.disabled;\n\t                    })\n\t                    .forEach(function(series,i) {\n\t                        var extent = x.domain();\n\t                        var currentValues = series.values.filter(function(d,i) {\n\t                            return chart.x()(d,i) >= extent[0] && chart.x()(d,i) <= extent[1];\n\t                        });\n\t\n\t                        pointIndex = nv.interactiveBisect(currentValues, e.pointXValue, chart.x());\n\t                        var point = currentValues[pointIndex];\n\t                        var pointYValue = chart.y()(point, pointIndex);\n\t                        if (pointYValue !== null) {\n\t                            highlightPoint(i, pointIndex, true);\n\t                        }\n\t                        if (point === undefined) return;\n\t                        if (singlePoint === undefined) singlePoint = point;\n\t                        if (pointXLocation === undefined) pointXLocation = x(chart.x()(point,pointIndex));\n\t                        allData.push({\n\t                            key: series.key,\n\t                            value: pointYValue,\n\t                            color: color(series,series.seriesIndex),\n\t                            data: point,\n\t                            yAxis: series.yAxis == 2 ? yAxis2 : yAxis1\n\t                        });\n\t                    });\n\t\n\t                    var defaultValueFormatter = function(d,i) {\n\t                        var yAxis = allData[i].yAxis;\n\t                        return d == null ? \"N/A\" : yAxis.tickFormat()(d);\n\t                    };\n\t\n\t                    interactiveLayer.tooltip\n\t                        .headerFormatter(function(d, i) {\n\t                            return xAxis.tickFormat()(d, i);\n\t                        })\n\t                        .valueFormatter(interactiveLayer.tooltip.valueFormatter() || defaultValueFormatter)\n\t                        .data({\n\t                            value: chart.x()( singlePoint,pointIndex ),\n\t                            index: pointIndex,\n\t                            series: allData\n\t                        })();\n\t\n\t                    interactiveLayer.renderGuideLine(pointXLocation);\n\t                });\n\t\n\t                interactiveLayer.dispatch.on(\"elementMouseout\",function(e) {\n\t                    clearHighlights();\n\t                });\n\t            } else {\n\t                lines1.dispatch.on('elementMouseover.tooltip', mouseover_line);\n\t                lines2.dispatch.on('elementMouseover.tooltip', mouseover_line);\n\t                lines1.dispatch.on('elementMouseout.tooltip', function(evt) {\n\t                    tooltip.hidden(true)\n\t                });\n\t                lines2.dispatch.on('elementMouseout.tooltip', function(evt) {\n\t                    tooltip.hidden(true)\n\t                });\n\t\n\t                scatters1.dispatch.on('elementMouseover.tooltip', mouseover_scatter);\n\t                scatters2.dispatch.on('elementMouseover.tooltip', mouseover_scatter);\n\t                scatters1.dispatch.on('elementMouseout.tooltip', function(evt) {\n\t                    tooltip.hidden(true)\n\t                });\n\t                scatters2.dispatch.on('elementMouseout.tooltip', function(evt) {\n\t                    tooltip.hidden(true)\n\t                });\n\t\n\t                stack1.dispatch.on('elementMouseover.tooltip', mouseover_stack);\n\t                stack2.dispatch.on('elementMouseover.tooltip', mouseover_stack);\n\t                stack1.dispatch.on('elementMouseout.tooltip', function(evt) {\n\t                    tooltip.hidden(true)\n\t                });\n\t                stack2.dispatch.on('elementMouseout.tooltip', function(evt) {\n\t                    tooltip.hidden(true)\n\t                });\n\t\n\t                bars1.dispatch.on('elementMouseover.tooltip', mouseover_bar);\n\t                bars2.dispatch.on('elementMouseover.tooltip', mouseover_bar);\n\t\n\t                bars1.dispatch.on('elementMouseout.tooltip', function(evt) {\n\t                    tooltip.hidden(true);\n\t                });\n\t                bars2.dispatch.on('elementMouseout.tooltip', function(evt) {\n\t                    tooltip.hidden(true);\n\t                });\n\t                bars1.dispatch.on('elementMousemove.tooltip', function(evt) {\n\t                    tooltip();\n\t                });\n\t                bars2.dispatch.on('elementMousemove.tooltip', function(evt) {\n\t                    tooltip();\n\t                });\n\t            }\n\t        });\n\t\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Global getters and setters\n\t    //------------------------------------------------------------\n\t\n\t    chart.dispatch = dispatch;\n\t    chart.legend = legend;\n\t    chart.lines1 = lines1;\n\t    chart.lines2 = lines2;\n\t    chart.scatters1 = scatters1;\n\t    chart.scatters2 = scatters2;\n\t    chart.bars1 = bars1;\n\t    chart.bars2 = bars2;\n\t    chart.stack1 = stack1;\n\t    chart.stack2 = stack2;\n\t    chart.xAxis = xAxis;\n\t    chart.yAxis1 = yAxis1;\n\t    chart.yAxis2 = yAxis2;\n\t    chart.tooltip = tooltip;\n\t    chart.interactiveLayer = interactiveLayer;\n\t\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:      {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:     {get: function(){return height;}, set: function(_){height=_;}},\n\t        showLegend: {get: function(){return showLegend;}, set: function(_){showLegend=_;}},\n\t        yDomain1:      {get: function(){return yDomain1;}, set: function(_){yDomain1=_;}},\n\t        yDomain2:    {get: function(){return yDomain2;}, set: function(_){yDomain2=_;}},\n\t        noData:    {get: function(){return noData;}, set: function(_){noData=_;}},\n\t        interpolate:    {get: function(){return interpolate;}, set: function(_){interpolate=_;}},\n\t        legendRightAxisHint:    {get: function(){return legendRightAxisHint;}, set: function(_){legendRightAxisHint=_;}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            if (_.top !== undefined) {\n\t                margin.top = _.top;\n\t                marginTop = _.top;\n\t            }\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }},\n\t        color:  {get: function(){return color;}, set: function(_){\n\t            color = nv.utils.getColor(_);\n\t        }},\n\t        x: {get: function(){return getX;}, set: function(_){\n\t            getX = _;\n\t            lines1.x(_);\n\t            lines2.x(_);\n\t            scatters1.x(_);\n\t            scatters2.x(_);\n\t            bars1.x(_);\n\t            bars2.x(_);\n\t            stack1.x(_);\n\t            stack2.x(_);\n\t        }},\n\t        y: {get: function(){return getY;}, set: function(_){\n\t            getY = _;\n\t            lines1.y(_);\n\t            lines2.y(_);\n\t            scatters1.y(_);\n\t            scatters2.y(_);\n\t            stack1.y(_);\n\t            stack2.y(_);\n\t            bars1.y(_);\n\t            bars2.y(_);\n\t        }},\n\t        useVoronoi: {get: function(){return useVoronoi;}, set: function(_){\n\t            useVoronoi=_;\n\t            lines1.useVoronoi(_);\n\t            lines2.useVoronoi(_);\n\t            stack1.useVoronoi(_);\n\t            stack2.useVoronoi(_);\n\t        }},\n\t\n\t        useInteractiveGuideline: {get: function(){return useInteractiveGuideline;}, set: function(_){\n\t            useInteractiveGuideline = _;\n\t            if (useInteractiveGuideline) {\n\t                lines1.interactive(false);\n\t                lines1.useVoronoi(false);\n\t                lines2.interactive(false);\n\t                lines2.useVoronoi(false);\n\t                stack1.interactive(false);\n\t                stack1.useVoronoi(false);\n\t                stack2.interactive(false);\n\t                stack2.useVoronoi(false);\n\t                scatters1.interactive(false);\n\t                scatters2.interactive(false);\n\t            }\n\t        }},\n\t\n\t        duration: {get: function(){return duration;}, set: function(_) {\n\t            duration = _;\n\t            [lines1, lines2, stack1, stack2, scatters1, scatters2, xAxis, yAxis1, yAxis2].forEach(function(model){\n\t              model.duration(duration);\n\t            });\n\t        }}\n\t    });\n\t\n\t    nv.utils.initOptions(chart);\n\t\n\t    return chart;\n\t};\n\t\n\tnv.models.ohlcBar = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n\t        , width = null\n\t        , height = null\n\t        , id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n\t        , container = null\n\t        , x = d3.scale.linear()\n\t        , y = d3.scale.linear()\n\t        , getX = function(d) { return d.x }\n\t        , getY = function(d) { return d.y }\n\t        , getOpen = function(d) { return d.open }\n\t        , getClose = function(d) { return d.close }\n\t        , getHigh = function(d) { return d.high }\n\t        , getLow = function(d) { return d.low }\n\t        , forceX = []\n\t        , forceY = []\n\t        , padData     = false // If true, adds half a data points width to front and back, for lining up a line chart with a bar chart\n\t        , clipEdge = true\n\t        , color = nv.utils.defaultColor()\n\t        , interactive = false\n\t        , xDomain\n\t        , yDomain\n\t        , xRange\n\t        , yRange\n\t        , dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd', 'chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove')\n\t        ;\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    function chart(selection) {\n\t        selection.each(function(data) {\n\t            container = d3.select(this);\n\t            var availableWidth = nv.utils.availableWidth(width, container, margin),\n\t                availableHeight = nv.utils.availableHeight(height, container, margin);\n\t\n\t            nv.utils.initSVG(container);\n\t\n\t            // ohlc bar width.\n\t            var w = (availableWidth / data[0].values.length) * .9;\n\t\n\t            // Setup Scales\n\t            x.domain(xDomain || d3.extent(data[0].values.map(getX).concat(forceX) ));\n\t\n\t            if (padData)\n\t                x.range(xRange || [availableWidth * .5 / data[0].values.length, availableWidth * (data[0].values.length - .5)  / data[0].values.length ]);\n\t            else\n\t                x.range(xRange || [5 + w/2, availableWidth - w/2 - 5]);\n\t\n\t            y.domain(yDomain || [\n\t                    d3.min(data[0].values.map(getLow).concat(forceY)),\n\t                    d3.max(data[0].values.map(getHigh).concat(forceY))\n\t                ]\n\t            ).range(yRange || [availableHeight, 0]);\n\t\n\t            // If scale's domain don't have a range, slightly adjust to make one... so a chart can show a single data point\n\t            if (x.domain()[0] === x.domain()[1])\n\t                x.domain()[0] ?\n\t                    x.domain([x.domain()[0] - x.domain()[0] * 0.01, x.domain()[1] + x.domain()[1] * 0.01])\n\t                    : x.domain([-1,1]);\n\t\n\t            if (y.domain()[0] === y.domain()[1])\n\t                y.domain()[0] ?\n\t                    y.domain([y.domain()[0] + y.domain()[0] * 0.01, y.domain()[1] - y.domain()[1] * 0.01])\n\t                    : y.domain([-1,1]);\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = d3.select(this).selectAll('g.nv-wrap.nv-ohlcBar').data([data[0].values]);\n\t            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-ohlcBar');\n\t            var defsEnter = wrapEnter.append('defs');\n\t            var gEnter = wrapEnter.append('g');\n\t            var g = wrap.select('g');\n\t\n\t            gEnter.append('g').attr('class', 'nv-ticks');\n\t\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            container\n\t                .on('click', function(d,i) {\n\t                    dispatch.chartClick({\n\t                        data: d,\n\t                        index: i,\n\t                        pos: d3.event,\n\t                        id: id\n\t                    });\n\t                });\n\t\n\t            defsEnter.append('clipPath')\n\t                .attr('id', 'nv-chart-clip-path-' + id)\n\t                .append('rect');\n\t\n\t            wrap.select('#nv-chart-clip-path-' + id + ' rect')\n\t                .attr('width', availableWidth)\n\t                .attr('height', availableHeight);\n\t\n\t            g   .attr('clip-path', clipEdge ? 'url(#nv-chart-clip-path-' + id + ')' : '');\n\t\n\t            var ticks = wrap.select('.nv-ticks').selectAll('.nv-tick')\n\t                .data(function(d) { return d });\n\t            ticks.exit().remove();\n\t\n\t            ticks.enter().append('path')\n\t                .attr('class', function(d,i,j) { return (getOpen(d,i) > getClose(d,i) ? 'nv-tick negative' : 'nv-tick positive') + ' nv-tick-' + j + '-' + i })\n\t                .attr('d', function(d,i) {\n\t                    return 'm0,0l0,'\n\t                        + (y(getOpen(d,i))\n\t                            - y(getHigh(d,i)))\n\t                        + 'l'\n\t                        + (-w/2)\n\t                        + ',0l'\n\t                        + (w/2)\n\t                        + ',0l0,'\n\t                        + (y(getLow(d,i)) - y(getOpen(d,i)))\n\t                        + 'l0,'\n\t                        + (y(getClose(d,i))\n\t                            - y(getLow(d,i)))\n\t                        + 'l'\n\t                        + (w/2)\n\t                        + ',0l'\n\t                        + (-w/2)\n\t                        + ',0z';\n\t                })\n\t                .attr('transform', function(d,i) { return 'translate(' + x(getX(d,i)) + ',' + y(getHigh(d,i)) + ')'; })\n\t                .attr('fill', function(d,i) { return color[0]; })\n\t                .attr('stroke', function(d,i) { return color[0]; })\n\t                .attr('x', 0 )\n\t                .attr('y', function(d,i) {  return y(Math.max(0, getY(d,i))) })\n\t                .attr('height', function(d,i) { return Math.abs(y(getY(d,i)) - y(0)) });\n\t\n\t            // the bar colors are controlled by CSS currently\n\t            ticks.attr('class', function(d,i,j) {\n\t                return (getOpen(d,i) > getClose(d,i) ? 'nv-tick negative' : 'nv-tick positive') + ' nv-tick-' + j + '-' + i;\n\t            });\n\t\n\t            d3.transition(ticks)\n\t                .attr('transform', function(d,i) { return 'translate(' + x(getX(d,i)) + ',' + y(getHigh(d,i)) + ')'; })\n\t                .attr('d', function(d,i) {\n\t                    var w = (availableWidth / data[0].values.length) * .9;\n\t                    return 'm0,0l0,'\n\t                        + (y(getOpen(d,i))\n\t                            - y(getHigh(d,i)))\n\t                        + 'l'\n\t                        + (-w/2)\n\t                        + ',0l'\n\t                        + (w/2)\n\t                        + ',0l0,'\n\t                        + (y(getLow(d,i))\n\t                            - y(getOpen(d,i)))\n\t                        + 'l0,'\n\t                        + (y(getClose(d,i))\n\t                            - y(getLow(d,i)))\n\t                        + 'l'\n\t                        + (w/2)\n\t                        + ',0l'\n\t                        + (-w/2)\n\t                        + ',0z';\n\t                });\n\t        });\n\t\n\t        return chart;\n\t    }\n\t\n\t\n\t    //Create methods to allow outside functions to highlight a specific bar.\n\t    chart.highlightPoint = function(pointIndex, isHoverOver) {\n\t        chart.clearHighlights();\n\t        container.select(\".nv-ohlcBar .nv-tick-0-\" + pointIndex)\n\t            .classed(\"hover\", isHoverOver)\n\t        ;\n\t    };\n\t\n\t    chart.clearHighlights = function() {\n\t        container.select(\".nv-ohlcBar .nv-tick.hover\")\n\t            .classed(\"hover\", false)\n\t        ;\n\t    };\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    chart.dispatch = dispatch;\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:    {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:   {get: function(){return height;}, set: function(_){height=_;}},\n\t        xScale:   {get: function(){return x;}, set: function(_){x=_;}},\n\t        yScale:   {get: function(){return y;}, set: function(_){y=_;}},\n\t        xDomain:  {get: function(){return xDomain;}, set: function(_){xDomain=_;}},\n\t        yDomain:  {get: function(){return yDomain;}, set: function(_){yDomain=_;}},\n\t        xRange:   {get: function(){return xRange;}, set: function(_){xRange=_;}},\n\t        yRange:   {get: function(){return yRange;}, set: function(_){yRange=_;}},\n\t        forceX:   {get: function(){return forceX;}, set: function(_){forceX=_;}},\n\t        forceY:   {get: function(){return forceY;}, set: function(_){forceY=_;}},\n\t        padData:  {get: function(){return padData;}, set: function(_){padData=_;}},\n\t        clipEdge: {get: function(){return clipEdge;}, set: function(_){clipEdge=_;}},\n\t        id:       {get: function(){return id;}, set: function(_){id=_;}},\n\t        interactive: {get: function(){return interactive;}, set: function(_){interactive=_;}},\n\t\n\t        x:     {get: function(){return getX;}, set: function(_){getX=_;}},\n\t        y:     {get: function(){return getY;}, set: function(_){getY=_;}},\n\t        open:  {get: function(){return getOpen();}, set: function(_){getOpen=_;}},\n\t        close: {get: function(){return getClose();}, set: function(_){getClose=_;}},\n\t        high:  {get: function(){return getHigh;}, set: function(_){getHigh=_;}},\n\t        low:   {get: function(){return getLow;}, set: function(_){getLow=_;}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    = _.top    != undefined ? _.top    : margin.top;\n\t            margin.right  = _.right  != undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom != undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   != undefined ? _.left   : margin.left;\n\t        }},\n\t        color:  {get: function(){return color;}, set: function(_){\n\t            color = nv.utils.getColor(_);\n\t        }}\n\t    });\n\t\n\t    nv.utils.initOptions(chart);\n\t    return chart;\n\t};\n\t// Code adapted from Jason Davies' \"Parallel Coordinates\"\n\t// http://bl.ocks.org/jasondavies/1341281\n\tnv.models.parallelCoordinates = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var margin = {top: 30, right: 0, bottom: 10, left: 0}\n\t        , width = null\n\t        , height = null\n\t        , availableWidth = null\n\t        , availableHeight = null\n\t        , x = d3.scale.ordinal()\n\t        , y = {}\n\t        , undefinedValuesLabel = \"undefined values\"\n\t        , dimensionData = []\n\t        , enabledDimensions = []\n\t        , dimensionNames = []\n\t        , displayBrush = true\n\t        , color = nv.utils.defaultColor()\n\t        , filters = []\n\t        , active = []\n\t        , dragging = []\n\t        , axisWithUndefinedValues = []\n\t        , lineTension = 1\n\t        , foreground\n\t        , background\n\t        , dimensions\n\t        , line = d3.svg.line()\n\t        , axis = d3.svg.axis()\n\t        , dispatch = d3.dispatch('brushstart', 'brush', 'brushEnd', 'dimensionsOrder', \"stateChange\", 'elementClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd', 'activeChanged')\n\t        ;\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    var renderWatch = nv.utils.renderWatch(dispatch);\n\t\n\t    function chart(selection) {\n\t        renderWatch.reset();\n\t        selection.each(function(data) {\n\t            var container = d3.select(this);\n\t            availableWidth = nv.utils.availableWidth(width, container, margin);\n\t            availableHeight = nv.utils.availableHeight(height, container, margin);\n\t\n\t            nv.utils.initSVG(container);\n\t\n\t           //Convert old data to new format (name, values)\n\t            if (data[0].values === undefined) {\n\t                var newData = [];\n\t                data.forEach(function (d) {\n\t                        var val = {};\n\t                        var key = Object.keys(d);\n\t                        key.forEach(function (k) { if (k !== \"name\") val[k] = d[k] });\n\t                        newData.push({ key: d.name, values: val });\n\t                });\n\t                data = newData;\n\t            }\n\t\n\t            var dataValues = data.map(function (d) {return d.values});\n\t            if (active.length === 0) {\n\t                active = data;\n\t            }; //set all active before first brush call\n\t            \n\t            dimensionNames = dimensionData.sort(function (a, b) { return a.currentPosition - b.currentPosition; }).map(function (d) { return d.key });\n\t            enabledDimensions = dimensionData.filter(function (d) { return !d.disabled; });\n\t            \n\t            // Setup Scales\n\t            x.rangePoints([0, availableWidth], 1).domain(enabledDimensions.map(function (d) { return d.key; }));\n\t\n\t            //Set as true if all values on an axis are missing.\n\t            // Extract the list of dimensions and create a scale for each.\n\t            var oldDomainMaxValue = {};\n\t            var displayMissingValuesline = false;\n\t            var currentTicks = [];\n\t            \n\t            dimensionNames.forEach(function(d) {\n\t                var extent = d3.extent(dataValues, function (p) { return +p[d]; });\n\t                var min = extent[0];\n\t                var max = extent[1];\n\t                var onlyUndefinedValues = false;\n\t                //If there is no values to display on an axis, set the extent to 0\n\t                if (isNaN(min) || isNaN(max)) {\n\t                    onlyUndefinedValues = true;\n\t                    min = 0;\n\t                    max = 0;\n\t                }\n\t                //Scale axis if there is only one value\n\t                if (min === max) {\n\t                    min = min - 1;\n\t                    max = max + 1;\n\t                }\n\t                var f = filters.filter(function (k) { return k.dimension == d; });\n\t                if (f.length !== 0) {\n\t                    //If there is only NaN values, keep the existing domain.\n\t                    if (onlyUndefinedValues) {\n\t                        min = y[d].domain()[0];\n\t                        max = y[d].domain()[1];\n\t                    }\n\t                        //If the brush extent is > max (< min), keep the extent value.\n\t                    else if (!f[0].hasOnlyNaN && displayBrush) {\n\t                        min = min > f[0].extent[0] ? f[0].extent[0] : min;\n\t                        max = max < f[0].extent[1] ? f[0].extent[1] : max;\n\t                    }\n\t                        //If there is NaN values brushed be sure the brush extent is on the domain.\n\t                    else if (f[0].hasNaN) {\n\t                        max = max < f[0].extent[1] ? f[0].extent[1] : max;\n\t                        oldDomainMaxValue[d] = y[d].domain()[1];\n\t                        displayMissingValuesline = true;\n\t                    }\n\t                }\n\t                //Use 90% of (availableHeight - 12) for the axis range, 12 reprensenting the space necessary to display \"undefined values\" text.\n\t                //The remaining 10% are used to display the missingValue line.\n\t                y[d] = d3.scale.linear()\n\t                    .domain([min, max])\n\t                    .range([(availableHeight - 12) * 0.9, 0]);\n\t\n\t                axisWithUndefinedValues = [];\n\t                y[d].brush = d3.svg.brush().y(y[d]).on('brushstart', brushstart).on('brush', brush).on('brushend', brushend);\n\t            });\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = container.selectAll('g.nv-wrap.nv-parallelCoordinates').data([data]);\n\t            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-parallelCoordinates');\n\t            var gEnter = wrapEnter.append('g');\n\t            var g = wrap.select('g');\n\t\n\t            gEnter.append('g').attr('class', 'nv-parallelCoordinates background');\n\t            gEnter.append('g').attr('class', 'nv-parallelCoordinates foreground');\n\t            gEnter.append('g').attr('class', 'nv-parallelCoordinates missingValuesline');\n\t\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            line.interpolate('cardinal').tension(lineTension);\n\t            axis.orient('left');\n\t            var axisDrag = d3.behavior.drag()\n\t                        .on('dragstart', dragStart)\n\t                        .on('drag', dragMove)\n\t                        .on('dragend', dragEnd);\n\t\n\t            //Add missing value line at the bottom of the chart\n\t            var missingValuesline, missingValueslineText;\n\t            var step = x.range()[1] - x.range()[0];\n\t            step = isNaN(step) ? x.range()[0] : step;\n\t            if (!isNaN(step)) {\n\t                var lineData = [0 + step / 2, availableHeight - 12, availableWidth - step / 2, availableHeight - 12];\n\t                missingValuesline = wrap.select('.missingValuesline').selectAll('line').data([lineData]);\n\t                missingValuesline.enter().append('line');\n\t                missingValuesline.exit().remove();\n\t                missingValuesline.attr(\"x1\", function(d) { return d[0]; })\n\t                        .attr(\"y1\", function(d) { return d[1]; })\n\t                        .attr(\"x2\", function(d) { return d[2]; })\n\t                        .attr(\"y2\", function(d) { return d[3]; });\n\t    \n\t                //Add the text \"undefined values\" under the missing value line\n\t                missingValueslineText = wrap.select('.missingValuesline').selectAll('text').data([undefinedValuesLabel]);\n\t                missingValueslineText.append('text').data([undefinedValuesLabel]);\n\t                missingValueslineText.enter().append('text');\n\t                missingValueslineText.exit().remove();\n\t                missingValueslineText.attr(\"y\", availableHeight)\n\t                        //To have the text right align with the missingValues line, substract 92 representing the text size.\n\t                        .attr(\"x\", availableWidth - 92 - step / 2)\n\t                        .text(function(d) { return d; });\n\t            }\n\t            // Add grey background lines for context.\n\t            background = wrap.select('.background').selectAll('path').data(data);\n\t            background.enter().append('path');\n\t            background.exit().remove();\n\t            background.attr('d', path);\n\t\n\t            // Add blue foreground lines for focus.\n\t            foreground = wrap.select('.foreground').selectAll('path').data(data);\n\t            foreground.enter().append('path')\n\t            foreground.exit().remove();\n\t            foreground.attr('d', path)\n\t                .style(\"stroke-width\", function (d, i) {\n\t                if (isNaN(d.strokeWidth)) { d.strokeWidth = 1;} return d.strokeWidth;})\n\t                .attr('stroke', function (d, i) { return d.color || color(d, i); });\n\t            foreground.on(\"mouseover\", function (d, i) {\n\t                d3.select(this).classed('hover', true).style(\"stroke-width\", d.strokeWidth + 2 + \"px\").style(\"stroke-opacity\", 1);\n\t                dispatch.elementMouseover({\n\t                    label: d.name,\n\t                    color: d.color || color(d, i),\n\t                    values: d.values,\n\t                    dimensions: enabledDimensions\n\t                });\n\t\n\t            });\n\t            foreground.on(\"mouseout\", function (d, i) {\n\t                d3.select(this).classed('hover', false).style(\"stroke-width\", d.strokeWidth + \"px\").style(\"stroke-opacity\", 0.7);\n\t                dispatch.elementMouseout({\n\t                    label: d.name,\n\t                    index: i\n\t                });\n\t            });\n\t            foreground.on('mousemove', function (d, i) {\n\t                dispatch.elementMousemove();\n\t            });\n\t            foreground.on('click', function (d) {\n\t                dispatch.elementClick({\n\t                    id: d.id\n\t                });\n\t            });\n\t            // Add a group element for each dimension.\n\t            dimensions = g.selectAll('.dimension').data(enabledDimensions);\n\t            var dimensionsEnter = dimensions.enter().append('g').attr('class', 'nv-parallelCoordinates dimension');\n\t\n\t            dimensions.attr('transform', function(d) { return 'translate(' + x(d.key) + ',0)'; });\n\t            dimensionsEnter.append('g').attr('class', 'nv-axis');\n\t\n\t            // Add an axis and title.\n\t            dimensionsEnter.append('text')\n\t                .attr('class', 'nv-label')\n\t                .style(\"cursor\", \"move\")\n\t                .attr('dy', '-1em')\n\t                .attr('text-anchor', 'middle')\n\t                .on(\"mouseover\", function(d, i) {\n\t                    dispatch.elementMouseover({\n\t                        label: d.tooltip || d.key,\n\t                        color: d.color \n\t                    });\n\t                })\n\t                .on(\"mouseout\", function(d, i) {\n\t                    dispatch.elementMouseout({\n\t                        label: d.tooltip\n\t                    });\n\t                })\n\t                .on('mousemove', function (d, i) {\n\t                    dispatch.elementMousemove();\n\t                })\n\t                .call(axisDrag);\n\t\n\t            dimensionsEnter.append('g').attr('class', 'nv-brushBackground');\n\t            dimensions.exit().remove();\n\t            dimensions.select('.nv-label').text(function (d) { return d.key });\n\t\n\t            // Add and store a brush for each axis.\n\t            restoreBrush(displayBrush);\n\t\n\t            var actives = dimensionNames.filter(function (p) { return !y[p].brush.empty(); }),\n\t                    extents = actives.map(function (p) { return y[p].brush.extent(); });\n\t            var formerActive = active.slice(0);\n\t\n\t            //Restore active values\n\t            active = [];\n\t            foreground.style(\"display\", function (d) {\n\t                var isActive = actives.every(function (p, i) {\n\t                    if ((isNaN(d.values[p]) || isNaN(parseFloat(d.values[p]))) && extents[i][0] == y[p].brush.y().domain()[0]) {\n\t                        return true;\n\t                    }\n\t                    return (extents[i][0] <= d.values[p] && d.values[p] <= extents[i][1]) && !isNaN(parseFloat(d.values[p]));\n\t                });\n\t                if (isActive)\n\t                    active.push(d);\n\t                return !isActive ? \"none\" : null;\n\t\n\t            });\n\t\n\t            if (filters.length > 0 || !nv.utils.arrayEquals(active, formerActive)) {\n\t               dispatch.activeChanged(active);\n\t            }\n\t\n\t            // Returns the path for a given data point.\n\t            function path(d) {\n\t                return line(enabledDimensions.map(function (p) {\n\t                    //If value if missing, put the value on the missing value line\n\t                    if (isNaN(d.values[p.key]) || isNaN(parseFloat(d.values[p.key])) || displayMissingValuesline) {\n\t                        var domain = y[p.key].domain();\n\t                        var range = y[p.key].range();\n\t                        var min = domain[0] - (domain[1] - domain[0]) / 9;\n\t\n\t                        //If it's not already the case, allow brush to select undefined values\n\t                        if (axisWithUndefinedValues.indexOf(p.key) < 0) {\n\t\n\t                            var newscale = d3.scale.linear().domain([min, domain[1]]).range([availableHeight - 12, range[1]]);\n\t                            y[p.key].brush.y(newscale);\n\t                            axisWithUndefinedValues.push(p.key);\n\t                        }\n\t                        if (isNaN(d.values[p.key]) || isNaN(parseFloat(d.values[p.key]))) {\n\t                            return [x(p.key), y[p.key](min)];\n\t                        }\n\t                    }\n\t\n\t                    //If parallelCoordinate contain missing values show the missing values line otherwise, hide it.\n\t                    if (missingValuesline !== undefined) {\n\t                        if (axisWithUndefinedValues.length > 0 || displayMissingValuesline) {\n\t                            missingValuesline.style(\"display\", \"inline\");\n\t                            missingValueslineText.style(\"display\", \"inline\");\n\t                        } else {\n\t                            missingValuesline.style(\"display\", \"none\");\n\t                            missingValueslineText.style(\"display\", \"none\");\n\t                        }\n\t                    }\n\t                    return [x(p.key), y[p.key](d.values[p.key])];\n\t                }));\n\t            }\n\t\n\t            function restoreBrush(visible) {\n\t                filters.forEach(function (f) {\n\t                    //If filter brushed NaN values, keep the brush on the bottom of the axis.\n\t                    var brushDomain = y[f.dimension].brush.y().domain();\n\t                    if (f.hasOnlyNaN) {\n\t                        f.extent[1] = (y[f.dimension].domain()[1] - brushDomain[0]) * (f.extent[1] - f.extent[0]) / (oldDomainMaxValue[f.dimension] - f.extent[0]) + brushDomain[0];\n\t                    }\n\t                    if (f.hasNaN) {\n\t                        f.extent[0] = brushDomain[0];\n\t                    }\n\t                    if (visible)\n\t                        y[f.dimension].brush.extent(f.extent);\n\t                });\n\t                \n\t                dimensions.select('.nv-brushBackground')\n\t                    .each(function (d) {\n\t                        d3.select(this).call(y[d.key].brush);\n\t\n\t                    })\n\t                    .selectAll('rect')\n\t                    .attr('x', -8)\n\t                    .attr('width', 16);\n\t                \n\t                updateTicks();\n\t            }\n\t            \n\t            // Handles a brush event, toggling the display of foreground lines.\n\t            function brushstart() {\n\t                //If brush aren't visible, show it before brushing again.\n\t                if (displayBrush === false) {\n\t                    displayBrush = true;\n\t                    restoreBrush(true);\n\t                }\n\t            }\n\t            \n\t            // Handles a brush event, toggling the display of foreground lines.\n\t            function brush() {\n\t                actives = dimensionNames.filter(function (p) { return !y[p].brush.empty(); });\n\t                extents = actives.map(function(p) { return y[p].brush.extent(); });\n\t\n\t                filters = []; //erase current filters\n\t                actives.forEach(function(d,i) {\n\t                    filters[i] = {\n\t                        dimension: d,\n\t                        extent: extents[i],\n\t                        hasNaN: false,\n\t                        hasOnlyNaN: false\n\t                    }\n\t                });\n\t\n\t                active = []; //erase current active list\n\t                foreground.style('display', function(d) {\n\t                    var isActive = actives.every(function(p, i) {\n\t                        if ((isNaN(d.values[p]) || isNaN(parseFloat(d.values[p]))) && extents[i][0] == y[p].brush.y().domain()[0]) return true;\n\t                        return (extents[i][0] <= d.values[p] && d.values[p] <= extents[i][1]) && !isNaN(parseFloat(d.values[p]));\n\t                    });\n\t                    if (isActive) active.push(d);\n\t                    return isActive ? null : 'none';\n\t                });\n\t                \n\t                updateTicks();\n\t                \n\t                dispatch.brush({\n\t                    filters: filters,\n\t                    active: active\n\t                });\n\t            }\n\t            function brushend() {\n\t                var hasActiveBrush = actives.length > 0 ? true : false;\n\t                filters.forEach(function (f) {\n\t                    if (f.extent[0] === y[f.dimension].brush.y().domain()[0] && axisWithUndefinedValues.indexOf(f.dimension) >= 0)\n\t                        f.hasNaN = true;\n\t                    if (f.extent[1] < y[f.dimension].domain()[0])\n\t                        f.hasOnlyNaN = true;\n\t                });\n\t                dispatch.brushEnd(active, hasActiveBrush);\n\t            }           \n\t            function updateTicks() {\n\t                dimensions.select('.nv-axis')\n\t                    .each(function (d, i) {\n\t                        var f = filters.filter(function (k) { return k.dimension == d.key; });\n\t                        currentTicks[d.key] = y[d.key].domain();\n\t                        \n\t                        //If brush are available, display brush extent\n\t                        if (f.length != 0 && displayBrush)\n\t                        {\n\t                            currentTicks[d.key] = [];\n\t                            if (f[0].extent[1] > y[d.key].domain()[0]) \n\t                                currentTicks[d.key] = [f[0].extent[1]];\n\t                            if (f[0].extent[0] >= y[d.key].domain()[0])\n\t                                currentTicks[d.key].push(f[0].extent[0]);    \n\t                        }\n\t                            \n\t                        d3.select(this).call(axis.scale(y[d.key]).tickFormat(d.format).tickValues(currentTicks[d.key]));\n\t                });\n\t            }\n\t            function dragStart(d) {\n\t                dragging[d.key] = this.parentNode.__origin__ = x(d.key);\n\t                background.attr(\"visibility\", \"hidden\");\n\t            }\n\t            function dragMove(d) {\n\t                dragging[d.key] = Math.min(availableWidth, Math.max(0, this.parentNode.__origin__ += d3.event.x));\n\t                foreground.attr(\"d\", path);\n\t                enabledDimensions.sort(function (a, b) { return dimensionPosition(a.key) - dimensionPosition(b.key); });\n\t                enabledDimensions.forEach(function (d, i) { return d.currentPosition = i; });\n\t                x.domain(enabledDimensions.map(function (d) { return d.key; }));\n\t                dimensions.attr(\"transform\", function(d) { return \"translate(\" + dimensionPosition(d.key) + \")\"; });\n\t            }\n\t            function dragEnd(d, i) {\n\t                delete this.parentNode.__origin__;\n\t                delete dragging[d.key];\n\t                d3.select(this.parentNode).attr(\"transform\", \"translate(\" + x(d.key) + \")\");\n\t                foreground\n\t                  .attr(\"d\", path);\n\t                background\n\t                  .attr(\"d\", path)\n\t                  .attr(\"visibility\", null);\n\t\n\t                dispatch.dimensionsOrder(enabledDimensions);\n\t            }\n\t            function dimensionPosition(d) {\n\t                var v = dragging[d];\n\t                return v == null ? x(d) : v;\n\t            }\n\t        });\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    chart.dispatch = dispatch;\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:         {get: function(){return width;},           set: function(_){width= _;}},\n\t        height:        {get: function(){return height;},          set: function(_){height= _;}},\n\t        dimensionData: { get: function () { return dimensionData; }, set: function (_) { dimensionData = _; } },\n\t        displayBrush: { get: function () { return displayBrush; }, set: function (_) { displayBrush = _; } },\n\t        filters: { get: function () { return filters; }, set: function (_) { filters = _; } },\n\t        active: { get: function () { return active; }, set: function (_) { active = _; } },\n\t        lineTension:   {get: function(){return lineTension;},     set: function(_){lineTension = _;}},\n\t        undefinedValuesLabel : {get: function(){return undefinedValuesLabel;}, set: function(_){undefinedValuesLabel=_;}},\n\t        \n\t        // deprecated options\n\t        dimensions: {get: function () { return dimensionData.map(function (d){return d.key}); }, set: function (_) {\n\t            // deprecated after 1.8.1\n\t            nv.deprecated('dimensions', 'use dimensionData instead');\n\t            if (dimensionData.length === 0) {\n\t                _.forEach(function (k) { dimensionData.push({ key: k }) })\n\t            } else {\n\t                _.forEach(function (k, i) { dimensionData[i].key= k })\n\t            }\n\t        }},\n\t        dimensionNames: {get: function () { return dimensionData.map(function (d){return d.key}); }, set: function (_) {\n\t            // deprecated after 1.8.1\n\t            nv.deprecated('dimensionNames', 'use dimensionData instead');\n\t            dimensionNames = [];\n\t            if (dimensionData.length === 0) {\n\t                _.forEach(function (k) { dimensionData.push({ key: k }) })\n\t            } else {\n\t                _.forEach(function (k, i) { dimensionData[i].key = k })\n\t            }\n\t \n\t        }},\n\t        dimensionFormats: {get: function () { return dimensionData.map(function (d) { return d.format }); }, set: function (_) {\n\t            // deprecated after 1.8.1\n\t            nv.deprecated('dimensionFormats', 'use dimensionData instead');\n\t            if (dimensionData.length === 0) {\n\t                _.forEach(function (f) { dimensionData.push({ format: f }) })\n\t            } else {\n\t                _.forEach(function (f, i) { dimensionData[i].format = f })\n\t            }\n\t\n\t        }},\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    =  _.top    !== undefined ? _.top    : margin.top;\n\t            margin.right  =  _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom =  _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   =  _.left   !== undefined ? _.left   : margin.left;\n\t        }},\n\t        color:  {get: function(){return color;}, set: function(_){\n\t            color = nv.utils.getColor(_);\n\t        }}\n\t    });\n\t    nv.utils.initOptions(chart);\n\t    return chart;\n\t};\n\tnv.models.parallelCoordinatesChart = function () {\n\t        \"use strict\";\n\t        //============================================================\n\t        // Public Variables with Default Settings\n\t        //------------------------------------------------------------\n\t\n\t        var parallelCoordinates = nv.models.parallelCoordinates()\n\t        var legend = nv.models.legend()\n\t        var tooltip = nv.models.tooltip();\n\t        var dimensionTooltip = nv.models.tooltip();\n\t\n\t        var margin = { top: 0, right: 0, bottom: 0, left: 0 }\n\t        , marginTop = null\n\t        , width = null\n\t        , height = null\n\t        , showLegend = true\n\t        , color = nv.utils.defaultColor()\n\t        , state = nv.utils.state()\n\t        , dimensionData = []\n\t        , displayBrush = true\n\t        , defaultState = null\n\t        , noData = null\n\t        , nanValue = \"undefined\"\n\t        , dispatch = d3.dispatch('dimensionsOrder', 'brushEnd', 'stateChange', 'changeState', 'renderEnd')\n\t        , controlWidth = function () { return showControls ? 180 : 0 }\n\t        ;\n\t\n\t\t    //============================================================\n\t\n\t\t\t//============================================================\n\t        // Private Variables\n\t        //------------------------------------------------------------\n\t\n\t        var renderWatch = nv.utils.renderWatch(dispatch);\n\t\n\t        var stateGetter = function(data) {\n\t            return function() {\n\t                return {\n\t                    active: data.map(function(d) { return !d.disabled })\n\t                };\n\t            }\n\t        };\n\t\n\t        var stateSetter = function(data) {\n\t            return function(state) {\n\t                if(state.active !== undefined) {\n\t                    data.forEach(function(series, i) {\n\t                        series.disabled = !state.active[i];\n\t                    });\n\t                }\n\t            }\n\t        };\n\t\n\t        tooltip.contentGenerator(function(data) {\n\t            var str = '<table><thead><tr><td class=\"legend-color-guide\"><div style=\"background-color:' + data.color + '\"></div></td><td><strong>' + data.key + '</strong></td></tr></thead>';\n\t            if(data.series.length !== 0)\n\t            {\n\t                str = str + '<tbody><tr><td height =\"10px\"></td></tr>';\n\t                data.series.forEach(function(d){\n\t                    str = str + '<tr><td class=\"legend-color-guide\"><div style=\"background-color:' + d.color + '\"></div></td><td class=\"key\">' + d.key + '</td><td class=\"value\">' + d.value + '</td></tr>';\n\t                });\n\t                str = str + '</tbody>';\n\t            }\n\t            str = str + '</table>';\n\t            return str;\n\t        });\n\t\n\t        //============================================================\n\t        // Chart function\n\t        //------------------------------------------------------------\n\t\n\t        function chart(selection) {\n\t            renderWatch.reset();\n\t            renderWatch.models(parallelCoordinates);\n\t\n\t            selection.each(function(data) {\n\t                var container = d3.select(this);\n\t                nv.utils.initSVG(container);\n\t\n\t                var that = this;\n\t\n\t                var availableWidth = nv.utils.availableWidth(width, container, margin),\n\t                    availableHeight = nv.utils.availableHeight(height, container, margin);\n\t\n\t                chart.update = function() { container.call(chart); };\n\t                chart.container = this;\n\t\n\t                state.setter(stateSetter(dimensionData), chart.update)\n\t                    .getter(stateGetter(dimensionData))\n\t                    .update();\n\t\n\t                //set state.disabled\n\t                state.disabled = dimensionData.map(function (d) { return !!d.disabled });\n\t\n\t                //Keep dimensions position in memory\n\t                dimensionData = dimensionData.map(function (d) {d.disabled = !!d.disabled; return d});\n\t                dimensionData.forEach(function (d, i) {\n\t                    d.originalPosition = isNaN(d.originalPosition) ? i : d.originalPosition;\n\t                    d.currentPosition = isNaN(d.currentPosition) ? i : d.currentPosition;\n\t                });\n\t\n\t               if (!defaultState) {\n\t                    var key;\n\t                    defaultState = {};\n\t                    for(key in state) {\n\t                        if(state[key] instanceof Array)\n\t                            defaultState[key] = state[key].slice(0);\n\t                        else\n\t                            defaultState[key] = state[key];\n\t                    }\n\t                }\n\t\n\t                // Display No Data message if there's nothing to show.\n\t                if(!data || !data.length) {\n\t                    nv.utils.noData(chart, container);\n\t                    return chart;\n\t                } else {\n\t                    container.selectAll('.nv-noData').remove();\n\t                }\n\t\n\t                //------------------------------------------------------------\n\t                // Setup containers and skeleton of chart\n\t\n\t                var wrap = container.selectAll('g.nv-wrap.nv-parallelCoordinatesChart').data([data]);\n\t                var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-parallelCoordinatesChart').append('g');\n\t\n\t                var g = wrap.select('g');\n\t\n\t                gEnter.append('g').attr('class', 'nv-parallelCoordinatesWrap');\n\t                gEnter.append('g').attr('class', 'nv-legendWrap');\n\t\n\t                g.select(\"rect\")\n\t                    .attr(\"width\", availableWidth)\n\t                    .attr(\"height\", (availableHeight > 0) ? availableHeight : 0);\n\t\n\t                // Legend\n\t                if (!showLegend) {\n\t                    g.select('.nv-legendWrap').selectAll('*').remove();\n\t                } else {\n\t                    legend.width(availableWidth)\n\t                        .color(function (d) { return \"rgb(188,190,192)\"; });\n\t\n\t                    g.select('.nv-legendWrap')\n\t                        .datum(dimensionData.sort(function (a, b) { return a.originalPosition - b.originalPosition; }))\n\t                        .call(legend);\n\t\n\t                    if (!marginTop && legend.height() !== margin.top) {\n\t                        margin.top = legend.height();\n\t                        availableHeight = nv.utils.availableHeight(height, container, margin);\n\t                    }\n\t                    wrap.select('.nv-legendWrap')\n\t                       .attr('transform', 'translate( 0 ,' + (-margin.top) + ')');\n\t                }\n\t                wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t                // Main Chart Component(s)\n\t                parallelCoordinates\n\t                    .width(availableWidth)\n\t                    .height(availableHeight)\n\t                    .dimensionData(dimensionData)\n\t                    .displayBrush(displayBrush);\n\t\n\t\t\t        var parallelCoordinatesWrap = g.select('.nv-parallelCoordinatesWrap ')\n\t                  .datum(data);\n\t\n\t\t\t        parallelCoordinatesWrap.transition().call(parallelCoordinates);\n\t\n\t\t\t\t\t//============================================================\n\t                // Event Handling/Dispatching (in chart's scope)\n\t                //------------------------------------------------------------\n\t                //Display reset brush button\n\t\t\t        parallelCoordinates.dispatch.on('brushEnd', function (active, hasActiveBrush) {\n\t\t\t            if (hasActiveBrush) {\n\t\t\t                displayBrush = true;\n\t\t\t                dispatch.brushEnd(active);\n\t\t\t            } else {\n\t\n\t\t\t                displayBrush = false;\n\t\t\t            }\n\t\t\t        });\n\t\n\t\t\t        legend.dispatch.on('stateChange', function(newState) {\n\t\t\t            for(var key in newState) {\n\t\t\t                state[key] = newState[key];\n\t\t\t            }\n\t\t\t            dispatch.stateChange(state);\n\t\t\t            chart.update();\n\t\t\t        });\n\t\n\t                //Update dimensions order and display reset sorting button\n\t\t\t        parallelCoordinates.dispatch.on('dimensionsOrder', function (e) {\n\t\t\t            dimensionData.sort(function (a, b) { return a.currentPosition - b.currentPosition; });\n\t\t\t            var isSorted = false;\n\t\t\t            dimensionData.forEach(function (d, i) {\n\t\t\t                d.currentPosition = i;\n\t\t\t                if (d.currentPosition !== d.originalPosition)\n\t\t\t                    isSorted = true;\n\t\t\t            });\n\t\t\t            dispatch.dimensionsOrder(dimensionData, isSorted);\n\t\t\t        });\n\t\n\t\t\t\t\t// Update chart from a state object passed to event handler\n\t                dispatch.on('changeState', function (e) {\n\t\n\t                    if (typeof e.disabled !== 'undefined') {\n\t                        dimensionData.forEach(function (series, i) {\n\t                            series.disabled = e.disabled[i];\n\t                        });\n\t                        state.disabled = e.disabled;\n\t                    }\n\t                    chart.update();\n\t                });\n\t            });\n\t\n\t            renderWatch.renderEnd('parraleleCoordinateChart immediate');\n\t            return chart;\n\t        }\n\t\n\t\t\t//============================================================\n\t        // Event Handling/Dispatching (out of chart's scope)\n\t        //------------------------------------------------------------\n\t\n\t        parallelCoordinates.dispatch.on('elementMouseover.tooltip', function (evt) {\n\t            var tp = {\n\t                key: evt.label,\n\t                color: evt.color,\n\t                series: []\n\t             }\n\t            if(evt.values){\n\t                Object.keys(evt.values).forEach(function (d) {\n\t                    var dim = evt.dimensions.filter(function (dd) {return dd.key === d;})[0];\n\t                    if(dim){\n\t                        var v;\n\t                        if (isNaN(evt.values[d]) || isNaN(parseFloat(evt.values[d]))) {\n\t                            v = nanValue;\n\t                        } else {\n\t                            v = dim.format(evt.values[d]);\n\t                        }\n\t                        tp.series.push({ idx: dim.currentPosition, key: d, value: v, color: dim.color });\n\t                    }\n\t                });\n\t                tp.series.sort(function(a,b) {return a.idx - b.idx});\n\t             }\n\t            tooltip.data(tp).hidden(false);\n\t        });\n\t\n\t        parallelCoordinates.dispatch.on('elementMouseout.tooltip', function(evt) {\n\t            tooltip.hidden(true)\n\t        });\n\t\n\t        parallelCoordinates.dispatch.on('elementMousemove.tooltip', function () {\n\t            tooltip();\n\t        });\n\t\t\t //============================================================\n\t        // Expose Public Variables\n\t        //------------------------------------------------------------\n\t\n\t\t\t// expose chart's sub-components\n\t        chart.dispatch = dispatch;\n\t        chart.parallelCoordinates = parallelCoordinates;\n\t        chart.legend = legend;\n\t        chart.tooltip = tooltip;\n\t        chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t        chart._options = Object.create({}, {\n\t            // simple options, just get/set the necessary values\n\t            width: { get: function () { return width; }, set: function (_) { width = _; } },\n\t            height: { get: function () { return height; }, set: function (_) { height = _; } },\n\t            showLegend: { get: function () { return showLegend; }, set: function (_) { showLegend = _; } },\n\t            defaultState: { get: function () { return defaultState; }, set: function (_) { defaultState = _; } },\n\t            dimensionData: { get: function () { return dimensionData; }, set: function (_) { dimensionData = _; } },\n\t            displayBrush: { get: function () { return displayBrush; }, set: function (_) { displayBrush = _; } },\n\t            noData: { get: function () { return noData; }, set: function (_) { noData = _; } },\n\t            nanValue: { get: function () { return nanValue; }, set: function (_) { nanValue = _; } },\n\t\n\t            // options that require extra logic in the setter\n\t            margin: {\n\t                get: function () { return margin; },\n\t                set: function (_) {\n\t                    if (_.top !== undefined) {\n\t                        margin.top = _.top;\n\t                        marginTop = _.top;\n\t                    }\n\t                    margin.right = _.right !== undefined ? _.right : margin.right;\n\t                    margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t                    margin.left = _.left !== undefined ? _.left : margin.left;\n\t                }\n\t            },\n\t            color: {get: function(){return color;}, set: function(_){\n\t                    color = nv.utils.getColor(_);\n\t                    legend.color(color);\n\t                    parallelCoordinates.color(color);\n\t                }}\n\t        });\n\t\n\t        nv.utils.inheritOptions(chart, parallelCoordinates);\n\t        nv.utils.initOptions(chart);\n\t\n\t        return chart;\n\t    };\n\tnv.models.pie = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n\t        , width = 500\n\t        , height = 500\n\t        , getX = function(d) { return d.x }\n\t        , getY = function(d) { return d.y }\n\t        , id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n\t        , container = null\n\t        , color = nv.utils.defaultColor()\n\t        , valueFormat = d3.format(',.2f')\n\t        , showLabels = true\n\t        , labelsOutside = false\n\t        , labelType = \"key\"\n\t        , labelThreshold = .02 //if slice percentage is under this, don't show label\n\t        , donut = false\n\t        , title = false\n\t        , growOnHover = true\n\t        , titleOffset = 0\n\t        , labelSunbeamLayout = false\n\t        , startAngle = false\n\t        , padAngle = false\n\t        , endAngle = false\n\t        , cornerRadius = 0\n\t        , donutRatio = 0.5\n\t        , duration = 250\n\t        , arcsRadius = []\n\t        , dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd')\n\t        ;\n\t\n\t    var arcs = [];\n\t    var arcsOver = [];\n\t\n\t    //============================================================\n\t    // chart function\n\t    //------------------------------------------------------------\n\t\n\t    var renderWatch = nv.utils.renderWatch(dispatch);\n\t\n\t    function chart(selection) {\n\t        renderWatch.reset();\n\t        selection.each(function(data) {\n\t            var availableWidth = width - margin.left - margin.right\n\t                , availableHeight = height - margin.top - margin.bottom\n\t                , radius = Math.min(availableWidth, availableHeight) / 2\n\t                , arcsRadiusOuter = []\n\t                , arcsRadiusInner = []\n\t                ;\n\t\n\t            container = d3.select(this)\n\t            if (arcsRadius.length === 0) {\n\t                var outer = radius - radius / 5;\n\t                var inner = donutRatio * radius;\n\t                for (var i = 0; i < data[0].length; i++) {\n\t                    arcsRadiusOuter.push(outer);\n\t                    arcsRadiusInner.push(inner);\n\t                }\n\t            } else {\n\t                if(growOnHover){\n\t                    arcsRadiusOuter = arcsRadius.map(function (d) { return (d.outer - d.outer / 5) * radius; });\n\t                    arcsRadiusInner = arcsRadius.map(function (d) { return (d.inner - d.inner / 5) * radius; });\n\t                    donutRatio = d3.min(arcsRadius.map(function (d) { return (d.inner - d.inner / 5); }));\n\t                } else {\n\t                    arcsRadiusOuter = arcsRadius.map(function (d) { return d.outer * radius; });\n\t                    arcsRadiusInner = arcsRadius.map(function (d) { return d.inner * radius; });\n\t                    donutRatio = d3.min(arcsRadius.map(function (d) { return d.inner; }));\n\t                }\n\t            }\n\t            nv.utils.initSVG(container);\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = container.selectAll('.nv-wrap.nv-pie').data(data);\n\t            var wrapEnter = wrap.enter().append('g').attr('class','nvd3 nv-wrap nv-pie nv-chart-' + id);\n\t            var gEnter = wrapEnter.append('g');\n\t            var g = wrap.select('g');\n\t            var g_pie = gEnter.append('g').attr('class', 'nv-pie');\n\t            gEnter.append('g').attr('class', 'nv-pieLabels');\n\t\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t            g.select('.nv-pie').attr('transform', 'translate(' + availableWidth / 2 + ',' + availableHeight / 2 + ')');\n\t            g.select('.nv-pieLabels').attr('transform', 'translate(' + availableWidth / 2 + ',' + availableHeight / 2 + ')');\n\t\n\t            //\n\t            container.on('click', function(d,i) {\n\t                dispatch.chartClick({\n\t                    data: d,\n\t                    index: i,\n\t                    pos: d3.event,\n\t                    id: id\n\t                });\n\t            });\n\t\n\t            arcs = [];\n\t            arcsOver = [];\n\t            for (var i = 0; i < data[0].length; i++) {\n\t\n\t                var arc = d3.svg.arc().outerRadius(arcsRadiusOuter[i]);\n\t                var arcOver = d3.svg.arc().outerRadius(arcsRadiusOuter[i] + 5);\n\t\n\t                if (startAngle !== false) {\n\t                    arc.startAngle(startAngle);\n\t                    arcOver.startAngle(startAngle);\n\t                }\n\t                if (endAngle !== false) {\n\t                    arc.endAngle(endAngle);\n\t                    arcOver.endAngle(endAngle);\n\t                }\n\t                if (donut) {\n\t                    arc.innerRadius(arcsRadiusInner[i]);\n\t                    arcOver.innerRadius(arcsRadiusInner[i]);\n\t                }\n\t\n\t                if (arc.cornerRadius && cornerRadius) {\n\t                    arc.cornerRadius(cornerRadius);\n\t                    arcOver.cornerRadius(cornerRadius);\n\t                }\n\t\n\t                arcs.push(arc);\n\t                arcsOver.push(arcOver);\n\t            }\n\t\n\t            // Setup the Pie chart and choose the data element\n\t            var pie = d3.layout.pie()\n\t                .sort(null)\n\t                .value(function(d) { return d.disabled ? 0 : getY(d) });\n\t\n\t            // padAngle added in d3 3.5\n\t            if (pie.padAngle && padAngle) {\n\t                pie.padAngle(padAngle);\n\t            }\n\t\n\t            // if title is specified and donut, put it in the middle\n\t            if (donut && title) {\n\t                g_pie.append(\"text\").attr('class', 'nv-pie-title');\n\t\n\t                wrap.select('.nv-pie-title')\n\t                    .style(\"text-anchor\", \"middle\")\n\t                    .text(function (d) {\n\t                        return title;\n\t                    })\n\t                    .style(\"font-size\", (Math.min(availableWidth, availableHeight)) * donutRatio * 2 / (title.length + 2) + \"px\")\n\t                    .attr(\"dy\", \"0.35em\") // trick to vertically center text\n\t                    .attr('transform', function(d, i) {\n\t                        return 'translate(0, '+ titleOffset + ')';\n\t                    });\n\t            }\n\t\n\t            var slices = wrap.select('.nv-pie').selectAll('.nv-slice').data(pie);\n\t            var pieLabels = wrap.select('.nv-pieLabels').selectAll('.nv-label').data(pie);\n\t\n\t            slices.exit().remove();\n\t            pieLabels.exit().remove();\n\t\n\t            var ae = slices.enter().append('g');\n\t            ae.attr('class', 'nv-slice');\n\t            ae.on('mouseover', function(d, i) {\n\t                d3.select(this).classed('hover', true);\n\t                if (growOnHover) {\n\t                    d3.select(this).select(\"path\").transition()\n\t                        .duration(70)\n\t                        .attr(\"d\", arcsOver[i]);\n\t                }\n\t                dispatch.elementMouseover({\n\t                    data: d.data,\n\t                    index: i,\n\t                    color: d3.select(this).style(\"fill\"),\n\t                    percent: (d.endAngle - d.startAngle) / (2 * Math.PI)\n\t                });\n\t            });\n\t            ae.on('mouseout', function(d, i) {\n\t                d3.select(this).classed('hover', false);\n\t                if (growOnHover) {\n\t                    d3.select(this).select(\"path\").transition()\n\t                        .duration(50)\n\t                        .attr(\"d\", arcs[i]);\n\t                }\n\t                dispatch.elementMouseout({data: d.data, index: i});\n\t            });\n\t            ae.on('mousemove', function(d, i) {\n\t                dispatch.elementMousemove({data: d.data, index: i});\n\t            });\n\t            ae.on('click', function(d, i) {\n\t                var element = this;\n\t                dispatch.elementClick({\n\t                    data: d.data,\n\t                    index: i,\n\t                    color: d3.select(this).style(\"fill\"),\n\t                    event: d3.event,\n\t                    element: element\n\t                });\n\t            });\n\t            ae.on('dblclick', function(d, i) {\n\t                dispatch.elementDblClick({\n\t                    data: d.data,\n\t                    index: i,\n\t                    color: d3.select(this).style(\"fill\")\n\t                });\n\t            });\n\t\n\t            slices.attr('fill', function(d,i) { return color(d.data, i); });\n\t            slices.attr('stroke', function(d,i) { return color(d.data, i); });\n\t\n\t            var paths = ae.append('path').each(function(d) {\n\t                this._current = d;\n\t            });\n\t\n\t            slices.select('path')\n\t                .transition()\n\t                .duration(duration)\n\t                .attr('d', function (d, i) { return arcs[i](d); })\n\t                .attrTween('d', arcTween);\n\t\n\t            if (showLabels) {\n\t                // This does the normal label\n\t                var labelsArc = [];\n\t                for (var i = 0; i < data[0].length; i++) {\n\t                    labelsArc.push(arcs[i]);\n\t\n\t                    if (labelsOutside) {\n\t                        if (donut) {\n\t                            labelsArc[i] = d3.svg.arc().outerRadius(arcs[i].outerRadius());\n\t                            if (startAngle !== false) labelsArc[i].startAngle(startAngle);\n\t                            if (endAngle !== false) labelsArc[i].endAngle(endAngle);\n\t                        }\n\t                    } else if (!donut) {\n\t                            labelsArc[i].innerRadius(0);\n\t                    }\n\t                }\n\t\n\t                pieLabels.enter().append(\"g\").classed(\"nv-label\",true).each(function(d,i) {\n\t                    var group = d3.select(this);\n\t\n\t                    group.attr('transform', function (d, i) {\n\t                        if (labelSunbeamLayout) {\n\t                            d.outerRadius = arcsRadiusOuter[i] + 10; // Set Outer Coordinate\n\t                            d.innerRadius = arcsRadiusOuter[i] + 15; // Set Inner Coordinate\n\t                            var rotateAngle = (d.startAngle + d.endAngle) / 2 * (180 / Math.PI);\n\t                            if ((d.startAngle + d.endAngle) / 2 < Math.PI) {\n\t                                rotateAngle -= 90;\n\t                            } else {\n\t                                rotateAngle += 90;\n\t                            }\n\t                            return 'translate(' + labelsArc[i].centroid(d) + ') rotate(' + rotateAngle + ')';\n\t                        } else {\n\t                            d.outerRadius = radius + 10; // Set Outer Coordinate\n\t                            d.innerRadius = radius + 15; // Set Inner Coordinate\n\t                            return 'translate(' + labelsArc[i].centroid(d) + ')'\n\t                        }\n\t                    });\n\t\n\t                    group.append('rect')\n\t                        .style('stroke', '#fff')\n\t                        .style('fill', '#fff')\n\t                        .attr(\"rx\", 3)\n\t                        .attr(\"ry\", 3);\n\t\n\t                    group.append('text')\n\t                        .style('text-anchor', labelSunbeamLayout ? ((d.startAngle + d.endAngle) / 2 < Math.PI ? 'start' : 'end') : 'middle') //center the text on it's origin or begin/end if orthogonal aligned\n\t                        .style('fill', '#000')\n\t                });\n\t\n\t                var labelLocationHash = {};\n\t                var avgHeight = 14;\n\t                var avgWidth = 140;\n\t                var createHashKey = function(coordinates) {\n\t                    return Math.floor(coordinates[0]/avgWidth) * avgWidth + ',' + Math.floor(coordinates[1]/avgHeight) * avgHeight;\n\t                };\n\t                var getSlicePercentage = function(d) {\n\t                    return (d.endAngle - d.startAngle) / (2 * Math.PI);\n\t                };\n\t\n\t                pieLabels.watchTransition(renderWatch, 'pie labels').attr('transform', function (d, i) {\n\t                    if (labelSunbeamLayout) {\n\t                        d.outerRadius = arcsRadiusOuter[i] + 10; // Set Outer Coordinate\n\t                        d.innerRadius = arcsRadiusOuter[i] + 15; // Set Inner Coordinate\n\t                        var rotateAngle = (d.startAngle + d.endAngle) / 2 * (180 / Math.PI);\n\t                        if ((d.startAngle + d.endAngle) / 2 < Math.PI) {\n\t                            rotateAngle -= 90;\n\t                        } else {\n\t                            rotateAngle += 90;\n\t                        }\n\t                        return 'translate(' + labelsArc[i].centroid(d) + ') rotate(' + rotateAngle + ')';\n\t                    } else {\n\t                        d.outerRadius = radius + 10; // Set Outer Coordinate\n\t                        d.innerRadius = radius + 15; // Set Inner Coordinate\n\t\n\t                        /*\n\t                        Overlapping pie labels are not good. What this attempts to do is, prevent overlapping.\n\t                        Each label location is hashed, and if a hash collision occurs, we assume an overlap.\n\t                        Adjust the label's y-position to remove the overlap.\n\t                        */\n\t                        var center = labelsArc[i].centroid(d);\n\t                        var percent = getSlicePercentage(d);\n\t                        if (d.value && percent >= labelThreshold) {\n\t                            var hashKey = createHashKey(center);\n\t                            if (labelLocationHash[hashKey]) {\n\t                                center[1] -= avgHeight;\n\t                            }\n\t                            labelLocationHash[createHashKey(center)] = true;\n\t                        }\n\t                        return 'translate(' + center + ')'\n\t                    }\n\t                });\n\t\n\t                pieLabels.select(\".nv-label text\")\n\t                    .style('text-anchor', function(d,i) {\n\t                        //center the text on it's origin or begin/end if orthogonal aligned\n\t                        return labelSunbeamLayout ? ((d.startAngle + d.endAngle) / 2 < Math.PI ? 'start' : 'end') : 'middle';\n\t                    })\n\t                    .text(function(d, i) {\n\t                        var percent = getSlicePercentage(d);\n\t                        var label = '';\n\t                        if (!d.value || percent < labelThreshold) return '';\n\t\n\t                        if(typeof labelType === 'function') {\n\t                            label = labelType(d, i, {\n\t                                'key': getX(d.data),\n\t                                'value': getY(d.data),\n\t                                'percent': valueFormat(percent)\n\t                            });\n\t                        } else {\n\t                            switch (labelType) {\n\t                                case 'key':\n\t                                    label = getX(d.data);\n\t                                    break;\n\t                                case 'value':\n\t                                    label = valueFormat(getY(d.data));\n\t                                    break;\n\t                                case 'percent':\n\t                                    label = d3.format('%')(percent);\n\t                                    break;\n\t                            }\n\t                        }\n\t                        return label;\n\t                    })\n\t                ;\n\t            }\n\t\n\t\n\t            // Computes the angle of an arc, converting from radians to degrees.\n\t            function angle(d) {\n\t                var a = (d.startAngle + d.endAngle) * 90 / Math.PI - 90;\n\t                return a > 90 ? a - 180 : a;\n\t            }\n\t\n\t            function arcTween(a, idx) {\n\t                a.endAngle = isNaN(a.endAngle) ? 0 : a.endAngle;\n\t                a.startAngle = isNaN(a.startAngle) ? 0 : a.startAngle;\n\t                if (!donut) a.innerRadius = 0;\n\t                var i = d3.interpolate(this._current, a);\n\t                this._current = i(0);\n\t                return function (t) {\n\t                    return arcs[idx](i(t));\n\t                };\n\t            }\n\t        });\n\t\n\t        renderWatch.renderEnd('pie immediate');\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    chart.dispatch = dispatch;\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        arcsRadius: { get: function () { return arcsRadius; }, set: function (_) { arcsRadius = _; } },\n\t        width:      {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:     {get: function(){return height;}, set: function(_){height=_;}},\n\t        showLabels: {get: function(){return showLabels;}, set: function(_){showLabels=_;}},\n\t        title:      {get: function(){return title;}, set: function(_){title=_;}},\n\t        titleOffset:    {get: function(){return titleOffset;}, set: function(_){titleOffset=_;}},\n\t        labelThreshold: {get: function(){return labelThreshold;}, set: function(_){labelThreshold=_;}},\n\t        valueFormat:    {get: function(){return valueFormat;}, set: function(_){valueFormat=_;}},\n\t        x:          {get: function(){return getX;}, set: function(_){getX=_;}},\n\t        id:         {get: function(){return id;}, set: function(_){id=_;}},\n\t        endAngle:   {get: function(){return endAngle;}, set: function(_){endAngle=_;}},\n\t        startAngle: {get: function(){return startAngle;}, set: function(_){startAngle=_;}},\n\t        padAngle:   {get: function(){return padAngle;}, set: function(_){padAngle=_;}},\n\t        cornerRadius: {get: function(){return cornerRadius;}, set: function(_){cornerRadius=_;}},\n\t        donutRatio:   {get: function(){return donutRatio;}, set: function(_){donutRatio=_;}},\n\t        labelsOutside: {get: function(){return labelsOutside;}, set: function(_){labelsOutside=_;}},\n\t        labelSunbeamLayout: {get: function(){return labelSunbeamLayout;}, set: function(_){labelSunbeamLayout=_;}},\n\t        donut:              {get: function(){return donut;}, set: function(_){donut=_;}},\n\t        growOnHover:        {get: function(){return growOnHover;}, set: function(_){growOnHover=_;}},\n\t\n\t        // depreciated after 1.7.1\n\t        pieLabelsOutside: {get: function(){return labelsOutside;}, set: function(_){\n\t            labelsOutside=_;\n\t            nv.deprecated('pieLabelsOutside', 'use labelsOutside instead');\n\t        }},\n\t        // depreciated after 1.7.1\n\t        donutLabelsOutside: {get: function(){return labelsOutside;}, set: function(_){\n\t            labelsOutside=_;\n\t            nv.deprecated('donutLabelsOutside', 'use labelsOutside instead');\n\t        }},\n\t        // deprecated after 1.7.1\n\t        labelFormat: {get: function(){ return valueFormat;}, set: function(_) {\n\t            valueFormat=_;\n\t            nv.deprecated('labelFormat','use valueFormat instead');\n\t        }},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    = typeof _.top    != 'undefined' ? _.top    : margin.top;\n\t            margin.right  = typeof _.right  != 'undefined' ? _.right  : margin.right;\n\t            margin.bottom = typeof _.bottom != 'undefined' ? _.bottom : margin.bottom;\n\t            margin.left   = typeof _.left   != 'undefined' ? _.left   : margin.left;\n\t        }},\n\t        duration: {get: function(){return duration;}, set: function(_){\n\t            duration = _;\n\t            renderWatch.reset(duration);\n\t        }},\n\t        y: {get: function(){return getY;}, set: function(_){\n\t            getY=d3.functor(_);\n\t        }},\n\t        color: {get: function(){return color;}, set: function(_){\n\t            color=nv.utils.getColor(_);\n\t        }},\n\t        labelType:          {get: function(){return labelType;}, set: function(_){\n\t            labelType= _ || 'key';\n\t        }}\n\t    });\n\t\n\t    nv.utils.initOptions(chart);\n\t    return chart;\n\t};\n\tnv.models.pieChart = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var pie = nv.models.pie();\n\t    var legend = nv.models.legend();\n\t    var tooltip = nv.models.tooltip();\n\t\n\t    var margin = {top: 30, right: 20, bottom: 20, left: 20}\n\t        , marginTop = null\n\t        , width = null\n\t        , height = null\n\t        , showTooltipPercent = false\n\t        , showLegend = true\n\t        , legendPosition = \"top\"\n\t        , color = nv.utils.defaultColor()\n\t        , state = nv.utils.state()\n\t        , defaultState = null\n\t        , noData = null\n\t        , duration = 250\n\t        , dispatch = d3.dispatch('stateChange', 'changeState','renderEnd')\n\t        ;\n\t\n\t    tooltip\n\t        .duration(0)\n\t        .headerEnabled(false)\n\t        .valueFormatter(function(d, i) {\n\t            return pie.valueFormat()(d, i);\n\t        });\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    var renderWatch = nv.utils.renderWatch(dispatch);\n\t\n\t    var stateGetter = function(data) {\n\t        return function(){\n\t            return {\n\t                active: data.map(function(d) { return !d.disabled })\n\t            };\n\t        }\n\t    };\n\t\n\t    var stateSetter = function(data) {\n\t        return function(state) {\n\t            if (state.active !== undefined) {\n\t                data.forEach(function (series, i) {\n\t                    series.disabled = !state.active[i];\n\t                });\n\t            }\n\t        }\n\t    };\n\t\n\t    //============================================================\n\t    // Chart function\n\t    //------------------------------------------------------------\n\t\n\t    function chart(selection) {\n\t        renderWatch.reset();\n\t        renderWatch.models(pie);\n\t\n\t        selection.each(function(data) {\n\t            var container = d3.select(this);\n\t            nv.utils.initSVG(container);\n\t\n\t            var that = this;\n\t            var availableWidth = nv.utils.availableWidth(width, container, margin),\n\t                availableHeight = nv.utils.availableHeight(height, container, margin);\n\t\n\t            chart.update = function() { container.transition().call(chart); };\n\t            chart.container = this;\n\t\n\t            state.setter(stateSetter(data), chart.update)\n\t                .getter(stateGetter(data))\n\t                .update();\n\t\n\t            //set state.disabled\n\t            state.disabled = data.map(function(d) { return !!d.disabled });\n\t\n\t            if (!defaultState) {\n\t                var key;\n\t                defaultState = {};\n\t                for (key in state) {\n\t                    if (state[key] instanceof Array)\n\t                        defaultState[key] = state[key].slice(0);\n\t                    else\n\t                        defaultState[key] = state[key];\n\t                }\n\t            }\n\t\n\t            // Display No Data message if there's nothing to show.\n\t            if (!data || !data.length) {\n\t                nv.utils.noData(chart, container);\n\t                return chart;\n\t            } else {\n\t                container.selectAll('.nv-noData').remove();\n\t            }\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = container.selectAll('g.nv-wrap.nv-pieChart').data([data]);\n\t            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-pieChart').append('g');\n\t            var g = wrap.select('g');\n\t\n\t            gEnter.append('g').attr('class', 'nv-pieWrap');\n\t            gEnter.append('g').attr('class', 'nv-legendWrap');\n\t\n\t            // Legend\n\t            if (!showLegend) {\n\t                g.select('.nv-legendWrap').selectAll('*').remove();\n\t            } else {\n\t                if (legendPosition === \"top\") {\n\t                    legend.width( availableWidth ).key(pie.x());\n\t\n\t                    wrap.select('.nv-legendWrap')\n\t                        .datum(data)\n\t                        .call(legend);\n\t\n\t                    if (!marginTop && legend.height() !== margin.top) {\n\t                        margin.top = legend.height();\n\t                        availableHeight = nv.utils.availableHeight(height, container, margin);\n\t                    }\n\t\n\t                    wrap.select('.nv-legendWrap')\n\t                        .attr('transform', 'translate(0,' + (-margin.top) +')');\n\t                } else if (legendPosition === \"right\") {\n\t                    var legendWidth = nv.models.legend().width();\n\t                    if (availableWidth / 2 < legendWidth) {\n\t                        legendWidth = (availableWidth / 2)\n\t                    }\n\t                    legend.height(availableHeight).key(pie.x());\n\t                    legend.width(legendWidth);\n\t                    availableWidth -= legend.width();\n\t\n\t                    wrap.select('.nv-legendWrap')\n\t                        .datum(data)\n\t                        .call(legend)\n\t                        .attr('transform', 'translate(' + (availableWidth) +',0)');\n\t                }\n\t            }\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            // Main Chart Component(s)\n\t            pie.width(availableWidth).height(availableHeight);\n\t            var pieWrap = g.select('.nv-pieWrap').datum([data]);\n\t            d3.transition(pieWrap).call(pie);\n\t\n\t            //============================================================\n\t            // Event Handling/Dispatching (in chart's scope)\n\t            //------------------------------------------------------------\n\t\n\t            legend.dispatch.on('stateChange', function(newState) {\n\t                for (var key in newState) {\n\t                    state[key] = newState[key];\n\t                }\n\t                dispatch.stateChange(state);\n\t                chart.update();\n\t            });\n\t\n\t            // Update chart from a state object passed to event handler\n\t            dispatch.on('changeState', function(e) {\n\t                if (typeof e.disabled !== 'undefined') {\n\t                    data.forEach(function(series,i) {\n\t                        series.disabled = e.disabled[i];\n\t                    });\n\t                    state.disabled = e.disabled;\n\t                }\n\t                chart.update();\n\t            });\n\t        });\n\t\n\t        renderWatch.renderEnd('pieChart immediate');\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Event Handling/Dispatching (out of chart's scope)\n\t    //------------------------------------------------------------\n\t\n\t    pie.dispatch.on('elementMouseover.tooltip', function(evt) {\n\t        evt['series'] = {\n\t            key: chart.x()(evt.data),\n\t            value: chart.y()(evt.data),\n\t            color: evt.color,\n\t            percent: evt.percent\n\t        };\n\t        if (!showTooltipPercent) {\n\t            delete evt.percent;\n\t            delete evt.series.percent;\n\t        }\n\t        tooltip.data(evt).hidden(false);\n\t    });\n\t\n\t    pie.dispatch.on('elementMouseout.tooltip', function(evt) {\n\t        tooltip.hidden(true);\n\t    });\n\t\n\t    pie.dispatch.on('elementMousemove.tooltip', function(evt) {\n\t        tooltip();\n\t    });\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    // expose chart's sub-components\n\t    chart.legend = legend;\n\t    chart.dispatch = dispatch;\n\t    chart.pie = pie;\n\t    chart.tooltip = tooltip;\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    // use Object get/set functionality to map between vars and chart functions\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:              {get: function(){return width;},                set: function(_){width=_;}},\n\t        height:             {get: function(){return height;},               set: function(_){height=_;}},\n\t        noData:             {get: function(){return noData;},               set: function(_){noData=_;}},\n\t        showTooltipPercent: {get: function(){return showTooltipPercent;},   set: function(_){showTooltipPercent=_;}},\n\t        showLegend:         {get: function(){return showLegend;},           set: function(_){showLegend=_;}},\n\t        legendPosition:     {get: function(){return legendPosition;},       set: function(_){legendPosition=_;}},\n\t        defaultState:       {get: function(){return defaultState;},         set: function(_){defaultState=_;}},\n\t\n\t        // options that require extra logic in the setter\n\t        color: {get: function(){return color;}, set: function(_){\n\t            color = _;\n\t            legend.color(color);\n\t            pie.color(color);\n\t        }},\n\t        duration: {get: function(){return duration;}, set: function(_){\n\t            duration = _;\n\t            renderWatch.reset(duration);\n\t            pie.duration(duration);\n\t        }},\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            if (_.top !== undefined) {\n\t                margin.top = _.top;\n\t                marginTop = _.top;\n\t            }\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }}\n\t    });\n\t    nv.utils.inheritOptions(chart, pie);\n\t    nv.utils.initOptions(chart);\n\t    return chart;\n\t};\n\tnv.models.sankey = function() {\n\t    'use strict';\n\t\n\t    // Sources:\n\t    // - https://bost.ocks.org/mike/sankey/\n\t    // - https://github.com/soxofaan/d3-plugin-captain-sankey\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var sankey = {},\n\t        nodeWidth = 24,\n\t        nodePadding = 8,\n\t        size = [1, 1],\n\t        nodes = [],\n\t        links = [],\n\t        sinksRight = true;\n\t\n\t    var layout = function(iterations) {\n\t        computeNodeLinks();\n\t        computeNodeValues();\n\t        computeNodeBreadths();\n\t        computeNodeDepths(iterations);\n\t    };\n\t\n\t    var relayout = function() {\n\t        computeLinkDepths();\n\t    };\n\t\n\t    // SVG path data generator, to be used as 'd' attribute on 'path' element selection.\n\t    var link = function() {\n\t        var curvature = .5;\n\t\n\t        function link(d) {\n\t\n\t            var x0 = d.source.x + d.source.dx,\n\t                x1 = d.target.x,\n\t                xi = d3.interpolateNumber(x0, x1),\n\t                x2 = xi(curvature),\n\t                x3 = xi(1 - curvature),\n\t                y0 = d.source.y + d.sy + d.dy / 2,\n\t                y1 = d.target.y + d.ty + d.dy / 2;\n\t            var linkPath = 'M' + x0 + ',' + y0\n\t                + 'C' + x2 + ',' + y0\n\t                + ' ' + x3 + ',' + y1\n\t                + ' ' + x1 + ',' + y1;\n\t            return linkPath;\n\t        }\n\t\n\t        link.curvature = function(_) {\n\t            if (!arguments.length) return curvature;\n\t            curvature = +_;\n\t            return link;\n\t        };\n\t\n\t        return link;\n\t    };\n\t\n\t    // Y-position of the middle of a node.\n\t    var center = function(node) {\n\t        return node.y + node.dy / 2;\n\t    };\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    // Populate the sourceLinks and targetLinks for each node.\n\t    // Also, if the source and target are not objects, assume they are indices.\n\t    function computeNodeLinks() {\n\t        nodes.forEach(function(node) {\n\t            // Links that have this node as source.\n\t            node.sourceLinks = [];\n\t            // Links that have this node as target.\n\t            node.targetLinks = [];\n\t        });\n\t        links.forEach(function(link) {\n\t            var source = link.source,\n\t                target = link.target;\n\t            if (typeof source === 'number') source = link.source = nodes[link.source];\n\t            if (typeof target === 'number') target = link.target = nodes[link.target];\n\t            source.sourceLinks.push(link);\n\t            target.targetLinks.push(link);\n\t        });\n\t    }\n\t\n\t    // Compute the value (size) of each node by summing the associated links.\n\t    function computeNodeValues() {\n\t        nodes.forEach(function(node) {\n\t            node.value = Math.max(\n\t                d3.sum(node.sourceLinks, value),\n\t                d3.sum(node.targetLinks, value)\n\t            );\n\t        });\n\t    }\n\t\n\t    // Iteratively assign the breadth (x-position) for each node.\n\t    // Nodes are assigned the maximum breadth of incoming neighbors plus one;\n\t    // nodes with no incoming links are assigned breadth zero, while\n\t    // nodes with no outgoing links are assigned the maximum breadth.\n\t    function computeNodeBreadths() {\n\t        //\n\t        var remainingNodes = nodes,\n\t            nextNodes,\n\t            x = 0;\n\t\n\t        // Work from left to right.\n\t        // Keep updating the breath (x-position) of nodes that are target of recently updated nodes.\n\t        //\n\t        while (remainingNodes.length && x < nodes.length) {\n\t            nextNodes = [];\n\t            remainingNodes.forEach(function(node) {\n\t                node.x = x;\n\t                node.dx = nodeWidth;\n\t                node.sourceLinks.forEach(function(link) {\n\t                    if (nextNodes.indexOf(link.target) < 0) {\n\t                        nextNodes.push(link.target);\n\t                    }\n\t                });\n\t            });\n\t            remainingNodes = nextNodes;\n\t            ++x;\n\t            //\n\t        }\n\t\n\t        // Optionally move pure sinks always to the right.\n\t        if (sinksRight) {\n\t            moveSinksRight(x);\n\t        }\n\t\n\t        scaleNodeBreadths((size[0] - nodeWidth) / (x - 1));\n\t    }\n\t\n\t    function moveSourcesRight() {\n\t        nodes.forEach(function(node) {\n\t            if (!node.targetLinks.length) {\n\t                node.x = d3.min(node.sourceLinks, function(d) { return d.target.x; }) - 1;\n\t            }\n\t        });\n\t    }\n\t\n\t    function moveSinksRight(x) {\n\t        nodes.forEach(function(node) {\n\t            if (!node.sourceLinks.length) {\n\t                node.x = x - 1;\n\t            }\n\t        });\n\t    }\n\t\n\t    function scaleNodeBreadths(kx) {\n\t        nodes.forEach(function(node) {\n\t            node.x *= kx;\n\t        });\n\t    }\n\t\n\t    // Compute the depth (y-position) for each node.\n\t    function computeNodeDepths(iterations) {\n\t        // Group nodes by breath.\n\t        var nodesByBreadth = d3.nest()\n\t            .key(function(d) { return d.x; })\n\t            .sortKeys(d3.ascending)\n\t            .entries(nodes)\n\t            .map(function(d) { return d.values; });\n\t\n\t        //\n\t        initializeNodeDepth();\n\t        resolveCollisions();\n\t        computeLinkDepths();\n\t        for (var alpha = 1; iterations > 0; --iterations) {\n\t            relaxRightToLeft(alpha *= .99);\n\t            resolveCollisions();\n\t            computeLinkDepths();\n\t            relaxLeftToRight(alpha);\n\t            resolveCollisions();\n\t            computeLinkDepths();\n\t        }\n\t\n\t        function initializeNodeDepth() {\n\t            // Calculate vertical scaling factor.\n\t            var ky = d3.min(nodesByBreadth, function(nodes) {\n\t                return (size[1] - (nodes.length - 1) * nodePadding) / d3.sum(nodes, value);\n\t            });\n\t\n\t            nodesByBreadth.forEach(function(nodes) {\n\t                nodes.forEach(function(node, i) {\n\t                    node.y = i;\n\t                    node.dy = node.value * ky;\n\t                });\n\t            });\n\t\n\t            links.forEach(function(link) {\n\t                link.dy = link.value * ky;\n\t            });\n\t        }\n\t\n\t        function relaxLeftToRight(alpha) {\n\t            nodesByBreadth.forEach(function(nodes, breadth) {\n\t                nodes.forEach(function(node) {\n\t                    if (node.targetLinks.length) {\n\t                        // Value-weighted average of the y-position of source node centers linked to this node.\n\t                        var y = d3.sum(node.targetLinks, weightedSource) / d3.sum(node.targetLinks, value);\n\t                        node.y += (y - center(node)) * alpha;\n\t                    }\n\t                });\n\t            });\n\t\n\t            function weightedSource(link) {\n\t                return (link.source.y + link.sy + link.dy / 2) * link.value;\n\t            }\n\t        }\n\t\n\t        function relaxRightToLeft(alpha) {\n\t            nodesByBreadth.slice().reverse().forEach(function(nodes) {\n\t                nodes.forEach(function(node) {\n\t                    if (node.sourceLinks.length) {\n\t                        // Value-weighted average of the y-positions of target nodes linked to this node.\n\t                        var y = d3.sum(node.sourceLinks, weightedTarget) / d3.sum(node.sourceLinks, value);\n\t                        node.y += (y - center(node)) * alpha;\n\t                    }\n\t                });\n\t            });\n\t\n\t            function weightedTarget(link) {\n\t                return (link.target.y + link.ty + link.dy / 2) * link.value;\n\t            }\n\t        }\n\t\n\t        function resolveCollisions() {\n\t            nodesByBreadth.forEach(function(nodes) {\n\t                var node,\n\t                    dy,\n\t                    y0 = 0,\n\t                    n = nodes.length,\n\t                    i;\n\t\n\t                // Push any overlapping nodes down.\n\t                nodes.sort(ascendingDepth);\n\t                for (i = 0; i < n; ++i) {\n\t                    node = nodes[i];\n\t                    dy = y0 - node.y;\n\t                    if (dy > 0) node.y += dy;\n\t                    y0 = node.y + node.dy + nodePadding;\n\t                }\n\t\n\t                // If the bottommost node goes outside the bounds, push it back up.\n\t                dy = y0 - nodePadding - size[1];\n\t                if (dy > 0) {\n\t                    y0 = node.y -= dy;\n\t\n\t                    // Push any overlapping nodes back up.\n\t                    for (i = n - 2; i >= 0; --i) {\n\t                        node = nodes[i];\n\t                        dy = node.y + node.dy + nodePadding - y0;\n\t                        if (dy > 0) node.y -= dy;\n\t                        y0 = node.y;\n\t                    }\n\t                }\n\t            });\n\t        }\n\t\n\t        function ascendingDepth(a, b) {\n\t            return a.y - b.y;\n\t        }\n\t    }\n\t\n\t    // Compute y-offset of the source endpoint (sy) and target endpoints (ty) of links,\n\t    // relative to the source/target node's y-position.\n\t    function computeLinkDepths() {\n\t        nodes.forEach(function(node) {\n\t            node.sourceLinks.sort(ascendingTargetDepth);\n\t            node.targetLinks.sort(ascendingSourceDepth);\n\t        });\n\t        nodes.forEach(function(node) {\n\t            var sy = 0, ty = 0;\n\t            node.sourceLinks.forEach(function(link) {\n\t                link.sy = sy;\n\t                sy += link.dy;\n\t            });\n\t            node.targetLinks.forEach(function(link) {\n\t                link.ty = ty;\n\t                ty += link.dy;\n\t            });\n\t        });\n\t\n\t        function ascendingSourceDepth(a, b) {\n\t            return a.source.y - b.source.y;\n\t        }\n\t\n\t        function ascendingTargetDepth(a, b) {\n\t            return a.target.y - b.target.y;\n\t        }\n\t    }\n\t\n\t    // Value property accessor.\n\t    function value(x) {\n\t        return x.value;\n\t    }\n\t\n\t    sankey.options = nv.utils.optionsFunc.bind(sankey);\n\t    sankey._options = Object.create({}, {\n\t        nodeWidth:    {get: function(){return nodeWidth;},   set: function(_){nodeWidth=+_;}},\n\t        nodePadding:  {get: function(){return nodePadding;}, set: function(_){nodePadding=_;}},\n\t        nodes:        {get: function(){return nodes;},       set: function(_){nodes=_;}},\n\t        links:        {get: function(){return links ;},      set: function(_){links=_;}},\n\t        size:         {get: function(){return size;},        set: function(_){size=_;}},\n\t        sinksRight:   {get: function(){return sinksRight;},  set: function(_){sinksRight=_;}},\n\t\n\t        layout:       {get: function(){layout(32);},         set: function(_){layout(_);}},\n\t        relayout:     {get: function(){relayout();},         set: function(_){}},\n\t        center:       {get: function(){return center();},    set: function(_){\n\t            if(typeof _ === 'function'){\n\t                center=_;\n\t            }\n\t        }},\n\t        link:         {get: function(){return link();},      set: function(_){\n\t            if(typeof _ === 'function'){\n\t                link=_;\n\t            }\n\t            return link();\n\t        }}\n\t    });\n\t\n\t    nv.utils.initOptions(sankey);\n\t\n\t    return sankey;\n\t};\n\tnv.models.sankeyChart = function() {\n\t    \"use strict\";\n\t\n\t    // Sources:\n\t    // - https://bost.ocks.org/mike/sankey/\n\t    // - https://github.com/soxofaan/d3-plugin-captain-sankey\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var margin = {top: 5, right: 0, bottom: 5, left: 0}\n\t        , sankey = nv.models.sankey()\n\t        , width = 600\n\t        , height = 400\n\t        , nodeWidth = 36\n\t        , nodePadding =  40\n\t        , units = 'units'\n\t        , center = undefined\n\t        ;\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    var formatNumber = d3.format(',.0f');    // zero decimal places\n\t    var format = function(d) {\n\t        return formatNumber(d) + ' ' + units;\n\t    };\n\t    var color = d3.scale.category20();\n\t    var linkTitle = function(d){\n\t        return d.source.name + ' → ' + d.target.name + '\\n' + format(d.value);\n\t    };\n\t    var nodeFillColor = function(d){\n\t        return d.color = color(d.name.replace(/ .*/, ''));\n\t    };\n\t    var nodeStrokeColor = function(d){\n\t        return d3.rgb(d.color).darker(2);\n\t    };\n\t    var nodeTitle = function(d){\n\t        return d.name + '\\n' + format(d.value);\n\t    };\n\t\n\t    var showError = function(element, message) {\n\t        element.append('text')\n\t            .attr('x', 0)\n\t            .attr('y', 0)\n\t            .attr('class', 'nvd3-sankey-chart-error')\n\t            .attr('text-anchor', 'middle')\n\t            .text(message);\n\t    };\n\t\n\t    function chart(selection) {\n\t        selection.each(function(data) {\n\t\n\t            var testData = {\n\t                nodes:\n\t                    [\n\t                        {'node': 1, 'name': 'Test 1'},\n\t                        {'node': 2, 'name': 'Test 2'},\n\t                        {'node': 3, 'name': 'Test 3'},\n\t                        {'node': 4, 'name': 'Test 4'},\n\t                        {'node': 5, 'name': 'Test 5'},\n\t                        {'node': 6, 'name': 'Test 6'}\n\t                    ],\n\t                links:\n\t                    [\n\t                        {'source': 0, 'target': 1, 'value': 2295},\n\t                        {'source': 0, 'target': 5, 'value': 1199},\n\t                        {'source': 1, 'target': 2, 'value': 1119},\n\t                        {'source': 1, 'target': 5, 'value': 1176},\n\t                        {'source': 2, 'target': 3, 'value': 487},\n\t                        {'source': 2, 'target': 5, 'value': 632},\n\t                        {'source': 3, 'target': 4, 'value': 301},\n\t                        {'source': 3, 'target': 5, 'value': 186}\n\t                    ]\n\t            };\n\t\n\t            // Error handling\n\t            var isDataValid = false;\n\t            var dataAvailable = false;\n\t\n\t            // check if data is valid\n\t            if(\n\t                (typeof data['nodes'] === 'object' && data['nodes'].length) >= 0 &&\n\t                (typeof data['links'] === 'object' && data['links'].length) >= 0\n\t            ){\n\t                isDataValid = true;\n\t            }\n\t\n\t            // check if data is available\n\t            if(\n\t                data['nodes'] && data['nodes'].length > 0 &&\n\t                data['links'] && data['links'].length > 0\n\t            ) {\n\t                dataAvailable = true;\n\t            }\n\t\n\t            // show error\n\t            if(!isDataValid) {\n\t                console.error('NVD3 Sankey chart error:', 'invalid data format for', data);\n\t                console.info('Valid data format is: ', testData, JSON.stringify(testData));\n\t                showError(selection, 'Error loading chart, data is invalid');\n\t                return false;\n\t            }\n\t\n\t            // TODO use nv.utils.noData\n\t            if(!dataAvailable) {\n\t                showError(selection, 'No data available');\n\t                return false;\n\t            }\n\t\n\t            // No errors, continue\n\t\n\t            // append the svg canvas to the page\n\t            var svg = selection.append('svg')\n\t                .attr('width', width)\n\t                .attr('height', height)\n\t                .append('g')\n\t                .attr('class', 'nvd3 nv-wrap nv-sankeyChart');\n\t\n\t            // Set the sankey diagram properties\n\t            sankey\n\t                .nodeWidth(nodeWidth)\n\t                .nodePadding(nodePadding)\n\t                .size([width, height]);\n\t\n\t            var path = sankey.link();\n\t\n\t            sankey\n\t                .nodes(data.nodes)\n\t                .links(data.links)\n\t                .layout(32)\n\t                .center(center);\n\t\n\t            // add in the links\n\t            var link = svg.append('g').selectAll('.link')\n\t                .data(data.links)\n\t                .enter().append('path')\n\t                .attr('class', 'link')\n\t                .attr('d', path)\n\t                .style('stroke-width', function(d) { return Math.max(1, d.dy); })\n\t            .sort(function(a,b) { return b.dy - a.dy; });\n\t\n\t            // add the link titles\n\t            link.append('title')\n\t                .text(linkTitle);\n\t\n\t            // add in the nodes\n\t            var node = svg.append('g').selectAll('.node')\n\t                .data(data.nodes)\n\t                .enter().append('g')\n\t                .attr('class', 'node')\n\t                .attr('transform', function(d) { return 'translate(' + d.x + ',' + d.y + ')'; })\n\t                .call(\n\t                    d3.behavior\n\t                        .drag()\n\t                        .origin(function(d) { return d; })\n\t                        .on('dragstart', function() {\n\t                            this.parentNode.appendChild(this);\n\t                        })\n\t                        .on('drag', dragmove)\n\t                );\n\t\n\t            // add the rectangles for the nodes\n\t            node.append('rect')\n\t                .attr('height', function(d) { return d.dy; })\n\t                .attr('width', sankey.nodeWidth())\n\t                .style('fill', nodeFillColor)\n\t                .style('stroke', nodeStrokeColor)\n\t                .append('title')\n\t                .text(nodeTitle);\n\t\n\t            // add in the title for the nodes\n\t            node.append('text')\n\t                .attr('x', -6)\n\t                .attr('y', function(d) { return d.dy / 2; })\n\t                .attr('dy', '.35em')\n\t                .attr('text-anchor', 'end')\n\t                .attr('transform', null)\n\t                .text(function(d) { return d.name; })\n\t                .filter(function(d) { return d.x < width / 2; })\n\t                .attr('x', 6 + sankey.nodeWidth())\n\t                .attr('text-anchor', 'start');\n\t\n\t            // the function for moving the nodes\n\t            function dragmove(d) {\n\t                d3.select(this).attr('transform',\n\t                'translate(' + d.x + ',' + (\n\t                    d.y = Math.max(0, Math.min(height - d.dy, d3.event.y))\n\t                ) + ')');\n\t                sankey.relayout();\n\t                link.attr('d', path);\n\t            }\n\t        });\n\t\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        units:           {get: function(){return units;},       set: function(_){units=_;}},\n\t        width:           {get: function(){return width;},       set: function(_){width=_;}},\n\t        height:          {get: function(){return height;},      set: function(_){height=_;}},\n\t        format:          {get: function(){return format;},      set: function(_){format=_;}},\n\t        linkTitle:       {get: function(){return linkTitle;},   set: function(_){linkTitle=_;}},\n\t        nodeWidth:       {get: function(){return nodeWidth;},   set: function(_){nodeWidth=_;}},\n\t        nodePadding:     {get: function(){return nodePadding;}, set: function(_){nodePadding=_;}},\n\t        center:          {get: function(){return center},       set: function(_){center=_}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }},\n\t        nodeStyle: {get: function(){return {};}, set: function(_){\n\t            nodeFillColor   = _.fillColor   !== undefined ? _.fillColor   : nodeFillColor;\n\t            nodeStrokeColor = _.strokeColor !== undefined ? _.strokeColor : nodeStrokeColor;\n\t            nodeTitle       = _.title       !== undefined ? _.title       : nodeTitle;\n\t        }}\n\t\n\t    });\n\t\n\t    nv.utils.initOptions(chart);\n\t\n\t    return chart;\n\t};\n\t\n\tnv.models.scatter = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var margin       = {top: 0, right: 0, bottom: 0, left: 0}\n\t        , width        = null\n\t        , height       = null\n\t        , color        = nv.utils.defaultColor() // chooses color\n\t        , pointBorderColor = null\n\t        , id           = Math.floor(Math.random() * 100000) //Create semi-unique ID incase user doesn't select one\n\t        , container    = null\n\t        , x            = d3.scale.linear()\n\t        , y            = d3.scale.linear()\n\t        , z            = d3.scale.linear() //linear because d3.svg.shape.size is treated as area\n\t        , getX         = function(d) { return d.x } // accessor to get the x value\n\t        , getY         = function(d) { return d.y } // accessor to get the y value\n\t        , getSize      = function(d) { return d.size || 1} // accessor to get the point size\n\t        , getShape     = function(d) { return d.shape || 'circle' } // accessor to get point shape\n\t        , forceX       = [] // List of numbers to Force into the X scale (ie. 0, or a max / min, etc.)\n\t        , forceY       = [] // List of numbers to Force into the Y scale\n\t        , forceSize    = [] // List of numbers to Force into the Size scale\n\t        , interactive  = true // If true, plots a voronoi overlay for advanced point intersection\n\t        , pointActive  = function(d) { return !d.notActive } // any points that return false will be filtered out\n\t        , padData      = false // If true, adds half a data points width to front and back, for lining up a line chart with a bar chart\n\t        , padDataOuter = .1 //outerPadding to imitate ordinal scale outer padding\n\t        , clipEdge     = false // if true, masks points within x and y scale\n\t        , clipVoronoi  = true // if true, masks each point with a circle... can turn off to slightly increase performance\n\t        , showVoronoi  = false // display the voronoi areas\n\t        , clipRadius   = function() { return 25 } // function to get the radius for voronoi point clips\n\t        , xDomain      = null // Override x domain (skips the calculation from data)\n\t        , yDomain      = null // Override y domain\n\t        , xRange       = null // Override x range\n\t        , yRange       = null // Override y range\n\t        , sizeDomain   = null // Override point size domain\n\t        , sizeRange    = null\n\t        , singlePoint  = false\n\t        , dispatch     = d3.dispatch('elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'renderEnd')\n\t        , useVoronoi   = true\n\t        , duration     = 250\n\t        , interactiveUpdateDelay = 300\n\t        , showLabels    = false\n\t        ;\n\t\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    var x0, y0, z0 // used to store previous scales\n\t        , width0\n\t        , height0\n\t        , timeoutID\n\t        , needsUpdate = false // Flag for when the points are visually updating, but the interactive layer is behind, to disable tooltips\n\t        , renderWatch = nv.utils.renderWatch(dispatch, duration)\n\t        , _sizeRange_def = [16, 256]\n\t        , _cache = {}\n\t        ;\n\t\n\t    function getCache(d) {\n\t        var key, val;\n\t        key = d[0].series + ':' + d[1];\n\t        val = _cache[key] = _cache[key] || {};\n\t        return val;\n\t    }\n\t\n\t    function delCache(d) {\n\t        var key, val;\n\t        key = d[0].series + ':' + d[1];\n\t        delete _cache[key];\n\t    }\n\t\n\t    function getDiffs(d) {\n\t        var i, key, val,\n\t            cache = getCache(d),\n\t            diffs = false;\n\t        for (i = 1; i < arguments.length; i += 2) {\n\t            key = arguments[i];\n\t            val = arguments[i + 1](d[0], d[1]);\n\t            if (cache[key] !== val || !cache.hasOwnProperty(key)) {\n\t                cache[key] = val;\n\t                diffs = true;\n\t            }\n\t        }\n\t        return diffs;\n\t    }\n\t\n\t    function chart(selection) {\n\t        renderWatch.reset();\n\t        selection.each(function(data) {\n\t            container = d3.select(this);\n\t            var availableWidth = nv.utils.availableWidth(width, container, margin),\n\t                availableHeight = nv.utils.availableHeight(height, container, margin);\n\t\n\t            nv.utils.initSVG(container);\n\t\n\t            //add series index to each data point for reference\n\t            data.forEach(function(series, i) {\n\t                series.values.forEach(function(point) {\n\t                    point.series = i;\n\t                });\n\t            });\n\t\n\t            // Setup Scales\n\t            var logScale = chart.yScale().name === d3.scale.log().name ? true : false;\n\t            // remap and flatten the data for use in calculating the scales' domains\n\t            var seriesData = (xDomain && yDomain && sizeDomain) ? [] : // if we know xDomain and yDomain and sizeDomain, no need to calculate.... if Size is constant remember to set sizeDomain to speed up performance\n\t                d3.merge(\n\t                    data.map(function(d) {\n\t                        return d.values.map(function(d,i) {\n\t                            return { x: getX(d,i), y: getY(d,i), size: getSize(d,i) }\n\t                        })\n\t                    })\n\t                );\n\t\n\t            x   .domain(xDomain || d3.extent(seriesData.map(function(d) { return d.x; }).concat(forceX)))\n\t\n\t            if (padData && data[0])\n\t                x.range(xRange || [(availableWidth * padDataOuter +  availableWidth) / (2 *data[0].values.length), availableWidth - availableWidth * (1 + padDataOuter) / (2 * data[0].values.length)  ]);\n\t            //x.range([availableWidth * .5 / data[0].values.length, availableWidth * (data[0].values.length - .5)  / data[0].values.length ]);\n\t            else\n\t                x.range(xRange || [0, availableWidth]);\n\t\n\t             if (logScale) {\n\t                    var min = d3.min(seriesData.map(function(d) { if (d.y !== 0) return d.y; }));\n\t                    y.clamp(true)\n\t                        .domain(yDomain || d3.extent(seriesData.map(function(d) {\n\t                            if (d.y !== 0) return d.y;\n\t                            else return min * 0.1;\n\t                        }).concat(forceY)))\n\t                        .range(yRange || [availableHeight, 0]);\n\t                } else {\n\t                        y.domain(yDomain || d3.extent(seriesData.map(function (d) { return d.y;}).concat(forceY)))\n\t                        .range(yRange || [availableHeight, 0]);\n\t                }\n\t\n\t            z   .domain(sizeDomain || d3.extent(seriesData.map(function(d) { return d.size }).concat(forceSize)))\n\t                .range(sizeRange || _sizeRange_def);\n\t\n\t            // If scale's domain don't have a range, slightly adjust to make one... so a chart can show a single data point\n\t            singlePoint = x.domain()[0] === x.domain()[1] || y.domain()[0] === y.domain()[1];\n\t\n\t            if (x.domain()[0] === x.domain()[1])\n\t                x.domain()[0] ?\n\t                    x.domain([x.domain()[0] - x.domain()[0] * 0.01, x.domain()[1] + x.domain()[1] * 0.01])\n\t                    : x.domain([-1,1]);\n\t\n\t            if (y.domain()[0] === y.domain()[1])\n\t                y.domain()[0] ?\n\t                    y.domain([y.domain()[0] - y.domain()[0] * 0.01, y.domain()[1] + y.domain()[1] * 0.01])\n\t                    : y.domain([-1,1]);\n\t\n\t            if ( isNaN(x.domain()[0])) {\n\t                x.domain([-1,1]);\n\t            }\n\t\n\t            if ( isNaN(y.domain()[0])) {\n\t                y.domain([-1,1]);\n\t            }\n\t\n\t            x0 = x0 || x;\n\t            y0 = y0 || y;\n\t            z0 = z0 || z;\n\t\n\t            var scaleDiff = x(1) !== x0(1) || y(1) !== y0(1) || z(1) !== z0(1);\n\t\n\t            width0 = width0 || width;\n\t            height0 = height0 || height;\n\t\n\t            var sizeDiff = width0 !== width || height0 !== height;\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = container.selectAll('g.nv-wrap.nv-scatter').data([data]);\n\t            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-scatter nv-chart-' + id);\n\t            var defsEnter = wrapEnter.append('defs');\n\t            var gEnter = wrapEnter.append('g');\n\t            var g = wrap.select('g');\n\t\n\t            wrap.classed('nv-single-point', singlePoint);\n\t            gEnter.append('g').attr('class', 'nv-groups');\n\t            gEnter.append('g').attr('class', 'nv-point-paths');\n\t            wrapEnter.append('g').attr('class', 'nv-point-clips');\n\t\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            defsEnter.append('clipPath')\n\t                .attr('id', 'nv-edge-clip-' + id)\n\t                .append('rect')\n\t                .attr('transform', 'translate( -10, -10)');\n\t                \n\t            wrap.select('#nv-edge-clip-' + id + ' rect')\n\t                .attr('width', availableWidth + 20)\n\t                .attr('height', (availableHeight > 0) ? availableHeight + 20 : 0);\n\t\n\t            g.attr('clip-path', clipEdge ? 'url(#nv-edge-clip-' + id + ')' : '');\n\t\n\t            function updateInteractiveLayer() {\n\t                // Always clear needs-update flag regardless of whether or not\n\t                // we will actually do anything (avoids needless invocations).\n\t                needsUpdate = false;\n\t\n\t                if (!interactive) return false;\n\t\n\t                // inject series and point index for reference into voronoi\n\t                if (useVoronoi === true) {\n\t                    var vertices = d3.merge(data.map(function(group, groupIndex) {\n\t                            return group.values\n\t                                .map(function(point, pointIndex) {\n\t                                    // *Adding noise to make duplicates very unlikely\n\t                                    // *Injecting series and point index for reference\n\t                                    /* *Adding a 'jitter' to the points, because there's an issue in d3.geom.voronoi.\n\t                                     */\n\t                                    var pX = getX(point,pointIndex);\n\t                                    var pY = getY(point,pointIndex);\n\t\n\t                                    return [nv.utils.NaNtoZero(x(pX))+ Math.random() * 1e-4,\n\t                                            nv.utils.NaNtoZero(y(pY))+ Math.random() * 1e-4,\n\t                                        groupIndex,\n\t                                        pointIndex, point]; //temp hack to add noise until I think of a better way so there are no duplicates\n\t                                })\n\t                                .filter(function(pointArray, pointIndex) {\n\t                                    return pointActive(pointArray[4], pointIndex); // Issue #237.. move filter to after map, so pointIndex is correct!\n\t                                })\n\t                        })\n\t                    );\n\t\n\t                    if (vertices.length == 0) return false;  // No active points, we're done\n\t                    if (vertices.length < 3) {\n\t                        // Issue #283 - Adding 2 dummy points to the voronoi b/c voronoi requires min 3 points to work\n\t                        vertices.push([x.range()[0] - 20, y.range()[0] - 20, null, null]);\n\t                        vertices.push([x.range()[1] + 20, y.range()[1] + 20, null, null]);\n\t                        vertices.push([x.range()[0] - 20, y.range()[0] + 20, null, null]);\n\t                        vertices.push([x.range()[1] + 20, y.range()[1] - 20, null, null]);\n\t                    }\n\t\n\t                    // keep voronoi sections from going more than 10 outside of graph\n\t                    // to avoid overlap with other things like legend etc\n\t                    var bounds = d3.geom.polygon([\n\t                        [-10,-10],\n\t                        [-10,height + 10],\n\t                        [width + 10,height + 10],\n\t                        [width + 10,-10]\n\t                    ]);\n\t\n\t                    var voronoi = d3.geom.voronoi(vertices).map(function(d, i) {\n\t                        return {\n\t                            'data': bounds.clip(d),\n\t                            'series': vertices[i][2],\n\t                            'point': vertices[i][3]\n\t                        }\n\t                    });\n\t\n\t                    // nuke all voronoi paths on reload and recreate them\n\t                    wrap.select('.nv-point-paths').selectAll('path').remove();\n\t                    var pointPaths = wrap.select('.nv-point-paths').selectAll('path').data(voronoi);\n\t                    var vPointPaths = pointPaths\n\t                        .enter().append(\"svg:path\")\n\t                        .attr(\"d\", function(d) {\n\t                            if (!d || !d.data || d.data.length === 0)\n\t                                return 'M 0 0';\n\t                            else\n\t                                return \"M\" + d.data.join(\",\") + \"Z\";\n\t                        })\n\t                        .attr(\"id\", function(d,i) {\n\t                            return \"nv-path-\"+i; })\n\t                        .attr(\"clip-path\", function(d,i) { return \"url(#nv-clip-\"+id+\"-\"+i+\")\"; })\n\t                        ;\n\t\n\t                    // good for debugging point hover issues\n\t                    if (showVoronoi) {\n\t                        vPointPaths.style(\"fill\", d3.rgb(230, 230, 230))\n\t                            .style('fill-opacity', 0.4)\n\t                            .style('stroke-opacity', 1)\n\t                            .style(\"stroke\", d3.rgb(200,200,200));\n\t                    }\n\t\n\t                    if (clipVoronoi) {\n\t                        // voronoi sections are already set to clip,\n\t                        // just create the circles with the IDs they expect\n\t                        wrap.select('.nv-point-clips').selectAll('*').remove(); // must do * since it has sub-dom\n\t                        var pointClips = wrap.select('.nv-point-clips').selectAll('clipPath').data(vertices);\n\t                        var vPointClips = pointClips\n\t                            .enter().append(\"svg:clipPath\")\n\t                            .attr(\"id\", function(d, i) { return \"nv-clip-\"+id+\"-\"+i;})\n\t                            .append(\"svg:circle\")\n\t                            .attr('cx', function(d) { return d[0]; })\n\t                            .attr('cy', function(d) { return d[1]; })\n\t                            .attr('r', clipRadius);\n\t                    }\n\t\n\t                    var mouseEventCallback = function(el, d, mDispatch) {\n\t                        if (needsUpdate) return 0;\n\t                        var series = data[d.series];\n\t                        if (series === undefined) return;\n\t                        var point  = series.values[d.point];\n\t                        point['color'] = color(series, d.series);\n\t\n\t                        // standardize attributes for tooltip.\n\t                        point['x'] = getX(point);\n\t                        point['y'] = getY(point);\n\t\n\t                        // can't just get box of event node since it's actually a voronoi polygon\n\t                        var box = container.node().getBoundingClientRect();\n\t                        var scrollTop  = window.pageYOffset || document.documentElement.scrollTop;\n\t                        var scrollLeft = window.pageXOffset || document.documentElement.scrollLeft;\n\t\n\t                        var pos = {\n\t                            left: x(getX(point, d.point)) + box.left + scrollLeft + margin.left + 10,\n\t                            top: y(getY(point, d.point)) + box.top + scrollTop + margin.top + 10\n\t                        };\n\t\n\t                        mDispatch({\n\t                            point: point,\n\t                            series: series,\n\t                            pos: pos,\n\t                            relativePos: [x(getX(point, d.point)) + margin.left, y(getY(point, d.point)) + margin.top],\n\t                            seriesIndex: d.series,\n\t                            pointIndex: d.point,\n\t                            event: d3.event,\n\t                            element: el\n\t                        });\n\t                    };\n\t\n\t                    pointPaths\n\t                        .on('click', function(d) {\n\t                            mouseEventCallback(this, d, dispatch.elementClick);\n\t                        })\n\t                        .on('dblclick', function(d) {\n\t                            mouseEventCallback(this, d, dispatch.elementDblClick);\n\t                        })\n\t                        .on('mouseover', function(d) {\n\t                            mouseEventCallback(this, d, dispatch.elementMouseover);\n\t                        })\n\t                        .on('mouseout', function(d, i) {\n\t                            mouseEventCallback(this, d, dispatch.elementMouseout);\n\t                        });\n\t\n\t                } else {\n\t                    // add event handlers to points instead voronoi paths\n\t                    wrap.select('.nv-groups').selectAll('.nv-group')\n\t                        .selectAll('.nv-point')\n\t                        //.data(dataWithPoints)\n\t                        //.style('pointer-events', 'auto') // recativate events, disabled by css\n\t                        .on('click', function(d,i) {\n\t                            //nv.log('test', d, i);\n\t                            if (needsUpdate || !data[d.series]) return 0; //check if this is a dummy point\n\t                            var series = data[d.series],\n\t                                point  = series.values[i];\n\t                            var element = this;\n\t                            dispatch.elementClick({\n\t                                point: point,\n\t                                series: series,\n\t                                pos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top], //TODO: make this pos base on the page\n\t                                relativePos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n\t                                seriesIndex: d.series,\n\t                                pointIndex: i,\n\t                                event: d3.event,\n\t                                element: element\n\t                            });\n\t                        })\n\t                        .on('dblclick', function(d,i) {\n\t                            if (needsUpdate || !data[d.series]) return 0; //check if this is a dummy point\n\t                            var series = data[d.series],\n\t                                point  = series.values[i];\n\t\n\t                            dispatch.elementDblClick({\n\t                                point: point,\n\t                                series: series,\n\t                                pos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],//TODO: make this pos base on the page\n\t                                relativePos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n\t                                seriesIndex: d.series,\n\t                                pointIndex: i\n\t                            });\n\t                        })\n\t                        .on('mouseover', function(d,i) {\n\t                            if (needsUpdate || !data[d.series]) return 0; //check if this is a dummy point\n\t                            var series = data[d.series],\n\t                                point  = series.values[i];\n\t\n\t                            dispatch.elementMouseover({\n\t                                point: point,\n\t                                series: series,\n\t                                pos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],//TODO: make this pos base on the page\n\t                                relativePos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n\t                                seriesIndex: d.series,\n\t                                pointIndex: i,\n\t                                color: color(d, i)\n\t                            });\n\t                        })\n\t                        .on('mouseout', function(d,i) {\n\t                            if (needsUpdate || !data[d.series]) return 0; //check if this is a dummy point\n\t                            var series = data[d.series],\n\t                                point  = series.values[i];\n\t\n\t                            dispatch.elementMouseout({\n\t                                point: point,\n\t                                series: series,\n\t                                pos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],//TODO: make this pos base on the page\n\t                                relativePos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n\t                                seriesIndex: d.series,\n\t                                pointIndex: i,\n\t                                color: color(d, i)\n\t                            });\n\t                        });\n\t                }\n\t            }\n\t\n\t            needsUpdate = true;\n\t            var groups = wrap.select('.nv-groups').selectAll('.nv-group')\n\t                .data(function(d) { return d }, function(d) { return d.key });\n\t            groups.enter().append('g')\n\t                .style('stroke-opacity', 1e-6)\n\t                .style('fill-opacity', 1e-6);\n\t            groups.exit()\n\t                .remove();\n\t            groups\n\t                .attr('class', function(d,i) {\n\t                    return (d.classed || '') + ' nv-group nv-series-' + i;\n\t                })\n\t                .classed('nv-noninteractive', !interactive)\n\t                .classed('hover', function(d) { return d.hover });\n\t            groups.watchTransition(renderWatch, 'scatter: groups')\n\t                .style('fill', function(d,i) { return color(d, i) })\n\t                .style('stroke', function(d,i) { return d.pointBorderColor || pointBorderColor || color(d, i) })\n\t                .style('stroke-opacity', 1)\n\t                .style('fill-opacity', .5);\n\t\n\t            // create the points, maintaining their IDs from the original data set\n\t            var points = groups.selectAll('path.nv-point')\n\t                .data(function(d) {\n\t                    return d.values.map(\n\t                        function (point, pointIndex) {\n\t                            return [point, pointIndex]\n\t                        }).filter(\n\t                            function(pointArray, pointIndex) {\n\t                                return pointActive(pointArray[0], pointIndex)\n\t                            })\n\t                    });\n\t            points.enter().append('path')\n\t                .attr('class', function (d) {\n\t                    return 'nv-point nv-point-' + d[1];\n\t                })\n\t                .style('fill', function (d) { return d.color })\n\t                .style('stroke', function (d) { return d.color })\n\t                .attr('transform', function(d) {\n\t                    return 'translate(' + nv.utils.NaNtoZero(x0(getX(d[0],d[1]))) + ',' + nv.utils.NaNtoZero(y0(getY(d[0],d[1]))) + ')'\n\t                })\n\t                .attr('d',\n\t                    nv.utils.symbol()\n\t                    .type(function(d) { return getShape(d[0]); })\n\t                    .size(function(d) { return z(getSize(d[0],d[1])) })\n\t            );\n\t            points.exit().each(delCache).remove();\n\t            groups.exit().selectAll('path.nv-point')\n\t                .watchTransition(renderWatch, 'scatter exit')\n\t                .attr('transform', function(d) {\n\t                    return 'translate(' + nv.utils.NaNtoZero(x(getX(d[0],d[1]))) + ',' + nv.utils.NaNtoZero(y(getY(d[0],d[1]))) + ')'\n\t                })\n\t                .remove();\n\t            // Update points position only if \"x\" or \"y\" have changed\n\t            points.filter(function (d) { return scaleDiff || sizeDiff || getDiffs(d, 'x', getX, 'y', getY); })\n\t                .watchTransition(renderWatch, 'scatter points')\n\t                .attr('transform', function(d) {\n\t                    //nv.log(d, getX(d[0],d[1]), x(getX(d[0],d[1])));\n\t                    return 'translate(' + nv.utils.NaNtoZero(x(getX(d[0],d[1]))) + ',' + nv.utils.NaNtoZero(y(getY(d[0],d[1]))) + ')'\n\t                });\n\t            // Update points appearance only if \"shape\" or \"size\" have changed\n\t            points.filter(function (d) { return scaleDiff || sizeDiff || getDiffs(d, 'shape', getShape, 'size', getSize); })\n\t                .watchTransition(renderWatch, 'scatter points')\n\t                .attr('d',\n\t                    nv.utils.symbol()\n\t                    .type(function(d) { return getShape(d[0]); })\n\t                    .size(function(d) { return z(getSize(d[0],d[1])) })\n\t            );\n\t\n\t            // add label a label to scatter chart\n\t            if(showLabels)\n\t            {\n\t                var titles =  groups.selectAll('.nv-label')\n\t                    .data(function(d) {\n\t                        return d.values.map(\n\t                            function (point, pointIndex) {\n\t                                return [point, pointIndex]\n\t                            }).filter(\n\t                                function(pointArray, pointIndex) {\n\t                                    return pointActive(pointArray[0], pointIndex)\n\t                                })\n\t                        });\n\t\n\t                titles.enter().append('text')\n\t                    .style('fill', function (d,i) {\n\t                        return d.color })\n\t                    .style('stroke-opacity', 0)\n\t                    .style('fill-opacity', 1)\n\t                    .attr('transform', function(d) {\n\t                        var dx = nv.utils.NaNtoZero(x0(getX(d[0],d[1]))) + Math.sqrt(z(getSize(d[0],d[1]))/Math.PI) + 2;\n\t                        return 'translate(' + dx + ',' + nv.utils.NaNtoZero(y0(getY(d[0],d[1]))) + ')';\n\t                    })\n\t                    .text(function(d,i){\n\t                        return d[0].label;});\n\t\n\t                titles.exit().remove();\n\t                groups.exit().selectAll('path.nv-label')\n\t                    .watchTransition(renderWatch, 'scatter exit')\n\t                    .attr('transform', function(d) {\n\t                        var dx = nv.utils.NaNtoZero(x(getX(d[0],d[1])))+ Math.sqrt(z(getSize(d[0],d[1]))/Math.PI)+2;\n\t                        return 'translate(' + dx + ',' + nv.utils.NaNtoZero(y(getY(d[0],d[1]))) + ')';\n\t                    })\n\t                    .remove();\n\t               titles.each(function(d) {\n\t                  d3.select(this)\n\t                    .classed('nv-label', true)\n\t                    .classed('nv-label-' + d[1], false)\n\t                    .classed('hover',false);\n\t                });\n\t                titles.watchTransition(renderWatch, 'scatter labels')\n\t                    .attr('transform', function(d) {\n\t                        var dx = nv.utils.NaNtoZero(x(getX(d[0],d[1])))+ Math.sqrt(z(getSize(d[0],d[1]))/Math.PI)+2;\n\t                        return 'translate(' + dx + ',' + nv.utils.NaNtoZero(y(getY(d[0],d[1]))) + ')'\n\t                    });\n\t            }\n\t\n\t            // Delay updating the invisible interactive layer for smoother animation\n\t            if( interactiveUpdateDelay )\n\t            {\n\t                clearTimeout(timeoutID); // stop repeat calls to updateInteractiveLayer\n\t                timeoutID = setTimeout(updateInteractiveLayer, interactiveUpdateDelay );\n\t            }\n\t            else\n\t            {\n\t                updateInteractiveLayer();\n\t            }\n\t\n\t            //store old scales for use in transitions on update\n\t            x0 = x.copy();\n\t            y0 = y.copy();\n\t            z0 = z.copy();\n\t\n\t            width0 = width;\n\t            height0 = height;\n\t\n\t        });\n\t        renderWatch.renderEnd('scatter immediate');\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    chart.dispatch = dispatch;\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    // utility function calls provided by this chart\n\t    chart._calls = new function() {\n\t        this.clearHighlights = function () {\n\t            nv.dom.write(function() {\n\t                container.selectAll(\".nv-point.hover\").classed(\"hover\", false);\n\t            });\n\t            return null;\n\t        };\n\t        this.highlightPoint = function (seriesIndex, pointIndex, isHoverOver) {\n\t            nv.dom.write(function() {\n\t                container.select('.nv-groups')\n\t                  .selectAll(\".nv-series-\" + seriesIndex)\n\t                  .selectAll(\".nv-point-\" + pointIndex)\n\t                  .classed(\"hover\", isHoverOver);\n\t            });\n\t        };\n\t    };\n\t\n\t    // trigger calls from events too\n\t    dispatch.on('elementMouseover.point', function(d) {\n\t        if (interactive) chart._calls.highlightPoint(d.seriesIndex,d.pointIndex,true);\n\t    });\n\t\n\t    dispatch.on('elementMouseout.point', function(d) {\n\t        if (interactive) chart._calls.highlightPoint(d.seriesIndex,d.pointIndex,false);\n\t    });\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:        {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:       {get: function(){return height;}, set: function(_){height=_;}},\n\t        xScale:       {get: function(){return x;}, set: function(_){x=_;}},\n\t        yScale:       {get: function(){return y;}, set: function(_){y=_;}},\n\t        pointScale:   {get: function(){return z;}, set: function(_){z=_;}},\n\t        xDomain:      {get: function(){return xDomain;}, set: function(_){xDomain=_;}},\n\t        yDomain:      {get: function(){return yDomain;}, set: function(_){yDomain=_;}},\n\t        pointDomain:  {get: function(){return sizeDomain;}, set: function(_){sizeDomain=_;}},\n\t        xRange:       {get: function(){return xRange;}, set: function(_){xRange=_;}},\n\t        yRange:       {get: function(){return yRange;}, set: function(_){yRange=_;}},\n\t        pointRange:   {get: function(){return sizeRange;}, set: function(_){sizeRange=_;}},\n\t        forceX:       {get: function(){return forceX;}, set: function(_){forceX=_;}},\n\t        forceY:       {get: function(){return forceY;}, set: function(_){forceY=_;}},\n\t        forcePoint:   {get: function(){return forceSize;}, set: function(_){forceSize=_;}},\n\t        interactive:  {get: function(){return interactive;}, set: function(_){interactive=_;}},\n\t        pointActive:  {get: function(){return pointActive;}, set: function(_){pointActive=_;}},\n\t        padDataOuter: {get: function(){return padDataOuter;}, set: function(_){padDataOuter=_;}},\n\t        padData:      {get: function(){return padData;}, set: function(_){padData=_;}},\n\t        clipEdge:     {get: function(){return clipEdge;}, set: function(_){clipEdge=_;}},\n\t        clipVoronoi:  {get: function(){return clipVoronoi;}, set: function(_){clipVoronoi=_;}},\n\t        clipRadius:   {get: function(){return clipRadius;}, set: function(_){clipRadius=_;}},\n\t        showVoronoi:   {get: function(){return showVoronoi;}, set: function(_){showVoronoi=_;}},\n\t        id:           {get: function(){return id;}, set: function(_){id=_;}},\n\t        interactiveUpdateDelay: {get:function(){return interactiveUpdateDelay;}, set: function(_){interactiveUpdateDelay=_;}},\n\t        showLabels: {get: function(){return showLabels;}, set: function(_){ showLabels = _;}},\n\t        pointBorderColor: {get: function(){return pointBorderColor;}, set: function(_){pointBorderColor=_;}},\n\t\n\t        // simple functor options\n\t        x:     {get: function(){return getX;}, set: function(_){getX = d3.functor(_);}},\n\t        y:     {get: function(){return getY;}, set: function(_){getY = d3.functor(_);}},\n\t        pointSize: {get: function(){return getSize;}, set: function(_){getSize = d3.functor(_);}},\n\t        pointShape: {get: function(){return getShape;}, set: function(_){getShape = d3.functor(_);}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }},\n\t        duration: {get: function(){return duration;}, set: function(_){\n\t            duration = _;\n\t            renderWatch.reset(duration);\n\t        }},\n\t        color: {get: function(){return color;}, set: function(_){\n\t            color = nv.utils.getColor(_);\n\t        }},\n\t        useVoronoi: {get: function(){return useVoronoi;}, set: function(_){\n\t            useVoronoi = _;\n\t            if (useVoronoi === false) {\n\t                clipVoronoi = false;\n\t            }\n\t        }}\n\t    });\n\t\n\t    nv.utils.initOptions(chart);\n\t    return chart;\n\t};\n\t\n\tnv.models.scatterChart = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var scatter      = nv.models.scatter()\n\t        , xAxis        = nv.models.axis()\n\t        , yAxis        = nv.models.axis()\n\t        , legend       = nv.models.legend()\n\t        , distX        = nv.models.distribution()\n\t        , distY        = nv.models.distribution()\n\t        , tooltip      = nv.models.tooltip()\n\t        ;\n\t\n\t    var margin       = {top: 30, right: 20, bottom: 50, left: 75}\n\t        , marginTop = null\n\t        , width        = null\n\t        , height       = null\n\t        , container    = null\n\t        , color        = nv.utils.defaultColor()\n\t        , x            = scatter.xScale()\n\t        , y            = scatter.yScale()\n\t        , showDistX    = false\n\t        , showDistY    = false\n\t        , showLegend   = true\n\t        , showXAxis    = true\n\t        , showYAxis    = true\n\t        , rightAlignYAxis = false\n\t        , state = nv.utils.state()\n\t        , defaultState = null\n\t        , dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd')\n\t        , noData       = null\n\t        , duration = 250\n\t        , showLabels    = false\n\t        ;\n\t\n\t    scatter.xScale(x).yScale(y);\n\t    xAxis.orient('bottom').tickPadding(10);\n\t    yAxis\n\t        .orient((rightAlignYAxis) ? 'right' : 'left')\n\t        .tickPadding(10)\n\t    ;\n\t    distX.axis('x');\n\t    distY.axis('y');\n\t    tooltip\n\t        .headerFormatter(function(d, i) {\n\t            return xAxis.tickFormat()(d, i);\n\t        })\n\t        .valueFormatter(function(d, i) {\n\t            return yAxis.tickFormat()(d, i);\n\t        });\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    var x0, y0\n\t        , renderWatch = nv.utils.renderWatch(dispatch, duration);\n\t\n\t    var stateGetter = function(data) {\n\t        return function(){\n\t            return {\n\t                active: data.map(function(d) { return !d.disabled })\n\t            };\n\t        }\n\t    };\n\t\n\t    var stateSetter = function(data) {\n\t        return function(state) {\n\t            if (state.active !== undefined)\n\t                data.forEach(function(series,i) {\n\t                    series.disabled = !state.active[i];\n\t                });\n\t        }\n\t    };\n\t\n\t    function chart(selection) {\n\t        renderWatch.reset();\n\t        renderWatch.models(scatter);\n\t        if (showXAxis) renderWatch.models(xAxis);\n\t        if (showYAxis) renderWatch.models(yAxis);\n\t        if (showDistX) renderWatch.models(distX);\n\t        if (showDistY) renderWatch.models(distY);\n\t\n\t        selection.each(function(data) {\n\t            var that = this;\n\t\n\t            container = d3.select(this);\n\t            nv.utils.initSVG(container);\n\t\n\t            var availableWidth = nv.utils.availableWidth(width, container, margin),\n\t                availableHeight = nv.utils.availableHeight(height, container, margin);\n\t\n\t            chart.update = function() {\n\t                if (duration === 0)\n\t                    container.call(chart);\n\t                else\n\t                    container.transition().duration(duration).call(chart);\n\t            };\n\t            chart.container = this;\n\t\n\t            state\n\t                .setter(stateSetter(data), chart.update)\n\t                .getter(stateGetter(data))\n\t                .update();\n\t\n\t            // DEPRECATED set state.disableddisabled\n\t            state.disabled = data.map(function(d) { return !!d.disabled });\n\t\n\t            if (!defaultState) {\n\t                var key;\n\t                defaultState = {};\n\t                for (key in state) {\n\t                    if (state[key] instanceof Array)\n\t                        defaultState[key] = state[key].slice(0);\n\t                    else\n\t                        defaultState[key] = state[key];\n\t                }\n\t            }\n\t\n\t            // Display noData message if there's nothing to show.\n\t            if (!data || !data.length || !data.filter(function(d) { return d.values.length }).length) {\n\t                nv.utils.noData(chart, container);\n\t                renderWatch.renderEnd('scatter immediate');\n\t                return chart;\n\t            } else {\n\t                container.selectAll('.nv-noData').remove();\n\t            }\n\t\n\t            // Setup Scales\n\t            x = scatter.xScale();\n\t            y = scatter.yScale();\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = container.selectAll('g.nv-wrap.nv-scatterChart').data([data]);\n\t            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-scatterChart nv-chart-' + scatter.id());\n\t            var gEnter = wrapEnter.append('g');\n\t            var g = wrap.select('g');\n\t\n\t            // background for pointer events\n\t            gEnter.append('rect').attr('class', 'nvd3 nv-background').style(\"pointer-events\",\"none\");\n\t\n\t            gEnter.append('g').attr('class', 'nv-x nv-axis');\n\t            gEnter.append('g').attr('class', 'nv-y nv-axis');\n\t            gEnter.append('g').attr('class', 'nv-scatterWrap');\n\t            gEnter.append('g').attr('class', 'nv-regressionLinesWrap');\n\t            gEnter.append('g').attr('class', 'nv-distWrap');\n\t            gEnter.append('g').attr('class', 'nv-legendWrap');\n\t\n\t            if (rightAlignYAxis) {\n\t                g.select(\".nv-y.nv-axis\")\n\t                    .attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n\t            }\n\t\n\t            // Legend\n\t            if (!showLegend) {\n\t                g.select('.nv-legendWrap').selectAll('*').remove();\n\t            } else {\n\t                var legendWidth = availableWidth;\n\t                legend.width(legendWidth);\n\t\n\t                wrap.select('.nv-legendWrap')\n\t                    .datum(data)\n\t                    .call(legend);\n\t\n\t                if (!marginTop && legend.height() !== margin.top) {\n\t                    margin.top = legend.height();\n\t                    availableHeight = nv.utils.availableHeight(height, container, margin);\n\t                }\n\t\n\t                wrap.select('.nv-legendWrap')\n\t                    .attr('transform', 'translate(0' + ',' + (-margin.top) +')');\n\t            }\n\t\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            // Main Chart Component(s)\n\t            scatter\n\t                .width(availableWidth)\n\t                .height(availableHeight)\n\t                .color(data.map(function(d,i) {\n\t                    d.color = d.color || color(d, i);\n\t                    return d.color;\n\t                }).filter(function(d,i) { return !data[i].disabled }))\n\t                .showLabels(showLabels);\n\t\n\t            wrap.select('.nv-scatterWrap')\n\t                .datum(data.filter(function(d) { return !d.disabled }))\n\t                .call(scatter);\n\t\n\t\n\t            wrap.select('.nv-regressionLinesWrap')\n\t                .attr('clip-path', 'url(#nv-edge-clip-' + scatter.id() + ')');\n\t\n\t            var regWrap = wrap.select('.nv-regressionLinesWrap').selectAll('.nv-regLines')\n\t                .data(function (d) {\n\t                    return d;\n\t                });\n\t\n\t            regWrap.enter().append('g').attr('class', 'nv-regLines');\n\t\n\t            var regLine = regWrap.selectAll('.nv-regLine')\n\t                .data(function (d) {\n\t                    return [d]\n\t                });\n\t\n\t            regLine.enter()\n\t                .append('line').attr('class', 'nv-regLine')\n\t                .style('stroke-opacity', 0);\n\t\n\t            // don't add lines unless we have slope and intercept to use\n\t            regLine.filter(function(d) {\n\t                return d.intercept && d.slope;\n\t            })\n\t                .watchTransition(renderWatch, 'scatterPlusLineChart: regline')\n\t                .attr('x1', x.range()[0])\n\t                .attr('x2', x.range()[1])\n\t                .attr('y1', function (d, i) {\n\t                    return y(x.domain()[0] * d.slope + d.intercept)\n\t                })\n\t                .attr('y2', function (d, i) {\n\t                    return y(x.domain()[1] * d.slope + d.intercept)\n\t                })\n\t                .style('stroke', function (d, i, j) {\n\t                    return color(d, j)\n\t                })\n\t                .style('stroke-opacity', function (d, i) {\n\t                    return (d.disabled || typeof d.slope === 'undefined' || typeof d.intercept === 'undefined') ? 0 : 1\n\t                });\n\t\n\t            // Setup Axes\n\t            if (showXAxis) {\n\t                xAxis\n\t                    .scale(x)\n\t                    ._ticks( nv.utils.calcTicksX(availableWidth/100, data) )\n\t                    .tickSize( -availableHeight , 0);\n\t\n\t                g.select('.nv-x.nv-axis')\n\t                    .attr('transform', 'translate(0,' + y.range()[0] + ')')\n\t                    .call(xAxis);\n\t            }\n\t\n\t            if (showYAxis) {\n\t                yAxis\n\t                    .scale(y)\n\t                    ._ticks( nv.utils.calcTicksY(availableHeight/36, data) )\n\t                    .tickSize( -availableWidth, 0);\n\t\n\t                g.select('.nv-y.nv-axis')\n\t                    .call(yAxis);\n\t            }\n\t\n\t            // Setup Distribution\n\t            if (showDistX) {\n\t                distX\n\t                    .getData(scatter.x())\n\t                    .scale(x)\n\t                    .width(availableWidth)\n\t                    .color(data.map(function(d,i) {\n\t                        return d.color || color(d, i);\n\t                    }).filter(function(d,i) { return !data[i].disabled }));\n\t                gEnter.select('.nv-distWrap').append('g')\n\t                    .attr('class', 'nv-distributionX');\n\t                g.select('.nv-distributionX')\n\t                    .attr('transform', 'translate(0,' + y.range()[0] + ')')\n\t                    .datum(data.filter(function(d) { return !d.disabled }))\n\t                    .call(distX);\n\t            }\n\t\n\t            if (showDistY) {\n\t                distY\n\t                    .getData(scatter.y())\n\t                    .scale(y)\n\t                    .width(availableHeight)\n\t                    .color(data.map(function(d,i) {\n\t                        return d.color || color(d, i);\n\t                    }).filter(function(d,i) { return !data[i].disabled }));\n\t                gEnter.select('.nv-distWrap').append('g')\n\t                    .attr('class', 'nv-distributionY');\n\t                g.select('.nv-distributionY')\n\t                    .attr('transform', 'translate(' + (rightAlignYAxis ? availableWidth : -distY.size() ) + ',0)')\n\t                    .datum(data.filter(function(d) { return !d.disabled }))\n\t                    .call(distY);\n\t            }\n\t\n\t            //============================================================\n\t            // Event Handling/Dispatching (in chart's scope)\n\t            //------------------------------------------------------------\n\t\n\t            legend.dispatch.on('stateChange', function(newState) {\n\t                for (var key in newState)\n\t                    state[key] = newState[key];\n\t                dispatch.stateChange(state);\n\t                chart.update();\n\t            });\n\t\n\t            // Update chart from a state object passed to event handler\n\t            dispatch.on('changeState', function(e) {\n\t                if (typeof e.disabled !== 'undefined') {\n\t                    data.forEach(function(series,i) {\n\t                        series.disabled = e.disabled[i];\n\t                    });\n\t                    state.disabled = e.disabled;\n\t                }\n\t                chart.update();\n\t            });\n\t\n\t            // mouseover needs availableHeight so we just keep scatter mouse events inside the chart block\n\t            scatter.dispatch.on('elementMouseout.tooltip', function(evt) {\n\t                tooltip.hidden(true);\n\t                container.select('.nv-chart-' + scatter.id() + ' .nv-series-' + evt.seriesIndex + ' .nv-distx-' + evt.pointIndex)\n\t                    .attr('y1', 0);\n\t                container.select('.nv-chart-' + scatter.id() + ' .nv-series-' + evt.seriesIndex + ' .nv-disty-' + evt.pointIndex)\n\t                    .attr('x2', distY.size());\n\t            });\n\t\n\t            scatter.dispatch.on('elementMouseover.tooltip', function(evt) {\n\t                container.select('.nv-series-' + evt.seriesIndex + ' .nv-distx-' + evt.pointIndex)\n\t                    .attr('y1', evt.relativePos[1] - availableHeight);\n\t                container.select('.nv-series-' + evt.seriesIndex + ' .nv-disty-' + evt.pointIndex)\n\t                    .attr('x2', evt.relativePos[0] + distX.size());\n\t                tooltip.data(evt).hidden(false);\n\t            });\n\t\n\t            //store old scales for use in transitions on update\n\t            x0 = x.copy();\n\t            y0 = y.copy();\n\t\n\t        });\n\t\n\t        renderWatch.renderEnd('scatter with line immediate');\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    // expose chart's sub-components\n\t    chart.dispatch = dispatch;\n\t    chart.scatter = scatter;\n\t    chart.legend = legend;\n\t    chart.xAxis = xAxis;\n\t    chart.yAxis = yAxis;\n\t    chart.distX = distX;\n\t    chart.distY = distY;\n\t    chart.tooltip = tooltip;\n\t\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:      {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:     {get: function(){return height;}, set: function(_){height=_;}},\n\t        container:  {get: function(){return container;}, set: function(_){container=_;}},\n\t        showDistX:  {get: function(){return showDistX;}, set: function(_){showDistX=_;}},\n\t        showDistY:  {get: function(){return showDistY;}, set: function(_){showDistY=_;}},\n\t        showLegend: {get: function(){return showLegend;}, set: function(_){showLegend=_;}},\n\t        showXAxis:  {get: function(){return showXAxis;}, set: function(_){showXAxis=_;}},\n\t        showYAxis:  {get: function(){return showYAxis;}, set: function(_){showYAxis=_;}},\n\t        defaultState:     {get: function(){return defaultState;}, set: function(_){defaultState=_;}},\n\t        noData:     {get: function(){return noData;}, set: function(_){noData=_;}},\n\t        duration:   {get: function(){return duration;}, set: function(_){duration=_;}},\n\t        showLabels: {get: function(){return showLabels;}, set: function(_){showLabels=_;}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            if (_.top !== undefined) {\n\t                margin.top = _.top;\n\t                marginTop = _.top;\n\t            }\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }},\n\t        rightAlignYAxis: {get: function(){return rightAlignYAxis;}, set: function(_){\n\t            rightAlignYAxis = _;\n\t            yAxis.orient( (_) ? 'right' : 'left');\n\t        }},\n\t        color: {get: function(){return color;}, set: function(_){\n\t            color = nv.utils.getColor(_);\n\t            legend.color(color);\n\t            distX.color(color);\n\t            distY.color(color);\n\t        }}\n\t    });\n\t\n\t    nv.utils.inheritOptions(chart, scatter);\n\t    nv.utils.initOptions(chart);\n\t    return chart;\n\t};\n\t\n\tnv.models.sparkline = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var margin = {top: 2, right: 0, bottom: 2, left: 0}\n\t        , width = 400\n\t        , height = 32\n\t        , container = null\n\t        , animate = true\n\t        , x = d3.scale.linear()\n\t        , y = d3.scale.linear()\n\t        , getX = function(d) { return d.x }\n\t        , getY = function(d) { return d.y }\n\t        , color = nv.utils.getColor(['#000'])\n\t        , xDomain\n\t        , yDomain\n\t        , xRange\n\t        , yRange\n\t        , showMinMaxPoints = true\n\t        , showCurrentPoint = true\n\t        , dispatch = d3.dispatch('renderEnd')\n\t        ;\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    var renderWatch = nv.utils.renderWatch(dispatch);\n\t    \n\t    function chart(selection) {\n\t        renderWatch.reset();\n\t        selection.each(function(data) {\n\t            var availableWidth = width - margin.left - margin.right,\n\t                availableHeight = height - margin.top - margin.bottom;\n\t\n\t            container = d3.select(this);\n\t            nv.utils.initSVG(container);\n\t\n\t            // Setup Scales\n\t            x   .domain(xDomain || d3.extent(data, getX ))\n\t                .range(xRange || [0, availableWidth]);\n\t\n\t            y   .domain(yDomain || d3.extent(data, getY ))\n\t                .range(yRange || [availableHeight, 0]);\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = container.selectAll('g.nv-wrap.nv-sparkline').data([data]);\n\t            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-sparkline');\n\t            var gEnter = wrapEnter.append('g');\n\t            var g = wrap.select('g');\n\t\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')')\n\t\n\t            var paths = wrap.selectAll('path')\n\t                .data(function(d) { return [d] });\n\t            paths.enter().append('path');\n\t            paths.exit().remove();\n\t            paths\n\t                .style('stroke', function(d,i) { return d.color || color(d, i) })\n\t                .attr('d', d3.svg.line()\n\t                    .x(function(d,i) { return x(getX(d,i)) })\n\t                    .y(function(d,i) { return y(getY(d,i)) })\n\t            );\n\t\n\t            // TODO: Add CURRENT data point (Need Min, Mac, Current / Most recent)\n\t            var points = wrap.selectAll('circle.nv-point')\n\t                .data(function(data) {\n\t                    var yValues = data.map(function(d, i) { return getY(d,i); });\n\t                    function pointIndex(index) {\n\t                        if (index != -1) {\n\t                            var result = data[index];\n\t                            result.pointIndex = index;\n\t                            return result;\n\t                        } else {\n\t                            return null;\n\t                        }\n\t                    }\n\t                    var maxPoint = pointIndex(yValues.lastIndexOf(y.domain()[1])),\n\t                        minPoint = pointIndex(yValues.indexOf(y.domain()[0])),\n\t                        currentPoint = pointIndex(yValues.length - 1);\n\t                    return [(showMinMaxPoints ? minPoint : null), (showMinMaxPoints ? maxPoint : null), (showCurrentPoint ? currentPoint : null)].filter(function (d) {return d != null;});\n\t                });\n\t            points.enter().append('circle');\n\t            points.exit().remove();\n\t            points\n\t                .attr('cx', function(d,i) { return x(getX(d,d.pointIndex)) })\n\t                .attr('cy', function(d,i) { return y(getY(d,d.pointIndex)) })\n\t                .attr('r', 2)\n\t                .attr('class', function(d,i) {\n\t                    return getX(d, d.pointIndex) == x.domain()[1] ? 'nv-point nv-currentValue' :\n\t                            getY(d, d.pointIndex) == y.domain()[0] ? 'nv-point nv-minValue' : 'nv-point nv-maxValue'\n\t                });\n\t        });\n\t        \n\t        renderWatch.renderEnd('sparkline immediate');\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:            {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:           {get: function(){return height;}, set: function(_){height=_;}},\n\t        xDomain:          {get: function(){return xDomain;}, set: function(_){xDomain=_;}},\n\t        yDomain:          {get: function(){return yDomain;}, set: function(_){yDomain=_;}},\n\t        xRange:           {get: function(){return xRange;}, set: function(_){xRange=_;}},\n\t        yRange:           {get: function(){return yRange;}, set: function(_){yRange=_;}},\n\t        xScale:           {get: function(){return x;}, set: function(_){x=_;}},\n\t        yScale:           {get: function(){return y;}, set: function(_){y=_;}},\n\t        animate:          {get: function(){return animate;}, set: function(_){animate=_;}},\n\t        showMinMaxPoints: {get: function(){return showMinMaxPoints;}, set: function(_){showMinMaxPoints=_;}},\n\t        showCurrentPoint: {get: function(){return showCurrentPoint;}, set: function(_){showCurrentPoint=_;}},\n\t\n\t        //functor options\n\t        x: {get: function(){return getX;}, set: function(_){getX=d3.functor(_);}},\n\t        y: {get: function(){return getY;}, set: function(_){getY=d3.functor(_);}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }},\n\t        color:  {get: function(){return color;}, set: function(_){\n\t            color = nv.utils.getColor(_);\n\t        }}\n\t    });\n\t\n\t    chart.dispatch = dispatch;\n\t    nv.utils.initOptions(chart);\n\t    return chart;\n\t};\n\t\n\tnv.models.sparklinePlus = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var sparkline = nv.models.sparkline();\n\t\n\t    var margin = {top: 15, right: 100, bottom: 10, left: 50}\n\t        , width = null\n\t        , height = null\n\t        , x\n\t        , y\n\t        , index = []\n\t        , paused = false\n\t        , xTickFormat = d3.format(',r')\n\t        , yTickFormat = d3.format(',.2f')\n\t        , showLastValue = true\n\t        , alignValue = true\n\t        , rightAlignValue = false\n\t        , noData = null\n\t        , dispatch = d3.dispatch('renderEnd')\n\t        ;\n\t        \n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    var renderWatch = nv.utils.renderWatch(dispatch);\n\t\n\t    function chart(selection) {\n\t        renderWatch.reset();\n\t        renderWatch.models(sparkline);\n\t        selection.each(function(data) {\n\t            var container = d3.select(this);\n\t            nv.utils.initSVG(container);\n\t\n\t            var availableWidth = nv.utils.availableWidth(width, container, margin),\n\t                availableHeight = nv.utils.availableHeight(height, container, margin);\n\t\n\t            chart.update = function() { container.call(chart); };\n\t            chart.container = this;\n\t\n\t            // Display No Data message if there's nothing to show.\n\t            if (!data || !data.length) {\n\t                nv.utils.noData(chart, container)\n\t                return chart;\n\t            } else {\n\t                container.selectAll('.nv-noData').remove();\n\t            }\n\t\n\t            var currentValue = sparkline.y()(data[data.length-1], data.length-1);\n\t\n\t            // Setup Scales\n\t            x = sparkline.xScale();\n\t            y = sparkline.yScale();\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = container.selectAll('g.nv-wrap.nv-sparklineplus').data([data]);\n\t            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-sparklineplus');\n\t            var gEnter = wrapEnter.append('g');\n\t            var g = wrap.select('g');\n\t\n\t            gEnter.append('g').attr('class', 'nv-sparklineWrap');\n\t            gEnter.append('g').attr('class', 'nv-valueWrap');\n\t            gEnter.append('g').attr('class', 'nv-hoverArea');\n\t\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            // Main Chart Component(s)\n\t            var sparklineWrap = g.select('.nv-sparklineWrap');\n\t\n\t            sparkline.width(availableWidth).height(availableHeight);\n\t            sparklineWrap.call(sparkline);\n\t\n\t            if (showLastValue) {\n\t                var valueWrap = g.select('.nv-valueWrap');\n\t                var value = valueWrap.selectAll('.nv-currentValue')\n\t                    .data([currentValue]);\n\t\n\t                value.enter().append('text').attr('class', 'nv-currentValue')\n\t                    .attr('dx', rightAlignValue ? -8 : 8)\n\t                    .attr('dy', '.9em')\n\t                    .style('text-anchor', rightAlignValue ? 'end' : 'start');\n\t\n\t                value\n\t                    .attr('x', availableWidth + (rightAlignValue ? margin.right : 0))\n\t                    .attr('y', alignValue ? function (d) {\n\t                        return y(d)\n\t                    } : 0)\n\t                    .style('fill', sparkline.color()(data[data.length - 1], data.length - 1))\n\t                    .text(yTickFormat(currentValue));\n\t            }\n\t\n\t            gEnter.select('.nv-hoverArea').append('rect')\n\t                .on('mousemove', sparklineHover)\n\t                .on('click', function() { paused = !paused })\n\t                .on('mouseout', function() { index = []; updateValueLine(); });\n\t\n\t            g.select('.nv-hoverArea rect')\n\t                .attr('transform', function(d) { return 'translate(' + -margin.left + ',' + -margin.top + ')' })\n\t                .attr('width', availableWidth + margin.left + margin.right)\n\t                .attr('height', availableHeight + margin.top);\n\t\n\t            //index is currently global (within the chart), may or may not keep it that way\n\t            function updateValueLine() {\n\t                if (paused) return;\n\t\n\t                var hoverValue = g.selectAll('.nv-hoverValue').data(index);\n\t\n\t                var hoverEnter = hoverValue.enter()\n\t                    .append('g').attr('class', 'nv-hoverValue')\n\t                    .style('stroke-opacity', 0)\n\t                    .style('fill-opacity', 0);\n\t\n\t                hoverValue.exit()\n\t                    .transition().duration(250)\n\t                    .style('stroke-opacity', 0)\n\t                    .style('fill-opacity', 0)\n\t                    .remove();\n\t\n\t                hoverValue\n\t                    .attr('transform', function(d) { return 'translate(' + x(sparkline.x()(data[d],d)) + ',0)' })\n\t                    .transition().duration(250)\n\t                    .style('stroke-opacity', 1)\n\t                    .style('fill-opacity', 1);\n\t\n\t                if (!index.length) return;\n\t\n\t                hoverEnter.append('line')\n\t                    .attr('x1', 0)\n\t                    .attr('y1', -margin.top)\n\t                    .attr('x2', 0)\n\t                    .attr('y2', availableHeight);\n\t\n\t                hoverEnter.append('text').attr('class', 'nv-xValue')\n\t                    .attr('x', -6)\n\t                    .attr('y', -margin.top)\n\t                    .attr('text-anchor', 'end')\n\t                    .attr('dy', '.9em');\n\t\n\t                g.select('.nv-hoverValue .nv-xValue')\n\t                    .text(xTickFormat(sparkline.x()(data[index[0]], index[0])));\n\t\n\t                hoverEnter.append('text').attr('class', 'nv-yValue')\n\t                    .attr('x', 6)\n\t                    .attr('y', -margin.top)\n\t                    .attr('text-anchor', 'start')\n\t                    .attr('dy', '.9em');\n\t\n\t                g.select('.nv-hoverValue .nv-yValue')\n\t                    .text(yTickFormat(sparkline.y()(data[index[0]], index[0])));\n\t            }\n\t\n\t            function sparklineHover() {\n\t                if (paused) return;\n\t\n\t                var pos = d3.mouse(this)[0] - margin.left;\n\t\n\t                function getClosestIndex(data, x) {\n\t                    var distance = Math.abs(sparkline.x()(data[0], 0) - x);\n\t                    var closestIndex = 0;\n\t                    for (var i = 0; i < data.length; i++){\n\t                        if (Math.abs(sparkline.x()(data[i], i) - x) < distance) {\n\t                            distance = Math.abs(sparkline.x()(data[i], i) - x);\n\t                            closestIndex = i;\n\t                        }\n\t                    }\n\t                    return closestIndex;\n\t                }\n\t\n\t                index = [getClosestIndex(data, Math.round(x.invert(pos)))];\n\t                updateValueLine();\n\t            }\n\t\n\t        });\n\t        renderWatch.renderEnd('sparklinePlus immediate');\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    // expose chart's sub-components\n\t    chart.dispatch = dispatch;\n\t    chart.sparkline = sparkline;\n\t\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:           {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:          {get: function(){return height;}, set: function(_){height=_;}},\n\t        xTickFormat:     {get: function(){return xTickFormat;}, set: function(_){xTickFormat=_;}},\n\t        yTickFormat:     {get: function(){return yTickFormat;}, set: function(_){yTickFormat=_;}},\n\t        showLastValue:   {get: function(){return showLastValue;}, set: function(_){showLastValue=_;}},\n\t        alignValue:      {get: function(){return alignValue;}, set: function(_){alignValue=_;}},\n\t        rightAlignValue: {get: function(){return rightAlignValue;}, set: function(_){rightAlignValue=_;}},\n\t        noData:          {get: function(){return noData;}, set: function(_){noData=_;}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }}\n\t    });\n\t\n\t    nv.utils.inheritOptions(chart, sparkline);\n\t    nv.utils.initOptions(chart);\n\t\n\t    return chart;\n\t};\n\t\n\tnv.models.stackedArea = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n\t        , width = 960\n\t        , height = 500\n\t        , color = nv.utils.defaultColor() // a function that computes the color\n\t        , id = Math.floor(Math.random() * 100000) //Create semi-unique ID incase user doesn't selet one\n\t        , container = null\n\t        , getX = function(d) { return d.x } // accessor to get the x value from a data point\n\t        , getY = function(d) { return d.y } // accessor to get the y value from a data point\n\t        , defined = function(d,i) { return !isNaN(getY(d,i)) && getY(d,i) !== null } // allows a line to be not continuous when it is not defined\n\t        , style = 'stack'\n\t        , offset = 'zero'\n\t        , order = 'default'\n\t        , interpolate = 'linear'  // controls the line interpolation\n\t        , clipEdge = false // if true, masks lines within x and y scale\n\t        , x //can be accessed via chart.xScale()\n\t        , y //can be accessed via chart.yScale()\n\t        , scatter = nv.models.scatter()\n\t        , duration = 250\n\t        , dispatch =  d3.dispatch('areaClick', 'areaMouseover', 'areaMouseout','renderEnd', 'elementClick', 'elementMouseover', 'elementMouseout')\n\t        ;\n\t\n\t    scatter\n\t        .pointSize(2.2) // default size\n\t        .pointDomain([2.2, 2.2]) // all the same size by default\n\t    ;\n\t\n\t    /************************************\n\t     * offset:\n\t     *   'wiggle' (stream)\n\t     *   'zero' (stacked)\n\t     *   'expand' (normalize to 100%)\n\t     *   'silhouette' (simple centered)\n\t     *\n\t     * order:\n\t     *   'inside-out' (stream)\n\t     *   'default' (input order)\n\t     ************************************/\n\t\n\t    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\t\n\t    function chart(selection) {\n\t        renderWatch.reset();\n\t        renderWatch.models(scatter);\n\t        selection.each(function(data) {\n\t            var availableWidth = width - margin.left - margin.right,\n\t                availableHeight = height - margin.top - margin.bottom;\n\t\n\t            container = d3.select(this);\n\t            nv.utils.initSVG(container);\n\t\n\t            // Setup Scales\n\t            x = scatter.xScale();\n\t            y = scatter.yScale();\n\t\n\t            var dataRaw = data;\n\t            // Injecting point index into each point because d3.layout.stack().out does not give index\n\t            data.forEach(function(aseries, i) {\n\t                aseries.seriesIndex = i;\n\t                aseries.values = aseries.values.map(function(d, j) {\n\t                    d.index = j;\n\t                    d.seriesIndex = i;\n\t                    return d;\n\t                });\n\t            });\n\t\n\t            var dataFiltered = data.filter(function(series) {\n\t                return !series.disabled;\n\t            });\n\t\n\t            data = d3.layout.stack()\n\t                .order(order)\n\t                .offset(offset)\n\t                .values(function(d) { return d.values })  //TODO: make values customizeable in EVERY model in this fashion\n\t                .x(getX)\n\t                .y(getY)\n\t                .out(function(d, y0, y) {\n\t                    d.display = {\n\t                        y: y,\n\t                        y0: y0\n\t                    };\n\t                })\n\t            (dataFiltered);\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = container.selectAll('g.nv-wrap.nv-stackedarea').data([data]);\n\t            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-stackedarea');\n\t            var defsEnter = wrapEnter.append('defs');\n\t            var gEnter = wrapEnter.append('g');\n\t            var g = wrap.select('g');\n\t\n\t            gEnter.append('g').attr('class', 'nv-areaWrap');\n\t            gEnter.append('g').attr('class', 'nv-scatterWrap');\n\t\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t            \n\t            // If the user has not specified forceY, make sure 0 is included in the domain\n\t            // Otherwise, use user-specified values for forceY\n\t            if (scatter.forceY().length == 0) {\n\t                scatter.forceY().push(0);\n\t            }\n\t            \n\t            scatter\n\t                .width(availableWidth)\n\t                .height(availableHeight)\n\t                .x(getX)\n\t                .y(function(d) {\n\t                    if (d.display !== undefined) { return d.display.y + d.display.y0; }\n\t                })\n\t                .color(data.map(function(d,i) {\n\t                    d.color = d.color || color(d, d.seriesIndex);\n\t                    return d.color;\n\t                }));\n\t\n\t            var scatterWrap = g.select('.nv-scatterWrap')\n\t                .datum(data);\n\t\n\t            scatterWrap.call(scatter);\n\t\n\t            defsEnter.append('clipPath')\n\t                .attr('id', 'nv-edge-clip-' + id)\n\t                .append('rect');\n\t\n\t            wrap.select('#nv-edge-clip-' + id + ' rect')\n\t                .attr('width', availableWidth)\n\t                .attr('height', availableHeight);\n\t\n\t            g.attr('clip-path', clipEdge ? 'url(#nv-edge-clip-' + id + ')' : '');\n\t\n\t            var area = d3.svg.area()\n\t                .defined(defined)\n\t                .x(function(d,i)  { return x(getX(d,i)) })\n\t                .y0(function(d) {\n\t                    return y(d.display.y0)\n\t                })\n\t                .y1(function(d) {\n\t                    return y(d.display.y + d.display.y0)\n\t                })\n\t                .interpolate(interpolate);\n\t\n\t            var zeroArea = d3.svg.area()\n\t                .defined(defined)\n\t                .x(function(d,i)  { return x(getX(d,i)) })\n\t                .y0(function(d) { return y(d.display.y0) })\n\t                .y1(function(d) { return y(d.display.y0) });\n\t\n\t            var path = g.select('.nv-areaWrap').selectAll('path.nv-area')\n\t                .data(function(d) { return d });\n\t\n\t            path.enter().append('path').attr('class', function(d,i) { return 'nv-area nv-area-' + i })\n\t                .attr('d', function(d,i){\n\t                    return zeroArea(d.values, d.seriesIndex);\n\t                })\n\t                .on('mouseover', function(d,i) {\n\t                    d3.select(this).classed('hover', true);\n\t                    dispatch.areaMouseover({\n\t                        point: d,\n\t                        series: d.key,\n\t                        pos: [d3.event.pageX, d3.event.pageY],\n\t                        seriesIndex: d.seriesIndex\n\t                    });\n\t                })\n\t                .on('mouseout', function(d,i) {\n\t                    d3.select(this).classed('hover', false);\n\t                    dispatch.areaMouseout({\n\t                        point: d,\n\t                        series: d.key,\n\t                        pos: [d3.event.pageX, d3.event.pageY],\n\t                        seriesIndex: d.seriesIndex\n\t                    });\n\t                })\n\t                .on('click', function(d,i) {\n\t                    d3.select(this).classed('hover', false);\n\t                    dispatch.areaClick({\n\t                        point: d,\n\t                        series: d.key,\n\t                        pos: [d3.event.pageX, d3.event.pageY],\n\t                        seriesIndex: d.seriesIndex\n\t                    });\n\t                });\n\t\n\t            path.exit().remove();\n\t            path.style('fill', function(d,i){\n\t                    return d.color || color(d, d.seriesIndex)\n\t                })\n\t                .style('stroke', function(d,i){ return d.color || color(d, d.seriesIndex) });\n\t            path.watchTransition(renderWatch,'stackedArea path')\n\t                .attr('d', function(d,i) {\n\t                    return area(d.values,i)\n\t                });\n\t\n\t            //============================================================\n\t            // Event Handling/Dispatching (in chart's scope)\n\t            //------------------------------------------------------------\n\t\n\t            scatter.dispatch.on('elementMouseover.area', function(e) {\n\t                g.select('.nv-chart-' + id + ' .nv-area-' + e.seriesIndex).classed('hover', true);\n\t            });\n\t            scatter.dispatch.on('elementMouseout.area', function(e) {\n\t                g.select('.nv-chart-' + id + ' .nv-area-' + e.seriesIndex).classed('hover', false);\n\t            });\n\t\n\t            //Special offset functions\n\t            chart.d3_stackedOffset_stackPercent = function(stackData) {\n\t                var n = stackData.length,    //How many series\n\t                    m = stackData[0].length,     //how many points per series\n\t                    i,\n\t                    j,\n\t                    o,\n\t                    y0 = [];\n\t\n\t                for (j = 0; j < m; ++j) { //Looping through all points\n\t                    for (i = 0, o = 0; i < dataRaw.length; i++) { //looping through all series\n\t                        o += getY(dataRaw[i].values[j]); //total y value of all series at a certian point in time.\n\t                    }\n\t\n\t                    if (o) for (i = 0; i < n; i++) { //(total y value of all series at point in time i) != 0\n\t                        stackData[i][j][1] /= o;\n\t                    } else { //(total y value of all series at point in time i) == 0\n\t                        for (i = 0; i < n; i++) {\n\t                            stackData[i][j][1] = 0;\n\t                        }\n\t                    }\n\t                }\n\t                for (j = 0; j < m; ++j) y0[j] = 0;\n\t                return y0;\n\t            };\n\t\n\t        });\n\t\n\t        renderWatch.renderEnd('stackedArea immediate');\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Global getters and setters\n\t    //------------------------------------------------------------\n\t\n\t    chart.dispatch = dispatch;\n\t    chart.scatter = scatter;\n\t\n\t    scatter.dispatch.on('elementClick', function(){ dispatch.elementClick.apply(this, arguments); });\n\t    scatter.dispatch.on('elementMouseover', function(){ dispatch.elementMouseover.apply(this, arguments); });\n\t    scatter.dispatch.on('elementMouseout', function(){ dispatch.elementMouseout.apply(this, arguments); });\n\t\n\t    chart.interpolate = function(_) {\n\t        if (!arguments.length) return interpolate;\n\t        interpolate = _;\n\t        return chart;\n\t    };\n\t\n\t    chart.duration = function(_) {\n\t        if (!arguments.length) return duration;\n\t        duration = _;\n\t        renderWatch.reset(duration);\n\t        scatter.duration(duration);\n\t        return chart;\n\t    };\n\t\n\t    chart.dispatch = dispatch;\n\t    chart.scatter = scatter;\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:      {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:     {get: function(){return height;}, set: function(_){height=_;}},\n\t        defined: {get: function(){return defined;}, set: function(_){defined=_;}},\n\t        clipEdge: {get: function(){return clipEdge;}, set: function(_){clipEdge=_;}},\n\t        offset:      {get: function(){return offset;}, set: function(_){offset=_;}},\n\t        order:    {get: function(){return order;}, set: function(_){order=_;}},\n\t        interpolate:    {get: function(){return interpolate;}, set: function(_){interpolate=_;}},\n\t\n\t        // simple functor options\n\t        x:     {get: function(){return getX;}, set: function(_){getX = d3.functor(_);}},\n\t        y:     {get: function(){return getY;}, set: function(_){getY = d3.functor(_);}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }},\n\t        color:  {get: function(){return color;}, set: function(_){\n\t            color = nv.utils.getColor(_);\n\t        }},\n\t        style: {get: function(){return style;}, set: function(_){\n\t            style = _;\n\t            switch (style) {\n\t                case 'stack':\n\t                    chart.offset('zero');\n\t                    chart.order('default');\n\t                    break;\n\t                case 'stream':\n\t                    chart.offset('wiggle');\n\t                    chart.order('inside-out');\n\t                    break;\n\t                case 'stream-center':\n\t                    chart.offset('silhouette');\n\t                    chart.order('inside-out');\n\t                    break;\n\t                case 'expand':\n\t                    chart.offset('expand');\n\t                    chart.order('default');\n\t                    break;\n\t                case 'stack_percent':\n\t                    chart.offset(chart.d3_stackedOffset_stackPercent);\n\t                    chart.order('default');\n\t                    break;\n\t            }\n\t        }},\n\t        duration: {get: function(){return duration;}, set: function(_){\n\t            duration = _;\n\t            renderWatch.reset(duration);\n\t            scatter.duration(duration);\n\t        }}\n\t    });\n\t\n\t    nv.utils.inheritOptions(chart, scatter);\n\t    nv.utils.initOptions(chart);\n\t\n\t    return chart;\n\t};\n\t\n\tnv.models.stackedAreaChart = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var stacked = nv.models.stackedArea()\n\t        , xAxis = nv.models.axis()\n\t        , yAxis = nv.models.axis()\n\t        , legend = nv.models.legend()\n\t        , controls = nv.models.legend()\n\t        , interactiveLayer = nv.interactiveGuideline()\n\t        , tooltip = nv.models.tooltip()\n\t        , focus = nv.models.focus(nv.models.stackedArea())\n\t        ;\n\t\n\t    var margin = {top: 10, right: 25, bottom: 50, left: 60}\n\t        , marginTop = null\n\t        , width = null\n\t        , height = null\n\t        , color = nv.utils.defaultColor()\n\t        , showControls = true\n\t        , showLegend = true\n\t        , legendPosition = 'top'\n\t        , showXAxis = true\n\t        , showYAxis = true\n\t        , rightAlignYAxis = false\n\t        , focusEnable = false\n\t        , useInteractiveGuideline = false\n\t        , showTotalInTooltip = true\n\t        , totalLabel = 'TOTAL'\n\t        , x //can be accessed via chart.xScale()\n\t        , y //can be accessed via chart.yScale()\n\t        , state = nv.utils.state()\n\t        , defaultState = null\n\t        , noData = null\n\t        , dispatch = d3.dispatch('stateChange', 'changeState','renderEnd')\n\t        , controlWidth = 250\n\t        , controlOptions = ['Stacked','Stream','Expanded']\n\t        , controlLabels = {}\n\t        , duration = 250\n\t        ;\n\t\n\t    state.style = stacked.style();\n\t    xAxis.orient('bottom').tickPadding(7);\n\t    yAxis.orient((rightAlignYAxis) ? 'right' : 'left');\n\t\n\t    tooltip\n\t        .headerFormatter(function(d, i) {\n\t            return xAxis.tickFormat()(d, i);\n\t        })\n\t        .valueFormatter(function(d, i) {\n\t            return yAxis.tickFormat()(d, i);\n\t        });\n\t\n\t    interactiveLayer.tooltip\n\t        .headerFormatter(function(d, i) {\n\t            return xAxis.tickFormat()(d, i);\n\t        })\n\t        .valueFormatter(function(d, i) {\n\t            return d == null ? \"N/A\" : yAxis.tickFormat()(d, i);\n\t        });\n\t\n\t    var oldYTickFormat = null,\n\t        oldValueFormatter = null;\n\t\n\t    controls.updateState(false);\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    var renderWatch = nv.utils.renderWatch(dispatch);\n\t    var style = stacked.style();\n\t\n\t    var stateGetter = function(data) {\n\t        return function(){\n\t            return {\n\t                active: data.map(function(d) { return !d.disabled }),\n\t                style: stacked.style()\n\t            };\n\t        }\n\t    };\n\t\n\t    var stateSetter = function(data) {\n\t        return function(state) {\n\t            if (state.style !== undefined)\n\t                style = state.style;\n\t            if (state.active !== undefined)\n\t                data.forEach(function(series,i) {\n\t                    series.disabled = !state.active[i];\n\t                });\n\t        }\n\t    };\n\t\n\t    var percentFormatter = d3.format('%');\n\t\n\t    function chart(selection) {\n\t        renderWatch.reset();\n\t        renderWatch.models(stacked);\n\t        if (showXAxis) renderWatch.models(xAxis);\n\t        if (showYAxis) renderWatch.models(yAxis);\n\t\n\t        selection.each(function(data) {\n\t            var container = d3.select(this),\n\t                that = this;\n\t            nv.utils.initSVG(container);\n\t\n\t            var availableWidth = nv.utils.availableWidth(width, container, margin),\n\t                availableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n\t\n\t            chart.update = function() { container.transition().duration(duration).call(chart); };\n\t            chart.container = this;\n\t\n\t            state\n\t                .setter(stateSetter(data), chart.update)\n\t                .getter(stateGetter(data))\n\t                .update();\n\t\n\t            // DEPRECATED set state.disabled\n\t            state.disabled = data.map(function(d) { return !!d.disabled });\n\t\n\t            if (!defaultState) {\n\t                var key;\n\t                defaultState = {};\n\t                for (key in state) {\n\t                    if (state[key] instanceof Array)\n\t                        defaultState[key] = state[key].slice(0);\n\t                    else\n\t                        defaultState[key] = state[key];\n\t                }\n\t            }\n\t\n\t            // Display No Data message if there's nothing to show.\n\t            if (!data || !data.length || !data.filter(function(d) { return d.values.length }).length) {\n\t                nv.utils.noData(chart, container)\n\t                return chart;\n\t            } else {\n\t                container.selectAll('.nv-noData').remove();\n\t            }\n\t            // Setup Scales\n\t            x = stacked.xScale();\n\t            y = stacked.yScale();\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = container.selectAll('g.nv-wrap.nv-stackedAreaChart').data([data]);\n\t            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-stackedAreaChart').append('g');\n\t            var g = wrap.select('g');\n\t\n\t            gEnter.append('g').attr('class', 'nv-legendWrap');\n\t            gEnter.append('g').attr('class', 'nv-controlsWrap');\n\t\n\t            var focusEnter = gEnter.append('g').attr('class', 'nv-focus');\n\t            focusEnter.append('g').attr('class', 'nv-background').append('rect');\n\t            focusEnter.append('g').attr('class', 'nv-x nv-axis');\n\t            focusEnter.append('g').attr('class', 'nv-y nv-axis');\n\t            focusEnter.append('g').attr('class', 'nv-stackedWrap');\n\t            focusEnter.append('g').attr('class', 'nv-interactive');\n\t\n\t            // g.select(\"rect\").attr(\"width\",availableWidth).attr(\"height\",availableHeight);\n\t\n\t            var contextEnter = gEnter.append('g').attr('class', 'nv-focusWrap');\n\t\n\t            // Legend\n\t            if (!showLegend) {\n\t                g.select('.nv-legendWrap').selectAll('*').remove();\n\t            } else {\n\t                var legendWidth = (showControls && legendPosition === 'top') ? availableWidth - controlWidth : availableWidth;\n\t\n\t                legend.width(legendWidth);\n\t                g.select('.nv-legendWrap').datum(data).call(legend);\n\t\n\t                if (legendPosition === 'bottom') {\n\t                \t// constant from axis.js, plus some margin for better layout\n\t                \tvar xAxisHeight = (showXAxis ? 12 : 0) + 10;\n\t                   \tmargin.bottom = Math.max(legend.height() + xAxisHeight, margin.bottom);\n\t                   \tavailableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n\t                \tvar legendTop = availableHeight + xAxisHeight;\n\t                    g.select('.nv-legendWrap')\n\t                        .attr('transform', 'translate(0,' + legendTop +')');\n\t                } else if (legendPosition === 'top') {\n\t                    if (!marginTop && margin.top != legend.height()) {\n\t                        margin.top = legend.height();\n\t                        availableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n\t                    }\n\t\n\t                    g.select('.nv-legendWrap')\n\t                    \t.attr('transform', 'translate(' + (availableWidth-legendWidth) + ',' + (-margin.top) +')');\n\t                }\n\t            }\n\t\n\t            // Controls\n\t            if (!showControls) {\n\t                 g.select('.nv-controlsWrap').selectAll('*').remove();\n\t            } else {\n\t                var controlsData = [\n\t                    {\n\t                        key: controlLabels.stacked || 'Stacked',\n\t                        metaKey: 'Stacked',\n\t                        disabled: stacked.style() != 'stack',\n\t                        style: 'stack'\n\t                    },\n\t                    {\n\t                        key: controlLabels.stream || 'Stream',\n\t                        metaKey: 'Stream',\n\t                        disabled: stacked.style() != 'stream',\n\t                        style: 'stream'\n\t                    },\n\t                    {\n\t                        key: controlLabels.expanded || 'Expanded',\n\t                        metaKey: 'Expanded',\n\t                        disabled: stacked.style() != 'expand',\n\t                        style: 'expand'\n\t                    },\n\t                    {\n\t                        key: controlLabels.stack_percent || 'Stack %',\n\t                        metaKey: 'Stack_Percent',\n\t                        disabled: stacked.style() != 'stack_percent',\n\t                        style: 'stack_percent'\n\t                    }\n\t                ];\n\t\n\t                controlWidth = (controlOptions.length/3) * 260;\n\t                controlsData = controlsData.filter(function(d) {\n\t                    return controlOptions.indexOf(d.metaKey) !== -1;\n\t                });\n\t\n\t                controls\n\t                    .width( controlWidth )\n\t                    .color(['#444', '#444', '#444']);\n\t\n\t                g.select('.nv-controlsWrap')\n\t                    .datum(controlsData)\n\t                    .call(controls);\n\t\n\t                var requiredTop = Math.max(controls.height(), showLegend && (legendPosition === 'top') ? legend.height() : 0);\n\t\n\t                if ( margin.top != requiredTop ) {\n\t                    margin.top = requiredTop;\n\t                    availableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n\t                }\n\t\n\t                g.select('.nv-controlsWrap')\n\t                    .attr('transform', 'translate(0,' + (-margin.top) +')');\n\t            }\n\t\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            if (rightAlignYAxis) {\n\t                g.select(\".nv-y.nv-axis\")\n\t                    .attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n\t            }\n\t\n\t            //Set up interactive layer\n\t            if (useInteractiveGuideline) {\n\t                interactiveLayer\n\t                    .width(availableWidth)\n\t                    .height(availableHeight)\n\t                    .margin({left: margin.left, top: margin.top})\n\t                    .svgContainer(container)\n\t                    .xScale(x);\n\t                wrap.select(\".nv-interactive\").call(interactiveLayer);\n\t            }\n\t\n\t            g.select('.nv-focus .nv-background rect')\n\t                .attr('width', availableWidth)\n\t                .attr('height', availableHeight);\n\t\n\t            stacked\n\t                .width(availableWidth)\n\t                .height(availableHeight)\n\t                .color(data.map(function(d,i) {\n\t                    return d.color || color(d, i);\n\t                }).filter(function(d,i) { return !data[i].disabled; }));\n\t\n\t            var stackedWrap = g.select('.nv-focus .nv-stackedWrap')\n\t                .datum(data.filter(function(d) { return !d.disabled; }));\n\t\n\t            // Setup Axes\n\t            if (showXAxis) {\n\t                xAxis.scale(x)\n\t                    ._ticks( nv.utils.calcTicksX(availableWidth/100, data) )\n\t                    .tickSize( -availableHeight, 0);\n\t            }\n\t\n\t            if (showYAxis) {\n\t                var ticks;\n\t                if (stacked.offset() === 'wiggle') {\n\t                    ticks = 0;\n\t                }\n\t                else {\n\t                    ticks = nv.utils.calcTicksY(availableHeight/36, data);\n\t                }\n\t                yAxis.scale(y)\n\t                    ._ticks(ticks)\n\t                    .tickSize(-availableWidth, 0);\n\t            }\n\t\n\t            //============================================================\n\t            // Update Axes\n\t            //============================================================\n\t            function updateXAxis() {\n\t                if(showXAxis) {\n\t                    g.select('.nv-focus .nv-x.nv-axis')\n\t                        .attr('transform', 'translate(0,' + availableHeight + ')')\n\t                        .transition()\n\t                        .duration(duration)\n\t                        .call(xAxis)\n\t                        ;\n\t                }\n\t            }\n\t\n\t            function updateYAxis() {\n\t                if(showYAxis) {\n\t                    if (stacked.style() === 'expand' || stacked.style() === 'stack_percent') {\n\t                        var currentFormat = yAxis.tickFormat();\n\t\n\t                        if ( !oldYTickFormat || currentFormat !== percentFormatter )\n\t                            oldYTickFormat = currentFormat;\n\t\n\t                        //Forces the yAxis to use percentage in 'expand' mode.\n\t                        yAxis.tickFormat(percentFormatter);\n\t                    }\n\t                    else {\n\t                        if (oldYTickFormat) {\n\t                            yAxis.tickFormat(oldYTickFormat);\n\t                            oldYTickFormat = null;\n\t                        }\n\t                    }\n\t\n\t                    g.select('.nv-focus .nv-y.nv-axis')\n\t                    .transition().duration(0)\n\t                    .call(yAxis);\n\t                }\n\t            }\n\t\n\t            //============================================================\n\t            // Update Focus\n\t            //============================================================\n\t            if(!focusEnable) {\n\t                stackedWrap.transition().call(stacked);\n\t                updateXAxis();\n\t                updateYAxis();\n\t            } else {\n\t                focus.width(availableWidth);\n\t                g.select('.nv-focusWrap')\n\t                    .attr('transform', 'translate(0,' + ( availableHeight + margin.bottom + focus.margin().top) + ')')\n\t                    .datum(data.filter(function(d) { return !d.disabled; }))\n\t                    .call(focus);\n\t                var extent = focus.brush.empty() ? focus.xDomain() : focus.brush.extent();\n\t                if(extent !== null){\n\t                    onBrush(extent);\n\t                }\n\t            }\n\t\n\t            //============================================================\n\t            // Event Handling/Dispatching (in chart's scope)\n\t            //------------------------------------------------------------\n\t\n\t            stacked.dispatch.on('areaClick.toggle', function(e) {\n\t                if (data.filter(function(d) { return !d.disabled }).length === 1)\n\t                    data.forEach(function(d) {\n\t                        d.disabled = false;\n\t                    });\n\t                else\n\t                    data.forEach(function(d,i) {\n\t                        d.disabled = (i != e.seriesIndex);\n\t                    });\n\t\n\t                state.disabled = data.map(function(d) { return !!d.disabled });\n\t                dispatch.stateChange(state);\n\t\n\t                chart.update();\n\t            });\n\t\n\t            legend.dispatch.on('stateChange', function(newState) {\n\t                for (var key in newState)\n\t                    state[key] = newState[key];\n\t                dispatch.stateChange(state);\n\t                chart.update();\n\t            });\n\t\n\t            controls.dispatch.on('legendClick', function(d,i) {\n\t                if (!d.disabled) return;\n\t\n\t                controlsData = controlsData.map(function(s) {\n\t                    s.disabled = true;\n\t                    return s;\n\t                });\n\t                d.disabled = false;\n\t\n\t                stacked.style(d.style);\n\t\n\t\n\t                state.style = stacked.style();\n\t                dispatch.stateChange(state);\n\t\n\t                chart.update();\n\t            });\n\t\n\t            interactiveLayer.dispatch.on('elementMousemove', function(e) {\n\t                stacked.clearHighlights();\n\t                var singlePoint, pointIndex, pointXLocation, allData = [], valueSum = 0, allNullValues = true;\n\t                data\n\t                    .filter(function(series, i) {\n\t                        series.seriesIndex = i;\n\t                        return !series.disabled;\n\t                    })\n\t                    .forEach(function(series,i) {\n\t                        pointIndex = nv.interactiveBisect(series.values, e.pointXValue, chart.x());\n\t                        var point = series.values[pointIndex];\n\t                        var pointYValue = chart.y()(point, pointIndex);\n\t                        if (pointYValue != null) {\n\t                            stacked.highlightPoint(i, pointIndex, true);\n\t                        }\n\t                        if (typeof point === 'undefined') return;\n\t                        if (typeof singlePoint === 'undefined') singlePoint = point;\n\t                        if (typeof pointXLocation === 'undefined') pointXLocation = chart.xScale()(chart.x()(point,pointIndex));\n\t\n\t                        //If we are in 'expand' mode, use the stacked percent value instead of raw value.\n\t                        var tooltipValue = (stacked.style() == 'expand') ? point.display.y : chart.y()(point,pointIndex);\n\t                        allData.push({\n\t                            key: series.key,\n\t                            value: tooltipValue,\n\t                            color: color(series,series.seriesIndex),\n\t                            point: point\n\t                        });\n\t\n\t                        if (showTotalInTooltip && stacked.style() != 'expand' && tooltipValue != null) {\n\t                          valueSum += tooltipValue;\n\t                          allNullValues = false;\n\t                        };\n\t                    });\n\t\n\t                allData.reverse();\n\t\n\t                //Highlight the tooltip entry based on which stack the mouse is closest to.\n\t                if (allData.length > 2) {\n\t                    var yValue = chart.yScale().invert(e.mouseY);\n\t                    var yDistMax = Infinity, indexToHighlight = null;\n\t                    allData.forEach(function(series,i) {\n\t\n\t                        //To handle situation where the stacked area chart is negative, we need to use absolute values\n\t                        //when checking if the mouse Y value is within the stack area.\n\t                        yValue = Math.abs(yValue);\n\t                        var stackedY0 = Math.abs(series.point.display.y0);\n\t                        var stackedY = Math.abs(series.point.display.y);\n\t                        if ( yValue >= stackedY0 && yValue <= (stackedY + stackedY0))\n\t                        {\n\t                            indexToHighlight = i;\n\t                            return;\n\t                        }\n\t                    });\n\t                    if (indexToHighlight != null)\n\t                        allData[indexToHighlight].highlight = true;\n\t                }\n\t\n\t                //If we are not in 'expand' mode, add a 'Total' row to the tooltip.\n\t                if (showTotalInTooltip && stacked.style() != 'expand' && allData.length >= 2 && !allNullValues) {\n\t                    allData.push({\n\t                        key: totalLabel,\n\t                        value: valueSum,\n\t                        total: true\n\t                    });\n\t                }\n\t\n\t                var xValue = chart.x()(singlePoint,pointIndex);\n\t\n\t                var valueFormatter = interactiveLayer.tooltip.valueFormatter();\n\t                // Keeps track of the tooltip valueFormatter if the chart changes to expanded view\n\t                if (stacked.style() === 'expand' || stacked.style() === 'stack_percent') {\n\t                    if ( !oldValueFormatter ) {\n\t                        oldValueFormatter = valueFormatter;\n\t                    }\n\t                    //Forces the tooltip to use percentage in 'expand' mode.\n\t                    valueFormatter = d3.format(\".1%\");\n\t                }\n\t                else {\n\t                    if (oldValueFormatter) {\n\t                        valueFormatter = oldValueFormatter;\n\t                        oldValueFormatter = null;\n\t                    }\n\t                }\n\t\n\t                interactiveLayer.tooltip\n\t                    .valueFormatter(valueFormatter)\n\t                    .data(\n\t                    {\n\t                        value: xValue,\n\t                        series: allData\n\t                    }\n\t                )();\n\t\n\t                interactiveLayer.renderGuideLine(pointXLocation);\n\t\n\t            });\n\t\n\t            interactiveLayer.dispatch.on(\"elementMouseout\",function(e) {\n\t                stacked.clearHighlights();\n\t            });\n\t\n\t            /* Update `main' graph on brush update. */\n\t            focus.dispatch.on(\"onBrush\", function(extent) {\n\t                onBrush(extent);\n\t            });\n\t\n\t            // Update chart from a state object passed to event handler\n\t            dispatch.on('changeState', function(e) {\n\t\n\t                if (typeof e.disabled !== 'undefined' && data.length === e.disabled.length) {\n\t                    data.forEach(function(series,i) {\n\t                        series.disabled = e.disabled[i];\n\t                    });\n\t\n\t                    state.disabled = e.disabled;\n\t                }\n\t\n\t                if (typeof e.style !== 'undefined') {\n\t                    stacked.style(e.style);\n\t                    style = e.style;\n\t                }\n\t\n\t                chart.update();\n\t            });\n\t\n\t            //============================================================\n\t            // Functions\n\t            //------------------------------------------------------------\n\t\n\t            function onBrush(extent) {\n\t                // Update Main (Focus)\n\t                var stackedWrap = g.select('.nv-focus .nv-stackedWrap')\n\t                    .datum(\n\t                    data.filter(function(d) { return !d.disabled; })\n\t                        .map(function(d,i) {\n\t                            return {\n\t                                key: d.key,\n\t                                area: d.area,\n\t                                classed: d.classed,\n\t                                values: d.values.filter(function(d,i) {\n\t                                    return stacked.x()(d,i) >= extent[0] && stacked.x()(d,i) <= extent[1];\n\t                                }),\n\t                                disableTooltip: d.disableTooltip\n\t                            };\n\t                        })\n\t                );\n\t                stackedWrap.transition().duration(duration).call(stacked);\n\t\n\t                // Update Main (Focus) Axes\n\t                updateXAxis();\n\t                updateYAxis();\n\t            }\n\t\n\t        });\n\t\n\t        renderWatch.renderEnd('stacked Area chart immediate');\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Event Handling/Dispatching (out of chart's scope)\n\t    //------------------------------------------------------------\n\t\n\t    stacked.dispatch.on('elementMouseover.tooltip', function(evt) {\n\t        evt.point['x'] = stacked.x()(evt.point);\n\t        evt.point['y'] = stacked.y()(evt.point);\n\t        tooltip.data(evt).hidden(false);\n\t    });\n\t\n\t    stacked.dispatch.on('elementMouseout.tooltip', function(evt) {\n\t        tooltip.hidden(true)\n\t    });\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    // expose chart's sub-components\n\t    chart.dispatch = dispatch;\n\t    chart.stacked = stacked;\n\t    chart.legend = legend;\n\t    chart.controls = controls;\n\t    chart.xAxis = xAxis;\n\t    chart.x2Axis = focus.xAxis;\n\t    chart.yAxis = yAxis;\n\t    chart.y2Axis = focus.yAxis;\n\t    chart.interactiveLayer = interactiveLayer;\n\t    chart.tooltip = tooltip;\n\t    chart.focus = focus;\n\t\n\t    chart.dispatch = dispatch;\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:      {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:     {get: function(){return height;}, set: function(_){height=_;}},\n\t        showLegend: {get: function(){return showLegend;}, set: function(_){showLegend=_;}},\n\t        legendPosition: {get: function(){return legendPosition;}, set: function(_){legendPosition=_;}},\n\t        showXAxis:      {get: function(){return showXAxis;}, set: function(_){showXAxis=_;}},\n\t        showYAxis:    {get: function(){return showYAxis;}, set: function(_){showYAxis=_;}},\n\t        defaultState:    {get: function(){return defaultState;}, set: function(_){defaultState=_;}},\n\t        noData:    {get: function(){return noData;}, set: function(_){noData=_;}},\n\t        showControls:    {get: function(){return showControls;}, set: function(_){showControls=_;}},\n\t        controlLabels:    {get: function(){return controlLabels;}, set: function(_){controlLabels=_;}},\n\t        controlOptions:    {get: function(){return controlOptions;}, set: function(_){controlOptions=_;}},\n\t        showTotalInTooltip:      {get: function(){return showTotalInTooltip;}, set: function(_){showTotalInTooltip=_;}},\n\t        totalLabel:      {get: function(){return totalLabel;}, set: function(_){totalLabel=_;}},\n\t        focusEnable:    {get: function(){return focusEnable;}, set: function(_){focusEnable=_;}},\n\t        focusHeight:     {get: function(){return focus.height();}, set: function(_){focus.height(_);}},\n\t        brushExtent: {get: function(){return focus.brushExtent();}, set: function(_){focus.brushExtent(_);}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            if (_.top !== undefined) {\n\t                margin.top = _.top;\n\t                marginTop = _.top;\n\t            }\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }},\n\t        focusMargin: {get: function(){return focus.margin}, set: function(_){\n\t            focus.margin.top    = _.top    !== undefined ? _.top    : focus.margin.top;\n\t            focus.margin.right  = _.right  !== undefined ? _.right  : focus.margin.right;\n\t            focus.margin.bottom = _.bottom !== undefined ? _.bottom : focus.margin.bottom;\n\t            focus.margin.left   = _.left   !== undefined ? _.left   : focus.margin.left;\n\t        }},\n\t        duration: {get: function(){return duration;}, set: function(_){\n\t            duration = _;\n\t            renderWatch.reset(duration);\n\t            stacked.duration(duration);\n\t            xAxis.duration(duration);\n\t            yAxis.duration(duration);\n\t        }},\n\t        color:  {get: function(){return color;}, set: function(_){\n\t            color = nv.utils.getColor(_);\n\t            legend.color(color);\n\t            stacked.color(color);\n\t            focus.color(color);\n\t        }},\n\t        x: {get: function(){return stacked.x();}, set: function(_){\n\t            stacked.x(_);\n\t            focus.x(_);\n\t        }},\n\t        y: {get: function(){return stacked.y();}, set: function(_){\n\t            stacked.y(_);\n\t            focus.y(_);\n\t        }},\n\t        rightAlignYAxis: {get: function(){return rightAlignYAxis;}, set: function(_){\n\t            rightAlignYAxis = _;\n\t            yAxis.orient( rightAlignYAxis ? 'right' : 'left');\n\t        }},\n\t        useInteractiveGuideline: {get: function(){return useInteractiveGuideline;}, set: function(_){\n\t            useInteractiveGuideline = !!_;\n\t            chart.interactive(!_);\n\t            chart.useVoronoi(!_);\n\t            stacked.scatter.interactive(!_);\n\t        }}\n\t    });\n\t\n\t    nv.utils.inheritOptions(chart, stacked);\n\t    nv.utils.initOptions(chart);\n\t\n\t    return chart;\n\t};\n\t\n\tnv.models.stackedAreaWithFocusChart = function() {\n\t  return nv.models.stackedAreaChart()\n\t    .margin({ bottom: 30 })\n\t    .focusEnable( true );\n\t};\n\t// based on http://bl.ocks.org/kerryrodden/477c1bfb081b783f80ad\n\tnv.models.sunburst = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n\t        , width = 600\n\t        , height = 600\n\t        , mode = \"count\"\n\t        , modes = {count: function(d) { return 1; }, value: function(d) { return d.value || d.size }, size: function(d) { return d.value || d.size }}\n\t        , id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n\t        , container = null\n\t        , color = nv.utils.defaultColor()\n\t        , showLabels = false\n\t        , labelFormat = function(d){if(mode === 'count'){return d.name + ' #' + d.value}else{return d.name + ' ' + (d.value || d.size)}}\n\t        , labelThreshold = 0.02\n\t        , sort = function(d1, d2){return d1.name > d2.name;}\n\t        , key = function(d,i){return d.name;}\n\t        , groupColorByParent = true\n\t        , duration = 500\n\t        , dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMousemove', 'elementMouseover', 'elementMouseout', 'renderEnd');\n\t\n\t    //============================================================\n\t    // aux functions and setup\n\t    //------------------------------------------------------------\n\t\n\t    var x = d3.scale.linear().range([0, 2 * Math.PI]);\n\t    var y = d3.scale.sqrt();\n\t\n\t    var partition = d3.layout.partition().sort(sort);\n\t\n\t    var node, availableWidth, availableHeight, radius;\n\t    var prevPositions = {};\n\t\n\t    var arc = d3.svg.arc()\n\t        .startAngle(function(d) {return Math.max(0, Math.min(2 * Math.PI, x(d.x))) })\n\t        .endAngle(function(d) {return Math.max(0, Math.min(2 * Math.PI, x(d.x + d.dx))) })\n\t        .innerRadius(function(d) {return Math.max(0, y(d.y)) })\n\t        .outerRadius(function(d) {return Math.max(0, y(d.y + d.dy)) });\n\t\n\t    function rotationToAvoidUpsideDown(d) {\n\t        var centerAngle = computeCenterAngle(d);\n\t        if(centerAngle > 90){\n\t            return 180;\n\t        }\n\t        else {\n\t            return 0;\n\t        }\n\t    }\n\t\n\t    function computeCenterAngle(d) {\n\t        var startAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x)));\n\t        var endAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x + d.dx)));\n\t        var centerAngle = (((startAngle + endAngle) / 2) * (180 / Math.PI)) - 90;\n\t        return centerAngle;\n\t    }\n\t\n\t    function computeNodePercentage(d) {\n\t        var startAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x)));\n\t        var endAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x + d.dx)));\n\t        return (endAngle - startAngle) / (2 * Math.PI);\n\t    }\n\t\n\t    function labelThresholdMatched(d) {\n\t        var startAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x)));\n\t        var endAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x + d.dx)));\n\t\n\t        var size = endAngle - startAngle;\n\t        return size > labelThreshold;\n\t    }\n\t\n\t    // When zooming: interpolate the scales.\n\t    function arcTweenZoom(e,i) {\n\t        var xd = d3.interpolate(x.domain(), [node.x, node.x + node.dx]),\n\t        yd = d3.interpolate(y.domain(), [node.y, 1]),\n\t        yr = d3.interpolate(y.range(), [node.y ? 20 : 0, radius]);\n\t\n\t        if (i === 0) {\n\t            return function() {return arc(e);}\n\t        }\n\t        else {\n\t            return function (t) {\n\t                x.domain(xd(t));\n\t                y.domain(yd(t)).range(yr(t));\n\t                return arc(e);\n\t            }\n\t        };\n\t    }\n\t\n\t    function arcTweenUpdate(d) {\n\t        var ipo = d3.interpolate({x: d.x0, dx: d.dx0, y: d.y0, dy: d.dy0}, d);\n\t\n\t        return function (t) {\n\t            var b = ipo(t);\n\t\n\t            d.x0 = b.x;\n\t            d.dx0 = b.dx;\n\t            d.y0 = b.y;\n\t            d.dy0 = b.dy;\n\t\n\t            return arc(b);\n\t        };\n\t    }\n\t\n\t    function updatePrevPosition(node) {\n\t        var k = key(node);\n\t        if(! prevPositions[k]) prevPositions[k] = {};\n\t        var pP = prevPositions[k];\n\t        pP.dx = node.dx;\n\t        pP.x = node.x;\n\t        pP.dy = node.dy;\n\t        pP.y = node.y;\n\t    }\n\t\n\t    function storeRetrievePrevPositions(nodes) {\n\t        nodes.forEach(function(n){\n\t            var k = key(n);\n\t            var pP = prevPositions[k];\n\t            //console.log(k,n,pP);\n\t            if( pP ){\n\t                n.dx0 = pP.dx;\n\t                n.x0 = pP.x;\n\t                n.dy0 = pP.dy;\n\t                n.y0 = pP.y;\n\t            }\n\t            else {\n\t                n.dx0 = n.dx;\n\t                n.x0 = n.x;\n\t                n.dy0 = n.dy;\n\t                n.y0 = n.y;\n\t            }\n\t            updatePrevPosition(n);\n\t        });\n\t    }\n\t\n\t    function zoomClick(d) {\n\t        var labels = container.selectAll('text')\n\t        var path = container.selectAll('path')\n\t\n\t        // fade out all text elements\n\t        labels.transition().attr(\"opacity\",0);\n\t\n\t        // to allow reference to the new center node\n\t        node = d;\n\t\n\t        path.transition()\n\t            .duration(duration)\n\t            .attrTween(\"d\", arcTweenZoom)\n\t            .each('end', function(e) {\n\t                // partially taken from here: http://bl.ocks.org/metmajer/5480307\n\t                // check if the animated element's data e lies within the visible angle span given in d\n\t                if(e.x >= d.x && e.x < (d.x + d.dx) ){\n\t                    if(e.depth >= d.depth){\n\t                        // get a selection of the associated text element\n\t                        var parentNode = d3.select(this.parentNode);\n\t                        var arcText = parentNode.select('text');\n\t\n\t                        // fade in the text element and recalculate positions\n\t                        arcText.transition().duration(duration)\n\t                        .text( function(e){return labelFormat(e) })\n\t                        .attr(\"opacity\", function(d){\n\t                            if(labelThresholdMatched(d)) {\n\t                                return 1;\n\t                            }\n\t                            else {\n\t                                return 0;\n\t                            }\n\t                        })\n\t                        .attr(\"transform\", function() {\n\t                            var width = this.getBBox().width;\n\t                            if(e.depth === 0)\n\t                            return \"translate(\" + (width / 2 * - 1) + \",0)\";\n\t                            else if(e.depth === d.depth){\n\t                                return \"translate(\" + (y(e.y) + 5) + \",0)\";\n\t                            }\n\t                            else {\n\t                                var centerAngle = computeCenterAngle(e);\n\t                                var rotation = rotationToAvoidUpsideDown(e);\n\t                                if (rotation === 0) {\n\t                                    return 'rotate('+ centerAngle +')translate(' + (y(e.y) + 5) + ',0)';\n\t                                }\n\t                                else {\n\t                                    return 'rotate('+ centerAngle +')translate(' + (y(e.y) + width + 5) + ',0)rotate(' + rotation + ')';\n\t                                }\n\t                            }\n\t                        });\n\t                    }\n\t                }\n\t            })\n\t    }\n\t\n\t    //============================================================\n\t    // chart function\n\t    //------------------------------------------------------------\n\t    var renderWatch = nv.utils.renderWatch(dispatch);\n\t\n\t    function chart(selection) {\n\t        renderWatch.reset();\n\t\n\t        selection.each(function(data) {\n\t            container = d3.select(this);\n\t            availableWidth = nv.utils.availableWidth(width, container, margin);\n\t            availableHeight = nv.utils.availableHeight(height, container, margin);\n\t            radius = Math.min(availableWidth, availableHeight) / 2;\n\t\n\t            y.range([0, radius]);\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = container.select('g.nvd3.nv-wrap.nv-sunburst');\n\t            if( !wrap[0][0] ) {\n\t                wrap = container.append('g')\n\t                    .attr('class', 'nvd3 nv-wrap nv-sunburst nv-chart-' + id)\n\t                    .attr('transform', 'translate(' + ((availableWidth / 2) + margin.left + margin.right) + ',' + ((availableHeight / 2) + margin.top + margin.bottom) + ')');\n\t            } else {\n\t                wrap.attr('transform', 'translate(' + ((availableWidth / 2) + margin.left + margin.right) + ',' + ((availableHeight / 2) + margin.top + margin.bottom) + ')');\n\t            }\n\t\n\t            container.on('click', function (d, i) {\n\t                dispatch.chartClick({\n\t                    data: d,\n\t                    index: i,\n\t                    pos: d3.event,\n\t                    id: id\n\t                });\n\t            });\n\t\n\t            partition.value(modes[mode] || modes[\"count\"]);\n\t\n\t            //reverse the drawing order so that the labels of inner\n\t            //arcs are drawn on top of the outer arcs.\n\t            var nodes = partition.nodes(data[0]).reverse()\n\t\n\t            storeRetrievePrevPositions(nodes);\n\t            var cG = wrap.selectAll('.arc-container').data(nodes, key)\n\t\n\t            //handle new datapoints\n\t            var cGE = cG.enter()\n\t                .append(\"g\")\n\t                .attr(\"class\",'arc-container')\n\t\n\t            cGE.append(\"path\")\n\t                .attr(\"d\", arc)\n\t                .style(\"fill\", function (d) {\n\t                    if (d.color) {\n\t                        return d.color;\n\t                    }\n\t                    else if (groupColorByParent) {\n\t                        return color((d.children ? d : d.parent).name);\n\t                    }\n\t                    else {\n\t                        return color(d.name);\n\t                    }\n\t                })\n\t                .style(\"stroke\", \"#FFF\")\n\t                .on(\"click\", function(d,i){\n\t                    zoomClick(d);\n\t                    dispatch.elementClick({\n\t                        data: d,\n\t                        index: i\n\t                    })\n\t                })\n\t                .on('mouseover', function(d,i){\n\t                    d3.select(this).classed('hover', true).style('opacity', 0.8);\n\t                    dispatch.elementMouseover({\n\t                        data: d,\n\t                        color: d3.select(this).style(\"fill\"),\n\t                        percent: computeNodePercentage(d)\n\t                    });\n\t                })\n\t                .on('mouseout', function(d,i){\n\t                    d3.select(this).classed('hover', false).style('opacity', 1);\n\t                    dispatch.elementMouseout({\n\t                        data: d\n\t                    });\n\t                })\n\t                .on('mousemove', function(d,i){\n\t                    dispatch.elementMousemove({\n\t                        data: d\n\t                    });\n\t                });\n\t\n\t            ///Iterating via each and selecting based on the this\n\t            ///makes it work ... a cG.selectAll('path') doesn't.\n\t            ///Without iteration the data (in the element) didn't update.\n\t            cG.each(function(d){\n\t                d3.select(this).select('path')\n\t                    .transition()\n\t                    .duration(duration)\n\t                    .attrTween('d', arcTweenUpdate);\n\t            });\n\t\n\t            if(showLabels){\n\t                //remove labels first and add them back\n\t                cG.selectAll('text').remove();\n\t\n\t                //this way labels are on top of newly added arcs\n\t                cG.append('text')\n\t                    .text( function(e){ return labelFormat(e)})\n\t                    .transition()\n\t                    .duration(duration)\n\t                    .attr(\"opacity\", function(d){\n\t                        if(labelThresholdMatched(d)) {\n\t                            return 1;\n\t                        }\n\t                        else {\n\t                            return 0;\n\t                        }\n\t                    })\n\t                    .attr(\"transform\", function(d) {\n\t                        var width = this.getBBox().width;\n\t                        if(d.depth === 0){\n\t                            return \"rotate(0)translate(\" + (width / 2 * -1) + \",0)\";\n\t                        }\n\t                        else {\n\t                            var centerAngle = computeCenterAngle(d);\n\t                            var rotation = rotationToAvoidUpsideDown(d);\n\t                            if (rotation === 0) {\n\t                                return 'rotate('+ centerAngle +')translate(' + (y(d.y) + 5) + ',0)';\n\t                            }\n\t                            else {\n\t                                return 'rotate('+ centerAngle +')translate(' + (y(d.y) + width + 5) + ',0)rotate(' + rotation + ')';\n\t                            }\n\t                        }\n\t                    });\n\t            }\n\t\n\t            //zoom out to the center when the data is updated.\n\t            zoomClick(nodes[nodes.length - 1])\n\t\n\t\n\t            //remove unmatched elements ...\n\t            cG.exit()\n\t                .transition()\n\t                .duration(duration)\n\t                .attr('opacity',0)\n\t                .each('end',function(d){\n\t                    var k = key(d);\n\t                    prevPositions[k] = undefined;\n\t                })\n\t                .remove();\n\t        });\n\t\n\t\n\t        renderWatch.renderEnd('sunburst immediate');\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    chart.dispatch = dispatch;\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:      {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:     {get: function(){return height;}, set: function(_){height=_;}},\n\t        mode:       {get: function(){return mode;}, set: function(_){mode=_;}},\n\t        id:         {get: function(){return id;}, set: function(_){id=_;}},\n\t        duration:   {get: function(){return duration;}, set: function(_){duration=_;}},\n\t        groupColorByParent: {get: function(){return groupColorByParent;}, set: function(_){groupColorByParent=!!_;}},\n\t        showLabels: {get: function(){return showLabels;}, set: function(_){showLabels=!!_}},\n\t        labelFormat: {get: function(){return labelFormat;}, set: function(_){labelFormat=_}},\n\t        labelThreshold: {get: function(){return labelThreshold;}, set: function(_){labelThreshold=_}},\n\t        sort: {get: function(){return sort;}, set: function(_){sort=_}},\n\t        key: {get: function(){return key;}, set: function(_){key=_}},\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    = _.top    != undefined ? _.top    : margin.top;\n\t            margin.right  = _.right  != undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom != undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   != undefined ? _.left   : margin.left;\n\t        }},\n\t        color: {get: function(){return color;}, set: function(_){\n\t            color=nv.utils.getColor(_);\n\t        }}\n\t    });\n\t\n\t    nv.utils.initOptions(chart);\n\t    return chart;\n\t};\n\tnv.models.sunburstChart = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var sunburst = nv.models.sunburst();\n\t    var tooltip = nv.models.tooltip();\n\t\n\t    var margin = {top: 30, right: 20, bottom: 20, left: 20}\n\t        , width = null\n\t        , height = null\n\t        , color = nv.utils.defaultColor()\n\t        , showTooltipPercent = false\n\t        , id = Math.round(Math.random() * 100000)\n\t        , defaultState = null\n\t        , noData = null\n\t        , duration = 250\n\t        , dispatch = d3.dispatch('stateChange', 'changeState','renderEnd');\n\t\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    var renderWatch = nv.utils.renderWatch(dispatch);\n\t\n\t    tooltip\n\t        .duration(0)\n\t        .headerEnabled(false)\n\t        .valueFormatter(function(d){return d;});\n\t\n\t    //============================================================\n\t    // Chart function\n\t    //------------------------------------------------------------\n\t\n\t    function chart(selection) {\n\t        renderWatch.reset();\n\t        renderWatch.models(sunburst);\n\t\n\t        selection.each(function(data) {\n\t            var container = d3.select(this);\n\t\n\t            nv.utils.initSVG(container);\n\t\n\t            var availableWidth = nv.utils.availableWidth(width, container, margin);\n\t            var availableHeight = nv.utils.availableHeight(height, container, margin);\n\t\n\t            chart.update = function() {\n\t                if (duration === 0) {\n\t                    container.call(chart);\n\t                } else {\n\t                    container.transition().duration(duration).call(chart);\n\t                }\n\t            };\n\t            chart.container = container;\n\t\n\t            // Display No Data message if there's nothing to show.\n\t            if (!data || !data.length) {\n\t                nv.utils.noData(chart, container);\n\t                return chart;\n\t            } else {\n\t                container.selectAll('.nv-noData').remove();\n\t            }\n\t\n\t            sunburst.width(availableWidth).height(availableHeight).margin(margin);\n\t            container.call(sunburst);\n\t        });\n\t\n\t        renderWatch.renderEnd('sunburstChart immediate');\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Event Handling/Dispatching (out of chart's scope)\n\t    //------------------------------------------------------------\n\t\n\t    sunburst.dispatch.on('elementMouseover.tooltip', function(evt) {\n\t        evt.series = {\n\t            key: evt.data.name,\n\t            value: (evt.data.value || evt.data.size),\n\t            color: evt.color,\n\t            percent: evt.percent\n\t        };\n\t        if (!showTooltipPercent) {\n\t            delete evt.percent;\n\t            delete evt.series.percent;\n\t        }\n\t        tooltip.data(evt).hidden(false);\n\t    });\n\t\n\t    sunburst.dispatch.on('elementMouseout.tooltip', function(evt) {\n\t        tooltip.hidden(true);\n\t    });\n\t\n\t    sunburst.dispatch.on('elementMousemove.tooltip', function(evt) {\n\t        tooltip();\n\t    });\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    // expose chart's sub-components\n\t    chart.dispatch = dispatch;\n\t    chart.sunburst = sunburst;\n\t    chart.tooltip = tooltip;\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    // use Object get/set functionality to map between vars and chart functions\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        noData:             {get: function(){return noData;},               set: function(_){noData=_;}},\n\t        defaultState:       {get: function(){return defaultState;},         set: function(_){defaultState=_;}},\n\t        showTooltipPercent: {get: function(){return showTooltipPercent;},   set: function(_){showTooltipPercent=_;}},\n\t\n\t        // options that require extra logic in the setter\n\t        color: {get: function(){return color;}, set: function(_){\n\t            color = _;\n\t            sunburst.color(color);\n\t        }},\n\t        duration: {get: function(){return duration;}, set: function(_){\n\t            duration = _;\n\t            renderWatch.reset(duration);\n\t            sunburst.duration(duration);\n\t        }},\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t            sunburst.margin(margin);\n\t        }}\n\t    });\n\t    nv.utils.inheritOptions(chart, sunburst);\n\t    nv.utils.initOptions(chart);\n\t    return chart;\n\t\n\t};\n\t\n\tnv.version = \"1.8.5\";\n\t})();\n\t//# sourceMappingURL=nv.d3.js.map\n\n/***/ },\n/* 457 */,\n/* 458 */,\n/* 459 */,\n/* 460 */,\n/* 461 */,\n/* 462 */,\n/* 463 */,\n/* 464 */,\n/* 465 */,\n/* 466 */,\n/* 467 */,\n/* 468 */,\n/* 469 */,\n/* 470 */,\n/* 471 */,\n/* 472 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t!function(t,e){ true?module.exports=e(__webpack_require__(1),__webpack_require__(56),__webpack_require__(456)):\"function\"==typeof define&&define.amd?define([\"react\",\"d3\",\"nvd3\"],e):\"object\"==typeof exports?exports.NVD3Chart=e(require(\"react\"),require(\"d3\"),require(\"nvd3\")):t.NVD3Chart=e(t.React,t.d3,t.nv)}(this,function(t,e,n){return function(t){function e(r){if(n[r])return n[r].exports;var o=n[r]={exports:{},id:r,loaded:!1};return t[r].call(o.exports,o,o.exports,e),o.loaded=!0,o.exports}var n={};return e.m=t,e.c=n,e.p=\"\",e(0)}([function(t,e,n){\"use strict\";function r(t){return t&&t.__esModule?t:{\"default\":t}}Object.defineProperty(e,\"__esModule\",{value:!0});var o=n(1),i=r(o),u=n(2),c=r(u),s=n(17),a=r(s),f=n(21),p=r(f),l=n(22),d=r(l),h=n(25),y=r(h),v=n(48),b=r(v),g=n(55),m=r(g),_=n(56),x=r(_),O=n(57),j=r(O),w=n(58),S=[\"x\",\"y\",\"type\",\"datum\",\"configure\"],P=[\"width\",\"height\"],E=\"margin\",M=\"containerStyle\",k=\"renderStart\",C=\"renderEnd\",D=\"ready\",F=function(t){function e(){return(0,p[\"default\"])(this,e),(0,y[\"default\"])(this,(0,a[\"default\"])(e).apply(this,arguments))}return(0,b[\"default\"])(e,t),(0,d[\"default\"])(e,[{key:\"componentDidMount\",value:function(){var t=this;j[\"default\"].addGraph(this.renderChart.bind(this),function(e){(0,w.isCallable)(t.props.ready)&&t.props.ready(e,D)})}},{key:\"componentDidUpdate\",value:function(){this.renderChart()}},{key:\"componentWillUnmount\",value:function(){this.resizeHandler&&this.resizeHandler.clear()}},{key:\"renderChart\",value:function(){var t=void 0;switch(this.chart=this.chart&&!this.rendering?this.chart:j[\"default\"].models[this.props.type](),(0,w.isCallable)(this.props.renderStart)&&this.props.renderStart(this.chart,k),this.parsedProps=(0,w.bindFunctions)(this.props,this.props.context),this.chart.x&&this.chart.x((0,w.getValueFunction)(this.parsedProps.x,\"x\")),this.chart.y&&this.chart.y((0,w.getValueFunction)(this.parsedProps.y,\"y\")),this.props.margin&&this.chart.margin(this.options(E,w.pick).margin||(0,w.propsByPrefix)(\"margin\",this.props)||{}),this.configureComponents(this.chart,this.options(S.concat(M),w.without)),!this.props.configure||this.props.configure(this.chart),this.selection=x[\"default\"].select(this.refs.svg).datum(this.props.datum).call(this.chart),this.resizeHandler||(this.resizeHandler=j[\"default\"].utils.windowResize(this.chart.update)),this.props.type){case\"pieChart\":t=this.chart.pie.dispatch;break;case\"lineChart\":t=this.chart.lines.dispatch;break;default:t=this.chart.dispatch}return t.renderEnd&&t.on(\"renderEnd\",this.renderEnd.bind(this)),this.rendering=!0,this.chart}},{key:\"renderEnd\",value:function(t){(0,w.isCallable)(this.props.renderEnd)&&this.props.renderEnd(this.chart,C),this.rendering=!1}},{key:\"configureComponents\",value:function(t,e){for(var n in e){var r=e[n];t&&((0,w.isPlainObject)(r)?this.configureComponents(t[n],r):\"function\"==typeof t[n]&&t[n](r))}}},{key:\"options\",value:function(t,e){var n=this.parsedProps.options||this.parsedProps||this.props.chartOptions;return(e=e||w.pick)(n,t)}},{key:\"render\",value:function(){var t=(0,w.pick)(this.props,P),e=(0,c[\"default\"])({},t,this.props.containerStyle);return m[\"default\"].createElement(\"div\",{ref:\"root\",className:\"nv-chart\",style:e},m[\"default\"].createElement(\"svg\",(0,i[\"default\"])({ref:\"svg\"},t)))}}]),e}(m[\"default\"].Component);e[\"default\"]=F,t.exports=F},function(t,e,n){\"use strict\";var r=n(2)[\"default\"];e[\"default\"]=r||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(t[r]=n[r])}return t},e.__esModule=!0},function(t,e,n){t.exports={\"default\":n(3),__esModule:!0}},function(t,e,n){n(4),t.exports=n(7).Object.assign},function(t,e,n){var r=n(5);r(r.S+r.F,\"Object\",{assign:n(10)})},function(t,e,n){var r=n(6),o=n(7),i=n(8),u=\"prototype\",c=function(t,e,n){var s,a,f,p=t&c.F,l=t&c.G,d=t&c.S,h=t&c.P,y=t&c.B,v=t&c.W,b=l?o:o[e]||(o[e]={}),g=l?r:d?r[e]:(r[e]||{})[u];l&&(n=e);for(s in n)a=!p&&g&&s in g,a&&s in b||(f=a?g[s]:n[s],b[s]=l&&\"function\"!=typeof g[s]?n[s]:y&&a?i(f,r):v&&g[s]==f?function(t){var e=function(e){return this instanceof t?new t(e):t(e)};return e[u]=t[u],e}(f):h&&\"function\"==typeof f?i(Function.call,f):f,h&&((b[u]||(b[u]={}))[s]=f))};c.F=1,c.G=2,c.S=4,c.P=8,c.B=16,c.W=32,t.exports=c},function(t,e){var n=t.exports=\"undefined\"!=typeof window&&window.Math==Math?window:\"undefined\"!=typeof self&&self.Math==Math?self:Function(\"return this\")();\"number\"==typeof __g&&(__g=n)},function(t,e){var n=t.exports={version:\"1.2.6\"};\"number\"==typeof __e&&(__e=n)},function(t,e,n){var r=n(9);t.exports=function(t,e,n){if(r(t),void 0===e)return t;switch(n){case 1:return function(n){return t.call(e,n)};case 2:return function(n,r){return t.call(e,n,r)};case 3:return function(n,r,o){return t.call(e,n,r,o)}}return function(){return t.apply(e,arguments)}}},function(t,e){t.exports=function(t){if(\"function\"!=typeof t)throw TypeError(t+\" is not a function!\");return t}},function(t,e,n){var r=n(11),o=n(12),i=n(14);t.exports=n(16)(function(){var t=Object.assign,e={},n={},r=Symbol(),o=\"abcdefghijklmnopqrst\";return e[r]=7,o.split(\"\").forEach(function(t){n[t]=t}),7!=t({},e)[r]||Object.keys(t({},n)).join(\"\")!=o})?function(t,e){for(var n=o(t),u=arguments,c=u.length,s=1,a=r.getKeys,f=r.getSymbols,p=r.isEnum;c>s;)for(var l,d=i(u[s++]),h=f?a(d).concat(f(d)):a(d),y=h.length,v=0;y>v;)p.call(d,l=h[v++])&&(n[l]=d[l]);return n}:Object.assign},function(t,e){var n=Object;t.exports={create:n.create,getProto:n.getPrototypeOf,isEnum:{}.propertyIsEnumerable,getDesc:n.getOwnPropertyDescriptor,setDesc:n.defineProperty,setDescs:n.defineProperties,getKeys:n.keys,getNames:n.getOwnPropertyNames,getSymbols:n.getOwnPropertySymbols,each:[].forEach}},function(t,e,n){var r=n(13);t.exports=function(t){return Object(r(t))}},function(t,e){t.exports=function(t){if(void 0==t)throw TypeError(\"Can't call method on  \"+t);return t}},function(t,e,n){var r=n(15);t.exports=Object(\"z\").propertyIsEnumerable(0)?Object:function(t){return\"String\"==r(t)?t.split(\"\"):Object(t)}},function(t,e){var n={}.toString;t.exports=function(t){return n.call(t).slice(8,-1)}},function(t,e){t.exports=function(t){try{return!!t()}catch(e){return!0}}},function(t,e,n){t.exports={\"default\":n(18),__esModule:!0}},function(t,e,n){n(19),t.exports=n(7).Object.getPrototypeOf},function(t,e,n){var r=n(12);n(20)(\"getPrototypeOf\",function(t){return function(e){return t(r(e))}})},function(t,e,n){var r=n(5),o=n(7),i=n(16);t.exports=function(t,e){var n=(o.Object||{})[t]||Object[t],u={};u[t]=e(n),r(r.S+r.F*i(function(){n(1)}),\"Object\",u)}},function(t,e){\"use strict\";e[\"default\"]=function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")},e.__esModule=!0},function(t,e,n){\"use strict\";function r(t){return t&&t.__esModule?t:{\"default\":t}}var o=n(23),i=r(o);e[\"default\"]=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),(0,i[\"default\"])(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}(),e.__esModule=!0},function(t,e,n){t.exports={\"default\":n(24),__esModule:!0}},function(t,e,n){var r=n(11);t.exports=function(t,e,n){return r.setDesc(t,e,n)}},function(t,e,n){\"use strict\";function r(t){return t&&t.__esModule?t:{\"default\":t}}var o=n(26),i=r(o);e[\"default\"]=function(t,e){if(!t)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!e||\"object\"!==(\"undefined\"==typeof e?\"undefined\":(0,i[\"default\"])(e))&&\"function\"!=typeof e?t:e},e.__esModule=!0},function(t,e,n){\"use strict\";var r=n(27)[\"default\"];e[\"default\"]=function(t){return t&&t.constructor===r?\"symbol\":typeof t},e.__esModule=!0},function(t,e,n){t.exports={\"default\":n(28),__esModule:!0}},function(t,e,n){n(29),n(47),t.exports=n(7).Symbol},function(t,e,n){\"use strict\";var r=n(11),o=n(6),i=n(30),u=n(31),c=n(5),s=n(32),a=n(16),f=n(35),p=n(36),l=n(38),d=n(37),h=n(39),y=n(41),v=n(42),b=n(43),g=n(44),m=n(40),_=n(34),x=r.getDesc,O=r.setDesc,j=r.create,w=y.get,S=o.Symbol,P=o.JSON,E=P&&P.stringify,M=!1,k=d(\"_hidden\"),C=r.isEnum,D=f(\"symbol-registry\"),F=f(\"symbols\"),N=\"function\"==typeof S,T=Object.prototype,q=u&&a(function(){return 7!=j(O({},\"a\",{get:function(){return O(this,\"a\",{value:7}).a}})).a})?function(t,e,n){var r=x(T,e);r&&delete T[e],O(t,e,n),r&&t!==T&&O(T,e,r)}:O,z=function(t){var e=F[t]=j(S.prototype);return e._k=t,u&&M&&q(T,t,{configurable:!0,set:function(e){i(this,k)&&i(this[k],t)&&(this[k][t]=!1),q(this,t,_(1,e))}}),e},A=function(t){return\"symbol\"==typeof t},V=function(t,e,n){return n&&i(F,e)?(n.enumerable?(i(t,k)&&t[k][e]&&(t[k][e]=!1),n=j(n,{enumerable:_(0,!1)})):(i(t,k)||O(t,k,_(1,{})),t[k][e]=!0),q(t,e,n)):O(t,e,n)},W=function(t,e){g(t);for(var n,r=v(e=m(e)),o=0,i=r.length;i>o;)V(t,n=r[o++],e[n]);return t},B=function(t,e){return void 0===e?j(t):W(j(t),e)},G=function(t){var e=C.call(this,t);return e||!i(this,t)||!i(F,t)||i(this,k)&&this[k][t]?e:!0},H=function(t,e){var n=x(t=m(t),e);return!n||!i(F,e)||i(t,k)&&t[k][e]||(n.enumerable=!0),n},I=function(t){for(var e,n=w(m(t)),r=[],o=0;n.length>o;)i(F,e=n[o++])||e==k||r.push(e);return r},J=function(t){for(var e,n=w(m(t)),r=[],o=0;n.length>o;)i(F,e=n[o++])&&r.push(F[e]);return r},K=function(t){if(void 0!==t&&!A(t)){for(var e,n,r=[t],o=1,i=arguments;i.length>o;)r.push(i[o++]);return e=r[1],\"function\"==typeof e&&(n=e),(n||!b(e))&&(e=function(t,e){return n&&(e=n.call(this,t,e)),A(e)?void 0:e}),r[1]=e,E.apply(P,r)}},R=a(function(){var t=S();return\"[null]\"!=E([t])||\"{}\"!=E({a:t})||\"{}\"!=E(Object(t))});N||(S=function(){if(A(this))throw TypeError(\"Symbol is not a constructor\");return z(l(arguments.length>0?arguments[0]:void 0))},s(S.prototype,\"toString\",function(){return this._k}),A=function(t){return t instanceof S},r.create=B,r.isEnum=G,r.getDesc=H,r.setDesc=V,r.setDescs=W,r.getNames=y.get=I,r.getSymbols=J,u&&!n(46)&&s(T,\"propertyIsEnumerable\",G,!0));var U={\"for\":function(t){return i(D,t+=\"\")?D[t]:D[t]=S(t)},keyFor:function(t){return h(D,t)},useSetter:function(){M=!0},useSimple:function(){M=!1}};r.each.call(\"hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables\".split(\",\"),function(t){var e=d(t);U[t]=N?e:z(e)}),M=!0,c(c.G+c.W,{Symbol:S}),c(c.S,\"Symbol\",U),c(c.S+c.F*!N,\"Object\",{create:B,defineProperty:V,defineProperties:W,getOwnPropertyDescriptor:H,getOwnPropertyNames:I,getOwnPropertySymbols:J}),P&&c(c.S+c.F*(!N||R),\"JSON\",{stringify:K}),p(S,\"Symbol\"),p(Math,\"Math\",!0),p(o.JSON,\"JSON\",!0)},function(t,e){var n={}.hasOwnProperty;t.exports=function(t,e){return n.call(t,e)}},function(t,e,n){t.exports=!n(16)(function(){return 7!=Object.defineProperty({},\"a\",{get:function(){return 7}}).a})},function(t,e,n){t.exports=n(33)},function(t,e,n){var r=n(11),o=n(34);t.exports=n(31)?function(t,e,n){return r.setDesc(t,e,o(1,n))}:function(t,e,n){return t[e]=n,t}},function(t,e){t.exports=function(t,e){return{enumerable:!(1&t),configurable:!(2&t),writable:!(4&t),value:e}}},function(t,e,n){var r=n(6),o=\"__core-js_shared__\",i=r[o]||(r[o]={});t.exports=function(t){return i[t]||(i[t]={})}},function(t,e,n){var r=n(11).setDesc,o=n(30),i=n(37)(\"toStringTag\");t.exports=function(t,e,n){t&&!o(t=n?t:t.prototype,i)&&r(t,i,{configurable:!0,value:e})}},function(t,e,n){var r=n(35)(\"wks\"),o=n(38),i=n(6).Symbol;t.exports=function(t){return r[t]||(r[t]=i&&i[t]||(i||o)(\"Symbol.\"+t))}},function(t,e){var n=0,r=Math.random();t.exports=function(t){return\"Symbol(\".concat(void 0===t?\"\":t,\")_\",(++n+r).toString(36))}},function(t,e,n){var r=n(11),o=n(40);t.exports=function(t,e){for(var n,i=o(t),u=r.getKeys(i),c=u.length,s=0;c>s;)if(i[n=u[s++]]===e)return n}},function(t,e,n){var r=n(14),o=n(13);t.exports=function(t){return r(o(t))}},function(t,e,n){var r=n(40),o=n(11).getNames,i={}.toString,u=\"object\"==typeof window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[],c=function(t){try{return o(t)}catch(e){return u.slice()}};t.exports.get=function(t){return u&&\"[object Window]\"==i.call(t)?c(t):o(r(t))}},function(t,e,n){var r=n(11);t.exports=function(t){var e=r.getKeys(t),n=r.getSymbols;if(n)for(var o,i=n(t),u=r.isEnum,c=0;i.length>c;)u.call(t,o=i[c++])&&e.push(o);return e}},function(t,e,n){var r=n(15);t.exports=Array.isArray||function(t){return\"Array\"==r(t)}},function(t,e,n){var r=n(45);t.exports=function(t){if(!r(t))throw TypeError(t+\" is not an object!\");return t}},function(t,e){t.exports=function(t){return\"object\"==typeof t?null!==t:\"function\"==typeof t}},function(t,e){t.exports=!0},function(t,e){},function(t,e,n){\"use strict\";var r=n(49)[\"default\"],o=n(51)[\"default\"];e[\"default\"]=function(t,e){if(\"function\"!=typeof e&&null!==e)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof e);t.prototype=r(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(o?o(t,e):t.__proto__=e)},e.__esModule=!0},function(t,e,n){t.exports={\"default\":n(50),__esModule:!0}},function(t,e,n){var r=n(11);t.exports=function(t,e){return r.create(t,e)}},function(t,e,n){t.exports={\"default\":n(52),__esModule:!0}},function(t,e,n){n(53),t.exports=n(7).Object.setPrototypeOf},function(t,e,n){var r=n(5);r(r.S,\"Object\",{setPrototypeOf:n(54).set})},function(t,e,n){var r=n(11).getDesc,o=n(45),i=n(44),u=function(t,e){if(i(t),!o(e)&&null!==e)throw TypeError(e+\": can't set as prototype!\")};t.exports={set:Object.setPrototypeOf||(\"__proto__\"in{}?function(t,e,o){try{o=n(8)(Function.call,r(Object.prototype,\"__proto__\").set,2),o(t,[]),e=!(t instanceof Array)}catch(i){e=!0}return function(t,n){return u(t,n),e?t.__proto__=n:o(t,n),t}}({},!1):void 0),check:u}},function(e,n){e.exports=t},function(t,n){t.exports=e},function(t,e){t.exports=n},function(t,e,n){\"use strict\";function r(t){return t&&t.__esModule?t:{\"default\":t}}function o(t,e){return t.indexOf(e)>=0}function i(t){return function(){return!t.apply(this,arguments)}}function u(t,e,n){for(var r={},o=(0,m[\"default\"])(t),i=0,u=o.length;u>i;i++){var c=o[i],s=t[c];n(e,c)&&(r[c]=s)}return r}function c(t,e){return u(t,e,o)}function s(t,e){return u(t,e,i(o))}function a(t){if(\"object\"==(\"undefined\"==typeof t?\"undefined\":(0,b[\"default\"])(t))&&null!==t){if(\"function\"==typeof y[\"default\"]){var e=(0,y[\"default\"])(t);return e===Object.prototype||null===e}return\"[object Object]\"==Object.prototype.toString.call(t)}return!1}function f(t,e){var n,r,o;n=Array.isArray(t)?[]:{};for(o in t)r=t[o],null!=r&&(\"object\"===(\"undefined\"==typeof r?\"undefined\":(0,b[\"default\"])(r))&&null!==r&&\"function\"!==r.type?n[o]=f(r,e):\"function\"===r.type?n[o]=e[r.name]:n[o]=r);return n}function p(t,e){return\"function\"==typeof t?t:function(n){return\"undefined\"!=typeof n[t]?n[t]:n[e]}}function l(t,e){return console.warn(\"Set margin with prefixes is deprecated use an object instead\"),t+=\"-\",(0,m[\"default\"])(e).reduce(function(n,r){return r.substr(0,t.length)===t&&(n[r.replace(t,\"\")]=e[r]),n},{})}function d(t){return t&&\"function\"==typeof t}Object.defineProperty(e,\"__esModule\",{value:!0}),e.includes=o,e.negate=i,e.filterObject=u,e.pick=c,e.without=s,e.isPlainObject=a,e.bindFunctions=f,e.getValueFunction=p,e.propsByPrefix=l,e.isCallable=d;var h=n(17),y=r(h),v=n(26),b=r(v),g=n(59),m=r(g)},function(t,e,n){t.exports={\"default\":n(60),__esModule:!0}},function(t,e,n){n(61),t.exports=n(7).Object.keys},function(t,e,n){var r=n(12);n(20)(\"keys\",function(t){return function(e){return t(r(e))}})}])});\n\n/***/ }\n]));\n\n\n// WEBPACK FOOTER //\n// 0.30134bf.chunk.js","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_getNative.js\n// module id = 25\n// module chunks = 0 1","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/isObject.js\n// module id = 32\n// module chunks = 0 1","var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nmodule.exports = ListCache;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_ListCache.js\n// module id = 42\n// module chunks = 0 1","var eq = require('./eq');\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = assocIndexOf;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_assocIndexOf.js\n// module id = 43\n// module chunks = 0 1","var assignValue = require('./_assignValue'),\n    baseAssignValue = require('./_baseAssignValue');\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\nmodule.exports = copyObject;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_copyObject.js\n// module id = 44\n// module chunks = 0 1","var isKeyable = require('./_isKeyable');\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nmodule.exports = getMapData;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_getMapData.js\n// module id = 45\n// module chunks = 0 1","var getNative = require('./_getNative');\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nmodule.exports = nativeCreate;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_nativeCreate.js\n// module id = 46\n// module chunks = 0 1","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nmodule.exports = Map;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_Map.js\n// module id = 57\n// module chunks = 0 1","var Uint8Array = require('./_Uint8Array');\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\nmodule.exports = cloneArrayBuffer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_cloneArrayBuffer.js\n// module id = 59\n// module chunks = 0 1","var arrayFilter = require('./_arrayFilter'),\n    stubArray = require('./stubArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\nmodule.exports = getSymbols;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_getSymbols.js\n// module id = 61\n// module chunks = 0 1","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nmodule.exports = isPrototype;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_isPrototype.js\n// module id = 62\n// module chunks = 0 1","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/isArray.js\n// module id = 63\n// module chunks = 0 1","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/keys.js\n// module id = 65\n// module chunks = 0 1","module.exports = function(module) {\n\tif(!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tmodule.children = [];\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 87\n// module chunks = 0 1","var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_arrayLikeKeys.js\n// module id = 99\n// module chunks = 0 1","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nmodule.exports = arrayPush;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_arrayPush.js\n// module id = 100\n// module chunks = 0 1","/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\nmodule.exports = arrayReduce;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_arrayReduce.js\n// module id = 101\n// module chunks = 0 1","var baseAssignValue = require('./_baseAssignValue'),\n    eq = require('./eq');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nmodule.exports = assignValue;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_assignValue.js\n// module id = 102\n// module chunks = 0 1","var defineProperty = require('./_defineProperty');\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_baseAssignValue.js\n// module id = 103\n// module chunks = 0 1","var arrayPush = require('./_arrayPush'),\n    isArray = require('./isArray');\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nmodule.exports = baseGetAllKeys;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_baseGetAllKeys.js\n// module id = 104\n// module chunks = 0 1","var arrayPush = require('./_arrayPush'),\n    getPrototype = require('./_getPrototype'),\n    getSymbols = require('./_getSymbols'),\n    stubArray = require('./stubArray');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\nmodule.exports = getSymbolsIn;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_getSymbolsIn.js\n// module id = 106\n// module chunks = 0 1","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nmodule.exports = toSource;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_toSource.js\n// module id = 108\n// module chunks = 0 1","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nmodule.exports = eq;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/eq.js\n// module id = 109\n// module chunks = 0 1","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/isArrayLike.js\n// module id = 110\n// module chunks = 0 1","var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nmodule.exports = isBuffer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/isBuffer.js\n// module id = 111\n// module chunks = 0 1","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/isFunction.js\n// module id = 112\n// module chunks = 0 1","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/isLength.js\n// module id = 113\n// module chunks = 0 1","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeysIn = require('./_baseKeysIn'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\nmodule.exports = keysIn;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/keysIn.js\n// module id = 114\n// module chunks = 0 1","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = stubArray;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/stubArray.js\n// module id = 115\n// module chunks = 0 1","import update from 'react-addons-update';\nimport getNiceDomain from '../../utils/dataFormats/getNiceDomain';\n\n/**\n * Need to setup yDomain for NVD3 chart that requires YAXis\n * @param {Object} typeConfig Chart type config\n * @return {Boolean}\n */\nexport function shouldSetupYDomain(typeConfig) {\n  return 0 === typeConfig.dataFormat.indexOf('nvd3') &&\n    -1 !== typeConfig.modules.settings.indexOf('YAxis');\n}\n\n/**\n * add nicely rounded yDomain to chart options, if chart has a yAxis\n * @param {Object} chartOptions\n * @param {Object} typeConfig\n * @param {Object[]}  chartData\n * @return {Object} Cloned chart options object with new yDomain\n */\nexport default function applyYDomain(chartOptions, typeConfig, chartData) {\n  if (!shouldSetupYDomain(typeConfig)) {\n    return chartOptions;\n  }\n\n  let yDomain;\n  if (typeConfig.hasOwnProperty('getNiceDomain')) {\n    yDomain = typeConfig.getNiceDomain(chartData);\n  } else {\n    yDomain = getNiceDomain(typeConfig.dataFormat, chartData);\n  }\n\n  /**\n   * @todo Recalculate yDomain when series visibility is toggled by clicking on dots in the legend\n   */\n  return update(chartOptions, { yDomain: { $set: yDomain } });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/middleware/utils/applyYDomain.js","import { min, max, scale } from 'd3';\n\n/**\n * Get [min, max] array for data series in nvd3SingleSeries or nvd3MultiSeries format\n *\n * @param array series Data series\n * @param string format Data format\n * @return array Range of [min, max] for series\n */\nfunction _getSeriesDomain(series, format) {\n  const key = 'nvd3SingleSeries' === format ? 'value' : 'y';\n  const values = series.map((point) => point[key]);\n  return [min(values), max(values)];\n}\n\nfunction _getMultiSeriesDomain(series, format) {\n  const mins = [];\n  const maxs = [];\n  series.forEach((singleSeries) => {\n    const domain = _getSeriesDomain(singleSeries.values, format);\n    mins.push(domain[0]);\n    maxs.push(domain[1]);\n  });\n  return [min(mins), max(maxs)];\n}\n\nfunction _makeNice(range) {\n  return scale.linear().domain(range).nice().domain();\n}\n\n/**\n * Get \"nice\" rounded domain from dataset\n *\n * @param string format Data format from chart config object\n * @param array data Chart data transformed for data format\n * @return array Domain array of [min, max] values\n */\nexport default function getNiceDomain(format, data) {\n  const domain = 'nvd3SingleSeries' === format ?\n    _getSeriesDomain(data, format) : _getMultiSeriesDomain(data, format);\n  return _makeNice(domain);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/utils/dataFormats/getNiceDomain.js","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView');\n\nmodule.exports = DataView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_DataView.js\n// module id = 191\n// module chunks = 0 1","var hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nmodule.exports = Hash;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_Hash.js\n// module id = 192\n// module chunks = 0 1","var mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nmodule.exports = MapCache;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_MapCache.js\n// module id = 193\n// module chunks = 0 1","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Promise = getNative(root, 'Promise');\n\nmodule.exports = Promise;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_Promise.js\n// module id = 194\n// module chunks = 0 1","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Set = getNative(root, 'Set');\n\nmodule.exports = Set;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_Set.js\n// module id = 195\n// module chunks = 0 1","var ListCache = require('./_ListCache'),\n    stackClear = require('./_stackClear'),\n    stackDelete = require('./_stackDelete'),\n    stackGet = require('./_stackGet'),\n    stackHas = require('./_stackHas'),\n    stackSet = require('./_stackSet');\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\nmodule.exports = Stack;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_Stack.js\n// module id = 196\n// module chunks = 0 1","var root = require('./_root');\n\n/** Built-in value references. */\nvar Uint8Array = root.Uint8Array;\n\nmodule.exports = Uint8Array;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_Uint8Array.js\n// module id = 197\n// module chunks = 0 1","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar WeakMap = getNative(root, 'WeakMap');\n\nmodule.exports = WeakMap;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_WeakMap.js\n// module id = 198\n// module chunks = 0 1","/**\n * Adds the key-value `pair` to `map`.\n *\n * @private\n * @param {Object} map The map to modify.\n * @param {Array} pair The key-value pair to add.\n * @returns {Object} Returns `map`.\n */\nfunction addMapEntry(map, pair) {\n  // Don't return `map.set` because it's not chainable in IE 11.\n  map.set(pair[0], pair[1]);\n  return map;\n}\n\nmodule.exports = addMapEntry;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_addMapEntry.js\n// module id = 199\n// module chunks = 0 1","/**\n * Adds `value` to `set`.\n *\n * @private\n * @param {Object} set The set to modify.\n * @param {*} value The value to add.\n * @returns {Object} Returns `set`.\n */\nfunction addSetEntry(set, value) {\n  // Don't return `set.add` because it's not chainable in IE 11.\n  set.add(value);\n  return set;\n}\n\nmodule.exports = addSetEntry;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_addSetEntry.js\n// module id = 200\n// module chunks = 0 1","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_arrayEach.js\n// module id = 201\n// module chunks = 0 1","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayFilter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_arrayFilter.js\n// module id = 202\n// module chunks = 0 1","var copyObject = require('./_copyObject'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nmodule.exports = baseAssign;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_baseAssign.js\n// module id = 203\n// module chunks = 0 1","var copyObject = require('./_copyObject'),\n    keysIn = require('./keysIn');\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nmodule.exports = baseAssignIn;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_baseAssignIn.js\n// module id = 204\n// module chunks = 0 1","var Stack = require('./_Stack'),\n    arrayEach = require('./_arrayEach'),\n    assignValue = require('./_assignValue'),\n    baseAssign = require('./_baseAssign'),\n    baseAssignIn = require('./_baseAssignIn'),\n    cloneBuffer = require('./_cloneBuffer'),\n    copyArray = require('./_copyArray'),\n    copySymbols = require('./_copySymbols'),\n    copySymbolsIn = require('./_copySymbolsIn'),\n    getAllKeys = require('./_getAllKeys'),\n    getAllKeysIn = require('./_getAllKeysIn'),\n    getTag = require('./_getTag'),\n    initCloneArray = require('./_initCloneArray'),\n    initCloneByTag = require('./_initCloneByTag'),\n    initCloneObject = require('./_initCloneObject'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isObject = require('./isObject'),\n    keys = require('./keys');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, baseClone, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nmodule.exports = baseClone;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_baseClone.js\n// module id = 205\n// module chunks = 0 1","var isObject = require('./isObject');\n\n/** Built-in value references. */\nvar objectCreate = Object.create;\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\nmodule.exports = baseCreate;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_baseCreate.js\n// module id = 206\n// module chunks = 0 1","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_baseIsArguments.js\n// module id = 207\n// module chunks = 0 1","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_baseIsNative.js\n// module id = 208\n// module chunks = 0 1","var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_baseIsTypedArray.js\n// module id = 209\n// module chunks = 0 1","var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeys;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_baseKeys.js\n// module id = 210\n// module chunks = 0 1","var isObject = require('./isObject'),\n    isPrototype = require('./_isPrototype'),\n    nativeKeysIn = require('./_nativeKeysIn');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeysIn;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_baseKeysIn.js\n// module id = 211\n// module chunks = 0 1","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = baseTimes;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_baseTimes.js\n// module id = 212\n// module chunks = 0 1","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_baseUnary.js\n// module id = 213\n// module chunks = 0 1","var root = require('./_root');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\nmodule.exports = cloneBuffer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_cloneBuffer.js\n// module id = 214\n// module chunks = 0 1","var cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nmodule.exports = cloneDataView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_cloneDataView.js\n// module id = 215\n// module chunks = 0 1","var addMapEntry = require('./_addMapEntry'),\n    arrayReduce = require('./_arrayReduce'),\n    mapToArray = require('./_mapToArray');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1;\n\n/**\n * Creates a clone of `map`.\n *\n * @private\n * @param {Object} map The map to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned map.\n */\nfunction cloneMap(map, isDeep, cloneFunc) {\n  var array = isDeep ? cloneFunc(mapToArray(map), CLONE_DEEP_FLAG) : mapToArray(map);\n  return arrayReduce(array, addMapEntry, new map.constructor);\n}\n\nmodule.exports = cloneMap;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_cloneMap.js\n// module id = 216\n// module chunks = 0 1","/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nmodule.exports = cloneRegExp;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_cloneRegExp.js\n// module id = 217\n// module chunks = 0 1","var addSetEntry = require('./_addSetEntry'),\n    arrayReduce = require('./_arrayReduce'),\n    setToArray = require('./_setToArray');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1;\n\n/**\n * Creates a clone of `set`.\n *\n * @private\n * @param {Object} set The set to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned set.\n */\nfunction cloneSet(set, isDeep, cloneFunc) {\n  var array = isDeep ? cloneFunc(setToArray(set), CLONE_DEEP_FLAG) : setToArray(set);\n  return arrayReduce(array, addSetEntry, new set.constructor);\n}\n\nmodule.exports = cloneSet;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_cloneSet.js\n// module id = 218\n// module chunks = 0 1","var Symbol = require('./_Symbol');\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nmodule.exports = cloneSymbol;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_cloneSymbol.js\n// module id = 219\n// module chunks = 0 1","var cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\nmodule.exports = cloneTypedArray;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_cloneTypedArray.js\n// module id = 220\n// module chunks = 0 1","/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nmodule.exports = copyArray;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_copyArray.js\n// module id = 221\n// module chunks = 0 1","var copyObject = require('./_copyObject'),\n    getSymbols = require('./_getSymbols');\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nmodule.exports = copySymbols;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_copySymbols.js\n// module id = 222\n// module chunks = 0 1","var copyObject = require('./_copyObject'),\n    getSymbolsIn = require('./_getSymbolsIn');\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nmodule.exports = copySymbolsIn;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_copySymbolsIn.js\n// module id = 223\n// module chunks = 0 1","var root = require('./_root');\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nmodule.exports = coreJsData;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_coreJsData.js\n// module id = 224\n// module chunks = 0 1","var getNative = require('./_getNative');\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nmodule.exports = defineProperty;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_defineProperty.js\n// module id = 225\n// module chunks = 0 1","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbols = require('./_getSymbols'),\n    keys = require('./keys');\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nmodule.exports = getAllKeys;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_getAllKeys.js\n// module id = 226\n// module chunks = 0 1","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbolsIn = require('./_getSymbolsIn'),\n    keysIn = require('./keysIn');\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nmodule.exports = getAllKeysIn;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_getAllKeysIn.js\n// module id = 227\n// module chunks = 0 1","var DataView = require('./_DataView'),\n    Map = require('./_Map'),\n    Promise = require('./_Promise'),\n    Set = require('./_Set'),\n    WeakMap = require('./_WeakMap'),\n    baseGetTag = require('./_baseGetTag'),\n    toSource = require('./_toSource');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\n\nvar dataViewTag = '[object DataView]';\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\nmodule.exports = getTag;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_getTag.js\n// module id = 229\n// module chunks = 0 1","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_getValue.js\n// module id = 230\n// module chunks = 0 1","var nativeCreate = require('./_nativeCreate');\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_hashClear.js\n// module id = 231\n// module chunks = 0 1","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_hashDelete.js\n// module id = 232\n// module chunks = 0 1","var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_hashGet.js\n// module id = 233\n// module chunks = 0 1","var nativeCreate = require('./_nativeCreate');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_hashHas.js\n// module id = 234\n// module chunks = 0 1","var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_hashSet.js\n// module id = 235\n// module chunks = 0 1","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nmodule.exports = initCloneArray;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_initCloneArray.js\n// module id = 236\n// module chunks = 0 1","var cloneArrayBuffer = require('./_cloneArrayBuffer'),\n    cloneDataView = require('./_cloneDataView'),\n    cloneMap = require('./_cloneMap'),\n    cloneRegExp = require('./_cloneRegExp'),\n    cloneSet = require('./_cloneSet'),\n    cloneSymbol = require('./_cloneSymbol'),\n    cloneTypedArray = require('./_cloneTypedArray');\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, cloneFunc, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return cloneMap(object, isDeep, cloneFunc);\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return cloneSet(object, isDeep, cloneFunc);\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nmodule.exports = initCloneByTag;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_initCloneByTag.js\n// module id = 237\n// module chunks = 0 1","var baseCreate = require('./_baseCreate'),\n    getPrototype = require('./_getPrototype'),\n    isPrototype = require('./_isPrototype');\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\nmodule.exports = initCloneObject;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_initCloneObject.js\n// module id = 238\n// module chunks = 0 1","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\nmodule.exports = isIndex;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_isIndex.js\n// module id = 239\n// module chunks = 0 1","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nmodule.exports = isKeyable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_isKeyable.js\n// module id = 240\n// module chunks = 0 1","var coreJsData = require('./_coreJsData');\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nmodule.exports = isMasked;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_isMasked.js\n// module id = 241\n// module chunks = 0 1","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_listCacheClear.js\n// module id = 242\n// module chunks = 0 1","var assocIndexOf = require('./_assocIndexOf');\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_listCacheDelete.js\n// module id = 243\n// module chunks = 0 1","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_listCacheGet.js\n// module id = 244\n// module chunks = 0 1","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_listCacheHas.js\n// module id = 245\n// module chunks = 0 1","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nmodule.exports = listCacheSet;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_listCacheSet.js\n// module id = 246\n// module chunks = 0 1","var Hash = require('./_Hash'),\n    ListCache = require('./_ListCache'),\n    Map = require('./_Map');\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nmodule.exports = mapCacheClear;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_mapCacheClear.js\n// module id = 247\n// module chunks = 0 1","var getMapData = require('./_getMapData');\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_mapCacheDelete.js\n// module id = 248\n// module chunks = 0 1","var getMapData = require('./_getMapData');\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_mapCacheGet.js\n// module id = 249\n// module chunks = 0 1","var getMapData = require('./_getMapData');\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_mapCacheHas.js\n// module id = 250\n// module chunks = 0 1","var getMapData = require('./_getMapData');\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_mapCacheSet.js\n// module id = 251\n// module chunks = 0 1","/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_mapToArray.js\n// module id = 252\n// module chunks = 0 1","var overArg = require('./_overArg');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nmodule.exports = nativeKeys;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_nativeKeys.js\n// module id = 253\n// module chunks = 0 1","/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = nativeKeysIn;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_nativeKeysIn.js\n// module id = 254\n// module chunks = 0 1","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nmodule.exports = nodeUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_nodeUtil.js\n// module id = 255\n// module chunks = 0 1","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_setToArray.js\n// module id = 257\n// module chunks = 0 1","var ListCache = require('./_ListCache');\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\nmodule.exports = stackClear;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_stackClear.js\n// module id = 258\n// module chunks = 0 1","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\nmodule.exports = stackDelete;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_stackDelete.js\n// module id = 259\n// module chunks = 0 1","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nmodule.exports = stackGet;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_stackGet.js\n// module id = 260\n// module chunks = 0 1","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nmodule.exports = stackHas;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_stackHas.js\n// module id = 261\n// module chunks = 0 1","var ListCache = require('./_ListCache'),\n    Map = require('./_Map'),\n    MapCache = require('./_MapCache');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nmodule.exports = stackSet;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_stackSet.js\n// module id = 262\n// module chunks = 0 1","var baseClone = require('./_baseClone');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nmodule.exports = cloneDeep;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/cloneDeep.js\n// module id = 263\n// module chunks = 0 1","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nmodule.exports = isArguments;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/isArguments.js\n// module id = 264\n// module chunks = 0 1","var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nmodule.exports = isTypedArray;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/isTypedArray.js\n// module id = 265\n// module chunks = 0 1","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/stubFalse.js\n// module id = 266\n// module chunks = 0 1","var map = {\n\t\"./NVD3Adapter/index\": 387\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\treturn map[req] || (function() { throw new Error(\"Cannot find module '\" + req + \"'.\") }());\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 351;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/components/Chart/ChartTypes ^\\.\\/.*\\/index$\n// module id = 351\n// module chunks = 0","import React, { Component } from 'react';\nimport NVD3Chart from 'react-nvd3';\nimport update from 'react-addons-update';\nimport cloneDeep from 'lodash/cloneDeep';\nimport { getChartTypeObject } from '../../../../utils/chartTypeUtils';\nimport { nvd3Defaults } from '../../../../constants/chartTypes';\nimport applyTickFormatters from '../../../../middleware/utils/applyTickFormatters';\nimport { shouldSetupYDomain } from '../../../../middleware/utils/applyYDomain';\nimport getNiceDomain from '../../../../utils/dataFormats/getNiceDomain';\n\nexport default class NVD3Adapter extends Component {\n  constructor(props) {\n    super(props);\n    this._mapToChartProps = this._mapToChartProps.bind(this);\n  }\n\n  /**\n   * In editor, merge data into options and add a ref\n   * In widget, also recreate function-based options that can't be sent as JSON\n   */\n  _mapToChartProps() {\n    const { options, data, widget } = this.props;\n    let nextState = update(options, {\n      datum: { $set: this._dataTransform(options.type, data) },\n      ref: { $set: 'chartNode' },\n    });\n\n    if (!widget) {\n      return nextState;\n    }\n\n    // Widgets need to recreate function-based options\n    const typeConfig = getChartTypeObject(options.type).config;\n\n    nextState = update(nextState, {\n      x: { $set: nvd3Defaults[typeConfig.dataFormat].x },\n      y: { $set: nvd3Defaults[typeConfig.dataFormat].y },\n      yDomain: { $apply: (oldYDomain) => { // eslint-disable-line arrow-body-style\n        return (shouldSetupYDomain(typeConfig) && undefined === oldYDomain) ?\n          getNiceDomain(typeConfig.dataFormat, data) : oldYDomain;\n      } },\n    });\n\n    // tickFormatSettings -> tick formatting functions\n    // applyTickFormatters() returns a cloned object\n    return applyTickFormatters(nextState, typeConfig);\n  }\n\n  /**\n   * Apply any special formatting specfic to a chart type\n   */\n  _dataTransform(chartType, data) {\n    switch (chartType) {\n      case 'discreteBarChart':\n        return [{\n          key: '',\n          values: data,\n        }];\n\n      default:\n        return data;\n    }\n  }\n\n  render() {\n    // We clone the props, because nvd3 will mutate the datum that you pass to it.\n    const chartProps = cloneDeep(this._mapToChartProps());\n\n    // Key prop is for forcing re-render of the chart to avoid chart refresh issue when the chart type changes.\n    // https://github.com/NuCivic/react-nvd3/issues/59\n    return <NVD3Chart key={Math.random()} {...chartProps} />;\n  }\n}\n\nNVD3Adapter.propTypes = {\n  data: React.PropTypes.array,\n  options: React.PropTypes.object,\n  widget: React.PropTypes.oneOfType([\n    React.PropTypes.string,\n    React.PropTypes.bool,\n  ]),\n};\n\n\n\n// WEBPACK FOOTER //\n// ./app/components/Chart/ChartTypes/NVD3Adapter/index.js","/* nvd3 version 1.8.5 (https://github.com/novus/nvd3) 2016-12-01 */\n(function(){\n\n// set up main nv object\nvar nv = {};\n\n// the major global objects under the nv namespace\nnv.dev = false; //set false when in production\nnv.tooltip = nv.tooltip || {}; // For the tooltip system\nnv.utils = nv.utils || {}; // Utility subsystem\nnv.models = nv.models || {}; //stores all the possible models/components\nnv.charts = {}; //stores all the ready to use charts\nnv.logs = {}; //stores some statistics and potential error messages\nnv.dom = {}; //DOM manipulation functions\n\n// Node/CommonJS - require D3\nif (typeof(module) !== 'undefined' && typeof(exports) !== 'undefined' && typeof(d3) == 'undefined') {\n    d3 = require('d3');\n}\n\nnv.dispatch = d3.dispatch('render_start', 'render_end');\n\n// Function bind polyfill\n// Needed ONLY for phantomJS as it's missing until version 2.0 which is unreleased as of this comment\n// https://github.com/ariya/phantomjs/issues/10522\n// http://kangax.github.io/compat-table/es5/#Function.prototype.bind\n// phantomJS is used for running the test suite\nif (!Function.prototype.bind) {\n    Function.prototype.bind = function (oThis) {\n        if (typeof this !== \"function\") {\n            // closest thing possible to the ECMAScript 5 internal IsCallable function\n            throw new TypeError(\"Function.prototype.bind - what is trying to be bound is not callable\");\n        }\n\n        var aArgs = Array.prototype.slice.call(arguments, 1),\n            fToBind = this,\n            fNOP = function () {},\n            fBound = function () {\n                return fToBind.apply(this instanceof fNOP && oThis\n                        ? this\n                        : oThis,\n                    aArgs.concat(Array.prototype.slice.call(arguments)));\n            };\n\n        fNOP.prototype = this.prototype;\n        fBound.prototype = new fNOP();\n        return fBound;\n    };\n}\n\n//  Development render timers - disabled if dev = false\nif (nv.dev) {\n    nv.dispatch.on('render_start', function(e) {\n        nv.logs.startTime = +new Date();\n    });\n\n    nv.dispatch.on('render_end', function(e) {\n        nv.logs.endTime = +new Date();\n        nv.logs.totalTime = nv.logs.endTime - nv.logs.startTime;\n        nv.log('total', nv.logs.totalTime); // used for development, to keep track of graph generation times\n    });\n}\n\n// Logs all arguments, and returns the last so you can test things in place\n// Note: in IE8 console.log is an object not a function, and if modernizr is used\n// then calling Function.prototype.bind with with anything other than a function\n// causes a TypeError to be thrown.\nnv.log = function() {\n    if (nv.dev && window.console && console.log && console.log.apply)\n        console.log.apply(console, arguments);\n    else if (nv.dev && window.console && typeof console.log == \"function\" && Function.prototype.bind) {\n        var log = Function.prototype.bind.call(console.log, console);\n        log.apply(console, arguments);\n    }\n    return arguments[arguments.length - 1];\n};\n\n// print console warning, should be used by deprecated functions\nnv.deprecated = function(name, info) {\n    if (console && console.warn) {\n        console.warn('nvd3 warning: `' + name + '` has been deprecated. ', info || '');\n    }\n};\n\n// The nv.render function is used to queue up chart rendering\n// in non-blocking async functions.\n// When all queued charts are done rendering, nv.dispatch.render_end is invoked.\nnv.render = function render(step) {\n    // number of graphs to generate in each timeout loop\n    step = step || 1;\n\n    nv.render.active = true;\n    nv.dispatch.render_start();\n\n    var renderLoop = function() {\n        var chart, graph;\n\n        for (var i = 0; i < step && (graph = nv.render.queue[i]); i++) {\n            chart = graph.generate();\n            if (typeof graph.callback == typeof(Function)) graph.callback(chart);\n        }\n\n        nv.render.queue.splice(0, i);\n\n        if (nv.render.queue.length) {\n            setTimeout(renderLoop);\n        }\n        else {\n            nv.dispatch.render_end();\n            nv.render.active = false;\n        }\n    };\n\n    setTimeout(renderLoop);\n};\n\nnv.render.active = false;\nnv.render.queue = [];\n\n/*\nAdds a chart to the async rendering queue. This method can take arguments in two forms:\nnv.addGraph({\n    generate: <Function>\n    callback: <Function>\n})\n\nor\n\nnv.addGraph(<generate Function>, <callback Function>)\n\nThe generate function should contain code that creates the NVD3 model, sets options\non it, adds data to an SVG element, and invokes the chart model. The generate function\nshould return the chart model.  See examples/lineChart.html for a usage example.\n\nThe callback function is optional, and it is called when the generate function completes.\n*/\nnv.addGraph = function(obj) {\n    if (typeof arguments[0] === typeof(Function)) {\n        obj = {generate: arguments[0], callback: arguments[1]};\n    }\n\n    nv.render.queue.push(obj);\n\n    if (!nv.render.active) {\n        nv.render();\n    }\n};\n\n// Node/CommonJS exports\nif (typeof(module) !== 'undefined' && typeof(exports) !== 'undefined') {\n  module.exports = nv;\n}\n\nif (typeof(window) !== 'undefined') {\n  window.nv = nv;\n}\n/* Facade for queueing DOM write operations\r\n * with Fastdom (https://github.com/wilsonpage/fastdom)\r\n * if available.\r\n * This could easily be extended to support alternate\r\n * implementations in the future.\r\n */\r\nnv.dom.write = function(callback) {\r\n\tif (window.fastdom !== undefined) {\r\n\t\treturn fastdom.mutate(callback);\r\n\t}\r\n\treturn callback();\r\n};\r\n\r\n/* Facade for queueing DOM read operations\r\n * with Fastdom (https://github.com/wilsonpage/fastdom)\r\n * if available.\r\n * This could easily be extended to support alternate\r\n * implementations in the future.\r\n */\r\nnv.dom.read = function(callback) {\r\n\tif (window.fastdom !== undefined) {\r\n\t\treturn fastdom.measure(callback);\r\n\t}\r\n\treturn callback();\r\n};\r\n/* Utility class to handle creation of an interactive layer.\n This places a rectangle on top of the chart. When you mouse move over it, it sends a dispatch\n containing the X-coordinate. It can also render a vertical line where the mouse is located.\n\n dispatch.elementMousemove is the important event to latch onto.  It is fired whenever the mouse moves over\n the rectangle. The dispatch is given one object which contains the mouseX/Y location.\n It also has 'pointXValue', which is the conversion of mouseX to the x-axis scale.\n */\nnv.interactiveGuideline = function() {\n    \"use strict\";\n\n    var margin = { left: 0, top: 0 } //Pass the chart's top and left magins. Used to calculate the mouseX/Y.\n        ,   width = null\n        ,   height = null\n        ,   xScale = d3.scale.linear()\n        ,   dispatch = d3.dispatch('elementMousemove', 'elementMouseout', 'elementClick', 'elementDblclick', 'elementMouseDown', 'elementMouseUp')\n        ,   showGuideLine = true\n        ,   svgContainer = null // Must pass the chart's svg, we'll use its mousemove event.\n        ,   tooltip = nv.models.tooltip()\n        ,   isMSIE =  window.ActiveXObject// Checkt if IE by looking for activeX. (excludes IE11)\n    ;\n\n    tooltip\n        .duration(0)\n        .hideDelay(0)\n        .hidden(false);\n\n    function layer(selection) {\n        selection.each(function(data) {\n            var container = d3.select(this);\n            var availableWidth = (width || 960), availableHeight = (height || 400);\n            var wrap = container.selectAll(\"g.nv-wrap.nv-interactiveLineLayer\")\n                .data([data]);\n            var wrapEnter = wrap.enter()\n                .append(\"g\").attr(\"class\", \" nv-wrap nv-interactiveLineLayer\");\n            wrapEnter.append(\"g\").attr(\"class\",\"nv-interactiveGuideLine\");\n\n            if (!svgContainer) {\n                return;\n            }\n\n            function mouseHandler() {\n                var d3mouse = d3.mouse(this);\n                var mouseX = d3mouse[0];\n                var mouseY = d3mouse[1];\n                var subtractMargin = true;\n                var mouseOutAnyReason = false;\n                if (isMSIE) {\n                    /*\n                     D3.js (or maybe SVG.getScreenCTM) has a nasty bug in Internet Explorer 10.\n                     d3.mouse() returns incorrect X,Y mouse coordinates when mouse moving\n                     over a rect in IE 10.\n                     However, d3.event.offsetX/Y also returns the mouse coordinates\n                     relative to the triggering <rect>. So we use offsetX/Y on IE.\n                     */\n                    mouseX = d3.event.offsetX;\n                    mouseY = d3.event.offsetY;\n\n                    /*\n                     On IE, if you attach a mouse event listener to the <svg> container,\n                     it will actually trigger it for all the child elements (like <path>, <circle>, etc).\n                     When this happens on IE, the offsetX/Y is set to where ever the child element\n                     is located.\n                     As a result, we do NOT need to subtract margins to figure out the mouse X/Y\n                     position under this scenario. Removing the line below *will* cause\n                     the interactive layer to not work right on IE.\n                     */\n                    if(d3.event.target.tagName !== \"svg\") {\n                        subtractMargin = false;\n                    }\n\n                    if (d3.event.target.className.baseVal.match(\"nv-legend\")) {\n                        mouseOutAnyReason = true;\n                    }\n\n                }\n\n                if(subtractMargin) {\n                    mouseX -= margin.left;\n                    mouseY -= margin.top;\n                }\n\n                /* If mouseX/Y is outside of the chart's bounds,\n                 trigger a mouseOut event.\n                 */\n                if (d3.event.type === 'mouseout'\n                    || mouseX < 0 || mouseY < 0\n                    || mouseX > availableWidth || mouseY > availableHeight\n                    || (d3.event.relatedTarget && d3.event.relatedTarget.ownerSVGElement === undefined)\n                    || mouseOutAnyReason\n                    ) {\n\n                    if (isMSIE) {\n                        if (d3.event.relatedTarget\n                            && d3.event.relatedTarget.ownerSVGElement === undefined\n                            && (d3.event.relatedTarget.className === undefined\n                                || d3.event.relatedTarget.className.match(tooltip.nvPointerEventsClass))) {\n\n                            return;\n                        }\n                    }\n                    dispatch.elementMouseout({\n                        mouseX: mouseX,\n                        mouseY: mouseY\n                    });\n                    layer.renderGuideLine(null); //hide the guideline\n                    tooltip.hidden(true);\n                    return;\n                } else {\n                    tooltip.hidden(false);\n                }\n\n\n                var scaleIsOrdinal = typeof xScale.rangeBands === 'function';\n                var pointXValue = undefined;\n\n                // Ordinal scale has no invert method\n                if (scaleIsOrdinal) {\n                    var elementIndex = d3.bisect(xScale.range(), mouseX) - 1;\n                    // Check if mouseX is in the range band\n                    if (xScale.range()[elementIndex] + xScale.rangeBand() >= mouseX) {\n                        pointXValue = xScale.domain()[d3.bisect(xScale.range(), mouseX) - 1];\n                    }\n                    else {\n                        dispatch.elementMouseout({\n                            mouseX: mouseX,\n                            mouseY: mouseY\n                        });\n                        layer.renderGuideLine(null); //hide the guideline\n                        tooltip.hidden(true);\n                        return;\n                    }\n                }\n                else {\n                    pointXValue = xScale.invert(mouseX);\n                }\n\n                dispatch.elementMousemove({\n                    mouseX: mouseX,\n                    mouseY: mouseY,\n                    pointXValue: pointXValue\n                });\n\n                //If user double clicks the layer, fire a elementDblclick\n                if (d3.event.type === \"dblclick\") {\n                    dispatch.elementDblclick({\n                        mouseX: mouseX,\n                        mouseY: mouseY,\n                        pointXValue: pointXValue\n                    });\n                }\n\n                // if user single clicks the layer, fire elementClick\n                if (d3.event.type === 'click') {\n                    dispatch.elementClick({\n                        mouseX: mouseX,\n                        mouseY: mouseY,\n                        pointXValue: pointXValue\n                    });\n                }\n\n                // if user presses mouse down the layer, fire elementMouseDown\n                if (d3.event.type === 'mousedown') {\n                \tdispatch.elementMouseDown({\n                \t\tmouseX: mouseX,\n                \t\tmouseY: mouseY,\n                \t\tpointXValue: pointXValue\n                \t});\n                }\n\n                // if user presses mouse down the layer, fire elementMouseUp\n                if (d3.event.type === 'mouseup') {\n                \tdispatch.elementMouseUp({\n                \t\tmouseX: mouseX,\n                \t\tmouseY: mouseY,\n                \t\tpointXValue: pointXValue\n                \t});\n                }\n            }\n\n            svgContainer\n                .on(\"touchmove\",mouseHandler)\n                .on(\"mousemove\",mouseHandler, true)\n                .on(\"mouseout\" ,mouseHandler,true)\n                .on(\"mousedown\" ,mouseHandler,true)\n                .on(\"mouseup\" ,mouseHandler,true)\n                .on(\"dblclick\" ,mouseHandler)\n                .on(\"click\", mouseHandler)\n            ;\n\n            layer.guideLine = null;\n            //Draws a vertical guideline at the given X postion.\n            layer.renderGuideLine = function(x) {\n                if (!showGuideLine) return;\n                if (layer.guideLine && layer.guideLine.attr(\"x1\") === x) return;\n                nv.dom.write(function() {\n                    var line = wrap.select(\".nv-interactiveGuideLine\")\n                        .selectAll(\"line\")\n                        .data((x != null) ? [nv.utils.NaNtoZero(x)] : [], String);\n                    line.enter()\n                        .append(\"line\")\n                        .attr(\"class\", \"nv-guideline\")\n                        .attr(\"x1\", function(d) { return d;})\n                        .attr(\"x2\", function(d) { return d;})\n                        .attr(\"y1\", availableHeight)\n                        .attr(\"y2\",0);\n                    line.exit().remove();\n                });\n            }\n        });\n    }\n\n    layer.dispatch = dispatch;\n    layer.tooltip = tooltip;\n\n    layer.margin = function(_) {\n        if (!arguments.length) return margin;\n        margin.top    = typeof _.top    != 'undefined' ? _.top    : margin.top;\n        margin.left   = typeof _.left   != 'undefined' ? _.left   : margin.left;\n        return layer;\n    };\n\n    layer.width = function(_) {\n        if (!arguments.length) return width;\n        width = _;\n        return layer;\n    };\n\n    layer.height = function(_) {\n        if (!arguments.length) return height;\n        height = _;\n        return layer;\n    };\n\n    layer.xScale = function(_) {\n        if (!arguments.length) return xScale;\n        xScale = _;\n        return layer;\n    };\n\n    layer.showGuideLine = function(_) {\n        if (!arguments.length) return showGuideLine;\n        showGuideLine = _;\n        return layer;\n    };\n\n    layer.svgContainer = function(_) {\n        if (!arguments.length) return svgContainer;\n        svgContainer = _;\n        return layer;\n    };\n\n    return layer;\n};\n\n/* Utility class that uses d3.bisect to find the index in a given array, where a search value can be inserted.\n This is different from normal bisectLeft; this function finds the nearest index to insert the search value.\n\n For instance, lets say your array is [1,2,3,5,10,30], and you search for 28.\n Normal d3.bisectLeft will return 4, because 28 is inserted after the number 10.  But interactiveBisect will return 5\n because 28 is closer to 30 than 10.\n\n Unit tests can be found in: interactiveBisectTest.html\n\n Has the following known issues:\n * Will not work if the data points move backwards (ie, 10,9,8,7, etc) or if the data points are in random order.\n * Won't work if there are duplicate x coordinate values.\n */\nnv.interactiveBisect = function (values, searchVal, xAccessor) {\n    \"use strict\";\n    if (! (values instanceof Array)) {\n        return null;\n    }\n    var _xAccessor;\n    if (typeof xAccessor !== 'function') {\n        _xAccessor = function(d) {\n            return d.x;\n        }\n    } else {\n        _xAccessor = xAccessor;\n    }\n    var _cmp = function(d, v) {\n        // Accessors are no longer passed the index of the element along with\n        // the element itself when invoked by d3.bisector.\n        //\n        // Starting at D3 v3.4.4, d3.bisector() started inspecting the\n        // function passed to determine if it should consider it an accessor\n        // or a comparator. This meant that accessors that take two arguments\n        // (expecting an index as the second parameter) are treated as\n        // comparators where the second argument is the search value against\n        // which the first argument is compared.\n        return _xAccessor(d) - v;\n    };\n\n    var bisect = d3.bisector(_cmp).left;\n    var index = d3.max([0, bisect(values,searchVal) - 1]);\n    var currentValue = _xAccessor(values[index]);\n\n    if (typeof currentValue === 'undefined') {\n        currentValue = index;\n    }\n\n    if (currentValue === searchVal) {\n        return index; //found exact match\n    }\n\n    var nextIndex = d3.min([index+1, values.length - 1]);\n    var nextValue = _xAccessor(values[nextIndex]);\n\n    if (typeof nextValue === 'undefined') {\n        nextValue = nextIndex;\n    }\n\n    if (Math.abs(nextValue - searchVal) >= Math.abs(currentValue - searchVal)) {\n        return index;\n    } else {\n        return nextIndex\n    }\n};\n\n/*\n Returns the index in the array \"values\" that is closest to searchVal.\n Only returns an index if searchVal is within some \"threshold\".\n Otherwise, returns null.\n */\nnv.nearestValueIndex = function (values, searchVal, threshold) {\n    \"use strict\";\n    var yDistMax = Infinity, indexToHighlight = null;\n    values.forEach(function(d,i) {\n        var delta = Math.abs(searchVal - d);\n        if ( d != null && delta <= yDistMax && delta < threshold) {\n            yDistMax = delta;\n            indexToHighlight = i;\n        }\n    });\n    return indexToHighlight;\n};\n\n/* Model which can be instantiated to handle tooltip rendering.\n Example usage:\n var tip = nv.models.tooltip().gravity('w').distance(23)\n .data(myDataObject);\n\n tip();    //just invoke the returned function to render tooltip.\n */\nnv.models.tooltip = function() {\n    \"use strict\";\n\n    /*\n    Tooltip data. If data is given in the proper format, a consistent tooltip is generated.\n    Example Format of data:\n    {\n        key: \"Date\",\n        value: \"August 2009\",\n        series: [\n            {key: \"Series 1\", value: \"Value 1\", color: \"#000\"},\n            {key: \"Series 2\", value: \"Value 2\", color: \"#00f\"}\n        ]\n    }\n    */\n    var id = \"nvtooltip-\" + Math.floor(Math.random() * 100000) // Generates a unique id when you create a new tooltip() object.\n        ,   data = null\n        ,   gravity = 'w'   // Can be 'n','s','e','w'. Determines how tooltip is positioned.\n        ,   distance = 25 // Distance to offset tooltip from the mouse location.\n        ,   snapDistance = 0   // Tolerance allowed before tooltip is moved from its current position (creates 'snapping' effect)\n        ,   classes = null  // Attaches additional CSS classes to the tooltip DIV that is created.\n        ,   hidden = true  // Start off hidden, toggle with hide/show functions below.\n        ,   hideDelay = 200  // Delay (in ms) before the tooltip hides after calling hide().\n        ,   tooltip = null // d3 select of the tooltip div.\n        ,   lastPosition = { left: null, top: null } // Last position the tooltip was in.\n        ,   enabled = true  // True -> tooltips are rendered. False -> don't render tooltips.\n        ,   duration = 100 // Tooltip movement duration, in ms.\n        ,   headerEnabled = true // If is to show the tooltip header.\n        ,   nvPointerEventsClass = \"nv-pointer-events-none\" // CSS class to specify whether element should not have mouse events.\n    ;\n\n    // Format function for the tooltip values column.\n    var valueFormatter = function(d, i) {\n        return d;\n    };\n\n    // Format function for the tooltip header value.\n    var headerFormatter = function(d) {\n        return d;\n    };\n\n    var keyFormatter = function(d, i) {\n        return d;\n    };\n\n    // By default, the tooltip model renders a beautiful table inside a DIV.\n    // You can override this function if a custom tooltip is desired.\n    var contentGenerator = function(d) {\n        if (d === null) {\n            return '';\n        }\n\n        var table = d3.select(document.createElement(\"table\"));\n        if (headerEnabled) {\n            var theadEnter = table.selectAll(\"thead\")\n                .data([d])\n                .enter().append(\"thead\");\n\n            theadEnter.append(\"tr\")\n                .append(\"td\")\n                .attr(\"colspan\", 3)\n                .append(\"strong\")\n                .classed(\"x-value\", true)\n                .html(headerFormatter(d.value));\n        }\n\n        var tbodyEnter = table.selectAll(\"tbody\")\n            .data([d])\n            .enter().append(\"tbody\");\n\n        var trowEnter = tbodyEnter.selectAll(\"tr\")\n                .data(function(p) { return p.series})\n                .enter()\n                .append(\"tr\")\n                .classed(\"highlight\", function(p) { return p.highlight});\n\n        trowEnter.append(\"td\")\n            .classed(\"legend-color-guide\",true)\n            .append(\"div\")\n            .style(\"background-color\", function(p) { return p.color});\n\n        trowEnter.append(\"td\")\n            .classed(\"key\",true)\n            .classed(\"total\",function(p) { return !!p.total})\n            .html(function(p, i) { return keyFormatter(p.key, i)});\n\n        trowEnter.append(\"td\")\n            .classed(\"value\",true)\n            .html(function(p, i) { return valueFormatter(p.value, i) });\n\n        trowEnter.filter(function (p,i) { return p.percent !== undefined }).append(\"td\")\n            .classed(\"percent\", true)\n            .html(function(p, i) { return \"(\" + d3.format('%')(p.percent) + \")\" });\n\n        trowEnter.selectAll(\"td\").each(function(p) {\n            if (p.highlight) {\n                var opacityScale = d3.scale.linear().domain([0,1]).range([\"#fff\",p.color]);\n                var opacity = 0.6;\n                d3.select(this)\n                    .style(\"border-bottom-color\", opacityScale(opacity))\n                    .style(\"border-top-color\", opacityScale(opacity))\n                ;\n            }\n        });\n\n        var html = table.node().outerHTML;\n        if (d.footer !== undefined)\n            html += \"<div class='footer'>\" + d.footer + \"</div>\";\n        return html;\n\n    };\n\n    /*\n     Function that returns the position (relative to the viewport/document.body)\n     the tooltip should be placed in.\n     Should return: {\n        left: <leftPos>,\n        top: <topPos>\n     }\n     */\n    var position = function() {\n        var pos = {\n            left: d3.event !== null ? d3.event.clientX : 0,\n            top: d3.event !== null ? d3.event.clientY : 0\n        };\n\n        if(getComputedStyle(document.body).transform != 'none') {\n            // Take the offset into account, as now the tooltip is relative\n            // to document.body.\n            var client = document.body.getBoundingClientRect();\n            pos.left -= client.left;\n            pos.top -= client.top;\n        }\n\n        return pos;\n    };\n\n    var dataSeriesExists = function(d) {\n        if (d && d.series) {\n            if (nv.utils.isArray(d.series)) {\n                return true;\n            }\n            // if object, it's okay just convert to array of the object\n            if (nv.utils.isObject(d.series)) {\n                d.series = [d.series];\n                return true;\n            }\n        }\n        return false;\n    };\n\n    // Calculates the gravity offset of the tooltip. Parameter is position of tooltip\n    // relative to the viewport.\n    var calcGravityOffset = function(pos) {\n        var height = tooltip.node().offsetHeight,\n            width = tooltip.node().offsetWidth,\n            clientWidth = document.documentElement.clientWidth, // Don't want scrollbars.\n            clientHeight = document.documentElement.clientHeight, // Don't want scrollbars.\n            left, top, tmp;\n\n        // calculate position based on gravity\n        switch (gravity) {\n            case 'e':\n                left = - width - distance;\n                top = - (height / 2);\n                if(pos.left + left < 0) left = distance;\n                if((tmp = pos.top + top) < 0) top -= tmp;\n                if((tmp = pos.top + top + height) > clientHeight) top -= tmp - clientHeight;\n                break;\n            case 'w':\n                left = distance;\n                top = - (height / 2);\n                if (pos.left + left + width > clientWidth) left = - width - distance;\n                if ((tmp = pos.top + top) < 0) top -= tmp;\n                if ((tmp = pos.top + top + height) > clientHeight) top -= tmp - clientHeight;\n                break;\n            case 'n':\n                left = - (width / 2) - 5; // - 5 is an approximation of the mouse's height.\n                top = distance;\n                if (pos.top + top + height > clientHeight) top = - height - distance;\n                if ((tmp = pos.left + left) < 0) left -= tmp;\n                if ((tmp = pos.left + left + width) > clientWidth) left -= tmp - clientWidth;\n                break;\n            case 's':\n                left = - (width / 2);\n                top = - height - distance;\n                if (pos.top + top < 0) top = distance;\n                if ((tmp = pos.left + left) < 0) left -= tmp;\n                if ((tmp = pos.left + left + width) > clientWidth) left -= tmp - clientWidth;\n                break;\n            case 'center':\n                left = - (width / 2);\n                top = - (height / 2);\n                break;\n            default:\n                left = 0;\n                top = 0;\n                break;\n        }\n\n        return { 'left': left, 'top': top };\n    };\n\n    /*\n     Positions the tooltip in the correct place, as given by the position() function.\n     */\n    var positionTooltip = function() {\n        nv.dom.read(function() {\n            var pos = position(),\n                gravityOffset = calcGravityOffset(pos),\n                left = pos.left + gravityOffset.left,\n                top = pos.top + gravityOffset.top;\n\n            // delay hiding a bit to avoid flickering\n            if (hidden) {\n                tooltip\n                    .interrupt()\n                    .transition()\n                    .delay(hideDelay)\n                    .duration(0)\n                    .style('opacity', 0);\n            } else {\n                // using tooltip.style('transform') returns values un-usable for tween\n                var old_translate = 'translate(' + lastPosition.left + 'px, ' + lastPosition.top + 'px)';\n                var new_translate = 'translate(' + Math.round(left) + 'px, ' + Math.round(top) + 'px)';\n                var translateInterpolator = d3.interpolateString(old_translate, new_translate);\n                var is_hidden = tooltip.style('opacity') < 0.1;\n\n                tooltip\n                    .interrupt() // cancel running transitions\n                    .transition()\n                    .duration(is_hidden ? 0 : duration)\n                    // using tween since some versions of d3 can't auto-tween a translate on a div\n                    .styleTween('transform', function (d) {\n                        return translateInterpolator;\n                    }, 'important')\n                    // Safari has its own `-webkit-transform` and does not support `transform`\n                    .styleTween('-webkit-transform', function (d) {\n                        return translateInterpolator;\n                    })\n                    .style('-ms-transform', new_translate)\n                    .style('opacity', 1);\n            }\n\n            lastPosition.left = left;\n            lastPosition.top = top;\n        });\n    };\n\n    // Creates new tooltip container, or uses existing one on DOM.\n    function initTooltip() {\n        if (!tooltip || !tooltip.node()) {\n            // Create new tooltip div if it doesn't exist on DOM.\n\n            var data = [1];\n            tooltip = d3.select(document.body).select('#'+id).data(data);\n\n            tooltip.enter().append('div')\n                   .attr(\"class\", \"nvtooltip \" + (classes ? classes : \"xy-tooltip\"))\n                   .attr(\"id\", id)\n                   .style(\"top\", 0).style(\"left\", 0)\n                   .style('opacity', 0)\n                   .style('position', 'fixed')\n                   .selectAll(\"div, table, td, tr\").classed(nvPointerEventsClass, true)\n                   .classed(nvPointerEventsClass, true);\n\n            tooltip.exit().remove()\n        }\n    }\n\n    // Draw the tooltip onto the DOM.\n    function nvtooltip() {\n        if (!enabled) return;\n        if (!dataSeriesExists(data)) return;\n\n        nv.dom.write(function () {\n            initTooltip();\n            // Generate data and set it into tooltip.\n            // Bonus - If you override contentGenerator and return falsey you can use something like\n            //         React or Knockout to bind the data for your tooltip.\n            var newContent = contentGenerator(data);\n            if (newContent) {\n                tooltip.node().innerHTML = newContent;\n            }\n\n            positionTooltip();\n        });\n\n        return nvtooltip;\n    }\n\n    nvtooltip.nvPointerEventsClass = nvPointerEventsClass;\n    nvtooltip.options = nv.utils.optionsFunc.bind(nvtooltip);\n\n    nvtooltip._options = Object.create({}, {\n        // simple read/write options\n        duration: {get: function(){return duration;}, set: function(_){duration=_;}},\n        gravity: {get: function(){return gravity;}, set: function(_){gravity=_;}},\n        distance: {get: function(){return distance;}, set: function(_){distance=_;}},\n        snapDistance: {get: function(){return snapDistance;}, set: function(_){snapDistance=_;}},\n        classes: {get: function(){return classes;}, set: function(_){classes=_;}},\n        enabled: {get: function(){return enabled;}, set: function(_){enabled=_;}},\n        hideDelay: {get: function(){return hideDelay;}, set: function(_){hideDelay=_;}},\n        contentGenerator: {get: function(){return contentGenerator;}, set: function(_){contentGenerator=_;}},\n        valueFormatter: {get: function(){return valueFormatter;}, set: function(_){valueFormatter=_;}},\n        headerFormatter: {get: function(){return headerFormatter;}, set: function(_){headerFormatter=_;}},\n        keyFormatter: {get: function(){return keyFormatter;}, set: function(_){keyFormatter=_;}},\n        headerEnabled: {get: function(){return headerEnabled;}, set: function(_){headerEnabled=_;}},\n        position: {get: function(){return position;}, set: function(_){position=_;}},\n\n        // Deprecated options\n        chartContainer: {get: function(){return document.body;}, set: function(_){\n            // deprecated after 1.8.3\n            nv.deprecated('chartContainer', 'feature removed after 1.8.3');\n        }},\n        fixedTop: {get: function(){return null;}, set: function(_){\n            // deprecated after 1.8.1\n            nv.deprecated('fixedTop', 'feature removed after 1.8.1');\n        }},\n        offset: {get: function(){return {left: 0, top: 0};}, set: function(_){\n            // deprecated after 1.8.1\n            nv.deprecated('offset', 'use chart.tooltip.distance() instead');\n        }},\n\n        // options with extra logic\n        hidden: {get: function(){return hidden;}, set: function(_){\n            if (hidden != _) {\n                hidden = !!_;\n                nvtooltip();\n            }\n        }},\n        data: {get: function(){return data;}, set: function(_){\n            // if showing a single data point, adjust data format with that\n            if (_.point) {\n                _.value = _.point.x;\n                _.series = _.series || {};\n                _.series.value = _.point.y;\n                _.series.color = _.point.color || _.series.color;\n            }\n            data = _;\n        }},\n\n        // read only properties\n        node: {get: function(){return tooltip.node();}, set: function(_){}},\n        id: {get: function(){return id;}, set: function(_){}}\n    });\n\n    nv.utils.initOptions(nvtooltip);\n    return nvtooltip;\n};\n\n\n/*\nGets the browser window size\n\nReturns object with height and width properties\n */\nnv.utils.windowSize = function() {\n    // Sane defaults\n    var size = {width: 640, height: 480};\n\n    // Most recent browsers use\n    if (window.innerWidth && window.innerHeight) {\n        size.width = window.innerWidth;\n        size.height = window.innerHeight;\n        return (size);\n    }\n\n    // IE can use depending on mode it is in\n    if (document.compatMode=='CSS1Compat' &&\n        document.documentElement &&\n        document.documentElement.offsetWidth ) {\n\n        size.width = document.documentElement.offsetWidth;\n        size.height = document.documentElement.offsetHeight;\n        return (size);\n    }\n\n    // Earlier IE uses Doc.body\n    if (document.body && document.body.offsetWidth) {\n        size.width = document.body.offsetWidth;\n        size.height = document.body.offsetHeight;\n        return (size);\n    }\n\n    return (size);\n};\n\n\n/* handle dumb browser quirks...  isinstance breaks if you use frames\ntypeof returns 'object' for null, NaN is a number, etc.\n */\nnv.utils.isArray = Array.isArray;\nnv.utils.isObject = function(a) {\n    return a !== null && typeof a === 'object';\n};\nnv.utils.isFunction = function(a) {\n    return typeof a === 'function';\n};\nnv.utils.isDate = function(a) {\n    return toString.call(a) === '[object Date]';\n};\nnv.utils.isNumber = function(a) {\n    return !isNaN(a) && typeof a === 'number';\n};\n\n\n/*\nBinds callback function to run when window is resized\n */\nnv.utils.windowResize = function(handler) {\n    if (window.addEventListener) {\n        window.addEventListener('resize', handler);\n    } else {\n        nv.log(\"ERROR: Failed to bind to window.resize with: \", handler);\n    }\n    // return object with clear function to remove the single added callback.\n    return {\n        callback: handler,\n        clear: function() {\n            window.removeEventListener('resize', handler);\n        }\n    }\n};\n\n\n/*\nBackwards compatible way to implement more d3-like coloring of graphs.\nCan take in nothing, an array, or a function/scale\nTo use a normal scale, get the range and pass that because we must be able\nto take two arguments and use the index to keep backward compatibility\n*/\nnv.utils.getColor = function(color) {\n    //if you pass in nothing, get default colors back\n    if (color === undefined) {\n        return nv.utils.defaultColor();\n\n    //if passed an array, turn it into a color scale\n    } else if(nv.utils.isArray(color)) {\n        var color_scale = d3.scale.ordinal().range(color);\n        return function(d, i) {\n            var key = i === undefined ? d : i;\n            return d.color || color_scale(key);\n        };\n\n    //if passed a function or scale, return it, or whatever it may be\n    //external libs, such as angularjs-nvd3-directives use this\n    } else {\n        //can't really help it if someone passes rubbish as color\n        return color;\n    }\n};\n\n\n/*\nDefault color chooser uses a color scale of 20 colors from D3\n https://github.com/mbostock/d3/wiki/Ordinal-Scales#categorical-colors\n */\nnv.utils.defaultColor = function() {\n    // get range of the scale so we'll turn it into our own function.\n    return nv.utils.getColor(d3.scale.category20().range());\n};\n\n\n/*\nReturns a color function that takes the result of 'getKey' for each series and\nlooks for a corresponding color from the dictionary\n*/\nnv.utils.customTheme = function(dictionary, getKey, defaultColors) {\n    // use default series.key if getKey is undefined\n    getKey = getKey || function(series) { return series.key };\n    defaultColors = defaultColors || d3.scale.category20().range();\n\n    // start at end of default color list and walk back to index 0\n    var defIndex = defaultColors.length;\n\n    return function(series, index) {\n        var key = getKey(series);\n        if (nv.utils.isFunction(dictionary[key])) {\n            return dictionary[key]();\n        } else if (dictionary[key] !== undefined) {\n            return dictionary[key];\n        } else {\n            // no match in dictionary, use a default color\n            if (!defIndex) {\n                // used all the default colors, start over\n                defIndex = defaultColors.length;\n            }\n            defIndex = defIndex - 1;\n            return defaultColors[defIndex];\n        }\n    };\n};\n\n\n/*\nFrom the PJAX example on d3js.org, while this is not really directly needed\nit's a very cool method for doing pjax, I may expand upon it a little bit,\nopen to suggestions on anything that may be useful\n*/\nnv.utils.pjax = function(links, content) {\n\n    var load = function(href) {\n        d3.html(href, function(fragment) {\n            var target = d3.select(content).node();\n            target.parentNode.replaceChild(\n                d3.select(fragment).select(content).node(),\n                target);\n            nv.utils.pjax(links, content);\n        });\n    };\n\n    d3.selectAll(links).on(\"click\", function() {\n        history.pushState(this.href, this.textContent, this.href);\n        load(this.href);\n        d3.event.preventDefault();\n    });\n\n    d3.select(window).on(\"popstate\", function() {\n        if (d3.event.state) {\n            load(d3.event.state);\n        }\n    });\n};\n\n\n/*\nFor when we want to approximate the width in pixels for an SVG:text element.\nMost common instance is when the element is in a display:none; container.\nForumla is : text.length * font-size * constant_factor\n*/\nnv.utils.calcApproxTextWidth = function (svgTextElem) {\n    if (nv.utils.isFunction(svgTextElem.style) && nv.utils.isFunction(svgTextElem.text)) {\n        var fontSize = parseInt(svgTextElem.style(\"font-size\").replace(\"px\",\"\"), 10);\n        var textLength = svgTextElem.text().length;\n        return nv.utils.NaNtoZero(textLength * fontSize * 0.5);\n    }\n    return 0;\n};\n\n\n/*\nNumbers that are undefined, null or NaN, convert them to zeros.\n*/\nnv.utils.NaNtoZero = function(n) {\n    if (!nv.utils.isNumber(n)\n        || isNaN(n)\n        || n === null\n        || n === Infinity\n        || n === -Infinity) {\n\n        return 0;\n    }\n    return n;\n};\n\n/*\nAdd a way to watch for d3 transition ends to d3\n*/\nd3.selection.prototype.watchTransition = function(renderWatch){\n    var args = [this].concat([].slice.call(arguments, 1));\n    return renderWatch.transition.apply(renderWatch, args);\n};\n\n\n/*\nHelper object to watch when d3 has rendered something\n*/\nnv.utils.renderWatch = function(dispatch, duration) {\n    if (!(this instanceof nv.utils.renderWatch)) {\n        return new nv.utils.renderWatch(dispatch, duration);\n    }\n\n    var _duration = duration !== undefined ? duration : 250;\n    var renderStack = [];\n    var self = this;\n\n    this.models = function(models) {\n        models = [].slice.call(arguments, 0);\n        models.forEach(function(model){\n            model.__rendered = false;\n            (function(m){\n                m.dispatch.on('renderEnd', function(arg){\n                    m.__rendered = true;\n                    self.renderEnd('model');\n                });\n            })(model);\n\n            if (renderStack.indexOf(model) < 0) {\n                renderStack.push(model);\n            }\n        });\n    return this;\n    };\n\n    this.reset = function(duration) {\n        if (duration !== undefined) {\n            _duration = duration;\n        }\n        renderStack = [];\n    };\n\n    this.transition = function(selection, args, duration) {\n        args = arguments.length > 1 ? [].slice.call(arguments, 1) : [];\n\n        if (args.length > 1) {\n            duration = args.pop();\n        } else {\n            duration = _duration !== undefined ? _duration : 250;\n        }\n        selection.__rendered = false;\n\n        if (renderStack.indexOf(selection) < 0) {\n            renderStack.push(selection);\n        }\n\n        if (duration === 0) {\n            selection.__rendered = true;\n            selection.delay = function() { return this; };\n            selection.duration = function() { return this; };\n            return selection;\n        } else {\n            if (selection.length === 0) {\n                selection.__rendered = true;\n            } else if (selection.every( function(d){ return !d.length; } )) {\n                selection.__rendered = true;\n            } else {\n                selection.__rendered = false;\n            }\n\n            var n = 0;\n            return selection\n                .transition()\n                .duration(duration)\n                .each(function(){ ++n; })\n                .each('end', function(d, i) {\n                    if (--n === 0) {\n                        selection.__rendered = true;\n                        self.renderEnd.apply(this, args);\n                    }\n                });\n        }\n    };\n\n    this.renderEnd = function() {\n        if (renderStack.every( function(d){ return d.__rendered; } )) {\n            renderStack.forEach( function(d){ d.__rendered = false; });\n            dispatch.renderEnd.apply(this, arguments);\n        }\n    }\n\n};\n\n\n/*\nTakes multiple objects and combines them into the first one (dst)\nexample:  nv.utils.deepExtend({a: 1}, {a: 2, b: 3}, {c: 4});\ngives:  {a: 2, b: 3, c: 4}\n*/\nnv.utils.deepExtend = function(dst){\n    var sources = arguments.length > 1 ? [].slice.call(arguments, 1) : [];\n    sources.forEach(function(source) {\n        for (var key in source) {\n            var isArray = nv.utils.isArray(dst[key]);\n            var isObject = nv.utils.isObject(dst[key]);\n            var srcObj = nv.utils.isObject(source[key]);\n\n            if (isObject && !isArray && srcObj) {\n                nv.utils.deepExtend(dst[key], source[key]);\n            } else {\n                dst[key] = source[key];\n            }\n        }\n    });\n};\n\n\n/*\nstate utility object, used to track d3 states in the models\n*/\nnv.utils.state = function(){\n    if (!(this instanceof nv.utils.state)) {\n        return new nv.utils.state();\n    }\n    var state = {};\n    var _self = this;\n    var _setState = function(){};\n    var _getState = function(){ return {}; };\n    var init = null;\n    var changed = null;\n\n    this.dispatch = d3.dispatch('change', 'set');\n\n    this.dispatch.on('set', function(state){\n        _setState(state, true);\n    });\n\n    this.getter = function(fn){\n        _getState = fn;\n        return this;\n    };\n\n    this.setter = function(fn, callback) {\n        if (!callback) {\n            callback = function(){};\n        }\n        _setState = function(state, update){\n            fn(state);\n            if (update) {\n                callback();\n            }\n        };\n        return this;\n    };\n\n    this.init = function(state){\n        init = init || {};\n        nv.utils.deepExtend(init, state);\n    };\n\n    var _set = function(){\n        var settings = _getState();\n\n        if (JSON.stringify(settings) === JSON.stringify(state)) {\n            return false;\n        }\n\n        for (var key in settings) {\n            if (state[key] === undefined) {\n                state[key] = {};\n            }\n            state[key] = settings[key];\n            changed = true;\n        }\n        return true;\n    };\n\n    this.update = function(){\n        if (init) {\n            _setState(init, false);\n            init = null;\n        }\n        if (_set.call(this)) {\n            this.dispatch.change(state);\n        }\n    };\n\n};\n\n\n/*\nSnippet of code you can insert into each nv.models.* to give you the ability to\ndo things like:\nchart.options({\n  showXAxis: true,\n  tooltips: true\n});\n\nTo enable in the chart:\nchart.options = nv.utils.optionsFunc.bind(chart);\n*/\nnv.utils.optionsFunc = function(args) {\n    if (args) {\n        d3.map(args).forEach((function(key,value) {\n            if (nv.utils.isFunction(this[key])) {\n                this[key](value);\n            }\n        }).bind(this));\n    }\n    return this;\n};\n\n\n/*\nnumTicks:  requested number of ticks\ndata:  the chart data\n\nreturns the number of ticks to actually use on X axis, based on chart data\nto avoid duplicate ticks with the same value\n*/\nnv.utils.calcTicksX = function(numTicks, data) {\n    // find max number of values from all data streams\n    var numValues = 1;\n    var i = 0;\n    for (i; i < data.length; i += 1) {\n        var stream_len = data[i] && data[i].values ? data[i].values.length : 0;\n        numValues = stream_len > numValues ? stream_len : numValues;\n    }\n    nv.log(\"Requested number of ticks: \", numTicks);\n    nv.log(\"Calculated max values to be: \", numValues);\n    // make sure we don't have more ticks than values to avoid duplicates\n    numTicks = numTicks > numValues ? numTicks = numValues - 1 : numTicks;\n    // make sure we have at least one tick\n    numTicks = numTicks < 1 ? 1 : numTicks;\n    // make sure it's an integer\n    numTicks = Math.floor(numTicks);\n    nv.log(\"Calculating tick count as: \", numTicks);\n    return numTicks;\n};\n\n\n/*\nreturns number of ticks to actually use on Y axis, based on chart data\n*/\nnv.utils.calcTicksY = function(numTicks, data) {\n    // currently uses the same logic but we can adjust here if needed later\n    return nv.utils.calcTicksX(numTicks, data);\n};\n\n\n/*\nAdd a particular option from an options object onto chart\nOptions exposed on a chart are a getter/setter function that returns chart\non set to mimic typical d3 option chaining, e.g. svg.option1('a').option2('b');\n\noption objects should be generated via Object.create() to provide\nthe option of manipulating data via get/set functions.\n*/\nnv.utils.initOption = function(chart, name) {\n    // if it's a call option, just call it directly, otherwise do get/set\n    if (chart._calls && chart._calls[name]) {\n        chart[name] = chart._calls[name];\n    } else {\n        chart[name] = function (_) {\n            if (!arguments.length) return chart._options[name];\n            chart._overrides[name] = true;\n            chart._options[name] = _;\n            return chart;\n        };\n        // calling the option as _option will ignore if set by option already\n        // so nvd3 can set options internally but the stop if set manually\n        chart['_' + name] = function(_) {\n            if (!arguments.length) return chart._options[name];\n            if (!chart._overrides[name]) {\n                chart._options[name] = _;\n            }\n            return chart;\n        }\n    }\n};\n\n\n/*\nAdd all options in an options object to the chart\n*/\nnv.utils.initOptions = function(chart) {\n    chart._overrides = chart._overrides || {};\n    var ops = Object.getOwnPropertyNames(chart._options || {});\n    var calls = Object.getOwnPropertyNames(chart._calls || {});\n    ops = ops.concat(calls);\n    for (var i in ops) {\n        nv.utils.initOption(chart, ops[i]);\n    }\n};\n\n\n/*\nInherit options from a D3 object\nd3.rebind makes calling the function on target actually call it on source\nAlso use _d3options so we can track what we inherit for documentation and chained inheritance\n*/\nnv.utils.inheritOptionsD3 = function(target, d3_source, oplist) {\n    target._d3options = oplist.concat(target._d3options || []);\n    oplist.unshift(d3_source);\n    oplist.unshift(target);\n    d3.rebind.apply(this, oplist);\n};\n\n\n/*\nRemove duplicates from an array\n*/\nnv.utils.arrayUnique = function(a) {\n    return a.sort().filter(function(item, pos) {\n        return !pos || item != a[pos - 1];\n    });\n};\n\n\n/*\nKeeps a list of custom symbols to draw from in addition to d3.svg.symbol\nNecessary since d3 doesn't let you extend its list -_-\nAdd new symbols by doing nv.utils.symbols.set('name', function(size){...});\n*/\nnv.utils.symbolMap = d3.map();\n\n\n/*\nReplaces d3.svg.symbol so that we can look both there and our own map\n */\nnv.utils.symbol = function() {\n    var type,\n        size = 64;\n    function symbol(d,i) {\n        var t = type.call(this,d,i);\n        var s = size.call(this,d,i);\n        if (d3.svg.symbolTypes.indexOf(t) !== -1) {\n            return d3.svg.symbol().type(t).size(s)();\n        } else {\n            return nv.utils.symbolMap.get(t)(s);\n        }\n    }\n    symbol.type = function(_) {\n        if (!arguments.length) return type;\n        type = d3.functor(_);\n        return symbol;\n    };\n    symbol.size = function(_) {\n        if (!arguments.length) return size;\n        size = d3.functor(_);\n        return symbol;\n    };\n    return symbol;\n};\n\n\n/*\nInherit option getter/setter functions from source to target\nd3.rebind makes calling the function on target actually call it on source\nAlso track via _inherited and _d3options so we can track what we inherit\nfor documentation generation purposes and chained inheritance\n*/\nnv.utils.inheritOptions = function(target, source) {\n    // inherit all the things\n    var ops = Object.getOwnPropertyNames(source._options || {});\n    var calls = Object.getOwnPropertyNames(source._calls || {});\n    var inherited = source._inherited || [];\n    var d3ops = source._d3options || [];\n    var args = ops.concat(calls).concat(inherited).concat(d3ops);\n    args.unshift(source);\n    args.unshift(target);\n    d3.rebind.apply(this, args);\n    // pass along the lists to keep track of them, don't allow duplicates\n    target._inherited = nv.utils.arrayUnique(ops.concat(calls).concat(inherited).concat(ops).concat(target._inherited || []));\n    target._d3options = nv.utils.arrayUnique(d3ops.concat(target._d3options || []));\n};\n\n\n/*\nRuns common initialize code on the svg before the chart builds\n*/\nnv.utils.initSVG = function(svg) {\n    svg.classed({'nvd3-svg':true});\n};\n\n\n/*\nSanitize and provide default for the container height.\n*/\nnv.utils.sanitizeHeight = function(height, container) {\n    return (height || parseInt(container.style('height'), 10) || 400);\n};\n\n\n/*\nSanitize and provide default for the container width.\n*/\nnv.utils.sanitizeWidth = function(width, container) {\n    return (width || parseInt(container.style('width'), 10) || 960);\n};\n\n\n/*\nCalculate the available height for a chart.\n*/\nnv.utils.availableHeight = function(height, container, margin) {\n    return Math.max(0,nv.utils.sanitizeHeight(height, container) - margin.top - margin.bottom);\n};\n\n/*\nCalculate the available width for a chart.\n*/\nnv.utils.availableWidth = function(width, container, margin) {\n    return Math.max(0,nv.utils.sanitizeWidth(width, container) - margin.left - margin.right);\n};\n\n/*\nClear any rendered chart components and display a chart's 'noData' message\n*/\nnv.utils.noData = function(chart, container) {\n    var opt = chart.options(),\n        margin = opt.margin(),\n        noData = opt.noData(),\n        data = (noData == null) ? [\"No Data Available.\"] : [noData],\n        height = nv.utils.availableHeight(null, container, margin),\n        width = nv.utils.availableWidth(null, container, margin),\n        x = margin.left + width/2,\n        y = margin.top + height/2;\n\n    //Remove any previously created chart components\n    container.selectAll('g').remove();\n\n    var noDataText = container.selectAll('.nv-noData').data(data);\n\n    noDataText.enter().append('text')\n        .attr('class', 'nvd3 nv-noData')\n        .attr('dy', '-.7em')\n        .style('text-anchor', 'middle');\n\n    noDataText\n        .attr('x', x)\n        .attr('y', y)\n        .text(function(t){ return t; });\n};\n\n/*\n Wrap long labels.\n */\nnv.utils.wrapTicks = function (text, width) {\n    text.each(function() {\n        var text = d3.select(this),\n            words = text.text().split(/\\s+/).reverse(),\n            word,\n            line = [],\n            lineNumber = 0,\n            lineHeight = 1.1,\n            y = text.attr(\"y\"),\n            dy = parseFloat(text.attr(\"dy\")),\n            tspan = text.text(null).append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", dy + \"em\");\n        while (word = words.pop()) {\n            line.push(word);\n            tspan.text(line.join(\" \"));\n            if (tspan.node().getComputedTextLength() > width) {\n                line.pop();\n                tspan.text(line.join(\" \"));\n                line = [word];\n                tspan = text.append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", ++lineNumber * lineHeight + dy + \"em\").text(word);\n            }\n        }\n    });\n};\n\n/*\nCheck equality of 2 array\n*/\nnv.utils.arrayEquals = function (array1, array2) {\n    if (array1 === array2)\n        return true;\n\n    if (!array1 || !array2)\n        return false;\n\n    // compare lengths - can save a lot of time\n    if (array1.length != array2.length)\n        return false;\n\n    for (var i = 0,\n        l = array1.length; i < l; i++) {\n        // Check if we have nested arrays\n        if (array1[i] instanceof Array && array2[i] instanceof Array) {\n            // recurse into the nested arrays\n            if (!nv.arrayEquals(array1[i], array2[i]))\n                return false;\n        } else if (array1[i] != array2[i]) {\n            // Warning - two different object instances will never be equal: {x:20} != {x:20}\n            return false;\n        }\n    }\n    return true;\n};\nnv.models.axis = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var axis = d3.svg.axis();\n    var scale = d3.scale.linear();\n\n    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n        , width = 75 //only used for tickLabel currently\n        , height = 60 //only used for tickLabel currently\n        , axisLabelText = null\n        , showMaxMin = true //TODO: showMaxMin should be disabled on all ordinal scaled axes\n        , rotateLabels = 0\n        , rotateYLabel = true\n        , staggerLabels = false\n        , isOrdinal = false\n        , ticks = null\n        , axisLabelDistance = 0\n        , fontSize = undefined\n        , duration = 250\n        , dispatch = d3.dispatch('renderEnd')\n        ;\n    axis\n        .scale(scale)\n        .orient('bottom')\n        .tickFormat(function(d) { return d })\n    ;\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var scale0;\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n        renderWatch.reset();\n        selection.each(function(data) {\n            var container = d3.select(this);\n            nv.utils.initSVG(container);\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-axis').data([data]);\n            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-axis');\n            var gEnter = wrapEnter.append('g');\n            var g = wrap.select('g');\n\n            if (ticks !== null)\n                axis.ticks(ticks);\n            else if (axis.orient() == 'top' || axis.orient() == 'bottom')\n                axis.ticks(Math.abs(scale.range()[1] - scale.range()[0]) / 100);\n\n            //TODO: consider calculating width/height based on whether or not label is added, for reference in charts using this component\n            g.watchTransition(renderWatch, 'axis').call(axis);\n\n            scale0 = scale0 || axis.scale();\n\n            var fmt = axis.tickFormat();\n            if (fmt == null) {\n                fmt = scale0.tickFormat();\n            }\n\n            var axisLabel = g.selectAll('text.nv-axislabel')\n                .data([axisLabelText || null]);\n            axisLabel.exit().remove();\n\n            //only skip when fontSize is undefined so it can be cleared with a null or blank string\n            if (fontSize !== undefined) {\n                g.selectAll('g').select(\"text\").style('font-size', fontSize);\n            }\n\n            var xLabelMargin;\n            var axisMaxMin;\n            var w;\n            switch (axis.orient()) {\n                case 'top':\n                    axisLabel.enter().append('text').attr('class', 'nv-axislabel');\n                  w = 0;\n                  if (scale.range().length === 1) {\n                    w = isOrdinal ? scale.range()[0] * 2 + scale.rangeBand() : 0;\n                  } else if (scale.range().length === 2) {\n                    w = isOrdinal ? scale.range()[0] + scale.range()[1] + scale.rangeBand() : scale.range()[1];\n                  } else if ( scale.range().length > 2){\n                    w = scale.range()[scale.range().length-1]+(scale.range()[1]-scale.range()[0]);\n                  };\n                    axisLabel\n                        .attr('text-anchor', 'middle')\n                        .attr('y', 0)\n                        .attr('x', w/2);\n                    if (showMaxMin) {\n                        axisMaxMin = wrap.selectAll('g.nv-axisMaxMin')\n                            .data(scale.domain());\n                        axisMaxMin.enter().append('g').attr('class',function(d,i){\n                                return ['nv-axisMaxMin','nv-axisMaxMin-x',(i == 0 ? 'nv-axisMin-x':'nv-axisMax-x')].join(' ')\n                        }).append('text');\n                        axisMaxMin.exit().remove();\n                        axisMaxMin\n                            .attr('transform', function(d,i) {\n                                return 'translate(' + nv.utils.NaNtoZero(scale(d)) + ',0)'\n                            })\n                            .select('text')\n                            .attr('dy', '-0.5em')\n                            .attr('y', -axis.tickPadding())\n                            .attr('text-anchor', 'middle')\n                            .text(function(d,i) {\n                                var v = fmt(d);\n                                return ('' + v).match('NaN') ? '' : v;\n                            });\n                        axisMaxMin.watchTransition(renderWatch, 'min-max top')\n                            .attr('transform', function(d,i) {\n                                return 'translate(' + nv.utils.NaNtoZero(scale.range()[i]) + ',0)'\n                            });\n                    }\n                    break;\n                case 'bottom':\n                    xLabelMargin = axisLabelDistance + 36;\n                    var maxTextWidth = 30;\n                    var textHeight = 0;\n                    var xTicks = g.selectAll('g').select(\"text\");\n                    var rotateLabelsRule = '';\n                    if (rotateLabels%360) {\n                        //Reset transform on ticks so textHeight can be calculated correctly\n                        xTicks.attr('transform', ''); \n                        //Calculate the longest xTick width\n                        xTicks.each(function(d,i){\n                            var box = this.getBoundingClientRect();\n                            var width = box.width;\n                            textHeight = box.height;\n                            if(width > maxTextWidth) maxTextWidth = width;\n                        });\n                        rotateLabelsRule = 'rotate(' + rotateLabels + ' 0,' + (textHeight/2 + axis.tickPadding()) + ')';\n                        //Convert to radians before calculating sin. Add 30 to margin for healthy padding.\n                        var sin = Math.abs(Math.sin(rotateLabels*Math.PI/180));\n                        xLabelMargin = (sin ? sin*maxTextWidth : maxTextWidth)+30;\n                        //Rotate all xTicks\n                        xTicks\n                            .attr('transform', rotateLabelsRule)\n                            .style('text-anchor', rotateLabels%360 > 0 ? 'start' : 'end');\n                    } else {\n                        if (staggerLabels) {\n                            xTicks\n                                .attr('transform', function(d,i) {\n                                    return 'translate(0,' + (i % 2 == 0 ? '0' : '12') + ')'\n                                });\n                        } else {\n                            xTicks.attr('transform', \"translate(0,0)\");\n                        }\n                    }\n                    axisLabel.enter().append('text').attr('class', 'nv-axislabel');\n                    w = 0;\n                    if (scale.range().length === 1) {\n                        w = isOrdinal ? scale.range()[0] * 2 + scale.rangeBand() : 0;\n                    } else if (scale.range().length === 2) {\n                        w = isOrdinal ? scale.range()[0] + scale.range()[1] + scale.rangeBand() : scale.range()[1];\n                    } else if ( scale.range().length > 2){\n                        w = scale.range()[scale.range().length-1]+(scale.range()[1]-scale.range()[0]);\n                    };\n                    axisLabel\n                        .attr('text-anchor', 'middle')\n                        .attr('y', xLabelMargin)\n                        .attr('x', w/2);\n                    if (showMaxMin) {\n                        //if (showMaxMin && !isOrdinal) {\n                        axisMaxMin = wrap.selectAll('g.nv-axisMaxMin')\n                            //.data(scale.domain())\n                            .data([scale.domain()[0], scale.domain()[scale.domain().length - 1]]);\n                        axisMaxMin.enter().append('g').attr('class',function(d,i){\n                                return ['nv-axisMaxMin','nv-axisMaxMin-x',(i == 0 ? 'nv-axisMin-x':'nv-axisMax-x')].join(' ')\n                        }).append('text');\n                        axisMaxMin.exit().remove();\n                        axisMaxMin\n                            .attr('transform', function(d,i) {\n                                return 'translate(' + nv.utils.NaNtoZero((scale(d) + (isOrdinal ? scale.rangeBand() / 2 : 0))) + ',0)'\n                            })\n                            .select('text')\n                            .attr('dy', '.71em')\n                            .attr('y', axis.tickPadding())\n                            .attr('transform', rotateLabelsRule)\n                            .style('text-anchor', rotateLabels ? (rotateLabels%360 > 0 ? 'start' : 'end') : 'middle')\n                            .text(function(d,i) {\n                                var v = fmt(d);\n                                return ('' + v).match('NaN') ? '' : v;\n                            });\n                        axisMaxMin.watchTransition(renderWatch, 'min-max bottom')\n                            .attr('transform', function(d,i) {\n                                return 'translate(' + nv.utils.NaNtoZero((scale(d) + (isOrdinal ? scale.rangeBand() / 2 : 0))) + ',0)'\n                            });\n                    }\n\n                    break;\n                case 'right':\n                    axisLabel.enter().append('text').attr('class', 'nv-axislabel');\n                    axisLabel\n                        .style('text-anchor', rotateYLabel ? 'middle' : 'begin')\n                        .attr('transform', rotateYLabel ? 'rotate(90)' : '')\n                        .attr('y', rotateYLabel ? (-Math.max(margin.right, width) + 12 - (axisLabelDistance || 0)) : -10) //TODO: consider calculating this based on largest tick width... OR at least expose this on chart\n                        .attr('x', rotateYLabel ? (d3.max(scale.range()) / 2) : axis.tickPadding());\n                    if (showMaxMin) {\n                        axisMaxMin = wrap.selectAll('g.nv-axisMaxMin')\n                            .data(scale.domain());\n                       \taxisMaxMin.enter().append('g').attr('class',function(d,i){\n                                return ['nv-axisMaxMin','nv-axisMaxMin-y',(i == 0 ? 'nv-axisMin-y':'nv-axisMax-y')].join(' ')\n                        }).append('text')\n                            .style('opacity', 0);\n                        axisMaxMin.exit().remove();\n                        axisMaxMin\n                            .attr('transform', function(d,i) {\n                                return 'translate(0,' + nv.utils.NaNtoZero(scale(d)) + ')'\n                            })\n                            .select('text')\n                            .attr('dy', '.32em')\n                            .attr('y', 0)\n                            .attr('x', axis.tickPadding())\n                            .style('text-anchor', 'start')\n                            .text(function(d, i) {\n                                var v = fmt(d);\n                                return ('' + v).match('NaN') ? '' : v;\n                            });\n                        axisMaxMin.watchTransition(renderWatch, 'min-max right')\n                            .attr('transform', function(d,i) {\n                                return 'translate(0,' + nv.utils.NaNtoZero(scale.range()[i]) + ')'\n                            })\n                            .select('text')\n                            .style('opacity', 1);\n                    }\n                    break;\n                case 'left':\n                    /*\n                     //For dynamically placing the label. Can be used with dynamically-sized chart axis margins\n                     var yTicks = g.selectAll('g').select(\"text\");\n                     yTicks.each(function(d,i){\n                     var labelPadding = this.getBoundingClientRect().width + axis.tickPadding() + 16;\n                     if(labelPadding > width) width = labelPadding;\n                     });\n                     */\n                    axisLabel.enter().append('text').attr('class', 'nv-axislabel');\n                    axisLabel\n                        .style('text-anchor', rotateYLabel ? 'middle' : 'end')\n                        .attr('transform', rotateYLabel ? 'rotate(-90)' : '')\n                        .attr('y', rotateYLabel ? (-Math.max(margin.left, width) + 25 - (axisLabelDistance || 0)) : -10)\n                        .attr('x', rotateYLabel ? (-d3.max(scale.range()) / 2) : -axis.tickPadding());\n                    if (showMaxMin) {\n                        axisMaxMin = wrap.selectAll('g.nv-axisMaxMin')\n                            .data(scale.domain());\n                        axisMaxMin.enter().append('g').attr('class',function(d,i){\n                                return ['nv-axisMaxMin','nv-axisMaxMin-y',(i == 0 ? 'nv-axisMin-y':'nv-axisMax-y')].join(' ')\n                        }).append('text')\n                            .style('opacity', 0);\n                        axisMaxMin.exit().remove();\n                        axisMaxMin\n                            .attr('transform', function(d,i) {\n                                return 'translate(0,' + nv.utils.NaNtoZero(scale0(d)) + ')'\n                            })\n                            .select('text')\n                            .attr('dy', '.32em')\n                            .attr('y', 0)\n                            .attr('x', -axis.tickPadding())\n                            .attr('text-anchor', 'end')\n                            .text(function(d,i) {\n                                var v = fmt(d);\n                                return ('' + v).match('NaN') ? '' : v;\n                            });\n                        axisMaxMin.watchTransition(renderWatch, 'min-max right')\n                            .attr('transform', function(d,i) {\n                                return 'translate(0,' + nv.utils.NaNtoZero(scale.range()[i]) + ')'\n                            })\n                            .select('text')\n                            .style('opacity', 1);\n                    }\n                    break;\n            }\n            axisLabel.text(function(d) { return d });\n\n            if (showMaxMin && (axis.orient() === 'left' || axis.orient() === 'right')) {\n                //check if max and min overlap other values, if so, hide the values that overlap\n                g.selectAll('g') // the g's wrapping each tick\n                    .each(function(d,i) {\n                        d3.select(this).select('text').attr('opacity', 1);\n                        if (scale(d) < scale.range()[1] + 10 || scale(d) > scale.range()[0] - 10) { // 10 is assuming text height is 16... if d is 0, leave it!\n                            if (d > 1e-10 || d < -1e-10) // accounts for minor floating point errors... though could be problematic if the scale is EXTREMELY SMALL\n                                d3.select(this).attr('opacity', 0);\n\n                            d3.select(this).select('text').attr('opacity', 0); // Don't remove the ZERO line!!\n                        }\n                    });\n\n                //if Max and Min = 0 only show min, Issue #281\n                if (scale.domain()[0] == scale.domain()[1] && scale.domain()[0] == 0) {\n                    wrap.selectAll('g.nv-axisMaxMin').style('opacity', function (d, i) {\n                        return !i ? 1 : 0\n                    });\n                }\n            }\n\n            if (showMaxMin && (axis.orient() === 'top' || axis.orient() === 'bottom')) {\n                var maxMinRange = [];\n                wrap.selectAll('g.nv-axisMaxMin')\n                    .each(function(d,i) {\n                        try {\n                            if (i) // i== 1, max position\n                                maxMinRange.push(scale(d) - this.getBoundingClientRect().width - 4);  //assuming the max and min labels are as wide as the next tick (with an extra 4 pixels just in case)\n                            else // i==0, min position\n                                maxMinRange.push(scale(d) + this.getBoundingClientRect().width + 4)\n                        }catch (err) {\n                            if (i) // i== 1, max position\n                                maxMinRange.push(scale(d) - 4);  //assuming the max and min labels are as wide as the next tick (with an extra 4 pixels just in case)\n                            else // i==0, min position\n                                maxMinRange.push(scale(d) + 4);\n                        }\n                    });\n                // the g's wrapping each tick\n                g.selectAll('g').each(function(d, i) {\n                    if (scale(d) < maxMinRange[0] || scale(d) > maxMinRange[1]) {\n                        if (d > 1e-10 || d < -1e-10) // accounts for minor floating point errors... though could be problematic if the scale is EXTREMELY SMALL\n                            d3.select(this).remove();\n                        else\n                            d3.select(this).select('text').remove(); // Don't remove the ZERO line!!\n                    }\n                });\n            }\n\n            //Highlight zero tick line\n            g.selectAll('.tick')\n                .filter(function (d) {\n                    /*\n                    The filter needs to return only ticks at or near zero.\n                    Numbers like 0.00001 need to count as zero as well,\n                    and the arithmetic trick below solves that.\n                    */\n                    return !parseFloat(Math.round(d * 100000) / 1000000) && (d !== undefined)\n                }) \n                .classed('zero', true);\n            \n            //store old scales for use in transitions on update\n            scale0 = scale.copy();\n\n        });\n\n        renderWatch.renderEnd('axis immediate');\n        return chart;\n    }\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    // expose chart's sub-components\n    chart.axis = axis;\n    chart.dispatch = dispatch;\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        axisLabelDistance: {get: function(){return axisLabelDistance;}, set: function(_){axisLabelDistance=_;}},\n        staggerLabels:     {get: function(){return staggerLabels;}, set: function(_){staggerLabels=_;}},\n        rotateLabels:      {get: function(){return rotateLabels;}, set: function(_){rotateLabels=_;}},\n        rotateYLabel:      {get: function(){return rotateYLabel;}, set: function(_){rotateYLabel=_;}},\n        showMaxMin:        {get: function(){return showMaxMin;}, set: function(_){showMaxMin=_;}},\n        axisLabel:         {get: function(){return axisLabelText;}, set: function(_){axisLabelText=_;}},\n        height:            {get: function(){return height;}, set: function(_){height=_;}},\n        ticks:             {get: function(){return ticks;}, set: function(_){ticks=_;}},\n        width:             {get: function(){return width;}, set: function(_){width=_;}},\n        fontSize:          {get: function(){return fontSize;}, set: function(_){fontSize=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top !== undefined    ? _.top    : margin.top;\n            margin.right  = _.right !== undefined  ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left !== undefined   ? _.left   : margin.left;\n        }},\n        duration: {get: function(){return duration;}, set: function(_){\n            duration=_;\n            renderWatch.reset(duration);\n        }},\n        scale: {get: function(){return scale;}, set: function(_){\n            scale = _;\n            axis.scale(scale);\n            isOrdinal = typeof scale.rangeBands === 'function';\n            nv.utils.inheritOptionsD3(chart, scale, ['domain', 'range', 'rangeBand', 'rangeBands']);\n        }}\n    });\n\n    nv.utils.initOptions(chart);\n    nv.utils.inheritOptionsD3(chart, axis, ['orient', 'tickValues', 'tickSubdivide', 'tickSize', 'tickPadding', 'tickFormat']);\n    nv.utils.inheritOptionsD3(chart, scale, ['domain', 'range', 'rangeBand', 'rangeBands']);\n\n    return chart;\n};\nnv.models.boxPlot = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {top: 0, right: 0, bottom: 0, left: 0},\n        width = 960,\n        height = 500,\n        id = Math.floor(Math.random() * 10000), // Create semi-unique ID in case user doesn't select one\n        xScale = d3.scale.ordinal(),\n        yScale = d3.scale.linear(),\n        getX  = function(d) { return d.label }, // Default data model selectors.\n        getQ1 = function(d) { return d.values.Q1 },\n        getQ2 = function(d) { return d.values.Q2 },\n        getQ3 = function(d) { return d.values.Q3 },\n        getWl = function(d) { return d.values.whisker_low },\n        getWh = function(d) { return d.values.whisker_high },\n        getColor = function(d) { return d.color },\n        getOlItems  = function(d) { return d.values.outliers },\n        getOlValue = function(d, i, j) { return d },\n        getOlLabel = function(d, i, j) { return d },\n        getOlColor = function(d, i, j) { return undefined },\n        color = nv.utils.defaultColor(),\n        container = null,\n        xDomain, xRange,\n        yDomain, yRange,\n        dispatch = d3.dispatch('elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd'),\n        duration = 250,\n        maxBoxWidth = null;\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var xScale0, yScale0;\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n        renderWatch.reset();\n        selection.each(function(data) {\n            var availableWidth = width - margin.left - margin.right,\n                availableHeight = height - margin.top - margin.bottom;\n\n            container = d3.select(this);\n            nv.utils.initSVG(container);\n\n            // Setup Scales\n            xScale.domain(xDomain || data.map(function(d,i) { return getX(d,i); }))\n                .rangeBands(xRange || [0, availableWidth], 0.1);\n\n            // if we know yDomain, no need to calculate\n            var yData = []\n            if (!yDomain) {\n                // (y-range is based on quartiles, whiskers and outliers)\n                var values = [], yMin, yMax;\n                data.forEach(function (d, i) {\n                    var q1 = getQ1(d), q3 = getQ3(d), wl = getWl(d), wh = getWh(d);\n                    var olItems = getOlItems(d);\n                    if (olItems) {\n                        olItems.forEach(function (e, i) {\n                            values.push(getOlValue(e, i, undefined));\n                        });\n                    }\n                    if (wl) { values.push(wl) }\n                    if (q1) { values.push(q1) }\n                    if (q3) { values.push(q3) }\n                    if (wh) { values.push(wh) }\n                });\n                yMin = d3.min(values);\n                yMax = d3.max(values);\n                yData = [ yMin, yMax ] ;\n            }\n\n            yScale.domain(yDomain || yData);\n            yScale.range(yRange || [availableHeight, 0]);\n\n            //store old scales if they exist\n            xScale0 = xScale0 || xScale;\n            yScale0 = yScale0 || yScale.copy().range([yScale(0),yScale(0)]);\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap').data([data]);\n            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap');\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            var boxplots = wrap.selectAll('.nv-boxplot').data(function(d) { return d });\n            var boxEnter = boxplots.enter().append('g').style('stroke-opacity', 1e-6).style('fill-opacity', 1e-6);\n            boxplots\n                .attr('class', 'nv-boxplot')\n                .attr('transform', function(d,i,j) { return 'translate(' + (xScale(getX(d,i)) + xScale.rangeBand() * 0.05) + ', 0)'; })\n                .classed('hover', function(d) { return d.hover });\n            boxplots\n                .watchTransition(renderWatch, 'nv-boxplot: boxplots')\n                .style('stroke-opacity', 1)\n                .style('fill-opacity', 0.75)\n                .delay(function(d,i) { return i * duration / data.length })\n                .attr('transform', function(d,i) {\n                    return 'translate(' + (xScale(getX(d,i)) + xScale.rangeBand() * 0.05) + ', 0)';\n                });\n            boxplots.exit().remove();\n\n            // ----- add the SVG elements for each boxPlot -----\n\n            // conditionally append whisker lines\n            boxEnter.each(function(d,i) {\n                var box = d3.select(this);\n                [getWl, getWh].forEach(function (f) {\n                    if (f(d) !== undefined && f(d) !== null) {\n                        var key = (f === getWl) ? 'low' : 'high';\n                        box.append('line')\n                          .style('stroke', getColor(d) || color(d,i))\n                          .attr('class', 'nv-boxplot-whisker nv-boxplot-' + key);\n                        box.append('line')\n                          .style('stroke', getColor(d) || color(d,i))\n                          .attr('class', 'nv-boxplot-tick nv-boxplot-' + key);\n                    }\n                });\n            });\n\n            var box_width = function() { return (maxBoxWidth === null ? xScale.rangeBand() * 0.9 : Math.min(75, xScale.rangeBand() * 0.9)); };\n            var box_left  = function() { return xScale.rangeBand() * 0.45 - box_width()/2; };\n            var box_right = function() { return xScale.rangeBand() * 0.45 + box_width()/2; };\n\n            // update whisker lines and ticks\n            [getWl, getWh].forEach(function (f) {\n                var key = (f === getWl) ? 'low' : 'high';\n                var endpoint = (f === getWl) ? getQ1 : getQ3;\n                boxplots.select('line.nv-boxplot-whisker.nv-boxplot-' + key)\n                  .watchTransition(renderWatch, 'nv-boxplot: boxplots')\n                    .attr('x1', xScale.rangeBand() * 0.45 )\n                    .attr('y1', function(d,i) { return yScale(f(d)); })\n                    .attr('x2', xScale.rangeBand() * 0.45 )\n                    .attr('y2', function(d,i) { return yScale(endpoint(d)); });\n                boxplots.select('line.nv-boxplot-tick.nv-boxplot-' + key)\n                  .watchTransition(renderWatch, 'nv-boxplot: boxplots')\n                    .attr('x1', box_left )\n                    .attr('y1', function(d,i) { return yScale(f(d)); })\n                    .attr('x2', box_right )\n                    .attr('y2', function(d,i) { return yScale(f(d)); });\n            });\n\n            [getWl, getWh].forEach(function (f) {\n                var key = (f === getWl) ? 'low' : 'high';\n                boxEnter.selectAll('.nv-boxplot-' + key)\n                  .on('mouseover', function(d,i,j) {\n                      d3.select(this).classed('hover', true);\n                      dispatch.elementMouseover({\n                          series: { key: f(d), color: getColor(d) || color(d,j) },\n                          e: d3.event\n                      });\n                  })\n                  .on('mouseout', function(d,i,j) {\n                      d3.select(this).classed('hover', false);\n                      dispatch.elementMouseout({\n                          series: { key: f(d), color: getColor(d) || color(d,j) },\n                          e: d3.event\n                      });\n                  })\n                  .on('mousemove', function(d,i) {\n                      dispatch.elementMousemove({e: d3.event});\n                  });\n            });\n\n            // boxes\n            boxEnter.append('rect')\n                .attr('class', 'nv-boxplot-box')\n                // tooltip events\n                .on('mouseover', function(d,i) {\n                    d3.select(this).classed('hover', true);\n                    dispatch.elementMouseover({\n                        key: getX(d),\n                        value: getX(d),\n                        series: [\n                            { key: 'Q3', value: getQ3(d), color: getColor(d) || color(d,i) },\n                            { key: 'Q2', value: getQ2(d), color: getColor(d) || color(d,i) },\n                            { key: 'Q1', value: getQ1(d), color: getColor(d) || color(d,i) }\n                        ],\n                        data: d,\n                        index: i,\n                        e: d3.event\n                    });\n                })\n                .on('mouseout', function(d,i) {\n                    d3.select(this).classed('hover', false);\n                    dispatch.elementMouseout({\n                        key: getX(d),\n                        value: getX(d),\n                        series: [\n                            { key: 'Q3', value: getQ3(d), color: getColor(d) || color(d,i) },\n                            { key: 'Q2', value: getQ2(d), color: getColor(d) || color(d,i) },\n                            { key: 'Q1', value: getQ1(d), color: getColor(d) || color(d,i) }\n                        ],\n                        data: d,\n                        index: i,\n                        e: d3.event\n                    });\n                })\n                .on('mousemove', function(d,i) {\n                    dispatch.elementMousemove({e: d3.event});\n                });\n\n            // box transitions\n            boxplots.select('rect.nv-boxplot-box')\n              .watchTransition(renderWatch, 'nv-boxplot: boxes')\n                .attr('y', function(d,i) { return yScale(getQ3(d)); })\n                .attr('width', box_width)\n                .attr('x', box_left )\n                .attr('height', function(d,i) { return Math.abs(yScale(getQ3(d)) - yScale(getQ1(d))) || 1 })\n                .style('fill', function(d,i) { return getColor(d) || color(d,i) })\n                .style('stroke', function(d,i) { return getColor(d) || color(d,i) });\n\n            // median line\n            boxEnter.append('line').attr('class', 'nv-boxplot-median');\n\n            boxplots.select('line.nv-boxplot-median')\n              .watchTransition(renderWatch, 'nv-boxplot: boxplots line')\n                .attr('x1', box_left)\n                .attr('y1', function(d,i) { return yScale(getQ2(d)); })\n                .attr('x2', box_right)\n                .attr('y2', function(d,i) { return yScale(getQ2(d)); });\n\n            // outliers\n            var outliers = boxplots.selectAll('.nv-boxplot-outlier').data(function(d) {\n                return getOlItems(d) || [];\n            });\n            outliers.enter().append('circle')\n                .style('fill', function(d,i,j) { return getOlColor(d,i,j) || color(d,j) })\n                .style('stroke', function(d,i,j) { return getOlColor(d,i,j) || color(d,j) })\n                .style('z-index', 9000)\n                .on('mouseover', function(d,i,j) {\n                    d3.select(this).classed('hover', true);\n                    dispatch.elementMouseover({\n                        series: { key: getOlLabel(d,i,j), color: getOlColor(d,i,j) || color(d,j) },\n                        e: d3.event\n                    });\n                })\n                .on('mouseout', function(d,i,j) {\n                    d3.select(this).classed('hover', false);\n                    dispatch.elementMouseout({\n                        series: { key: getOlLabel(d,i,j), color: getOlColor(d,i,j) || color(d,j) },\n                        e: d3.event\n                    });\n                })\n                .on('mousemove', function(d,i) {\n                    dispatch.elementMousemove({e: d3.event});\n                });\n            outliers.attr('class', 'nv-boxplot-outlier');\n            outliers\n              .watchTransition(renderWatch, 'nv-boxplot: nv-boxplot-outlier')\n                .attr('cx', xScale.rangeBand() * 0.45)\n                .attr('cy', function(d,i,j) { return yScale(getOlValue(d,i,j)); })\n                .attr('r', '3');\n            outliers.exit().remove();\n\n            //store old scales for use in transitions on update\n            xScale0 = xScale.copy();\n            yScale0 = yScale.copy();\n        });\n\n        renderWatch.renderEnd('nv-boxplot immediate');\n        return chart;\n    }\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:       {get: function(){return width;}, set: function(_){width=_;}},\n        height:      {get: function(){return height;}, set: function(_){height=_;}},\n        maxBoxWidth: {get: function(){return maxBoxWidth;}, set: function(_){maxBoxWidth=_;}},\n        x:           {get: function(){return getX;}, set: function(_){getX=_;}},\n        q1: {get: function(){return getQ1;}, set: function(_){getQ1=_;}},\n        q2: {get: function(){return getQ2;}, set: function(_){getQ2=_;}},\n        q3: {get: function(){return getQ3;}, set: function(_){getQ3=_;}},\n        wl: {get: function(){return getWl;}, set: function(_){getWl=_;}},\n        wh: {get: function(){return getWh;}, set: function(_){getWh=_;}},\n        itemColor:    {get: function(){return getColor;}, set: function(_){getColor=_;}},\n        outliers:     {get: function(){return getOlItems;}, set: function(_){getOlItems=_;}},\n        outlierValue: {get: function(){return getOlValue;}, set: function(_){getOlValue=_;}},\n        outlierLabel: {get: function(){return getOlLabel;}, set: function(_){getOlLabel=_;}},\n        outlierColor: {get: function(){return getOlColor;}, set: function(_){getOlColor=_;}},\n        xScale:  {get: function(){return xScale;}, set: function(_){xScale=_;}},\n        yScale:  {get: function(){return yScale;}, set: function(_){yScale=_;}},\n        xDomain: {get: function(){return xDomain;}, set: function(_){xDomain=_;}},\n        yDomain: {get: function(){return yDomain;}, set: function(_){yDomain=_;}},\n        xRange:  {get: function(){return xRange;}, set: function(_){xRange=_;}},\n        yRange:  {get: function(){return yRange;}, set: function(_){yRange=_;}},\n        id:          {get: function(){return id;}, set: function(_){id=_;}},\n        // rectClass: {get: function(){return rectClass;}, set: function(_){rectClass=_;}},\n        y: {\n            get: function() {\n                console.warn('BoxPlot \\'y\\' chart option is deprecated. Please use model overrides instead.');\n                return {};\n            },\n            set: function(_) {\n                console.warn('BoxPlot \\'y\\' chart option is deprecated. Please use model overrides instead.');\n            }\n        },\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n        }},\n        duration: {get: function(){return duration;}, set: function(_){\n            duration = _;\n            renderWatch.reset(duration);\n        }}\n    });\n\n    nv.utils.initOptions(chart);\n\n    return chart;\n};\nnv.models.boxPlotChart = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var boxplot = nv.models.boxPlot(),\n        xAxis = nv.models.axis(),\n        yAxis = nv.models.axis();\n\n    var margin = {top: 15, right: 10, bottom: 50, left: 60},\n        width = null,\n        height = null,\n        color = nv.utils.getColor(),\n        showXAxis = true,\n        showYAxis = true,\n        rightAlignYAxis = false,\n        staggerLabels = false,\n        tooltip = nv.models.tooltip(),\n        x, y,\n        noData = 'No Data Available.',\n        dispatch = d3.dispatch('beforeUpdate', 'renderEnd'),\n        duration = 250;\n\n    xAxis\n        .orient('bottom')\n        .showMaxMin(false)\n        .tickFormat(function(d) { return d })\n    ;\n    yAxis\n        .orient((rightAlignYAxis) ? 'right' : 'left')\n        .tickFormat(d3.format(',.1f'))\n    ;\n\n    tooltip.duration(0);\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n        renderWatch.reset();\n        renderWatch.models(boxplot);\n        if (showXAxis) renderWatch.models(xAxis);\n        if (showYAxis) renderWatch.models(yAxis);\n\n        selection.each(function(data) {\n            var container = d3.select(this), that = this;\n            nv.utils.initSVG(container);\n            var availableWidth = (width  || parseInt(container.style('width')) || 960) - margin.left - margin.right;\n            var availableHeight = (height || parseInt(container.style('height')) || 400) - margin.top - margin.bottom;\n\n            chart.update = function() {\n                dispatch.beforeUpdate();\n                container.transition().duration(duration).call(chart);\n            };\n            chart.container = this;\n\n            // TODO still need to find a way to validate quartile data presence using boxPlot callbacks.\n            // Display No Data message if there's nothing to show. (quartiles required at minimum).\n            if (!data || !data.length) {\n                var noDataText = container.selectAll('.nv-noData').data([noData]);\n\n                noDataText.enter().append('text')\n                    .attr('class', 'nvd3 nv-noData')\n                    .attr('dy', '-.7em')\n                    .style('text-anchor', 'middle');\n\n                noDataText\n                    .attr('x', margin.left + availableWidth / 2)\n                    .attr('y', margin.top + availableHeight / 2)\n                    .text(function(d) { return d });\n\n                return chart;\n            } else {\n                container.selectAll('.nv-noData').remove();\n            }\n\n            // Setup Scales\n            x = boxplot.xScale();\n            y = boxplot.yScale().clamp(true);\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-boxPlotWithAxes').data([data]);\n            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-boxPlotWithAxes').append('g');\n            var defsEnter = gEnter.append('defs');\n            var g = wrap.select('g');\n\n            gEnter.append('g').attr('class', 'nv-x nv-axis');\n            gEnter.append('g').attr('class', 'nv-y nv-axis')\n                .append('g').attr('class', 'nv-zeroLine')\n                .append('line');\n\n            gEnter.append('g').attr('class', 'nv-barsWrap');\n            g.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            if (rightAlignYAxis) {\n                g.select('.nv-y.nv-axis')\n                    .attr('transform', 'translate(' + availableWidth + ',0)');\n            }\n\n            // Main Chart Component(s)\n            boxplot.width(availableWidth).height(availableHeight);\n\n            var barsWrap = g.select('.nv-barsWrap')\n                .datum(data.filter(function(d) { return !d.disabled }))\n\n            barsWrap.transition().call(boxplot);\n\n            defsEnter.append('clipPath')\n                .attr('id', 'nv-x-label-clip-' + boxplot.id())\n                .append('rect');\n\n            g.select('#nv-x-label-clip-' + boxplot.id() + ' rect')\n                .attr('width', x.rangeBand() * (staggerLabels ? 2 : 1))\n                .attr('height', 16)\n                .attr('x', -x.rangeBand() / (staggerLabels ? 1 : 2 ));\n\n            // Setup Axes\n            if (showXAxis) {\n                xAxis\n                    .scale(x)\n                    .ticks( nv.utils.calcTicksX(availableWidth/100, data) )\n                    .tickSize(-availableHeight, 0);\n\n                g.select('.nv-x.nv-axis').attr('transform', 'translate(0,' + y.range()[0] + ')');\n                g.select('.nv-x.nv-axis').call(xAxis);\n\n                var xTicks = g.select('.nv-x.nv-axis').selectAll('g');\n                if (staggerLabels) {\n                    xTicks\n                        .selectAll('text')\n                        .attr('transform', function(d,i,j) { return 'translate(0,' + (j % 2 === 0 ? '5' : '17') + ')' })\n                }\n            }\n\n            if (showYAxis) {\n                yAxis\n                    .scale(y)\n                    .ticks( Math.floor(availableHeight/36) ) // can't use nv.utils.calcTicksY with Object data\n                    .tickSize( -availableWidth, 0);\n\n                g.select('.nv-y.nv-axis').call(yAxis);\n            }\n\n            // Zero line\n            g.select('.nv-zeroLine line')\n                .attr('x1',0)\n                .attr('x2',availableWidth)\n                .attr('y1', y(0))\n                .attr('y2', y(0))\n            ;\n\n            //============================================================\n            // Event Handling/Dispatching (in chart's scope)\n            //------------------------------------------------------------\n        });\n\n        renderWatch.renderEnd('nv-boxplot chart immediate');\n        return chart;\n    }\n\n    //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n    boxplot.dispatch.on('elementMouseover.tooltip', function(evt) {\n        tooltip.data(evt).hidden(false);\n    });\n\n    boxplot.dispatch.on('elementMouseout.tooltip', function(evt) {\n        tooltip.data(evt).hidden(true);\n    });\n\n    boxplot.dispatch.on('elementMousemove.tooltip', function(evt) {\n        tooltip();\n    });\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n    chart.boxplot = boxplot;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.tooltip = tooltip;\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:      {get: function(){return width;}, set: function(_){width=_;}},\n        height:     {get: function(){return height;}, set: function(_){height=_;}},\n        staggerLabels: {get: function(){return staggerLabels;}, set: function(_){staggerLabels=_;}},\n        showXAxis: {get: function(){return showXAxis;}, set: function(_){showXAxis=_;}},\n        showYAxis: {get: function(){return showYAxis;}, set: function(_){showYAxis=_;}},\n        tooltipContent:    {get: function(){return tooltip;}, set: function(_){tooltip=_;}},\n        noData:    {get: function(){return noData;}, set: function(_){noData=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        duration: {get: function(){return duration;}, set: function(_){\n            duration = _;\n            renderWatch.reset(duration);\n            boxplot.duration(duration);\n            xAxis.duration(duration);\n            yAxis.duration(duration);\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n            boxplot.color(color);\n        }},\n        rightAlignYAxis: {get: function(){return rightAlignYAxis;}, set: function(_){\n            rightAlignYAxis = _;\n            yAxis.orient( (_) ? 'right' : 'left');\n        }}\n    });\n\n    nv.utils.inheritOptions(chart, boxplot);\n    nv.utils.initOptions(chart);\n\n    return chart;\n}\n\n// Chart design based on the recommendations of Stephen Few. Implementation\n// based on the work of Clint Ivy, Jamie Love, and Jason Davies.\n// http://projects.instantcognition.com/protovis/bulletchart/\n\nnv.models.bullet = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n        , orient = 'left' // TODO top & bottom\n        , reverse = false\n        , ranges = function(d) { return d.ranges }\n        , markers = function(d) { return d.markers ? d.markers : [] }\n        , markerLines = function(d) { return d.markerLines ? d.markerLines : [0] }\n        , measures = function(d) { return d.measures }\n        , rangeLabels = function(d) { return d.rangeLabels ? d.rangeLabels : [] }\n        , markerLabels = function(d) { return d.markerLabels ? d.markerLabels : []  }\n        , markerLineLabels = function(d) { return d.markerLineLabels ? d.markerLineLabels : []  }\n        , measureLabels = function(d) { return d.measureLabels ? d.measureLabels : []  }\n        , forceX = [0] // List of numbers to Force into the X scale (ie. 0, or a max / min, etc.)\n        , width = 380\n        , height = 30\n        , container = null\n        , tickFormat = null\n        , color = nv.utils.getColor(['#1f77b4'])\n        , dispatch = d3.dispatch('elementMouseover', 'elementMouseout', 'elementMousemove')\n        , defaultRangeLabels = [\"Maximum\", \"Mean\", \"Minimum\"]\n        , legacyRangeClassNames = [\"Max\", \"Avg\", \"Min\"]\n        , duration = 1000\n        ;\n\n    function sortLabels(labels, values){\n        var lz = labels.slice();\n        labels.sort(function(a, b){\n            var iA = lz.indexOf(a);\n            var iB = lz.indexOf(b);\n            return d3.descending(values[iA], values[iB]);\n        });\n    };\n\n    function chart(selection) {\n        selection.each(function(d, i) {\n            var availableWidth = width - margin.left - margin.right,\n                availableHeight = height - margin.top - margin.bottom;\n\n            container = d3.select(this);\n            nv.utils.initSVG(container);\n\n            var rangez = ranges.call(this, d, i).slice(),\n                markerz = markers.call(this, d, i).slice(),\n                markerLinez = markerLines.call(this, d, i).slice(),\n                measurez = measures.call(this, d, i).slice(),\n                rangeLabelz = rangeLabels.call(this, d, i).slice(),\n                markerLabelz = markerLabels.call(this, d, i).slice(),\n                markerLineLabelz = markerLineLabels.call(this, d, i).slice(),\n                measureLabelz = measureLabels.call(this, d, i).slice();\n\n            // Sort labels according to their sorted values\n            sortLabels(rangeLabelz, rangez);\n            sortLabels(markerLabelz, markerz);\n            sortLabels(markerLineLabelz, markerLinez);\n            sortLabels(measureLabelz, measurez);\n\n            // sort values descending\n            rangez.sort(d3.descending);\n            markerz.sort(d3.descending);\n            markerLinez.sort(d3.descending);\n            measurez.sort(d3.descending);\n\n            // Setup Scales\n            // Compute the new x-scale.\n            var x1 = d3.scale.linear()\n                .domain( d3.extent(d3.merge([forceX, rangez])) )\n                .range(reverse ? [availableWidth, 0] : [0, availableWidth]);\n\n            // Retrieve the old x-scale, if this is an update.\n            var x0 = this.__chart__ || d3.scale.linear()\n                .domain([0, Infinity])\n                .range(x1.range());\n\n            // Stash the new scale.\n            this.__chart__ = x1;\n\n            var rangeMin = d3.min(rangez), //rangez[2]\n                rangeMax = d3.max(rangez), //rangez[0]\n                rangeAvg = rangez[1];\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-bullet').data([d]);\n            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-bullet');\n            var gEnter = wrapEnter.append('g');\n            var g = wrap.select('g');\n\n            for(var i=0,il=rangez.length; i<il; i++){\n                var rangeClassNames = 'nv-range nv-range'+i;\n                if(i <= 2){\n                    rangeClassNames = rangeClassNames + ' nv-range'+legacyRangeClassNames[i];\n                }\n                gEnter.append('rect').attr('class', rangeClassNames);\n            }\n\n            gEnter.append('rect').attr('class', 'nv-measure');\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            var w0 = function(d) { return Math.abs(x0(d) - x0(0)) }, // TODO: could optimize by precalculating x0(0) and x1(0)\n                w1 = function(d) { return Math.abs(x1(d) - x1(0)) };\n            var xp0 = function(d) { return d < 0 ? x0(d) : x0(0) },\n                xp1 = function(d) { return d < 0 ? x1(d) : x1(0) };\n\n            for(var i=0,il=rangez.length; i<il; i++){\n                var range = rangez[i];\n                g.select('rect.nv-range'+i)\n                    .datum(range)\n                    .attr('height', availableHeight)\n                    .transition()\n                    .duration(duration)\n                    .attr('width', w1(range))\n                    .attr('x', xp1(range))\n            }\n\n            g.select('rect.nv-measure')\n                .style('fill', color)\n                .attr('height', availableHeight / 3)\n                .attr('y', availableHeight / 3)\n                .on('mouseover', function() {\n                    dispatch.elementMouseover({\n                        value: measurez[0],\n                        label: measureLabelz[0] || 'Current',\n                        color: d3.select(this).style(\"fill\")\n                    })\n                })\n                .on('mousemove', function() {\n                    dispatch.elementMousemove({\n                        value: measurez[0],\n                        label: measureLabelz[0] || 'Current',\n                        color: d3.select(this).style(\"fill\")\n                    })\n                })\n                .on('mouseout', function() {\n                    dispatch.elementMouseout({\n                        value: measurez[0],\n                        label: measureLabelz[0] || 'Current',\n                        color: d3.select(this).style(\"fill\")\n                    })\n                })\n                .transition()\n                .duration(duration)\n                .attr('width', measurez < 0 ?\n                    x1(0) - x1(measurez[0])\n                    : x1(measurez[0]) - x1(0))\n                .attr('x', xp1(measurez));\n\n            var h3 =  availableHeight / 6;\n\n            var markerData = markerz.map( function(marker, index) {\n                return {value: marker, label: markerLabelz[index]}\n            });\n            gEnter\n              .selectAll(\"path.nv-markerTriangle\")\n              .data(markerData)\n              .enter()\n              .append('path')\n              .attr('class', 'nv-markerTriangle')\n              .attr('d', 'M0,' + h3 + 'L' + h3 + ',' + (-h3) + ' ' + (-h3) + ',' + (-h3) + 'Z')\n              .on('mouseover', function(d) {\n                dispatch.elementMouseover({\n                  value: d.value,\n                  label: d.label || 'Previous',\n                  color: d3.select(this).style(\"fill\"),\n                  pos: [x1(d.value), availableHeight/2]\n                })\n\n              })\n              .on('mousemove', function(d) {\n                  dispatch.elementMousemove({\n                      value: d.value,\n                      label: d.label || 'Previous',\n                      color: d3.select(this).style(\"fill\")\n                  })\n              })\n              .on('mouseout', function(d, i) {\n                  dispatch.elementMouseout({\n                      value: d.value,\n                      label: d.label || 'Previous',\n                      color: d3.select(this).style(\"fill\")\n                  })\n              });\n\n            g.selectAll(\"path.nv-markerTriangle\")\n              .data(markerData)\n              .transition()\n              .duration(duration)\n              .attr('transform', function(d) { return 'translate(' + x1(d.value) + ',' + (availableHeight / 2) + ')' });\n\n            var markerLinesData = markerLinez.map( function(marker, index) {\n                return {value: marker, label: markerLineLabelz[index]}\n            });\n            gEnter\n              .selectAll(\"line.nv-markerLine\")\n              .data(markerLinesData)\n              .enter()\n              .append('line')\n              .attr('cursor', '')\n              .attr('class', 'nv-markerLine')\n              .attr('x1', function(d) { return x1(d.value) })\n              .attr('y1', '2')\n              .attr('x2', function(d) { return x1(d.value) })\n              .attr('y2', availableHeight - 2)\n              .on('mouseover', function(d) {\n                dispatch.elementMouseover({\n                  value: d.value,\n                  label: d.label || 'Previous',\n                  color: d3.select(this).style(\"fill\"),\n                  pos: [x1(d.value), availableHeight/2]\n                })\n\n              })\n              .on('mousemove', function(d) {\n                  dispatch.elementMousemove({\n                      value: d.value,\n                      label: d.label || 'Previous',\n                      color: d3.select(this).style(\"fill\")\n                  })\n              })\n              .on('mouseout', function(d, i) {\n                  dispatch.elementMouseout({\n                      value: d.value,\n                      label: d.label || 'Previous',\n                      color: d3.select(this).style(\"fill\")\n                  })\n              });\n\n            g.selectAll(\"line.nv-markerLine\")\n              .data(markerLinesData)\n              .transition()\n              .duration(duration)\n              .attr('x1', function(d) { return x1(d.value) })\n              .attr('x2', function(d) { return x1(d.value) });\n\n            wrap.selectAll('.nv-range')\n                .on('mouseover', function(d,i) {\n                    var label = rangeLabelz[i] || defaultRangeLabels[i];\n                    dispatch.elementMouseover({\n                        value: d,\n                        label: label,\n                        color: d3.select(this).style(\"fill\")\n                    })\n                })\n                .on('mousemove', function() {\n                    dispatch.elementMousemove({\n                        value: measurez[0],\n                        label: measureLabelz[0] || 'Previous',\n                        color: d3.select(this).style(\"fill\")\n                    })\n                })\n                .on('mouseout', function(d,i) {\n                    var label = rangeLabelz[i] || defaultRangeLabels[i];\n                    dispatch.elementMouseout({\n                        value: d,\n                        label: label,\n                        color: d3.select(this).style(\"fill\")\n                    })\n                });\n        });\n\n        return chart;\n    }\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        ranges:      {get: function(){return ranges;}, set: function(_){ranges=_;}}, // ranges (bad, satisfactory, good)\n        markers:     {get: function(){return markers;}, set: function(_){markers=_;}}, // markers (previous, goal)\n        measures: {get: function(){return measures;}, set: function(_){measures=_;}}, // measures (actual, forecast)\n        forceX:      {get: function(){return forceX;}, set: function(_){forceX=_;}},\n        width:    {get: function(){return width;}, set: function(_){width=_;}},\n        height:    {get: function(){return height;}, set: function(_){height=_;}},\n        tickFormat:    {get: function(){return tickFormat;}, set: function(_){tickFormat=_;}},\n        duration:    {get: function(){return duration;}, set: function(_){duration=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        orient: {get: function(){return orient;}, set: function(_){ // left, right, top, bottom\n            orient = _;\n            reverse = orient == 'right' || orient == 'bottom';\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n        }}\n    });\n\n    nv.utils.initOptions(chart);\n    return chart;\n};\n\n\n\n// Chart design based on the recommendations of Stephen Few. Implementation\n// based on the work of Clint Ivy, Jamie Love, and Jason Davies.\n// http://projects.instantcognition.com/protovis/bulletchart/\nnv.models.bulletChart = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var bullet = nv.models.bullet();\n    var tooltip = nv.models.tooltip();\n\n    var orient = 'left' // TODO top & bottom\n        , reverse = false\n        , margin = {top: 5, right: 40, bottom: 20, left: 120}\n        , ranges = function(d) { return d.ranges }\n        , markers = function(d) { return d.markers ? d.markers : [] }\n        , measures = function(d) { return d.measures }\n        , width = null\n        , height = 55\n        , tickFormat = null\n        , ticks = null\n        , noData = null\n        , dispatch = d3.dispatch()\n        ;\n\n    tooltip\n        .duration(0)\n        .headerEnabled(false);\n\n    function chart(selection) {\n        selection.each(function(d, i) {\n            var container = d3.select(this);\n            nv.utils.initSVG(container);\n\n            var availableWidth = nv.utils.availableWidth(width, container, margin),\n                availableHeight = height - margin.top - margin.bottom,\n                that = this;\n\n            chart.update = function() { chart(selection) };\n            chart.container = this;\n\n            // Display No Data message if there's nothing to show.\n            if (!d || !ranges.call(this, d, i)) {\n                nv.utils.noData(chart, container)\n                return chart;\n            } else {\n                container.selectAll('.nv-noData').remove();\n            }\n\n            var rangez = ranges.call(this, d, i).slice().sort(d3.descending),\n                markerz = markers.call(this, d, i).slice().sort(d3.descending),\n                measurez = measures.call(this, d, i).slice().sort(d3.descending);\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-bulletChart').data([d]);\n            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-bulletChart');\n            var gEnter = wrapEnter.append('g');\n            var g = wrap.select('g');\n\n            gEnter.append('g').attr('class', 'nv-bulletWrap');\n            gEnter.append('g').attr('class', 'nv-titles');\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            // Compute the new x-scale.\n            var x1 = d3.scale.linear()\n                .domain([0, Math.max(rangez[0], (markerz[0] || 0), measurez[0])])  // TODO: need to allow forceX and forceY, and xDomain, yDomain\n                .range(reverse ? [availableWidth, 0] : [0, availableWidth]);\n\n            // Retrieve the old x-scale, if this is an update.\n            var x0 = this.__chart__ || d3.scale.linear()\n                .domain([0, Infinity])\n                .range(x1.range());\n\n            // Stash the new scale.\n            this.__chart__ = x1;\n\n            var w0 = function(d) { return Math.abs(x0(d) - x0(0)) }, // TODO: could optimize by precalculating x0(0) and x1(0)\n                w1 = function(d) { return Math.abs(x1(d) - x1(0)) };\n\n            var title = gEnter.select('.nv-titles').append('g')\n                .attr('text-anchor', 'end')\n                .attr('transform', 'translate(-6,' + (height - margin.top - margin.bottom) / 2 + ')');\n            title.append('text')\n                .attr('class', 'nv-title')\n                .text(function(d) { return d.title; });\n\n            title.append('text')\n                .attr('class', 'nv-subtitle')\n                .attr('dy', '1em')\n                .text(function(d) { return d.subtitle; });\n\n            bullet\n                .width(availableWidth)\n                .height(availableHeight);\n\n            var bulletWrap = g.select('.nv-bulletWrap');\n            d3.transition(bulletWrap).call(bullet);\n\n            // Compute the tick format.\n            var format = tickFormat || x1.tickFormat( availableWidth / 100 );\n\n            // Update the tick groups.\n            var tick = g.selectAll('g.nv-tick')\n                .data(x1.ticks( ticks ? ticks : (availableWidth / 50) ), function(d) {\n                    return this.textContent || format(d);\n                });\n\n            // Initialize the ticks with the old scale, x0.\n            var tickEnter = tick.enter().append('g')\n                .attr('class', 'nv-tick')\n                .attr('transform', function(d) { return 'translate(' + x0(d) + ',0)' })\n                .style('opacity', 1e-6);\n\n            tickEnter.append('line')\n                .attr('y1', availableHeight)\n                .attr('y2', availableHeight * 7 / 6);\n\n            tickEnter.append('text')\n                .attr('text-anchor', 'middle')\n                .attr('dy', '1em')\n                .attr('y', availableHeight * 7 / 6)\n                .text(format);\n\n            // Transition the updating ticks to the new scale, x1.\n            var tickUpdate = d3.transition(tick)\n                .transition()\n                .duration(bullet.duration())\n                .attr('transform', function(d) { return 'translate(' + x1(d) + ',0)' })\n                .style('opacity', 1);\n\n            tickUpdate.select('line')\n                .attr('y1', availableHeight)\n                .attr('y2', availableHeight * 7 / 6);\n\n            tickUpdate.select('text')\n                .attr('y', availableHeight * 7 / 6);\n\n            // Transition the exiting ticks to the new scale, x1.\n            d3.transition(tick.exit())\n                .transition()\n                .duration(bullet.duration())\n                .attr('transform', function(d) { return 'translate(' + x1(d) + ',0)' })\n                .style('opacity', 1e-6)\n                .remove();\n        });\n\n        d3.timer.flush();\n        return chart;\n    }\n\n    //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n    bullet.dispatch.on('elementMouseover.tooltip', function(evt) {\n        evt['series'] = {\n            key: evt.label,\n            value: evt.value,\n            color: evt.color\n        };\n        tooltip.data(evt).hidden(false);\n    });\n\n    bullet.dispatch.on('elementMouseout.tooltip', function(evt) {\n        tooltip.hidden(true);\n    });\n\n    bullet.dispatch.on('elementMousemove.tooltip', function(evt) {\n        tooltip();\n    });\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.bullet = bullet;\n    chart.dispatch = dispatch;\n    chart.tooltip = tooltip;\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        ranges:      {get: function(){return ranges;}, set: function(_){ranges=_;}}, // ranges (bad, satisfactory, good)\n        markers:     {get: function(){return markers;}, set: function(_){markers=_;}}, // markers (previous, goal)\n        measures: {get: function(){return measures;}, set: function(_){measures=_;}}, // measures (actual, forecast)\n        width:    {get: function(){return width;}, set: function(_){width=_;}},\n        height:    {get: function(){return height;}, set: function(_){height=_;}},\n        tickFormat:    {get: function(){return tickFormat;}, set: function(_){tickFormat=_;}},\n        ticks:    {get: function(){return ticks;}, set: function(_){ticks=_;}},\n        noData:    {get: function(){return noData;}, set: function(_){noData=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        orient: {get: function(){return orient;}, set: function(_){ // left, right, top, bottom\n            orient = _;\n            reverse = orient == 'right' || orient == 'bottom';\n        }}\n    });\n\n    nv.utils.inheritOptions(chart, bullet);\n    nv.utils.initOptions(chart);\n\n    return chart;\n};\n\n\n\nnv.models.candlestickBar = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n        , width = null\n        , height = null\n        , id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n        , container\n        , x = d3.scale.linear()\n        , y = d3.scale.linear()\n        , getX = function(d) { return d.x }\n        , getY = function(d) { return d.y }\n        , getOpen = function(d) { return d.open }\n        , getClose = function(d) { return d.close }\n        , getHigh = function(d) { return d.high }\n        , getLow = function(d) { return d.low }\n        , forceX = []\n        , forceY = []\n        , padData     = false // If true, adds half a data points width to front and back, for lining up a line chart with a bar chart\n        , clipEdge = true\n        , color = nv.utils.defaultColor()\n        , interactive = false\n        , xDomain\n        , yDomain\n        , xRange\n        , yRange\n        , dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd', 'chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove')\n        ;\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    function chart(selection) {\n        selection.each(function(data) {\n            container = d3.select(this);\n            var availableWidth = nv.utils.availableWidth(width, container, margin),\n                availableHeight = nv.utils.availableHeight(height, container, margin);\n\n            nv.utils.initSVG(container);\n\n            // Width of the candlestick bars.\n            var barWidth = (availableWidth / data[0].values.length) * .45;\n\n            // Setup Scales\n            x.domain(xDomain || d3.extent(data[0].values.map(getX).concat(forceX) ));\n\n            if (padData)\n                x.range(xRange || [availableWidth * .5 / data[0].values.length, availableWidth * (data[0].values.length - .5)  / data[0].values.length ]);\n            else\n                x.range(xRange || [5 + barWidth / 2, availableWidth - barWidth / 2 - 5]);\n\n            y.domain(yDomain || [\n                    d3.min(data[0].values.map(getLow).concat(forceY)),\n                    d3.max(data[0].values.map(getHigh).concat(forceY))\n                ]\n            ).range(yRange || [availableHeight, 0]);\n\n            // If scale's domain don't have a range, slightly adjust to make one... so a chart can show a single data point\n            if (x.domain()[0] === x.domain()[1])\n                x.domain()[0] ?\n                    x.domain([x.domain()[0] - x.domain()[0] * 0.01, x.domain()[1] + x.domain()[1] * 0.01])\n                    : x.domain([-1,1]);\n\n            if (y.domain()[0] === y.domain()[1])\n                y.domain()[0] ?\n                    y.domain([y.domain()[0] + y.domain()[0] * 0.01, y.domain()[1] - y.domain()[1] * 0.01])\n                    : y.domain([-1,1]);\n\n            // Setup containers and skeleton of chart\n            var wrap = d3.select(this).selectAll('g.nv-wrap.nv-candlestickBar').data([data[0].values]);\n            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-candlestickBar');\n            var defsEnter = wrapEnter.append('defs');\n            var gEnter = wrapEnter.append('g');\n            var g = wrap.select('g');\n\n            gEnter.append('g').attr('class', 'nv-ticks');\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            container\n                .on('click', function(d,i) {\n                    dispatch.chartClick({\n                        data: d,\n                        index: i,\n                        pos: d3.event,\n                        id: id\n                    });\n                });\n\n            defsEnter.append('clipPath')\n                .attr('id', 'nv-chart-clip-path-' + id)\n                .append('rect');\n\n            wrap.select('#nv-chart-clip-path-' + id + ' rect')\n                .attr('width', availableWidth)\n                .attr('height', availableHeight);\n\n            g   .attr('clip-path', clipEdge ? 'url(#nv-chart-clip-path-' + id + ')' : '');\n\n            var ticks = wrap.select('.nv-ticks').selectAll('.nv-tick')\n                .data(function(d) { return d });\n            ticks.exit().remove();\n\n            var tickGroups = ticks.enter().append('g');\n\n            // The colors are currently controlled by CSS.\n            ticks\n                .attr('class', function(d, i, j) { return (getOpen(d, i) > getClose(d, i) ? 'nv-tick negative' : 'nv-tick positive') + ' nv-tick-' + j + '-' + i});\n\n            var lines = tickGroups.append('line')\n                .attr('class', 'nv-candlestick-lines')\n                .attr('transform', function(d, i) { return 'translate(' + x(getX(d, i)) + ',0)'; })\n                .attr('x1', 0)\n                .attr('y1', function(d, i) { return y(getHigh(d, i)); })\n                .attr('x2', 0)\n                .attr('y2', function(d, i) { return y(getLow(d, i)); });\n\n            var rects = tickGroups.append('rect')\n                .attr('class', 'nv-candlestick-rects nv-bars')\n                .attr('transform', function(d, i) {\n                    return 'translate(' + (x(getX(d, i)) - barWidth/2) + ','\n                    + (y(getY(d, i)) - (getOpen(d, i) > getClose(d, i) ? (y(getClose(d, i)) - y(getOpen(d, i))) : 0))\n                    + ')';\n                })\n                .attr('x', 0)\n                .attr('y', 0)\n                .attr('width', barWidth)\n                .attr('height', function(d, i) {\n                    var open = getOpen(d, i);\n                    var close = getClose(d, i);\n                    return open > close ? y(close) - y(open) : y(open) - y(close);\n                });\n\n            ticks.select('.nv-candlestick-lines').transition()\n                .attr('transform', function(d, i) { return 'translate(' + x(getX(d, i)) + ',0)'; })\n                .attr('x1', 0)\n                .attr('y1', function(d, i) { return y(getHigh(d, i)); })\n                .attr('x2', 0)\n                .attr('y2', function(d, i) { return y(getLow(d, i)); });\n\n            ticks.select('.nv-candlestick-rects').transition()\n                .attr('transform', function(d, i) {\n                    return 'translate(' + (x(getX(d, i)) - barWidth/2) + ','\n                    + (y(getY(d, i)) - (getOpen(d, i) > getClose(d, i) ? (y(getClose(d, i)) - y(getOpen(d, i))) : 0))\n                    + ')';\n                })\n                .attr('x', 0)\n                .attr('y', 0)\n                .attr('width', barWidth)\n                .attr('height', function(d, i) {\n                    var open = getOpen(d, i);\n                    var close = getClose(d, i);\n                    return open > close ? y(close) - y(open) : y(open) - y(close);\n                });\n        });\n\n        return chart;\n    }\n\n\n    //Create methods to allow outside functions to highlight a specific bar.\n    chart.highlightPoint = function(pointIndex, isHoverOver) {\n        chart.clearHighlights();\n        container.select(\".nv-candlestickBar .nv-tick-0-\" + pointIndex)\n            .classed(\"hover\", isHoverOver)\n        ;\n    };\n\n    chart.clearHighlights = function() {\n        container.select(\".nv-candlestickBar .nv-tick.hover\")\n            .classed(\"hover\", false)\n        ;\n    };\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:    {get: function(){return width;}, set: function(_){width=_;}},\n        height:   {get: function(){return height;}, set: function(_){height=_;}},\n        xScale:   {get: function(){return x;}, set: function(_){x=_;}},\n        yScale:   {get: function(){return y;}, set: function(_){y=_;}},\n        xDomain:  {get: function(){return xDomain;}, set: function(_){xDomain=_;}},\n        yDomain:  {get: function(){return yDomain;}, set: function(_){yDomain=_;}},\n        xRange:   {get: function(){return xRange;}, set: function(_){xRange=_;}},\n        yRange:   {get: function(){return yRange;}, set: function(_){yRange=_;}},\n        forceX:   {get: function(){return forceX;}, set: function(_){forceX=_;}},\n        forceY:   {get: function(){return forceY;}, set: function(_){forceY=_;}},\n        padData:  {get: function(){return padData;}, set: function(_){padData=_;}},\n        clipEdge: {get: function(){return clipEdge;}, set: function(_){clipEdge=_;}},\n        id:       {get: function(){return id;}, set: function(_){id=_;}},\n        interactive: {get: function(){return interactive;}, set: function(_){interactive=_;}},\n\n        x:     {get: function(){return getX;}, set: function(_){getX=_;}},\n        y:     {get: function(){return getY;}, set: function(_){getY=_;}},\n        open:  {get: function(){return getOpen();}, set: function(_){getOpen=_;}},\n        close: {get: function(){return getClose();}, set: function(_){getClose=_;}},\n        high:  {get: function(){return getHigh;}, set: function(_){getHigh=_;}},\n        low:   {get: function(){return getLow;}, set: function(_){getLow=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    != undefined ? _.top    : margin.top;\n            margin.right  = _.right  != undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom != undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   != undefined ? _.left   : margin.left;\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n        }}\n    });\n\n    nv.utils.initOptions(chart);\n    return chart;\n};\n\nnv.models.cumulativeLineChart = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var lines = nv.models.line()\n        , xAxis = nv.models.axis()\n        , yAxis = nv.models.axis()\n        , legend = nv.models.legend()\n        , controls = nv.models.legend()\n        , interactiveLayer = nv.interactiveGuideline()\n        , tooltip = nv.models.tooltip()\n        ;\n\n    var margin = {top: 30, right: 30, bottom: 50, left: 60}\n        , marginTop = null\n        , color = nv.utils.defaultColor()\n        , width = null\n        , height = null\n        , showLegend = true\n        , showXAxis = true\n        , showYAxis = true\n        , rightAlignYAxis = false\n        , showControls = true\n        , useInteractiveGuideline = false\n        , rescaleY = true\n        , x //can be accessed via chart.xScale()\n        , y //can be accessed via chart.yScale()\n        , id = lines.id()\n        , state = nv.utils.state()\n        , defaultState = null\n        , noData = null\n        , average = function(d) { return d.average }\n        , dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd')\n        , transitionDuration = 250\n        , duration = 250\n        , noErrorCheck = false  //if set to TRUE, will bypass an error check in the indexify function.\n        ;\n\n    state.index = 0;\n    state.rescaleY = rescaleY;\n\n    xAxis.orient('bottom').tickPadding(7);\n    yAxis.orient((rightAlignYAxis) ? 'right' : 'left');\n\n    tooltip.valueFormatter(function(d, i) {\n        return yAxis.tickFormat()(d, i);\n    }).headerFormatter(function(d, i) {\n        return xAxis.tickFormat()(d, i);\n    });\n\n    controls.updateState(false);\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var dx = d3.scale.linear()\n        , index = {i: 0, x: 0}\n        , renderWatch = nv.utils.renderWatch(dispatch, duration)\n        ;\n\n    var stateGetter = function(data) {\n        return function(){\n            return {\n                active: data.map(function(d) { return !d.disabled }),\n                index: index.i,\n                rescaleY: rescaleY\n            };\n        }\n    };\n\n    var stateSetter = function(data) {\n        return function(state) {\n            if (state.index !== undefined)\n                index.i = state.index;\n            if (state.rescaleY !== undefined)\n                rescaleY = state.rescaleY;\n            if (state.active !== undefined)\n                data.forEach(function(series,i) {\n                    series.disabled = !state.active[i];\n                });\n        }\n    };\n\n    function chart(selection) {\n        renderWatch.reset();\n        renderWatch.models(lines);\n        if (showXAxis) renderWatch.models(xAxis);\n        if (showYAxis) renderWatch.models(yAxis);\n        selection.each(function(data) {\n            var container = d3.select(this);\n            nv.utils.initSVG(container);\n            container.classed('nv-chart-' + id, true);\n            var that = this;\n\n            var availableWidth = nv.utils.availableWidth(width, container, margin),\n                availableHeight = nv.utils.availableHeight(height, container, margin);\n\n            chart.update = function() {\n                if (duration === 0)\n                    container.call(chart);\n                else\n                    container.transition().duration(duration).call(chart)\n            };\n            chart.container = this;\n\n            state\n                .setter(stateSetter(data), chart.update)\n                .getter(stateGetter(data))\n                .update();\n\n            // DEPRECATED set state.disableddisabled\n            state.disabled = data.map(function(d) { return !!d.disabled });\n\n            if (!defaultState) {\n                var key;\n                defaultState = {};\n                for (key in state) {\n                    if (state[key] instanceof Array)\n                        defaultState[key] = state[key].slice(0);\n                    else\n                        defaultState[key] = state[key];\n                }\n            }\n\n            var indexDrag = d3.behavior.drag()\n                .on('dragstart', dragStart)\n                .on('drag', dragMove)\n                .on('dragend', dragEnd);\n\n\n            function dragStart(d,i) {\n                d3.select(chart.container)\n                    .style('cursor', 'ew-resize');\n            }\n\n            function dragMove(d,i) {\n                index.x = d3.event.x;\n                index.i = Math.round(dx.invert(index.x));\n                updateZero();\n            }\n\n            function dragEnd(d,i) {\n                d3.select(chart.container)\n                    .style('cursor', 'auto');\n\n                // update state and send stateChange with new index\n                state.index = index.i;\n                dispatch.stateChange(state);\n            }\n\n            // Display No Data message if there's nothing to show.\n            if (!data || !data.length || !data.filter(function(d) { return d.values.length }).length) {\n                nv.utils.noData(chart, container)\n                return chart;\n            } else {\n                container.selectAll('.nv-noData').remove();\n            }\n\n            // Setup Scales\n            x = lines.xScale();\n            y = lines.yScale();\n\n            if (!rescaleY) {\n                var seriesDomains = data\n                    .filter(function(series) { return !series.disabled })\n                    .map(function(series,i) {\n                        var initialDomain = d3.extent(series.values, lines.y());\n\n                        //account for series being disabled when losing 95% or more\n                        if (initialDomain[0] < -.95) initialDomain[0] = -.95;\n\n                        return [\n                                (initialDomain[0] - initialDomain[1]) / (1 + initialDomain[1]),\n                                (initialDomain[1] - initialDomain[0]) / (1 + initialDomain[0])\n                        ];\n                    });\n\n                var completeDomain = [\n                    d3.min(seriesDomains, function(d) { return d[0] }),\n                    d3.max(seriesDomains, function(d) { return d[1] })\n                ];\n\n                lines.yDomain(completeDomain);\n            } else {\n                lines.yDomain(null);\n            }\n\n            dx.domain([0, data[0].values.length - 1]) //Assumes all series have same length\n                .range([0, availableWidth])\n                .clamp(true);\n\n            var data = indexify(index.i, data);\n\n            // Setup containers and skeleton of chart\n            var interactivePointerEvents = (useInteractiveGuideline) ? \"none\" : \"all\";\n            var wrap = container.selectAll('g.nv-wrap.nv-cumulativeLine').data([data]);\n            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-cumulativeLine').append('g');\n            var g = wrap.select('g');\n\n            gEnter.append('g').attr('class', 'nv-interactive');\n            gEnter.append('g').attr('class', 'nv-x nv-axis').style(\"pointer-events\",\"none\");\n            gEnter.append('g').attr('class', 'nv-y nv-axis');\n            gEnter.append('g').attr('class', 'nv-background');\n            gEnter.append('g').attr('class', 'nv-linesWrap').style(\"pointer-events\",interactivePointerEvents);\n            gEnter.append('g').attr('class', 'nv-avgLinesWrap').style(\"pointer-events\",\"none\");\n            gEnter.append('g').attr('class', 'nv-legendWrap');\n            gEnter.append('g').attr('class', 'nv-controlsWrap');\n\n            // Legend\n            if (!showLegend) {\n                g.select('.nv-legendWrap').selectAll('*').remove();\n            } else {\n                legend.width(availableWidth);\n\n                g.select('.nv-legendWrap')\n                    .datum(data)\n                    .call(legend);\n\n                if (!marginTop && legend.height() !== margin.top) {\n                    margin.top = legend.height();\n                    availableHeight = nv.utils.availableHeight(height, container, margin);\n                }\n\n                g.select('.nv-legendWrap')\n                    .attr('transform', 'translate(0,' + (-margin.top) +')')\n            }\n\n            // Controls\n            if (!showControls) {\n                 g.select('.nv-controlsWrap').selectAll('*').remove();\n            } else {\n                var controlsData = [\n                    { key: 'Re-scale y-axis', disabled: !rescaleY }\n                ];\n\n                controls\n                    .width(140)\n                    .color(['#444', '#444', '#444'])\n                    .rightAlign(false)\n                    .margin({top: 5, right: 0, bottom: 5, left: 20})\n                ;\n\n                g.select('.nv-controlsWrap')\n                    .datum(controlsData)\n                    .attr('transform', 'translate(0,' + (-margin.top) +')')\n                    .call(controls);\n            }\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            if (rightAlignYAxis) {\n                g.select(\".nv-y.nv-axis\")\n                    .attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n            }\n\n            // Show error if series goes below 100%\n            var tempDisabled = data.filter(function(d) { return d.tempDisabled });\n\n            wrap.select('.tempDisabled').remove(); //clean-up and prevent duplicates\n            if (tempDisabled.length) {\n                wrap.append('text').attr('class', 'tempDisabled')\n                    .attr('x', availableWidth / 2)\n                    .attr('y', '-.71em')\n                    .style('text-anchor', 'end')\n                    .text(tempDisabled.map(function(d) { return d.key }).join(', ') + ' values cannot be calculated for this time period.');\n            }\n\n            //Set up interactive layer\n            if (useInteractiveGuideline) {\n                interactiveLayer\n                    .width(availableWidth)\n                    .height(availableHeight)\n                    .margin({left:margin.left,top:margin.top})\n                    .svgContainer(container)\n                    .xScale(x);\n                wrap.select(\".nv-interactive\").call(interactiveLayer);\n            }\n\n            gEnter.select('.nv-background')\n                .append('rect');\n\n            g.select('.nv-background rect')\n                .attr('width', availableWidth)\n                .attr('height', availableHeight);\n\n            lines\n                //.x(function(d) { return d.x })\n                .y(function(d) { return d.display.y })\n                .width(availableWidth)\n                .height(availableHeight)\n                .color(data.map(function(d,i) {\n                    return d.color || color(d, i);\n                }).filter(function(d,i) { return !data[i].disabled && !data[i].tempDisabled; }));\n\n            var linesWrap = g.select('.nv-linesWrap')\n                .datum(data.filter(function(d) { return  !d.disabled && !d.tempDisabled }));\n\n            linesWrap.call(lines);\n\n            //Store a series index number in the data array.\n            data.forEach(function(d,i) {\n                d.seriesIndex = i;\n            });\n\n            var avgLineData = data.filter(function(d) {\n                return !d.disabled && !!average(d);\n            });\n\n            var avgLines = g.select(\".nv-avgLinesWrap\").selectAll(\"line\")\n                .data(avgLineData, function(d) { return d.key; });\n\n            var getAvgLineY = function(d) {\n                //If average lines go off the svg element, clamp them to the svg bounds.\n                var yVal = y(average(d));\n                if (yVal < 0) return 0;\n                if (yVal > availableHeight) return availableHeight;\n                return yVal;\n            };\n\n            avgLines.enter()\n                .append('line')\n                .style('stroke-width',2)\n                .style('stroke-dasharray','10,10')\n                .style('stroke',function (d,i) {\n                    return lines.color()(d,d.seriesIndex);\n                })\n                .attr('x1',0)\n                .attr('x2',availableWidth)\n                .attr('y1', getAvgLineY)\n                .attr('y2', getAvgLineY);\n\n            avgLines\n                .style('stroke-opacity',function(d){\n                    //If average lines go offscreen, make them transparent\n                    var yVal = y(average(d));\n                    if (yVal < 0 || yVal > availableHeight) return 0;\n                    return 1;\n                })\n                .attr('x1',0)\n                .attr('x2',availableWidth)\n                .attr('y1', getAvgLineY)\n                .attr('y2', getAvgLineY);\n\n            avgLines.exit().remove();\n\n            //Create index line\n            var indexLine = linesWrap.selectAll('.nv-indexLine')\n                .data([index]);\n            indexLine.enter().append('rect').attr('class', 'nv-indexLine')\n                .attr('width', 3)\n                .attr('x', -2)\n                .attr('fill', 'red')\n                .attr('fill-opacity', .5)\n                .style(\"pointer-events\",\"all\")\n                .call(indexDrag);\n\n            indexLine\n                .attr('transform', function(d) { return 'translate(' + dx(d.i) + ',0)' })\n                .attr('height', availableHeight);\n\n            // Setup Axes\n            if (showXAxis) {\n                xAxis\n                    .scale(x)\n                    ._ticks( nv.utils.calcTicksX(availableWidth/70, data) )\n                    .tickSize(-availableHeight, 0);\n\n                g.select('.nv-x.nv-axis')\n                    .attr('transform', 'translate(0,' + y.range()[0] + ')');\n                g.select('.nv-x.nv-axis')\n                    .call(xAxis);\n            }\n\n            if (showYAxis) {\n                yAxis\n                    .scale(y)\n                    ._ticks( nv.utils.calcTicksY(availableHeight/36, data) )\n                    .tickSize( -availableWidth, 0);\n\n                g.select('.nv-y.nv-axis')\n                    .call(yAxis);\n            }\n\n            //============================================================\n            // Event Handling/Dispatching (in chart's scope)\n            //------------------------------------------------------------\n\n            function updateZero() {\n                indexLine\n                    .data([index]);\n\n                //When dragging the index line, turn off line transitions.\n                // Then turn them back on when done dragging.\n                var oldDuration = chart.duration();\n                chart.duration(0);\n                chart.update();\n                chart.duration(oldDuration);\n            }\n\n            g.select('.nv-background rect')\n                .on('click', function() {\n                    index.x = d3.mouse(this)[0];\n                    index.i = Math.round(dx.invert(index.x));\n\n                    // update state and send stateChange with new index\n                    state.index = index.i;\n                    dispatch.stateChange(state);\n\n                    updateZero();\n                });\n\n            lines.dispatch.on('elementClick', function(e) {\n                index.i = e.pointIndex;\n                index.x = dx(index.i);\n\n                // update state and send stateChange with new index\n                state.index = index.i;\n                dispatch.stateChange(state);\n\n                updateZero();\n            });\n\n            controls.dispatch.on('legendClick', function(d,i) {\n                d.disabled = !d.disabled;\n                rescaleY = !d.disabled;\n\n                state.rescaleY = rescaleY;\n                dispatch.stateChange(state);\n                chart.update();\n            });\n\n            legend.dispatch.on('stateChange', function(newState) {\n                for (var key in newState)\n                    state[key] = newState[key];\n                dispatch.stateChange(state);\n                chart.update();\n            });\n\n            interactiveLayer.dispatch.on('elementMousemove', function(e) {\n                lines.clearHighlights();\n                var singlePoint, pointIndex, pointXLocation, allData = [];\n\n                data\n                    .filter(function(series, i) {\n                        series.seriesIndex = i;\n                        return !series.disabled;\n                    })\n                    .forEach(function(series,i) {\n                        pointIndex = nv.interactiveBisect(series.values, e.pointXValue, chart.x());\n                        lines.highlightPoint(i, pointIndex, true);\n                        var point = series.values[pointIndex];\n                        if (typeof point === 'undefined') return;\n                        if (typeof singlePoint === 'undefined') singlePoint = point;\n                        if (typeof pointXLocation === 'undefined') pointXLocation = chart.xScale()(chart.x()(point,pointIndex));\n                        allData.push({\n                            key: series.key,\n                            value: chart.y()(point, pointIndex),\n                            color: color(series,series.seriesIndex)\n                        });\n                    });\n\n                //Highlight the tooltip entry based on which point the mouse is closest to.\n                if (allData.length > 2) {\n                    var yValue = chart.yScale().invert(e.mouseY);\n                    var domainExtent = Math.abs(chart.yScale().domain()[0] - chart.yScale().domain()[1]);\n                    var threshold = 0.03 * domainExtent;\n                    var indexToHighlight = nv.nearestValueIndex(allData.map(function(d){return d.value}),yValue,threshold);\n                    if (indexToHighlight !== null)\n                        allData[indexToHighlight].highlight = true;\n                }\n\n                var xValue = xAxis.tickFormat()(chart.x()(singlePoint,pointIndex), pointIndex);\n                interactiveLayer.tooltip\n                    .valueFormatter(function(d,i) {\n                        return yAxis.tickFormat()(d);\n                    })\n                    .data(\n                    {\n                        value: xValue,\n                        series: allData\n                    }\n                )();\n\n                interactiveLayer.renderGuideLine(pointXLocation);\n            });\n\n            interactiveLayer.dispatch.on(\"elementMouseout\",function(e) {\n                lines.clearHighlights();\n            });\n\n            // Update chart from a state object passed to event handler\n            dispatch.on('changeState', function(e) {\n                if (typeof e.disabled !== 'undefined') {\n                    data.forEach(function(series,i) {\n                        series.disabled = e.disabled[i];\n                    });\n\n                    state.disabled = e.disabled;\n                }\n\n                if (typeof e.index !== 'undefined') {\n                    index.i = e.index;\n                    index.x = dx(index.i);\n\n                    state.index = e.index;\n\n                    indexLine\n                        .data([index]);\n                }\n\n                if (typeof e.rescaleY !== 'undefined') {\n                    rescaleY = e.rescaleY;\n                }\n\n                chart.update();\n            });\n\n        });\n\n        renderWatch.renderEnd('cumulativeLineChart immediate');\n\n        return chart;\n    }\n\n    //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n    lines.dispatch.on('elementMouseover.tooltip', function(evt) {\n        var point = {\n            x: chart.x()(evt.point),\n            y: chart.y()(evt.point),\n            color: evt.point.color\n        };\n        evt.point = point;\n        tooltip.data(evt).hidden(false);\n    });\n\n    lines.dispatch.on('elementMouseout.tooltip', function(evt) {\n        tooltip.hidden(true)\n    });\n\n    //============================================================\n    // Functions\n    //------------------------------------------------------------\n\n    var indexifyYGetter = null;\n    /* Normalize the data according to an index point. */\n    function indexify(idx, data) {\n        if (!indexifyYGetter) indexifyYGetter = lines.y();\n        return data.map(function(line, i) {\n            if (!line.values) {\n                return line;\n            }\n            var indexValue = line.values[idx];\n            if (indexValue == null) {\n                return line;\n            }\n            var v = indexifyYGetter(indexValue, idx);\n\n            //TODO: implement check below, and disable series if series loses 100% or more cause divide by 0 issue\n            if (v < -.95 && !noErrorCheck) {\n                //if a series loses more than 100%, calculations fail.. anything close can cause major distortion (but is mathematically correct till it hits 100)\n\n                line.tempDisabled = true;\n                return line;\n            }\n\n            line.tempDisabled = false;\n\n            line.values = line.values.map(function(point, pointIndex) {\n                point.display = {'y': (indexifyYGetter(point, pointIndex) - v) / (1 + v) };\n                return point;\n            });\n\n            return line;\n        })\n    }\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    // expose chart's sub-components\n    chart.dispatch = dispatch;\n    chart.lines = lines;\n    chart.legend = legend;\n    chart.controls = controls;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.interactiveLayer = interactiveLayer;\n    chart.state = state;\n    chart.tooltip = tooltip;\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:      {get: function(){return width;}, set: function(_){width=_;}},\n        height:     {get: function(){return height;}, set: function(_){height=_;}},\n        rescaleY:     {get: function(){return rescaleY;}, set: function(_){rescaleY=_;}},\n        showControls:     {get: function(){return showControls;}, set: function(_){showControls=_;}},\n        showLegend: {get: function(){return showLegend;}, set: function(_){showLegend=_;}},\n        average: {get: function(){return average;}, set: function(_){average=_;}},\n        defaultState:    {get: function(){return defaultState;}, set: function(_){defaultState=_;}},\n        noData:    {get: function(){return noData;}, set: function(_){noData=_;}},\n        showXAxis:    {get: function(){return showXAxis;}, set: function(_){showXAxis=_;}},\n        showYAxis:    {get: function(){return showYAxis;}, set: function(_){showYAxis=_;}},\n        noErrorCheck:    {get: function(){return noErrorCheck;}, set: function(_){noErrorCheck=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            if (_.top !== undefined) {\n                margin.top = _.top;\n                marginTop = _.top;\n            }\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n            legend.color(color);\n        }},\n        useInteractiveGuideline: {get: function(){return useInteractiveGuideline;}, set: function(_){\n            useInteractiveGuideline = _;\n            if (_ === true) {\n                chart.interactive(false);\n                chart.useVoronoi(false);\n            }\n        }},\n        rightAlignYAxis: {get: function(){return rightAlignYAxis;}, set: function(_){\n            rightAlignYAxis = _;\n            yAxis.orient( (_) ? 'right' : 'left');\n        }},\n        duration:    {get: function(){return duration;}, set: function(_){\n            duration = _;\n            lines.duration(duration);\n            xAxis.duration(duration);\n            yAxis.duration(duration);\n            renderWatch.reset(duration);\n        }}\n    });\n\n    nv.utils.inheritOptions(chart, lines);\n    nv.utils.initOptions(chart);\n\n    return chart;\n};\n//TODO: consider deprecating by adding necessary features to multiBar model\nnv.models.discreteBar = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n        , width = 960\n        , height = 500\n        , id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n        , container\n        , x = d3.scale.ordinal()\n        , y = d3.scale.linear()\n        , getX = function(d) { return d.x }\n        , getY = function(d) { return d.y }\n        , forceY = [0] // 0 is forced by default.. this makes sense for the majority of bar graphs... user can always do chart.forceY([]) to remove\n        , color = nv.utils.defaultColor()\n        , showValues = false\n        , valueFormat = d3.format(',.2f')\n        , xDomain\n        , yDomain\n        , xRange\n        , yRange\n        , dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd')\n        , rectClass = 'discreteBar'\n        , duration = 250\n        ;\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var x0, y0;\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n        renderWatch.reset();\n        selection.each(function(data) {\n            var availableWidth = width - margin.left - margin.right,\n                availableHeight = height - margin.top - margin.bottom;\n\n            container = d3.select(this);\n            nv.utils.initSVG(container);\n\n            //add series index to each data point for reference\n            data.forEach(function(series, i) {\n                series.values.forEach(function(point) {\n                    point.series = i;\n                });\n            });\n\n            // Setup Scales\n            // remap and flatten the data for use in calculating the scales' domains\n            var seriesData = (xDomain && yDomain) ? [] : // if we know xDomain and yDomain, no need to calculate\n                data.map(function(d) {\n                    return d.values.map(function(d,i) {\n                        return { x: getX(d,i), y: getY(d,i), y0: d.y0 }\n                    })\n                });\n\n            x   .domain(xDomain || d3.merge(seriesData).map(function(d) { return d.x }))\n                .rangeBands(xRange || [0, availableWidth], .1);\n            y   .domain(yDomain || d3.extent(d3.merge(seriesData).map(function(d) { return d.y }).concat(forceY)));\n\n            // If showValues, pad the Y axis range to account for label height\n            if (showValues) y.range(yRange || [availableHeight - (y.domain()[0] < 0 ? 12 : 0), y.domain()[1] > 0 ? 12 : 0]);\n            else y.range(yRange || [availableHeight, 0]);\n\n            //store old scales if they exist\n            x0 = x0 || x;\n            y0 = y0 || y.copy().range([y(0),y(0)]);\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-discretebar').data([data]);\n            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-discretebar');\n            var gEnter = wrapEnter.append('g');\n            var g = wrap.select('g');\n\n            gEnter.append('g').attr('class', 'nv-groups');\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            //TODO: by definition, the discrete bar should not have multiple groups, will modify/remove later\n            var groups = wrap.select('.nv-groups').selectAll('.nv-group')\n                .data(function(d) { return d }, function(d) { return d.key });\n            groups.enter().append('g')\n                .style('stroke-opacity', 1e-6)\n                .style('fill-opacity', 1e-6);\n            groups.exit()\n                .watchTransition(renderWatch, 'discreteBar: exit groups')\n                .style('stroke-opacity', 1e-6)\n                .style('fill-opacity', 1e-6)\n                .remove();\n            groups\n                .attr('class', function(d,i) { return 'nv-group nv-series-' + i })\n                .classed('hover', function(d) { return d.hover });\n            groups\n                .watchTransition(renderWatch, 'discreteBar: groups')\n                .style('stroke-opacity', 1)\n                .style('fill-opacity', .75);\n\n            var bars = groups.selectAll('g.nv-bar')\n                .data(function(d) { return d.values });\n            bars.exit().remove();\n\n            var barsEnter = bars.enter().append('g')\n                .attr('transform', function(d,i,j) {\n                    return 'translate(' + (x(getX(d,i)) + x.rangeBand() * .05 ) + ', ' + y(0) + ')'\n                })\n                .on('mouseover', function(d,i) { //TODO: figure out why j works above, but not here\n                    d3.select(this).classed('hover', true);\n                    dispatch.elementMouseover({\n                        data: d,\n                        index: i,\n                        color: d3.select(this).style(\"fill\")\n                    });\n                })\n                .on('mouseout', function(d,i) {\n                    d3.select(this).classed('hover', false);\n                    dispatch.elementMouseout({\n                        data: d,\n                        index: i,\n                        color: d3.select(this).style(\"fill\")\n                    });\n                })\n                .on('mousemove', function(d,i) {\n                    dispatch.elementMousemove({\n                        data: d,\n                        index: i,\n                        color: d3.select(this).style(\"fill\")\n                    });\n                })\n                .on('click', function(d,i) {\n                    var element = this;\n                    dispatch.elementClick({\n                        data: d,\n                        index: i,\n                        color: d3.select(this).style(\"fill\"),\n                        event: d3.event,\n                        element: element\n                    });\n                    d3.event.stopPropagation();\n                })\n                .on('dblclick', function(d,i) {\n                    dispatch.elementDblClick({\n                        data: d,\n                        index: i,\n                        color: d3.select(this).style(\"fill\")\n                    });\n                    d3.event.stopPropagation();\n                });\n\n            barsEnter.append('rect')\n                .attr('height', 0)\n                .attr('width', x.rangeBand() * .9 / data.length )\n\n            if (showValues) {\n                barsEnter.append('text')\n                    .attr('text-anchor', 'middle')\n                ;\n\n                bars.select('text')\n                    .text(function(d,i) { return valueFormat(getY(d,i)) })\n                    .watchTransition(renderWatch, 'discreteBar: bars text')\n                    .attr('x', x.rangeBand() * .9 / 2)\n                    .attr('y', function(d,i) { return getY(d,i) < 0 ? y(getY(d,i)) - y(0) + 12 : -4 })\n\n                ;\n            } else {\n                bars.selectAll('text').remove();\n            }\n\n            bars\n                .attr('class', function(d,i) { return getY(d,i) < 0 ? 'nv-bar negative' : 'nv-bar positive' })\n                .style('fill', function(d,i) { return d.color || color(d,i) })\n                .style('stroke', function(d,i) { return d.color || color(d,i) })\n                .select('rect')\n                .attr('class', rectClass)\n                .watchTransition(renderWatch, 'discreteBar: bars rect')\n                .attr('width', x.rangeBand() * .9 / data.length);\n            bars.watchTransition(renderWatch, 'discreteBar: bars')\n                //.delay(function(d,i) { return i * 1200 / data[0].values.length })\n                .attr('transform', function(d,i) {\n                    var left = x(getX(d,i)) + x.rangeBand() * .05,\n                        top = getY(d,i) < 0 ?\n                            y(0) :\n                                y(0) - y(getY(d,i)) < 1 ?\n                            y(0) - 1 : //make 1 px positive bars show up above y=0\n                            y(getY(d,i));\n\n                    return 'translate(' + left + ', ' + top + ')'\n                })\n                .select('rect')\n                .attr('height', function(d,i) {\n                    return  Math.max(Math.abs(y(getY(d,i)) - y(0)), 1)\n                });\n\n\n            //store old scales for use in transitions on update\n            x0 = x.copy();\n            y0 = y.copy();\n\n        });\n\n        renderWatch.renderEnd('discreteBar immediate');\n        return chart;\n    }\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:   {get: function(){return width;}, set: function(_){width=_;}},\n        height:  {get: function(){return height;}, set: function(_){height=_;}},\n        forceY:  {get: function(){return forceY;}, set: function(_){forceY=_;}},\n        showValues: {get: function(){return showValues;}, set: function(_){showValues=_;}},\n        x:       {get: function(){return getX;}, set: function(_){getX=_;}},\n        y:       {get: function(){return getY;}, set: function(_){getY=_;}},\n        xScale:  {get: function(){return x;}, set: function(_){x=_;}},\n        yScale:  {get: function(){return y;}, set: function(_){y=_;}},\n        xDomain: {get: function(){return xDomain;}, set: function(_){xDomain=_;}},\n        yDomain: {get: function(){return yDomain;}, set: function(_){yDomain=_;}},\n        xRange:  {get: function(){return xRange;}, set: function(_){xRange=_;}},\n        yRange:  {get: function(){return yRange;}, set: function(_){yRange=_;}},\n        valueFormat:    {get: function(){return valueFormat;}, set: function(_){valueFormat=_;}},\n        id:          {get: function(){return id;}, set: function(_){id=_;}},\n        rectClass: {get: function(){return rectClass;}, set: function(_){rectClass=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n        }},\n        duration: {get: function(){return duration;}, set: function(_){\n            duration = _;\n            renderWatch.reset(duration);\n        }}\n    });\n\n    nv.utils.initOptions(chart);\n\n    return chart;\n};\n\nnv.models.discreteBarChart = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var discretebar = nv.models.discreteBar()\n        , xAxis = nv.models.axis()\n        , yAxis = nv.models.axis()\n\t, legend = nv.models.legend()\n        , tooltip = nv.models.tooltip()\n        ;\n\n    var margin = {top: 15, right: 10, bottom: 50, left: 60}\n        , marginTop = null\n        , width = null\n        , height = null\n        , color = nv.utils.getColor()\n\t, showLegend = false\n        , showXAxis = true\n        , showYAxis = true\n        , rightAlignYAxis = false\n        , staggerLabels = false\n        , wrapLabels = false\n        , rotateLabels = 0\n        , x\n        , y\n        , noData = null\n        , dispatch = d3.dispatch('beforeUpdate','renderEnd')\n        , duration = 250\n        ;\n\n    xAxis\n        .orient('bottom')\n        .showMaxMin(false)\n        .tickFormat(function(d) { return d })\n    ;\n    yAxis\n        .orient((rightAlignYAxis) ? 'right' : 'left')\n        .tickFormat(d3.format(',.1f'))\n    ;\n\n    tooltip\n        .duration(0)\n        .headerEnabled(false)\n        .valueFormatter(function(d, i) {\n            return yAxis.tickFormat()(d, i);\n        })\n        .keyFormatter(function(d, i) {\n            return xAxis.tickFormat()(d, i);\n        });\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n        renderWatch.reset();\n        renderWatch.models(discretebar);\n        if (showXAxis) renderWatch.models(xAxis);\n        if (showYAxis) renderWatch.models(yAxis);\n\n        selection.each(function(data) {\n            var container = d3.select(this),\n                that = this;\n            nv.utils.initSVG(container);\n            var availableWidth = nv.utils.availableWidth(width, container, margin),\n                availableHeight = nv.utils.availableHeight(height, container, margin);\n\n            chart.update = function() {\n                dispatch.beforeUpdate();\n                container.transition().duration(duration).call(chart);\n            };\n            chart.container = this;\n\n            // Display No Data message if there's nothing to show.\n            if (!data || !data.length || !data.filter(function(d) { return d.values.length }).length) {\n                nv.utils.noData(chart, container);\n                return chart;\n            } else {\n                container.selectAll('.nv-noData').remove();\n            }\n\n            // Setup Scales\n            x = discretebar.xScale();\n            y = discretebar.yScale().clamp(true);\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-discreteBarWithAxes').data([data]);\n            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-discreteBarWithAxes').append('g');\n            var defsEnter = gEnter.append('defs');\n            var g = wrap.select('g');\n\n            gEnter.append('g').attr('class', 'nv-x nv-axis');\n            gEnter.append('g').attr('class', 'nv-y nv-axis')\n                .append('g').attr('class', 'nv-zeroLine')\n                .append('line');\n\n            gEnter.append('g').attr('class', 'nv-barsWrap');\n\t    gEnter.append('g').attr('class', 'nv-legendWrap');\n\n            g.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            // Legend\n            if (!showLegend) {\n                g.select('.nv-legendWrap').selectAll('*').remove();\n            } else {\n                legend.width(availableWidth);\n\n                g.select('.nv-legendWrap')\n                    .datum(data)\n                    .call(legend);\n\n                if (!marginTop && legend.height() !== margin.top) {\n                    margin.top = legend.height();\n                    availableHeight = nv.utils.availableHeight(height, container, margin);\n                }\n\n                wrap.select('.nv-legendWrap')\n                    .attr('transform', 'translate(0,' + (-margin.top) +')')\n            }\n\n            if (rightAlignYAxis) {\n                g.select(\".nv-y.nv-axis\")\n                    .attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n            }\n\n            // Main Chart Component(s)\n            discretebar\n                .width(availableWidth)\n                .height(availableHeight);\n\n            var barsWrap = g.select('.nv-barsWrap')\n                .datum(data.filter(function(d) { return !d.disabled }));\n\n            barsWrap.transition().call(discretebar);\n\n\n            defsEnter.append('clipPath')\n                .attr('id', 'nv-x-label-clip-' + discretebar.id())\n                .append('rect');\n\n            g.select('#nv-x-label-clip-' + discretebar.id() + ' rect')\n                .attr('width', x.rangeBand() * (staggerLabels ? 2 : 1))\n                .attr('height', 16)\n                .attr('x', -x.rangeBand() / (staggerLabels ? 1 : 2 ));\n\n            // Setup Axes\n            if (showXAxis) {\n                xAxis\n                    .scale(x)\n                    ._ticks( nv.utils.calcTicksX(availableWidth/100, data) )\n                    .tickSize(-availableHeight, 0);\n\n                g.select('.nv-x.nv-axis')\n                    .attr('transform', 'translate(0,' + (y.range()[0] + ((discretebar.showValues() && y.domain()[0] < 0) ? 16 : 0)) + ')');\n                g.select('.nv-x.nv-axis').call(xAxis);\n\n                var xTicks = g.select('.nv-x.nv-axis').selectAll('g');\n                if (staggerLabels) {\n                    xTicks\n                        .selectAll('text')\n                        .attr('transform', function(d,i,j) { return 'translate(0,' + (j % 2 == 0 ? '5' : '17') + ')' })\n                }\n\n                if (rotateLabels) {\n                    xTicks\n                        .selectAll('.tick text')\n                        .attr('transform', 'rotate(' + rotateLabels + ' 0,0)')\n                        .style('text-anchor', rotateLabels > 0 ? 'start' : 'end');\n                }\n\n                if (wrapLabels) {\n                    g.selectAll('.tick text')\n                        .call(nv.utils.wrapTicks, chart.xAxis.rangeBand())\n                }\n            }\n\n            if (showYAxis) {\n                yAxis\n                    .scale(y)\n                    ._ticks( nv.utils.calcTicksY(availableHeight/36, data) )\n                    .tickSize( -availableWidth, 0);\n\n                g.select('.nv-y.nv-axis').call(yAxis);\n            }\n\n            // Zero line\n            g.select(\".nv-zeroLine line\")\n                .attr(\"x1\",0)\n                .attr(\"x2\",(rightAlignYAxis) ? -availableWidth : availableWidth)\n                .attr(\"y1\", y(0))\n                .attr(\"y2\", y(0))\n            ;\n        });\n\n        renderWatch.renderEnd('discreteBar chart immediate');\n        return chart;\n    }\n\n    //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n    discretebar.dispatch.on('elementMouseover.tooltip', function(evt) {\n        evt['series'] = {\n            key: chart.x()(evt.data),\n            value: chart.y()(evt.data),\n            color: evt.color\n        };\n        tooltip.data(evt).hidden(false);\n    });\n\n    discretebar.dispatch.on('elementMouseout.tooltip', function(evt) {\n        tooltip.hidden(true);\n    });\n\n    discretebar.dispatch.on('elementMousemove.tooltip', function(evt) {\n        tooltip();\n    });\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n    chart.discretebar = discretebar;\n    chart.legend = legend;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.tooltip = tooltip;\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:      {get: function(){return width;}, set: function(_){width=_;}},\n        height:     {get: function(){return height;}, set: function(_){height=_;}},\n\tshowLegend: {get: function(){return showLegend;}, set: function(_){showLegend=_;}},\n        staggerLabels: {get: function(){return staggerLabels;}, set: function(_){staggerLabels=_;}},\n        rotateLabels:  {get: function(){return rotateLabels;}, set: function(_){rotateLabels=_;}},\n        wrapLabels:  {get: function(){return wrapLabels;}, set: function(_){wrapLabels=!!_;}},\n        showXAxis: {get: function(){return showXAxis;}, set: function(_){showXAxis=_;}},\n        showYAxis: {get: function(){return showYAxis;}, set: function(_){showYAxis=_;}},\n        noData:    {get: function(){return noData;}, set: function(_){noData=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            if (_.top !== undefined) {\n                margin.top = _.top;\n                marginTop = _.top;\n            }\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        duration: {get: function(){return duration;}, set: function(_){\n            duration = _;\n            renderWatch.reset(duration);\n            discretebar.duration(duration);\n            xAxis.duration(duration);\n            yAxis.duration(duration);\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n            discretebar.color(color);\n\t    legend.color(color);\n        }},\n        rightAlignYAxis: {get: function(){return rightAlignYAxis;}, set: function(_){\n            rightAlignYAxis = _;\n            yAxis.orient( (_) ? 'right' : 'left');\n        }}\n    });\n\n    nv.utils.inheritOptions(chart, discretebar);\n    nv.utils.initOptions(chart);\n\n    return chart;\n}\n\nnv.models.distribution = function() {\n    \"use strict\";\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n        , width = 400 //technically width or height depending on x or y....\n        , size = 8\n        , axis = 'x' // 'x' or 'y'... horizontal or vertical\n        , getData = function(d) { return d[axis] }  // defaults d.x or d.y\n        , color = nv.utils.defaultColor()\n        , scale = d3.scale.linear()\n        , domain\n        , duration = 250\n        , dispatch = d3.dispatch('renderEnd')\n        ;\n\n    //============================================================\n\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var scale0;\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    //============================================================\n\n\n    function chart(selection) {\n        renderWatch.reset();\n        selection.each(function(data) {\n            var availableLength = width - (axis === 'x' ? margin.left + margin.right : margin.top + margin.bottom),\n                naxis = axis == 'x' ? 'y' : 'x',\n                container = d3.select(this);\n            nv.utils.initSVG(container);\n\n            //------------------------------------------------------------\n            // Setup Scales\n\n            scale0 = scale0 || scale;\n\n            //------------------------------------------------------------\n\n\n            //------------------------------------------------------------\n            // Setup containers and skeleton of chart\n\n            var wrap = container.selectAll('g.nv-distribution').data([data]);\n            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-distribution');\n            var gEnter = wrapEnter.append('g');\n            var g = wrap.select('g');\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')')\n\n            //------------------------------------------------------------\n\n\n            var distWrap = g.selectAll('g.nv-dist')\n                .data(function(d) { return d }, function(d) { return d.key });\n\n            distWrap.enter().append('g');\n            distWrap\n                .attr('class', function(d,i) { return 'nv-dist nv-series-' + i })\n                .style('stroke', function(d,i) { return color(d, i) });\n\n            var dist = distWrap.selectAll('line.nv-dist' + axis)\n                .data(function(d) { return d.values })\n            dist.enter().append('line')\n                .attr(axis + '1', function(d,i) { return scale0(getData(d,i)) })\n                .attr(axis + '2', function(d,i) { return scale0(getData(d,i)) })\n            renderWatch.transition(distWrap.exit().selectAll('line.nv-dist' + axis), 'dist exit')\n                // .transition()\n                .attr(axis + '1', function(d,i) { return scale(getData(d,i)) })\n                .attr(axis + '2', function(d,i) { return scale(getData(d,i)) })\n                .style('stroke-opacity', 0)\n                .remove();\n            dist\n                .attr('class', function(d,i) { return 'nv-dist' + axis + ' nv-dist' + axis + '-' + i })\n                .attr(naxis + '1', 0)\n                .attr(naxis + '2', size);\n            renderWatch.transition(dist, 'dist')\n                // .transition()\n                .attr(axis + '1', function(d,i) { return scale(getData(d,i)) })\n                .attr(axis + '2', function(d,i) { return scale(getData(d,i)) })\n\n\n            scale0 = scale.copy();\n\n        });\n        renderWatch.renderEnd('distribution immediate');\n        return chart;\n    }\n\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart.dispatch = dispatch;\n\n    chart.margin = function(_) {\n        if (!arguments.length) return margin;\n        margin.top    = typeof _.top    != 'undefined' ? _.top    : margin.top;\n        margin.right  = typeof _.right  != 'undefined' ? _.right  : margin.right;\n        margin.bottom = typeof _.bottom != 'undefined' ? _.bottom : margin.bottom;\n        margin.left   = typeof _.left   != 'undefined' ? _.left   : margin.left;\n        return chart;\n    };\n\n    chart.width = function(_) {\n        if (!arguments.length) return width;\n        width = _;\n        return chart;\n    };\n\n    chart.axis = function(_) {\n        if (!arguments.length) return axis;\n        axis = _;\n        return chart;\n    };\n\n    chart.size = function(_) {\n        if (!arguments.length) return size;\n        size = _;\n        return chart;\n    };\n\n    chart.getData = function(_) {\n        if (!arguments.length) return getData;\n        getData = d3.functor(_);\n        return chart;\n    };\n\n    chart.scale = function(_) {\n        if (!arguments.length) return scale;\n        scale = _;\n        return chart;\n    };\n\n    chart.color = function(_) {\n        if (!arguments.length) return color;\n        color = nv.utils.getColor(_);\n        return chart;\n    };\n\n    chart.duration = function(_) {\n        if (!arguments.length) return duration;\n        duration = _;\n        renderWatch.reset(duration);\n        return chart;\n    };\n    //============================================================\n\n\n    return chart;\n}\nnv.models.focus = function(content) {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var content = content || nv.models.line()\n        , xAxis = nv.models.axis()\n        , yAxis = nv.models.axis()\n        , brush = d3.svg.brush()\n        ;\n\n    var margin = {top: 10, right: 0, bottom: 30, left: 0}\n        , color = nv.utils.defaultColor()\n        , width = null\n        , height = 70\n        , showXAxis = true\n        , showYAxis = false\n        , rightAlignYAxis = false\n        , ticks = null\n        , x\n        , y\n        , brushExtent = null\n        , duration = 250\n        , dispatch = d3.dispatch('brush', 'onBrush', 'renderEnd')\n        , syncBrushing = true\n        ;\n\n    content.interactive(false);\n    content.pointActive(function(d) { return false; });\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n        renderWatch.reset();\n        renderWatch.models(content);\n        if (showXAxis) renderWatch.models(xAxis);\n        if (showYAxis) renderWatch.models(yAxis);\n\n        selection.each(function(data) {\n            var container = d3.select(this);\n            nv.utils.initSVG(container);\n            var availableWidth = nv.utils.availableWidth(width, container, margin),\n                availableHeight = height - margin.top - margin.bottom;\n\n            chart.update = function() { \n                if( duration === 0 ) {\n                    container.call( chart );\n                } else {\n                    container.transition().duration(duration).call(chart);\n                }\n            };\n            chart.container = this;\n\n            // Setup Scales\n            x = content.xScale();\n            y = content.yScale();\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-focus').data([data]);\n            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-focus').append('g');\n            var g = wrap.select('g');\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            gEnter.append('g').attr('class', 'nv-background').append('rect');\n            gEnter.append('g').attr('class', 'nv-x nv-axis');\n            gEnter.append('g').attr('class', 'nv-y nv-axis');\n            gEnter.append('g').attr('class', 'nv-contentWrap');\n            gEnter.append('g').attr('class', 'nv-brushBackground');\n            gEnter.append('g').attr('class', 'nv-x nv-brush');\n\n            if (rightAlignYAxis) {\n                g.select(\".nv-y.nv-axis\")\n                    .attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n            }\n\n            g.select('.nv-background rect')\n                .attr('width', availableWidth)\n                .attr('height', availableHeight);\n                \n            content\n                .width(availableWidth)\n                .height(availableHeight)\n                .color(data.map(function(d,i) {\n                    return d.color || color(d, i);\n                }).filter(function(d,i) { return !data[i].disabled; }));\n\n            var contentWrap = g.select('.nv-contentWrap')\n                .datum(data.filter(function(d) { return !d.disabled; }));\n\n            d3.transition(contentWrap).call(content);\n            \n            // Setup Brush\n            brush\n                .x(x)\n                .on('brush', function() {\n                    onBrush(syncBrushing);\n                });\n\n            brush.on('brushend', function () {\n                if (!syncBrushing) {\n                    dispatch.onBrush(brush.empty() ? x.domain() : brush.extent());\n                }\n            });\n\n            if (brushExtent) brush.extent(brushExtent);\n\n            var brushBG = g.select('.nv-brushBackground').selectAll('g')\n                .data([brushExtent || brush.extent()]);\n    \n            var brushBGenter = brushBG.enter()\n                .append('g');\n\n            brushBGenter.append('rect')\n                .attr('class', 'left')\n                .attr('x', 0)\n                .attr('y', 0)\n                .attr('height', availableHeight);\n\n            brushBGenter.append('rect')\n                .attr('class', 'right')\n                .attr('x', 0)\n                .attr('y', 0)\n                .attr('height', availableHeight);\n\n            var gBrush = g.select('.nv-x.nv-brush')\n                .call(brush);\n            gBrush.selectAll('rect')\n                .attr('height', availableHeight);\n            gBrush.selectAll('.resize').append('path').attr('d', resizePath);\n\n            onBrush(true);\n\n            g.select('.nv-background rect')\n                .attr('width', availableWidth)\n                .attr('height', availableHeight);\n\n            if (showXAxis) {\n                xAxis.scale(x)\n                    ._ticks( nv.utils.calcTicksX(availableWidth/100, data) )\n                    .tickSize(-availableHeight, 0);\n  \n                g.select('.nv-x.nv-axis')\n                    .attr('transform', 'translate(0,' + y.range()[0] + ')');\n                d3.transition(g.select('.nv-x.nv-axis'))\n                    .call(xAxis);\n            }\n\n            if (showYAxis) {\n                yAxis\n                    .scale(y)\n                    ._ticks( nv.utils.calcTicksY(availableHeight/36, data) )\n                    .tickSize( -availableWidth, 0);\n\n                d3.transition(g.select('.nv-y.nv-axis'))\n                    .call(yAxis);\n            }\n            \n            g.select('.nv-x.nv-axis')\n                .attr('transform', 'translate(0,' + y.range()[0] + ')');\n\n            //============================================================\n            // Event Handling/Dispatching (in chart's scope)\n            //------------------------------------------------------------\n\n            //============================================================\n            // Functions\n            //------------------------------------------------------------\n    \n            // Taken from crossfilter (http://square.github.com/crossfilter/)\n            function resizePath(d) {\n                var e = +(d == 'e'),\n                    x = e ? 1 : -1,\n                    y = availableHeight / 3;\n                return 'M' + (0.5 * x) + ',' + y\n                    + 'A6,6 0 0 ' + e + ' ' + (6.5 * x) + ',' + (y + 6)\n                    + 'V' + (2 * y - 6)\n                    + 'A6,6 0 0 ' + e + ' ' + (0.5 * x) + ',' + (2 * y)\n                    + 'Z'\n                    + 'M' + (2.5 * x) + ',' + (y + 8)\n                    + 'V' + (2 * y - 8)\n                    + 'M' + (4.5 * x) + ',' + (y + 8)\n                    + 'V' + (2 * y - 8);\n            }\n    \n    \n            function updateBrushBG() {\n                if (!brush.empty()) brush.extent(brushExtent);\n                brushBG\n                    .data([brush.empty() ? x.domain() : brushExtent])\n                    .each(function(d,i) {\n                        var leftWidth = x(d[0]) - x.range()[0],\n                            rightWidth = availableWidth - x(d[1]);\n                        d3.select(this).select('.left')\n                            .attr('width',  leftWidth < 0 ? 0 : leftWidth);\n    \n                        d3.select(this).select('.right')\n                            .attr('x', x(d[1]))\n                            .attr('width', rightWidth < 0 ? 0 : rightWidth);\n                    });\n            }\n\n\n            function onBrush(shouldDispatch) {\n                brushExtent = brush.empty() ? null : brush.extent();\n                var extent = brush.empty() ? x.domain() : brush.extent();\n                dispatch.brush({extent: extent, brush: brush});\n                updateBrushBG();\n                if (shouldDispatch) {\n                    dispatch.onBrush(extent);\n                }\n            }\n        });\n\n        renderWatch.renderEnd('focus immediate');\n        return chart;\n    }\n\n\n    //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    // expose chart's sub-components\n    chart.dispatch = dispatch;\n    chart.content = content;\n    chart.brush = brush;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:      {get: function(){return width;}, set: function(_){width=_;}},\n        height:     {get: function(){return height;}, set: function(_){height=_;}},\n        showXAxis:      {get: function(){return showXAxis;}, set: function(_){showXAxis=_;}},\n        showYAxis:    {get: function(){return showYAxis;}, set: function(_){showYAxis=_;}},\n        brushExtent: {get: function(){return brushExtent;}, set: function(_){brushExtent=_;}},\n        syncBrushing: {get: function(){return syncBrushing;}, set: function(_){syncBrushing=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        duration: {get: function(){return duration;}, set: function(_){\n            duration = _;\n            renderWatch.reset(duration);\n            content.duration(duration);\n            xAxis.duration(duration);\n            yAxis.duration(duration);\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n            content.color(color);\n        }},\n        interpolate: {get: function(){return content.interpolate();}, set: function(_){\n            content.interpolate(_);\n        }},\n        xTickFormat: {get: function(){return xAxis.tickFormat();}, set: function(_){\n            xAxis.tickFormat(_);\n        }},\n        yTickFormat: {get: function(){return yAxis.tickFormat();}, set: function(_){\n            yAxis.tickFormat(_);\n        }},\n        x: {get: function(){return content.x();}, set: function(_){\n            content.x(_);\n        }},\n        y: {get: function(){return content.y();}, set: function(_){\n            content.y(_);\n        }},\n        rightAlignYAxis: {get: function(){return rightAlignYAxis;}, set: function(_){\n            rightAlignYAxis = _;\n            yAxis.orient( rightAlignYAxis ? 'right' : 'left');\n        }}\n    });\n\n    nv.utils.inheritOptions(chart, content);\n    nv.utils.initOptions(chart);\n\n    return chart;\n};\nnv.models.forceDirectedGraph = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n    var margin = {top: 2, right: 0, bottom: 2, left: 0}\n        , width = 400\n        , height = 32\n        , container = null\n        , dispatch = d3.dispatch('renderEnd')\n        , color = nv.utils.getColor(['#000'])\n        , tooltip      = nv.models.tooltip()\n        , noData = null\n        // Force directed graph specific parameters [default values]\n        , linkStrength = 0.1\n        , friction = 0.9\n        , linkDist = 30\n        , charge = -120\n        , gravity = 0.1\n        , theta = 0.8\n        , alpha = 0.1\n        , radius = 5\n        // These functions allow to add extra attributes to ndes and links\n        ,nodeExtras = function(nodes) { /* Do nothing */ }\n        ,linkExtras = function(links) { /* Do nothing */ }\n        ;\n\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    function chart(selection) {\n        renderWatch.reset();\n\n        selection.each(function(data) {\n          container = d3.select(this);\n          nv.utils.initSVG(container);\n\n          var availableWidth = nv.utils.availableWidth(width, container, margin),\n              availableHeight = nv.utils.availableHeight(height, container, margin);\n\n          container\n                  .attr(\"width\", availableWidth)\n                  .attr(\"height\", availableHeight);\n\n          // Display No Data message if there's nothing to show.\n          if (!data || !data.links || !data.nodes) {\n              nv.utils.noData(chart, container)\n              return chart;\n          } else {\n              container.selectAll('.nv-noData').remove();\n          }\n          container.selectAll('*').remove();\n\n          // Collect names of all fields in the nodes\n          var nodeFieldSet = new Set();\n          data.nodes.forEach(function(node) {\n            var keys = Object.keys(node);\n            keys.forEach(function(key) {\n              nodeFieldSet.add(key);\n            });\n          });\n\n          var force = d3.layout.force()\n                .nodes(data.nodes)\n                .links(data.links)\n                .size([availableWidth, availableHeight])\n                .linkStrength(linkStrength)\n                .friction(friction)\n                .linkDistance(linkDist)\n                .charge(charge)\n                .gravity(gravity)\n                .theta(theta)\n                .alpha(alpha)\n                .start();\n\n          var link = container.selectAll(\".link\")\n                .data(data.links)\n                .enter().append(\"line\")\n                .attr(\"class\", \"nv-force-link\")\n                .style(\"stroke-width\", function(d) { return Math.sqrt(d.value); });\n\n          var node = container.selectAll(\".node\")\n                .data(data.nodes)\n                .enter()\n                .append(\"g\")\n                .attr(\"class\", \"nv-force-node\")\n                .call(force.drag);\n\n          node\n            .append(\"circle\")\n            .attr(\"r\", radius)\n            .style(\"fill\", function(d) { return color(d) } )\n            .on(\"mouseover\", function(evt) {\n              container.select('.nv-series-' + evt.seriesIndex + ' .nv-distx-' + evt.pointIndex)\n                  .attr('y1', evt.py);\n              container.select('.nv-series-' + evt.seriesIndex + ' .nv-disty-' + evt.pointIndex)\n                  .attr('x2', evt.px);\n\n              // Add 'series' object to\n              var nodeColor = color(evt);\n              evt.series = [];\n              nodeFieldSet.forEach(function(field) {\n                evt.series.push({\n                  color: nodeColor,\n                  key:   field,\n                  value: evt[field]\n                });\n              });\n              tooltip.data(evt).hidden(false);\n            })\n            .on(\"mouseout\",  function(d) {\n              tooltip.hidden(true);\n            });\n\n          tooltip.headerFormatter(function(d) {return \"Node\";});\n\n          // Apply extra attributes to nodes and links (if any)\n          linkExtras(link);\n          nodeExtras(node);\n\n          force.on(\"tick\", function() {\n              link.attr(\"x1\", function(d) { return d.source.x; })\n                  .attr(\"y1\", function(d) { return d.source.y; })\n                  .attr(\"x2\", function(d) { return d.target.x; })\n                  .attr(\"y2\", function(d) { return d.target.y; });\n\n              node.attr(\"transform\", function(d) {\n                return \"translate(\" + d.x + \", \" + d.y + \")\";\n              });\n            });\n        });\n\n        return chart;\n    }\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:     {get: function(){return width;}, set: function(_){width=_;}},\n        height:    {get: function(){return height;}, set: function(_){height=_;}},\n\n        // Force directed graph specific parameters\n        linkStrength:{get: function(){return linkStrength;}, set: function(_){linkStrength=_;}},\n        friction:    {get: function(){return friction;}, set: function(_){friction=_;}},\n        linkDist:    {get: function(){return linkDist;}, set: function(_){linkDist=_;}},\n        charge:      {get: function(){return charge;}, set: function(_){charge=_;}},\n        gravity:     {get: function(){return gravity;}, set: function(_){gravity=_;}},\n        theta:       {get: function(){return theta;}, set: function(_){theta=_;}},\n        alpha:       {get: function(){return alpha;}, set: function(_){alpha=_;}},\n        radius:      {get: function(){return radius;}, set: function(_){radius=_;}},\n\n        //functor options\n        x: {get: function(){return getX;}, set: function(_){getX=d3.functor(_);}},\n        y: {get: function(){return getY;}, set: function(_){getY=d3.functor(_);}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n        }},\n        noData:    {get: function(){return noData;}, set: function(_){noData=_;}},\n        nodeExtras: {get: function(){return nodeExtras;}, set: function(_){\n            nodeExtras = _;\n        }},\n        linkExtras: {get: function(){return linkExtras;}, set: function(_){\n            linkExtras = _;\n        }}\n    });\n\n    chart.dispatch = dispatch;\n    chart.tooltip = tooltip;\n    nv.utils.initOptions(chart);\n    return chart;\n};\nnv.models.furiousLegend = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {top: 5, right: 0, bottom: 5, left: 0}\n        , width = 400\n        , height = 20\n        , getKey = function(d) { return d.key }\n        , keyFormatter = function (d) { return d }\n        , color = nv.utils.getColor()\n        , maxKeyLength = 20 //default value for key lengths\n        , align = true\n        , padding = 28 //define how much space between legend items. - recommend 32 for furious version\n        , rightAlign = true\n        , updateState = true   //If true, legend will update data.disabled and trigger a 'stateChange' dispatch.\n        , radioButtonMode = false   //If true, clicking legend items will cause it to behave like a radio button. (only one can be selected at a time)\n        , expanded = false\n        , dispatch = d3.dispatch('legendClick', 'legendDblclick', 'legendMouseover', 'legendMouseout', 'stateChange')\n        , vers = 'classic' //Options are \"classic\" and \"furious\"\n        ;\n\n    function chart(selection) {\n        selection.each(function(data) {\n            var availableWidth = width - margin.left - margin.right,\n                container = d3.select(this);\n            nv.utils.initSVG(container);\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-legend').data([data]);\n            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-legend').append('g');\n            var g = wrap.select('g');\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            var series = g.selectAll('.nv-series')\n                .data(function(d) {\n                    if(vers != 'furious') return d;\n\n                    return d.filter(function(n) {\n                        return expanded ? true : !n.disengaged;\n                    });\n                });\n            var seriesEnter = series.enter().append('g').attr('class', 'nv-series')\n\n            var seriesShape;\n\n            if(vers == 'classic') {\n                seriesEnter.append('circle')\n                    .style('stroke-width', 2)\n                    .attr('class','nv-legend-symbol')\n                    .attr('r', 5);\n\n                seriesShape = series.select('circle');\n            } else if (vers == 'furious') {\n                seriesEnter.append('rect')\n                    .style('stroke-width', 2)\n                    .attr('class','nv-legend-symbol')\n                    .attr('rx', 3)\n                    .attr('ry', 3);\n\n                seriesShape = series.select('rect');\n\n                seriesEnter.append('g')\n                    .attr('class', 'nv-check-box')\n                    .property('innerHTML','<path d=\"M0.5,5 L22.5,5 L22.5,26.5 L0.5,26.5 L0.5,5 Z\" class=\"nv-box\"></path><path d=\"M5.5,12.8618467 L11.9185089,19.2803556 L31,0.198864511\" class=\"nv-check\"></path>')\n                    .attr('transform', 'translate(-10,-8)scale(0.5)');\n\n                var seriesCheckbox = series.select('.nv-check-box');\n\n                seriesCheckbox.each(function(d,i) {\n                    d3.select(this).selectAll('path')\n                        .attr('stroke', setTextColor(d,i));\n                });\n            }\n\n            seriesEnter.append('text')\n                .attr('text-anchor', 'start')\n                .attr('class','nv-legend-text')\n                .attr('dy', '.32em')\n                .attr('dx', '8');\n\n            var seriesText = series.select('text.nv-legend-text');\n\n            series\n                .on('mouseover', function(d,i) {\n                    dispatch.legendMouseover(d,i);  //TODO: Make consistent with other event objects\n                })\n                .on('mouseout', function(d,i) {\n                    dispatch.legendMouseout(d,i);\n                })\n                .on('click', function(d,i) {\n                    dispatch.legendClick(d,i);\n                    // make sure we re-get data in case it was modified\n                    var data = series.data();\n                    if (updateState) {\n                        if(vers =='classic') {\n                            if (radioButtonMode) {\n                                //Radio button mode: set every series to disabled,\n                                //  and enable the clicked series.\n                                data.forEach(function(series) { series.disabled = true});\n                                d.disabled = false;\n                            }\n                            else {\n                                d.disabled = !d.disabled;\n                                if (data.every(function(series) { return series.disabled})) {\n                                    //the default behavior of NVD3 legends is, if every single series\n                                    // is disabled, turn all series' back on.\n                                    data.forEach(function(series) { series.disabled = false});\n                                }\n                            }\n                        } else if(vers == 'furious') {\n                            if(expanded) {\n                                d.disengaged = !d.disengaged;\n                                d.userDisabled = d.userDisabled == undefined ? !!d.disabled : d.userDisabled;\n                                d.disabled = d.disengaged || d.userDisabled;\n                            } else if (!expanded) {\n                                d.disabled = !d.disabled;\n                                d.userDisabled = d.disabled;\n                                var engaged = data.filter(function(d) { return !d.disengaged; });\n                                if (engaged.every(function(series) { return series.userDisabled })) {\n                                    //the default behavior of NVD3 legends is, if every single series\n                                    // is disabled, turn all series' back on.\n                                    data.forEach(function(series) {\n                                        series.disabled = series.userDisabled = false;\n                                    });\n                                }\n                            }\n                        }\n                        dispatch.stateChange({\n                            disabled: data.map(function(d) { return !!d.disabled }),\n                            disengaged: data.map(function(d) { return !!d.disengaged })\n                        });\n\n                    }\n                })\n                .on('dblclick', function(d,i) {\n                    if(vers == 'furious' && expanded) return;\n                    dispatch.legendDblclick(d,i);\n                    if (updateState) {\n                        // make sure we re-get data in case it was modified\n                        var data = series.data();\n                        //the default behavior of NVD3 legends, when double clicking one,\n                        // is to set all other series' to false, and make the double clicked series enabled.\n                        data.forEach(function(series) {\n                            series.disabled = true;\n                            if(vers == 'furious') series.userDisabled = series.disabled;\n                        });\n                        d.disabled = false;\n                        if(vers == 'furious') d.userDisabled = d.disabled;\n                        dispatch.stateChange({\n                            disabled: data.map(function(d) { return !!d.disabled })\n                        });\n                    }\n                });\n\n            series.classed('nv-disabled', function(d) { return d.userDisabled });\n            series.exit().remove();\n\n            seriesText\n                .attr('fill', setTextColor)\n                .text(function (d) { return keyFormatter(getKey(d)) });\n\n            //TODO: implement fixed-width and max-width options (max-width is especially useful with the align option)\n            // NEW ALIGNING CODE, TODO: clean up\n\n            var versPadding;\n            switch(vers) {\n                case 'furious' :\n                    versPadding = 23;\n                    break;\n                case 'classic' :\n                    versPadding = 20;\n            }\n\n            if (align) {\n\n                var seriesWidths = [];\n                series.each(function(d,i) {\n                    var legendText;\n                    if (keyFormatter(getKey(d)) && keyFormatter(getKey(d)).length > maxKeyLength) {\n                        var trimmedKey = keyFormatter(getKey(d)).substring(0, maxKeyLength);\n                        legendText = d3.select(this).select('text').text(trimmedKey + \"...\");\n                        d3.select(this).append(\"svg:title\").text(keyFormatter(getKey(d)));\n                    } else {\n                        legendText = d3.select(this).select('text');\n                    }\n                    var nodeTextLength;\n                    try {\n                        nodeTextLength = legendText.node().getComputedTextLength();\n                        // If the legendText is display:none'd (nodeTextLength == 0), simulate an error so we approximate, instead\n                        if(nodeTextLength <= 0) throw Error();\n                    }\n                    catch(e) {\n                        nodeTextLength = nv.utils.calcApproxTextWidth(legendText);\n                    }\n\n                    seriesWidths.push(nodeTextLength + padding);\n                });\n\n                var seriesPerRow = 0;\n                var legendWidth = 0;\n                var columnWidths = [];\n\n                while ( legendWidth < availableWidth && seriesPerRow < seriesWidths.length) {\n                    columnWidths[seriesPerRow] = seriesWidths[seriesPerRow];\n                    legendWidth += seriesWidths[seriesPerRow++];\n                }\n                if (seriesPerRow === 0) seriesPerRow = 1; //minimum of one series per row\n\n                while ( legendWidth > availableWidth && seriesPerRow > 1 ) {\n                    columnWidths = [];\n                    seriesPerRow--;\n\n                    for (var k = 0; k < seriesWidths.length; k++) {\n                        if (seriesWidths[k] > (columnWidths[k % seriesPerRow] || 0) )\n                            columnWidths[k % seriesPerRow] = seriesWidths[k];\n                    }\n\n                    legendWidth = columnWidths.reduce(function(prev, cur, index, array) {\n                        return prev + cur;\n                    });\n                }\n\n                var xPositions = [];\n                for (var i = 0, curX = 0; i < seriesPerRow; i++) {\n                    xPositions[i] = curX;\n                    curX += columnWidths[i];\n                }\n\n                series\n                    .attr('transform', function(d, i) {\n                        return 'translate(' + xPositions[i % seriesPerRow] + ',' + (5 + Math.floor(i / seriesPerRow) * versPadding) + ')';\n                    });\n\n                //position legend as far right as possible within the total width\n                if (rightAlign) {\n                    g.attr('transform', 'translate(' + (width - margin.right - legendWidth) + ',' + margin.top + ')');\n                }\n                else {\n                    g.attr('transform', 'translate(0' + ',' + margin.top + ')');\n                }\n\n                height = margin.top + margin.bottom + (Math.ceil(seriesWidths.length / seriesPerRow) * versPadding);\n\n            } else {\n\n                var ypos = 5,\n                    newxpos = 5,\n                    maxwidth = 0,\n                    xpos;\n                series\n                    .attr('transform', function(d, i) {\n                        var length = d3.select(this).select('text').node().getComputedTextLength() + padding;\n                        xpos = newxpos;\n\n                        if (width < margin.left + margin.right + xpos + length) {\n                            newxpos = xpos = 5;\n                            ypos += versPadding;\n                        }\n\n                        newxpos += length;\n                        if (newxpos > maxwidth) maxwidth = newxpos;\n\n                        return 'translate(' + xpos + ',' + ypos + ')';\n                    });\n\n                //position legend as far right as possible within the total width\n                g.attr('transform', 'translate(' + (width - margin.right - maxwidth) + ',' + margin.top + ')');\n\n                height = margin.top + margin.bottom + ypos + 15;\n            }\n\n            if(vers == 'furious') {\n                // Size rectangles after text is placed\n                seriesShape\n                    .attr('width', function(d,i) {\n                        return seriesText[0][i].getComputedTextLength() + 27;\n                    })\n                    .attr('height', 18)\n                    .attr('y', -9)\n                    .attr('x', -15)\n            }\n\n            seriesShape\n                .style('fill', setBGColor)\n                .style('stroke', function(d,i) { return d.color || color(d, i) });\n        });\n\n        function setTextColor(d,i) {\n            if(vers != 'furious') return '#000';\n            if(expanded) {\n                return d.disengaged ? color(d,i) : '#fff';\n            } else if (!expanded) {\n                return !!d.disabled ? color(d,i) : '#fff';\n            }\n        }\n\n        function setBGColor(d,i) {\n            if(expanded && vers == 'furious') {\n                return d.disengaged ? '#fff' : color(d,i);\n            } else {\n                return !!d.disabled ? '#fff' : color(d,i);\n            }\n        }\n\n        return chart;\n    }\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:          {get: function(){return width;}, set: function(_){width=_;}},\n        height:         {get: function(){return height;}, set: function(_){height=_;}},\n        key:            {get: function(){return getKey;}, set: function(_){getKey=_;}},\n        keyFormatter:   {get: function(){return keyFormatter;}, set: function(_){keyFormatter=_;}},\n        align:          {get: function(){return align;}, set: function(_){align=_;}},\n        rightAlign:     {get: function(){return rightAlign;}, set: function(_){rightAlign=_;}},\n        maxKeyLength:   {get: function(){return maxKeyLength;}, set: function(_){maxKeyLength=_;}},\n        padding:        {get: function(){return padding;}, set: function(_){padding=_;}},\n        updateState:    {get: function(){return updateState;}, set: function(_){updateState=_;}},\n        radioButtonMode:{get: function(){return radioButtonMode;}, set: function(_){radioButtonMode=_;}},\n        expanded:       {get: function(){return expanded;}, set: function(_){expanded=_;}},\n        vers:           {get: function(){return vers;}, set: function(_){vers=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n        }}\n    });\n\n    nv.utils.initOptions(chart);\n\n    return chart;\n};\n//TODO: consider deprecating and using multibar with single series for this\nnv.models.historicalBar = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n        , width = null\n        , height = null\n        , id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n        , container = null\n        , x = d3.scale.linear()\n        , y = d3.scale.linear()\n        , getX = function(d) { return d.x }\n        , getY = function(d) { return d.y }\n        , forceX = []\n        , forceY = [0]\n        , padData = false\n        , clipEdge = true\n        , color = nv.utils.defaultColor()\n        , xDomain\n        , yDomain\n        , xRange\n        , yRange\n        , dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd')\n        , interactive = true\n        ;\n\n    var renderWatch = nv.utils.renderWatch(dispatch, 0);\n\n    function chart(selection) {\n        selection.each(function(data) {\n            renderWatch.reset();\n\n            container = d3.select(this);\n            var availableWidth = nv.utils.availableWidth(width, container, margin),\n                availableHeight = nv.utils.availableHeight(height, container, margin);\n\n            nv.utils.initSVG(container);\n\n            // Setup Scales\n            x.domain(xDomain || d3.extent(data[0].values.map(getX).concat(forceX) ));\n\n            if (padData)\n                x.range(xRange || [availableWidth * .5 / data[0].values.length, availableWidth * (data[0].values.length - .5)  / data[0].values.length ]);\n            else\n                x.range(xRange || [0, availableWidth]);\n\n            y.domain(yDomain || d3.extent(data[0].values.map(getY).concat(forceY) ))\n                .range(yRange || [availableHeight, 0]);\n\n            // If scale's domain don't have a range, slightly adjust to make one... so a chart can show a single data point\n            if (x.domain()[0] === x.domain()[1])\n                x.domain()[0] ?\n                    x.domain([x.domain()[0] - x.domain()[0] * 0.01, x.domain()[1] + x.domain()[1] * 0.01])\n                    : x.domain([-1,1]);\n\n            if (y.domain()[0] === y.domain()[1])\n                y.domain()[0] ?\n                    y.domain([y.domain()[0] + y.domain()[0] * 0.01, y.domain()[1] - y.domain()[1] * 0.01])\n                    : y.domain([-1,1]);\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-historicalBar-' + id).data([data[0].values]);\n            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-historicalBar-' + id);\n            var defsEnter = wrapEnter.append('defs');\n            var gEnter = wrapEnter.append('g');\n            var g = wrap.select('g');\n\n            gEnter.append('g').attr('class', 'nv-bars');\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            container\n                .on('click', function(d,i) {\n                    dispatch.chartClick({\n                        data: d,\n                        index: i,\n                        pos: d3.event,\n                        id: id\n                    });\n                });\n\n            defsEnter.append('clipPath')\n                .attr('id', 'nv-chart-clip-path-' + id)\n                .append('rect');\n\n            wrap.select('#nv-chart-clip-path-' + id + ' rect')\n                .attr('width', availableWidth)\n                .attr('height', availableHeight);\n\n            g.attr('clip-path', clipEdge ? 'url(#nv-chart-clip-path-' + id + ')' : '');\n\n            var bars = wrap.select('.nv-bars').selectAll('.nv-bar')\n                .data(function(d) { return d }, function(d,i) {return getX(d,i)});\n            bars.exit().remove();\n\n            bars.enter().append('rect')\n                .attr('x', 0 )\n                .attr('y', function(d,i) {  return nv.utils.NaNtoZero(y(Math.max(0, getY(d,i)))) })\n                .attr('height', function(d,i) { return nv.utils.NaNtoZero(Math.abs(y(getY(d,i)) - y(0))) })\n                .attr('transform', function(d,i) { return 'translate(' + (x(getX(d,i)) - availableWidth / data[0].values.length * .45) + ',0)'; })\n                .on('mouseover', function(d,i) {\n                    if (!interactive) return;\n                    d3.select(this).classed('hover', true);\n                    dispatch.elementMouseover({\n                        data: d,\n                        index: i,\n                        color: d3.select(this).style(\"fill\")\n                    });\n\n                })\n                .on('mouseout', function(d,i) {\n                    if (!interactive) return;\n                    d3.select(this).classed('hover', false);\n                    dispatch.elementMouseout({\n                        data: d,\n                        index: i,\n                        color: d3.select(this).style(\"fill\")\n                    });\n                })\n                .on('mousemove', function(d,i) {\n                    if (!interactive) return;\n                    dispatch.elementMousemove({\n                        data: d,\n                        index: i,\n                        color: d3.select(this).style(\"fill\")\n                    });\n                })\n                .on('click', function(d,i) {\n                    if (!interactive) return;\n                    var element = this;\n                    dispatch.elementClick({\n                        data: d,\n                        index: i,\n                        color: d3.select(this).style(\"fill\"),\n                        event: d3.event,\n                        element: element\n                    });\n                    d3.event.stopPropagation();\n                })\n                .on('dblclick', function(d,i) {\n                    if (!interactive) return;\n                    dispatch.elementDblClick({\n                        data: d,\n                        index: i,\n                        color: d3.select(this).style(\"fill\")\n                    });\n                    d3.event.stopPropagation();\n                });\n\n            bars\n                .attr('fill', function(d,i) { return color(d, i); })\n                .attr('class', function(d,i,j) { return (getY(d,i) < 0 ? 'nv-bar negative' : 'nv-bar positive') + ' nv-bar-' + j + '-' + i })\n                .watchTransition(renderWatch, 'bars')\n                .attr('transform', function(d,i) { return 'translate(' + (x(getX(d,i)) - availableWidth / data[0].values.length * .45) + ',0)'; })\n                //TODO: better width calculations that don't assume always uniform data spacing;w\n                .attr('width', (availableWidth / data[0].values.length) * .9 );\n\n            bars.watchTransition(renderWatch, 'bars')\n                .attr('y', function(d,i) {\n                    var rval = getY(d,i) < 0 ?\n                        y(0) :\n                            y(0) - y(getY(d,i)) < 1 ?\n                        y(0) - 1 :\n                        y(getY(d,i));\n                    return nv.utils.NaNtoZero(rval);\n                })\n                .attr('height', function(d,i) { return nv.utils.NaNtoZero(Math.max(Math.abs(y(getY(d,i)) - y(0)),1)) });\n\n        });\n\n        renderWatch.renderEnd('historicalBar immediate');\n        return chart;\n    }\n\n    //Create methods to allow outside functions to highlight a specific bar.\n    chart.highlightPoint = function(pointIndex, isHoverOver) {\n        container\n            .select(\".nv-bars .nv-bar-0-\" + pointIndex)\n            .classed(\"hover\", isHoverOver)\n        ;\n    };\n\n    chart.clearHighlights = function() {\n        container\n            .select(\".nv-bars .nv-bar.hover\")\n            .classed(\"hover\", false)\n        ;\n    };\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:   {get: function(){return width;}, set: function(_){width=_;}},\n        height:  {get: function(){return height;}, set: function(_){height=_;}},\n        forceX:  {get: function(){return forceX;}, set: function(_){forceX=_;}},\n        forceY:  {get: function(){return forceY;}, set: function(_){forceY=_;}},\n        padData: {get: function(){return padData;}, set: function(_){padData=_;}},\n        x:       {get: function(){return getX;}, set: function(_){getX=_;}},\n        y:       {get: function(){return getY;}, set: function(_){getY=_;}},\n        xScale:  {get: function(){return x;}, set: function(_){x=_;}},\n        yScale:  {get: function(){return y;}, set: function(_){y=_;}},\n        xDomain: {get: function(){return xDomain;}, set: function(_){xDomain=_;}},\n        yDomain: {get: function(){return yDomain;}, set: function(_){yDomain=_;}},\n        xRange:  {get: function(){return xRange;}, set: function(_){xRange=_;}},\n        yRange:  {get: function(){return yRange;}, set: function(_){yRange=_;}},\n        clipEdge:    {get: function(){return clipEdge;}, set: function(_){clipEdge=_;}},\n        id:          {get: function(){return id;}, set: function(_){id=_;}},\n        interactive: {get: function(){return interactive;}, set: function(_){interactive=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n        }}\n    });\n\n    nv.utils.initOptions(chart);\n\n    return chart;\n};\n\nnv.models.historicalBarChart = function(bar_model) {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var bars = bar_model || nv.models.historicalBar()\n        , xAxis = nv.models.axis()\n        , yAxis = nv.models.axis()\n        , legend = nv.models.legend()\n        , interactiveLayer = nv.interactiveGuideline()\n        , tooltip = nv.models.tooltip()\n        ;\n\n\n    var margin = {top: 30, right: 90, bottom: 50, left: 90}\n        , marginTop = null\n        , color = nv.utils.defaultColor()\n        , width = null\n        , height = null\n        , showLegend = false\n        , showXAxis = true\n        , showYAxis = true\n        , rightAlignYAxis = false\n        , useInteractiveGuideline = false\n        , x\n        , y\n        , state = {}\n        , defaultState = null\n        , noData = null\n        , dispatch = d3.dispatch('tooltipHide', 'stateChange', 'changeState', 'renderEnd')\n        , transitionDuration = 250\n        ;\n\n    xAxis.orient('bottom').tickPadding(7);\n    yAxis.orient( (rightAlignYAxis) ? 'right' : 'left');\n    tooltip\n        .duration(0)\n        .headerEnabled(false)\n        .valueFormatter(function(d, i) {\n            return yAxis.tickFormat()(d, i);\n        })\n        .headerFormatter(function(d, i) {\n            return xAxis.tickFormat()(d, i);\n        });\n\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch, 0);\n\n    function chart(selection) {\n        selection.each(function(data) {\n            renderWatch.reset();\n            renderWatch.models(bars);\n            if (showXAxis) renderWatch.models(xAxis);\n            if (showYAxis) renderWatch.models(yAxis);\n\n            var container = d3.select(this),\n                that = this;\n            nv.utils.initSVG(container);\n            var availableWidth = nv.utils.availableWidth(width, container, margin),\n                availableHeight = nv.utils.availableHeight(height, container, margin);\n\n            chart.update = function() { container.transition().duration(transitionDuration).call(chart) };\n            chart.container = this;\n\n            //set state.disabled\n            state.disabled = data.map(function(d) { return !!d.disabled });\n\n            if (!defaultState) {\n                var key;\n                defaultState = {};\n                for (key in state) {\n                    if (state[key] instanceof Array)\n                        defaultState[key] = state[key].slice(0);\n                    else\n                        defaultState[key] = state[key];\n                }\n            }\n\n            // Display noData message if there's nothing to show.\n            if (!data || !data.length || !data.filter(function(d) { return d.values.length }).length) {\n                nv.utils.noData(chart, container)\n                return chart;\n            } else {\n                container.selectAll('.nv-noData').remove();\n            }\n\n            // Setup Scales\n            x = bars.xScale();\n            y = bars.yScale();\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-historicalBarChart').data([data]);\n            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-historicalBarChart').append('g');\n            var g = wrap.select('g');\n\n            gEnter.append('g').attr('class', 'nv-x nv-axis');\n            gEnter.append('g').attr('class', 'nv-y nv-axis');\n            gEnter.append('g').attr('class', 'nv-barsWrap');\n            gEnter.append('g').attr('class', 'nv-legendWrap');\n            gEnter.append('g').attr('class', 'nv-interactive');\n\n            // Legend\n            if (!showLegend) {\n                g.select('.nv-legendWrap').selectAll('*').remove();\n            } else {\n                legend.width(availableWidth);\n\n                g.select('.nv-legendWrap')\n                    .datum(data)\n                    .call(legend);\n\n                if (!marginTop && legend.height() !== margin.top) {\n                    margin.top = legend.height();\n                    availableHeight = nv.utils.availableHeight(height, container, margin);\n                }\n\n                wrap.select('.nv-legendWrap')\n                    .attr('transform', 'translate(0,' + (-margin.top) +')')\n            }\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            if (rightAlignYAxis) {\n                g.select(\".nv-y.nv-axis\")\n                    .attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n            }\n\n            //Set up interactive layer\n            if (useInteractiveGuideline) {\n                interactiveLayer\n                    .width(availableWidth)\n                    .height(availableHeight)\n                    .margin({left:margin.left, top:margin.top})\n                    .svgContainer(container)\n                    .xScale(x);\n                wrap.select(\".nv-interactive\").call(interactiveLayer);\n            }\n            bars\n                .width(availableWidth)\n                .height(availableHeight)\n                .color(data.map(function(d,i) {\n                    return d.color || color(d, i);\n                }).filter(function(d,i) { return !data[i].disabled }));\n\n            var barsWrap = g.select('.nv-barsWrap')\n                .datum(data.filter(function(d) { return !d.disabled }));\n            barsWrap.transition().call(bars);\n\n            // Setup Axes\n            if (showXAxis) {\n                xAxis\n                    .scale(x)\n                    ._ticks( nv.utils.calcTicksX(availableWidth/100, data) )\n                    .tickSize(-availableHeight, 0);\n\n                g.select('.nv-x.nv-axis')\n                    .attr('transform', 'translate(0,' + y.range()[0] + ')');\n                g.select('.nv-x.nv-axis')\n                    .transition()\n                    .call(xAxis);\n            }\n\n            if (showYAxis) {\n                yAxis\n                    .scale(y)\n                    ._ticks( nv.utils.calcTicksY(availableHeight/36, data) )\n                    .tickSize( -availableWidth, 0);\n\n                g.select('.nv-y.nv-axis')\n                    .transition()\n                    .call(yAxis);\n            }\n\n            //============================================================\n            // Event Handling/Dispatching (in chart's scope)\n            //------------------------------------------------------------\n\n            interactiveLayer.dispatch.on('elementMousemove', function(e) {\n                bars.clearHighlights();\n\n                var singlePoint, pointIndex, pointXLocation, allData = [];\n                data\n                    .filter(function(series, i) {\n                        series.seriesIndex = i;\n                        return !series.disabled;\n                    })\n                    .forEach(function(series,i) {\n                        pointIndex = nv.interactiveBisect(series.values, e.pointXValue, chart.x());\n                        bars.highlightPoint(pointIndex,true);\n                        var point = series.values[pointIndex];\n                        if (point === undefined) return;\n                        if (singlePoint === undefined) singlePoint = point;\n                        if (pointXLocation === undefined) pointXLocation = chart.xScale()(chart.x()(point,pointIndex));\n                        allData.push({\n                            key: series.key,\n                            value: chart.y()(point, pointIndex),\n                            color: color(series,series.seriesIndex),\n                            data: series.values[pointIndex]\n                        });\n                    });\n\n                var xValue = xAxis.tickFormat()(chart.x()(singlePoint,pointIndex));\n                interactiveLayer.tooltip\n                    .valueFormatter(function(d,i) {\n                        return yAxis.tickFormat()(d);\n                    })\n                    .data({\n                        value: xValue,\n                        index: pointIndex,\n                        series: allData\n                    })();\n\n                interactiveLayer.renderGuideLine(pointXLocation);\n\n            });\n\n            interactiveLayer.dispatch.on(\"elementMouseout\",function(e) {\n                dispatch.tooltipHide();\n                bars.clearHighlights();\n            });\n\n            legend.dispatch.on('legendClick', function(d,i) {\n                d.disabled = !d.disabled;\n\n                if (!data.filter(function(d) { return !d.disabled }).length) {\n                    data.map(function(d) {\n                        d.disabled = false;\n                        wrap.selectAll('.nv-series').classed('disabled', false);\n                        return d;\n                    });\n                }\n\n                state.disabled = data.map(function(d) { return !!d.disabled });\n                dispatch.stateChange(state);\n\n                selection.transition().call(chart);\n            });\n\n            legend.dispatch.on('legendDblclick', function(d) {\n                //Double clicking should always enable current series, and disabled all others.\n                data.forEach(function(d) {\n                    d.disabled = true;\n                });\n                d.disabled = false;\n\n                state.disabled = data.map(function(d) { return !!d.disabled });\n                dispatch.stateChange(state);\n                chart.update();\n            });\n\n            dispatch.on('changeState', function(e) {\n                if (typeof e.disabled !== 'undefined') {\n                    data.forEach(function(series,i) {\n                        series.disabled = e.disabled[i];\n                    });\n\n                    state.disabled = e.disabled;\n                }\n\n                chart.update();\n            });\n        });\n\n        renderWatch.renderEnd('historicalBarChart immediate');\n        return chart;\n    }\n\n    //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n    bars.dispatch.on('elementMouseover.tooltip', function(evt) {\n        evt['series'] = {\n            key: chart.x()(evt.data),\n            value: chart.y()(evt.data),\n            color: evt.color\n        };\n        tooltip.data(evt).hidden(false);\n    });\n\n    bars.dispatch.on('elementMouseout.tooltip', function(evt) {\n        tooltip.hidden(true);\n    });\n\n    bars.dispatch.on('elementMousemove.tooltip', function(evt) {\n        tooltip();\n    });\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    // expose chart's sub-components\n    chart.dispatch = dispatch;\n    chart.bars = bars;\n    chart.legend = legend;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.interactiveLayer = interactiveLayer;\n    chart.tooltip = tooltip;\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:      {get: function(){return width;}, set: function(_){width=_;}},\n        height:     {get: function(){return height;}, set: function(_){height=_;}},\n        showLegend: {get: function(){return showLegend;}, set: function(_){showLegend=_;}},\n        showXAxis: {get: function(){return showXAxis;}, set: function(_){showXAxis=_;}},\n        showYAxis: {get: function(){return showYAxis;}, set: function(_){showYAxis=_;}},\n        defaultState:    {get: function(){return defaultState;}, set: function(_){defaultState=_;}},\n        noData:    {get: function(){return noData;}, set: function(_){noData=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            if (_.top !== undefined) {\n                margin.top = _.top;\n                marginTop = _.top;\n            }\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n            legend.color(color);\n            bars.color(color);\n        }},\n        duration:    {get: function(){return transitionDuration;}, set: function(_){\n            transitionDuration=_;\n            renderWatch.reset(transitionDuration);\n            yAxis.duration(transitionDuration);\n            xAxis.duration(transitionDuration);\n        }},\n        rightAlignYAxis: {get: function(){return rightAlignYAxis;}, set: function(_){\n            rightAlignYAxis = _;\n            yAxis.orient( (_) ? 'right' : 'left');\n        }},\n        useInteractiveGuideline: {get: function(){return useInteractiveGuideline;}, set: function(_){\n            useInteractiveGuideline = _;\n            if (_ === true) {\n                chart.interactive(false);\n            }\n        }}\n    });\n\n    nv.utils.inheritOptions(chart, bars);\n    nv.utils.initOptions(chart);\n\n    return chart;\n};\n\n\n// ohlcChart is just a historical chart with ohlc bars and some tweaks\nnv.models.ohlcBarChart = function() {\n    var chart = nv.models.historicalBarChart(nv.models.ohlcBar());\n\n    // special default tooltip since we show multiple values per x\n    chart.useInteractiveGuideline(true);\n    chart.interactiveLayer.tooltip.contentGenerator(function(data) {\n        // we assume only one series exists for this chart\n        var d = data.series[0].data;\n        // match line colors as defined in nv.d3.css\n        var color = d.open < d.close ? \"2ca02c\" : \"d62728\";\n        return '' +\n            '<h3 style=\"color: #' + color + '\">' + data.value + '</h3>' +\n            '<table>' +\n            '<tr><td>open:</td><td>' + chart.yAxis.tickFormat()(d.open) + '</td></tr>' +\n            '<tr><td>close:</td><td>' + chart.yAxis.tickFormat()(d.close) + '</td></tr>' +\n            '<tr><td>high</td><td>' + chart.yAxis.tickFormat()(d.high) + '</td></tr>' +\n            '<tr><td>low:</td><td>' + chart.yAxis.tickFormat()(d.low) + '</td></tr>' +\n            '</table>';\n    });\n    return chart;\n};\n\n// candlestickChart is just a historical chart with candlestick bars and some tweaks\nnv.models.candlestickBarChart = function() {\n    var chart = nv.models.historicalBarChart(nv.models.candlestickBar());\n\n    // special default tooltip since we show multiple values per x\n    chart.useInteractiveGuideline(true);\n    chart.interactiveLayer.tooltip.contentGenerator(function(data) {\n        // we assume only one series exists for this chart\n        var d = data.series[0].data;\n        // match line colors as defined in nv.d3.css\n        var color = d.open < d.close ? \"2ca02c\" : \"d62728\";\n        return '' +\n            '<h3 style=\"color: #' + color + '\">' + data.value + '</h3>' +\n            '<table>' +\n            '<tr><td>open:</td><td>' + chart.yAxis.tickFormat()(d.open) + '</td></tr>' +\n            '<tr><td>close:</td><td>' + chart.yAxis.tickFormat()(d.close) + '</td></tr>' +\n            '<tr><td>high</td><td>' + chart.yAxis.tickFormat()(d.high) + '</td></tr>' +\n            '<tr><td>low:</td><td>' + chart.yAxis.tickFormat()(d.low) + '</td></tr>' +\n            '</table>';\n    });\n    return chart;\n};\nnv.models.legend = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {top: 5, right: 0, bottom: 5, left: 0}\n        , width = 400\n        , height = 20\n        , getKey = function(d) { return d.key }\n        , keyFormatter = function (d) { return d }\n        , color = nv.utils.getColor()\n        , maxKeyLength = 20 //default value for key lengths\n        , align = true\n        , padding = 32 //define how much space between legend items. - recommend 32 for furious version\n        , rightAlign = true\n        , updateState = true   //If true, legend will update data.disabled and trigger a 'stateChange' dispatch.\n        , radioButtonMode = false   //If true, clicking legend items will cause it to behave like a radio button. (only one can be selected at a time)\n        , expanded = false\n        , dispatch = d3.dispatch('legendClick', 'legendDblclick', 'legendMouseover', 'legendMouseout', 'stateChange')\n        , vers = 'classic' //Options are \"classic\" and \"furious\"\n        ;\n\n    function chart(selection) {\n        selection.each(function(data) {\n            var availableWidth = width - margin.left - margin.right,\n                container = d3.select(this);\n            nv.utils.initSVG(container);\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-legend').data([data]);\n            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-legend').append('g');\n            var g = wrap.select('g');\n\n            if (rightAlign)\n                wrap.attr('transform', 'translate(' + (- margin.right) + ',' + margin.top + ')');\n            else\n                wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            var series = g.selectAll('.nv-series')\n                .data(function(d) {\n                    if(vers != 'furious') return d;\n\n                    return d.filter(function(n) {\n                        return expanded ? true : !n.disengaged;\n                    });\n                });\n\n            var seriesEnter = series.enter().append('g').attr('class', 'nv-series');\n            var seriesShape;\n\n            var versPadding;\n            switch(vers) {\n                case 'furious' :\n                    versPadding = 23;\n                    break;\n                case 'classic' :\n                    versPadding = 20;\n            }\n\n            if(vers == 'classic') {\n                seriesEnter.append('circle')\n                    .style('stroke-width', 2)\n                    .attr('class','nv-legend-symbol')\n                    .attr('r', 5);\n\n                seriesShape = series.select('.nv-legend-symbol');\n            } else if (vers == 'furious') {\n                seriesEnter.append('rect')\n                    .style('stroke-width', 2)\n                    .attr('class','nv-legend-symbol')\n                    .attr('rx', 3)\n                    .attr('ry', 3);\n                seriesShape = series.select('.nv-legend-symbol');\n\n                seriesEnter.append('g')\n                    .attr('class', 'nv-check-box')\n                    .property('innerHTML','<path d=\"M0.5,5 L22.5,5 L22.5,26.5 L0.5,26.5 L0.5,5 Z\" class=\"nv-box\"></path><path d=\"M5.5,12.8618467 L11.9185089,19.2803556 L31,0.198864511\" class=\"nv-check\"></path>')\n                    .attr('transform', 'translate(-10,-8)scale(0.5)');\n\n                var seriesCheckbox = series.select('.nv-check-box');\n\n                seriesCheckbox.each(function(d,i) {\n                    d3.select(this).selectAll('path')\n                        .attr('stroke', setTextColor(d,i));\n                });\n            }\n\n            seriesEnter.append('text')\n                .attr('text-anchor', 'start')\n                .attr('class','nv-legend-text')\n                .attr('dy', '.32em')\n                .attr('dx', '8');\n\n            var seriesText = series.select('text.nv-legend-text');\n\n            series\n                .on('mouseover', function(d,i) {\n                    dispatch.legendMouseover(d,i);  //TODO: Make consistent with other event objects\n                })\n                .on('mouseout', function(d,i) {\n                    dispatch.legendMouseout(d,i);\n                })\n                .on('click', function(d,i) {\n                    dispatch.legendClick(d,i);\n                    // make sure we re-get data in case it was modified\n                    var data = series.data();\n                    if (updateState) {\n                        if(vers =='classic') {\n                            if (radioButtonMode) {\n                                //Radio button mode: set every series to disabled,\n                                //  and enable the clicked series.\n                                data.forEach(function(series) { series.disabled = true});\n                                d.disabled = false;\n                            }\n                            else {\n                                d.disabled = !d.disabled;\n                                if (data.every(function(series) { return series.disabled})) {\n                                    //the default behavior of NVD3 legends is, if every single series\n                                    // is disabled, turn all series' back on.\n                                    data.forEach(function(series) { series.disabled = false});\n                                }\n                            }\n                        } else if(vers == 'furious') {\n                            if(expanded) {\n                                d.disengaged = !d.disengaged;\n                                d.userDisabled = d.userDisabled == undefined ? !!d.disabled : d.userDisabled;\n                                d.disabled = d.disengaged || d.userDisabled;\n                            } else if (!expanded) {\n                                d.disabled = !d.disabled;\n                                d.userDisabled = d.disabled;\n                                var engaged = data.filter(function(d) { return !d.disengaged; });\n                                if (engaged.every(function(series) { return series.userDisabled })) {\n                                    //the default behavior of NVD3 legends is, if every single series\n                                    // is disabled, turn all series' back on.\n                                    data.forEach(function(series) {\n                                        series.disabled = series.userDisabled = false;\n                                    });\n                                }\n                            }\n                        }\n                        dispatch.stateChange({\n                            disabled: data.map(function(d) { return !!d.disabled }),\n                            disengaged: data.map(function(d) { return !!d.disengaged })\n                        });\n\n                    }\n                })\n                .on('dblclick', function(d,i) {\n                    if(vers == 'furious' && expanded) return;\n                    dispatch.legendDblclick(d,i);\n                    if (updateState) {\n                        // make sure we re-get data in case it was modified\n                        var data = series.data();\n                        //the default behavior of NVD3 legends, when double clicking one,\n                        // is to set all other series' to false, and make the double clicked series enabled.\n                        data.forEach(function(series) {\n                            series.disabled = true;\n                            if(vers == 'furious') series.userDisabled = series.disabled;\n                        });\n                        d.disabled = false;\n                        if(vers == 'furious') d.userDisabled = d.disabled;\n                        dispatch.stateChange({\n                            disabled: data.map(function(d) { return !!d.disabled })\n                        });\n                    }\n                });\n\n            series.classed('nv-disabled', function(d) { return d.userDisabled });\n            series.exit().remove();\n\n            seriesText\n                .attr('fill', setTextColor)\n                .text(function (d) { return keyFormatter(getKey(d)) });\n\n            //TODO: implement fixed-width and max-width options (max-width is especially useful with the align option)\n            // NEW ALIGNING CODE, TODO: clean up\n            var legendWidth = 0;\n            if (align) {\n\n                var seriesWidths = [];\n                series.each(function(d,i) {\n                    var legendText;\n                    if (keyFormatter(getKey(d)) && keyFormatter(getKey(d)).length > maxKeyLength) {\n                        var trimmedKey = keyFormatter(getKey(d)).substring(0, maxKeyLength);\n                        legendText = d3.select(this).select('text').text(trimmedKey + \"...\");\n                        d3.select(this).append(\"svg:title\").text(keyFormatter(getKey(d)));\n                    } else {\n                        legendText = d3.select(this).select('text');\n                    }\n                    var nodeTextLength;\n                    try {\n                        nodeTextLength = legendText.node().getComputedTextLength();\n                        // If the legendText is display:none'd (nodeTextLength == 0), simulate an error so we approximate, instead\n                        if(nodeTextLength <= 0) throw Error();\n                    }\n                    catch(e) {\n                        nodeTextLength = nv.utils.calcApproxTextWidth(legendText);\n                    }\n\n                    seriesWidths.push(nodeTextLength + padding);\n                });\n\n                var seriesPerRow = 0;\n                var columnWidths = [];\n                legendWidth = 0;\n\n                while ( legendWidth < availableWidth && seriesPerRow < seriesWidths.length) {\n                    columnWidths[seriesPerRow] = seriesWidths[seriesPerRow];\n                    legendWidth += seriesWidths[seriesPerRow++];\n                }\n                if (seriesPerRow === 0) seriesPerRow = 1; //minimum of one series per row\n\n                while ( legendWidth > availableWidth && seriesPerRow > 1 ) {\n                    columnWidths = [];\n                    seriesPerRow--;\n\n                    for (var k = 0; k < seriesWidths.length; k++) {\n                        if (seriesWidths[k] > (columnWidths[k % seriesPerRow] || 0) )\n                            columnWidths[k % seriesPerRow] = seriesWidths[k];\n                    }\n\n                    legendWidth = columnWidths.reduce(function(prev, cur, index, array) {\n                        return prev + cur;\n                    });\n                }\n\n                var xPositions = [];\n                for (var i = 0, curX = 0; i < seriesPerRow; i++) {\n                    xPositions[i] = curX;\n                    curX += columnWidths[i];\n                }\n\n                series\n                    .attr('transform', function(d, i) {\n                        return 'translate(' + xPositions[i % seriesPerRow] + ',' + (5 + Math.floor(i / seriesPerRow) * versPadding) + ')';\n                    });\n\n                //position legend as far right as possible within the total width\n                if (rightAlign) {\n                    g.attr('transform', 'translate(' + (width - margin.right - legendWidth) + ',' + margin.top + ')');\n                }\n                else {\n                    g.attr('transform', 'translate(0' + ',' + margin.top + ')');\n                }\n\n                height = margin.top + margin.bottom + (Math.ceil(seriesWidths.length / seriesPerRow) * versPadding);\n\n            } else {\n\n                var ypos = 5,\n                    newxpos = 5,\n                    maxwidth = 0,\n                    xpos;\n                series\n                    .attr('transform', function(d, i) {\n                        var length = d3.select(this).select('text').node().getComputedTextLength() + padding;\n                        xpos = newxpos;\n\n                        if (width < margin.left + margin.right + xpos + length) {\n                            newxpos = xpos = 5;\n                            ypos += versPadding;\n                        }\n\n                        newxpos += length;\n                        if (newxpos > maxwidth) maxwidth = newxpos;\n\n                        if(legendWidth < xpos + maxwidth) {\n                            legendWidth = xpos + maxwidth;\n                        }\n                        return 'translate(' + xpos + ',' + ypos + ')';\n                    });\n\n                //position legend as far right as possible within the total width\n                g.attr('transform', 'translate(' + (width - margin.right - maxwidth) + ',' + margin.top + ')');\n\n                height = margin.top + margin.bottom + ypos + 15;\n            }\n\n            if(vers == 'furious') {\n                // Size rectangles after text is placed\n                seriesShape\n                    .attr('width', function(d,i) {\n                        return seriesText[0][i].getComputedTextLength() + 27;\n                    })\n                    .attr('height', 18)\n                    .attr('y', -9)\n                    .attr('x', -15);\n\n                // The background for the expanded legend (UI)\n                gEnter.insert('rect',':first-child')\n                    .attr('class', 'nv-legend-bg')\n                    .attr('fill', '#eee')\n                    // .attr('stroke', '#444')\n                    .attr('opacity',0);\n\n                var seriesBG = g.select('.nv-legend-bg');\n\n                seriesBG\n                .transition().duration(300)\n                    .attr('x', -versPadding )\n                    .attr('width', legendWidth + versPadding - 12)\n                    .attr('height', height + 10)\n                    .attr('y', -margin.top - 10)\n                    .attr('opacity', expanded ? 1 : 0);\n\n\n            }\n\n            seriesShape\n                .style('fill', setBGColor)\n                .style('fill-opacity', setBGOpacity)\n                .style('stroke', setBGColor);\n        });\n\n        function setTextColor(d,i) {\n            if(vers != 'furious') return '#000';\n            if(expanded) {\n                return d.disengaged ? '#000' : '#fff';\n            } else if (!expanded) {\n                if(!d.color) d.color = color(d,i);\n                return !!d.disabled ? d.color : '#fff';\n            }\n        }\n\n        function setBGColor(d,i) {\n            if(expanded && vers == 'furious') {\n                return d.disengaged ? '#eee' : d.color || color(d,i);\n            } else {\n                return d.color || color(d,i);\n            }\n        }\n\n\n        function setBGOpacity(d,i) {\n            if(expanded && vers == 'furious') {\n                return 1;\n            } else {\n                return !!d.disabled ? 0 : 1;\n            }\n        }\n\n        return chart;\n    }\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:          {get: function(){return width;}, set: function(_){width=_;}},\n        height:         {get: function(){return height;}, set: function(_){height=_;}},\n        key:            {get: function(){return getKey;}, set: function(_){getKey=_;}},\n        keyFormatter:   {get: function(){return keyFormatter;}, set: function(_){keyFormatter=_;}},\n        align:          {get: function(){return align;}, set: function(_){align=_;}},\n        maxKeyLength:   {get: function(){return maxKeyLength;}, set: function(_){maxKeyLength=_;}},\n        rightAlign:     {get: function(){return rightAlign;}, set: function(_){rightAlign=_;}},\n        padding:        {get: function(){return padding;}, set: function(_){padding=_;}},\n        updateState:    {get: function(){return updateState;}, set: function(_){updateState=_;}},\n        radioButtonMode:{get: function(){return radioButtonMode;}, set: function(_){radioButtonMode=_;}},\n        expanded:       {get: function(){return expanded;}, set: function(_){expanded=_;}},\n        vers:           {get: function(){return vers;}, set: function(_){vers=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n        }}\n    });\n\n    nv.utils.initOptions(chart);\n\n    return chart;\n};\n\nnv.models.line = function() {\n    \"use strict\";\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var  scatter = nv.models.scatter()\n        ;\n\n    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n        , width = 960\n        , height = 500\n        , container = null\n        , strokeWidth = 1.5\n        , color = nv.utils.defaultColor() // a function that returns a color\n        , getX = function(d) { return d.x } // accessor to get the x value from a data point\n        , getY = function(d) { return d.y } // accessor to get the y value from a data point\n        , defined = function(d,i) { return !isNaN(getY(d,i)) && getY(d,i) !== null } // allows a line to be not continuous when it is not defined\n        , isArea = function(d) { return d.area } // decides if a line is an area or just a line\n        , clipEdge = false // if true, masks lines within x and y scale\n        , x //can be accessed via chart.xScale()\n        , y //can be accessed via chart.yScale()\n        , interpolate = \"linear\" // controls the line interpolation\n        , duration = 250\n        , dispatch = d3.dispatch('elementClick', 'elementMouseover', 'elementMouseout', 'renderEnd')\n        ;\n\n    scatter\n        .pointSize(16) // default size\n        .pointDomain([16,256]) //set to speed up calculation, needs to be unset if there is a custom size accessor\n    ;\n\n    //============================================================\n\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var x0, y0 //used to store previous scales\n        , renderWatch = nv.utils.renderWatch(dispatch, duration)\n        ;\n\n    //============================================================\n\n\n    function chart(selection) {\n        renderWatch.reset();\n        renderWatch.models(scatter);\n        selection.each(function(data) {\n            container = d3.select(this);\n            var availableWidth = nv.utils.availableWidth(width, container, margin),\n                availableHeight = nv.utils.availableHeight(height, container, margin);\n            nv.utils.initSVG(container);\n\n            // Setup Scales\n            x = scatter.xScale();\n            y = scatter.yScale();\n\n            x0 = x0 || x;\n            y0 = y0 || y;\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-line').data([data]);\n            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-line');\n            var defsEnter = wrapEnter.append('defs');\n            var gEnter = wrapEnter.append('g');\n            var g = wrap.select('g');\n\n            gEnter.append('g').attr('class', 'nv-groups');\n            gEnter.append('g').attr('class', 'nv-scatterWrap');\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            scatter\n                .width(availableWidth)\n                .height(availableHeight);\n\n            var scatterWrap = wrap.select('.nv-scatterWrap');\n            scatterWrap.call(scatter);\n\n            defsEnter.append('clipPath')\n                .attr('id', 'nv-edge-clip-' + scatter.id())\n                .append('rect');\n\n            wrap.select('#nv-edge-clip-' + scatter.id() + ' rect')\n                .attr('width', availableWidth)\n                .attr('height', (availableHeight > 0) ? availableHeight : 0);\n\n            g   .attr('clip-path', clipEdge ? 'url(#nv-edge-clip-' + scatter.id() + ')' : '');\n            scatterWrap\n                .attr('clip-path', clipEdge ? 'url(#nv-edge-clip-' + scatter.id() + ')' : '');\n\n            var groups = wrap.select('.nv-groups').selectAll('.nv-group')\n                .data(function(d) { return d }, function(d) { return d.key });\n            groups.enter().append('g')\n                .style('stroke-opacity', 1e-6)\n                .style('stroke-width', function(d) { return d.strokeWidth || strokeWidth })\n                .style('fill-opacity', 1e-6);\n\n            groups.exit().remove();\n\n            groups\n                .attr('class', function(d,i) {\n                    return (d.classed || '') + ' nv-group nv-series-' + i;\n                })\n                .classed('hover', function(d) { return d.hover })\n                .style('fill', function(d,i){ return color(d, i) })\n                .style('stroke', function(d,i){ return color(d, i)});\n            groups.watchTransition(renderWatch, 'line: groups')\n                .style('stroke-opacity', 1)\n                .style('fill-opacity', function(d) { return d.fillOpacity || .5});\n\n            var areaPaths = groups.selectAll('path.nv-area')\n                .data(function(d) { return isArea(d) ? [d] : [] }); // this is done differently than lines because I need to check if series is an area\n            areaPaths.enter().append('path')\n                .attr('class', 'nv-area')\n                .attr('d', function(d) {\n                    return d3.svg.area()\n                        .interpolate(interpolate)\n                        .defined(defined)\n                        .x(function(d,i) { return nv.utils.NaNtoZero(x0(getX(d,i))) })\n                        .y0(function(d,i) { return nv.utils.NaNtoZero(y0(getY(d,i))) })\n                        .y1(function(d,i) { return y0( y.domain()[0] <= 0 ? y.domain()[1] >= 0 ? 0 : y.domain()[1] : y.domain()[0] ) })\n                        //.y1(function(d,i) { return y0(0) }) //assuming 0 is within y domain.. may need to tweak this\n                        .apply(this, [d.values])\n                });\n            groups.exit().selectAll('path.nv-area')\n                .remove();\n\n            areaPaths.watchTransition(renderWatch, 'line: areaPaths')\n                .attr('d', function(d) {\n                    return d3.svg.area()\n                        .interpolate(interpolate)\n                        .defined(defined)\n                        .x(function(d,i) { return nv.utils.NaNtoZero(x(getX(d,i))) })\n                        .y0(function(d,i) { return nv.utils.NaNtoZero(y(getY(d,i))) })\n                        .y1(function(d,i) { return y( y.domain()[0] <= 0 ? y.domain()[1] >= 0 ? 0 : y.domain()[1] : y.domain()[0] ) })\n                        //.y1(function(d,i) { return y0(0) }) //assuming 0 is within y domain.. may need to tweak this\n                        .apply(this, [d.values])\n                });\n\n            var linePaths = groups.selectAll('path.nv-line')\n                .data(function(d) { return [d.values] });\n\n            linePaths.enter().append('path')\n                .attr('class', 'nv-line')\n                .attr('d',\n                    d3.svg.line()\n                    .interpolate(interpolate)\n                    .defined(defined)\n                    .x(function(d,i) { return nv.utils.NaNtoZero(x0(getX(d,i))) })\n                    .y(function(d,i) { return nv.utils.NaNtoZero(y0(getY(d,i))) })\n            );\n\n            linePaths.watchTransition(renderWatch, 'line: linePaths')\n                .attr('d',\n                    d3.svg.line()\n                    .interpolate(interpolate)\n                    .defined(defined)\n                    .x(function(d,i) { return nv.utils.NaNtoZero(x(getX(d,i))) })\n                    .y(function(d,i) { return nv.utils.NaNtoZero(y(getY(d,i))) })\n            );\n\n            //store old scales for use in transitions on update\n            x0 = x.copy();\n            y0 = y.copy();\n        });\n        renderWatch.renderEnd('line immediate');\n        return chart;\n    }\n\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n    chart.scatter = scatter;\n    // Pass through events\n    scatter.dispatch.on('elementClick', function(){ dispatch.elementClick.apply(this, arguments); });\n    scatter.dispatch.on('elementMouseover', function(){ dispatch.elementMouseover.apply(this, arguments); });\n    scatter.dispatch.on('elementMouseout', function(){ dispatch.elementMouseout.apply(this, arguments); });\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:      {get: function(){return width;}, set: function(_){width=_;}},\n        height:     {get: function(){return height;}, set: function(_){height=_;}},\n        defined: {get: function(){return defined;}, set: function(_){defined=_;}},\n        interpolate:      {get: function(){return interpolate;}, set: function(_){interpolate=_;}},\n        clipEdge:    {get: function(){return clipEdge;}, set: function(_){clipEdge=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        duration: {get: function(){return duration;}, set: function(_){\n            duration = _;\n            renderWatch.reset(duration);\n            scatter.duration(duration);\n        }},\n        isArea: {get: function(){return isArea;}, set: function(_){\n            isArea = d3.functor(_);\n        }},\n        x: {get: function(){return getX;}, set: function(_){\n            getX = _;\n            scatter.x(_);\n        }},\n        y: {get: function(){return getY;}, set: function(_){\n            getY = _;\n            scatter.y(_);\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n            scatter.color(color);\n        }}\n    });\n\n    nv.utils.inheritOptions(chart, scatter);\n    nv.utils.initOptions(chart);\n\n    return chart;\n};\nnv.models.lineChart = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var lines = nv.models.line()\n        , xAxis = nv.models.axis()\n        , yAxis = nv.models.axis()\n        , legend = nv.models.legend()\n        , interactiveLayer = nv.interactiveGuideline()\n        , tooltip = nv.models.tooltip()\n        , focus = nv.models.focus(nv.models.line())\n        ;\n\n    var margin = {top: 30, right: 20, bottom: 50, left: 60}\n        , marginTop = null\n        , color = nv.utils.defaultColor()\n        , width = null\n        , height = null\n        , showLegend = true\n        , legendPosition = 'top'\n        , showXAxis = true\n        , showYAxis = true\n        , rightAlignYAxis = false\n        , useInteractiveGuideline = false\n        , x\n        , y\n        , focusEnable = false\n        , state = nv.utils.state()\n        , defaultState = null\n        , noData = null\n        , dispatch = d3.dispatch('tooltipShow', 'tooltipHide', 'stateChange', 'changeState', 'renderEnd')\n        , duration = 250\n        ;\n\n    // set options on sub-objects for this chart\n    xAxis.orient('bottom').tickPadding(7);\n    yAxis.orient(rightAlignYAxis ? 'right' : 'left');\n\n    lines.clipEdge(true).duration(0);\n\n    tooltip.valueFormatter(function(d, i) {\n        return yAxis.tickFormat()(d, i);\n    }).headerFormatter(function(d, i) {\n        return xAxis.tickFormat()(d, i);\n    });\n\n    interactiveLayer.tooltip.valueFormatter(function(d, i) {\n        return yAxis.tickFormat()(d, i);\n    }).headerFormatter(function(d, i) {\n        return xAxis.tickFormat()(d, i);\n    });\n\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    var stateGetter = function(data) {\n        return function(){\n            return {\n                active: data.map(function(d) { return !d.disabled; })\n            };\n        };\n    };\n\n    var stateSetter = function(data) {\n        return function(state) {\n            if (state.active !== undefined)\n                data.forEach(function(series,i) {\n                    series.disabled = !state.active[i];\n                });\n        };\n    };\n\n    function chart(selection) {\n        renderWatch.reset();\n        renderWatch.models(lines);\n        if (showXAxis) renderWatch.models(xAxis);\n        if (showYAxis) renderWatch.models(yAxis);\n\n        selection.each(function(data) {\n            var container = d3.select(this);\n            nv.utils.initSVG(container);\n            var availableWidth = nv.utils.availableWidth(width, container, margin),\n                availableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n            chart.update = function() {\n                if( duration === 0 ) {\n                    container.call( chart );\n                } else {\n                    container.transition().duration(duration).call(chart);\n                }\n            };\n            chart.container = this;\n\n            state\n                .setter(stateSetter(data), chart.update)\n                .getter(stateGetter(data))\n                .update();\n\n            // DEPRECATED set state.disabled\n            state.disabled = data.map(function(d) { return !!d.disabled; });\n\n            if (!defaultState) {\n                var key;\n                defaultState = {};\n                for (key in state) {\n                    if (state[key] instanceof Array)\n                        defaultState[key] = state[key].slice(0);\n                    else\n                        defaultState[key] = state[key];\n                }\n            }\n\n            // Display noData message if there's nothing to show.\n            if (!data || !data.length || !data.filter(function(d) { return d.values.length; }).length) {\n                nv.utils.noData(chart, container);\n                return chart;\n            } else {\n                container.selectAll('.nv-noData').remove();\n            }\n\n            /* Update `main' graph on brush update. */\n            focus.dispatch.on(\"onBrush\", function(extent) {\n                onBrush(extent);\n            });\n\n            // Setup Scales\n            x = lines.xScale();\n            y = lines.yScale();\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-lineChart').data([data]);\n            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-lineChart').append('g');\n            var g = wrap.select('g');\n\n            gEnter.append('g').attr('class', 'nv-legendWrap');\n\n            var focusEnter = gEnter.append('g').attr('class', 'nv-focus');\n            focusEnter.append('g').attr('class', 'nv-background').append('rect');\n            focusEnter.append('g').attr('class', 'nv-x nv-axis');\n            focusEnter.append('g').attr('class', 'nv-y nv-axis');\n            focusEnter.append('g').attr('class', 'nv-linesWrap');\n            focusEnter.append('g').attr('class', 'nv-interactive');\n\n            var contextEnter = gEnter.append('g').attr('class', 'nv-focusWrap');\n\n            // Legend\n            if (!showLegend) {\n                g.select('.nv-legendWrap').selectAll('*').remove();\n            } else {\n                legend.width(availableWidth);\n\n                g.select('.nv-legendWrap')\n                    .datum(data)\n                    .call(legend);\n\n                if (legendPosition === 'bottom') {\n                    wrap.select('.nv-legendWrap')\n                        .attr('transform', 'translate(0,' + availableHeight +')');\n                } else if (legendPosition === 'top') {\n                    if (!marginTop && legend.height() !== margin.top) {\n                        margin.top = legend.height();\n                        availableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n                    }\n\n                    wrap.select('.nv-legendWrap')\n                        .attr('transform', 'translate(0,' + (-margin.top) +')');\n                }\n            }\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            if (rightAlignYAxis) {\n                g.select(\".nv-y.nv-axis\")\n                    .attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n            }\n\n            //Set up interactive layer\n            if (useInteractiveGuideline) {\n                interactiveLayer\n                    .width(availableWidth)\n                    .height(availableHeight)\n                    .margin({left:margin.left, top:margin.top})\n                    .svgContainer(container)\n                    .xScale(x);\n                wrap.select(\".nv-interactive\").call(interactiveLayer);\n            }\n\n            g.select('.nv-focus .nv-background rect')\n                .attr('width', availableWidth)\n                .attr('height', availableHeight);\n\n            lines\n                .width(availableWidth)\n                .height(availableHeight)\n                .color(data.map(function(d,i) {\n                    return d.color || color(d, i);\n                }).filter(function(d,i) { return !data[i].disabled; }));\n\n            var linesWrap = g.select('.nv-linesWrap')\n                .datum(data.filter(function(d) { return !d.disabled; }));\n\n\n            // Setup Main (Focus) Axes\n            if (showXAxis) {\n                xAxis\n                    .scale(x)\n                    ._ticks(nv.utils.calcTicksX(availableWidth/100, data) )\n                    .tickSize(-availableHeight, 0);\n            }\n\n            if (showYAxis) {\n                yAxis\n                    .scale(y)\n                    ._ticks( nv.utils.calcTicksY(availableHeight/36, data) )\n                    .tickSize( -availableWidth, 0);\n            }\n\n            //============================================================\n            // Update Axes\n            //============================================================\n            function updateXAxis() {\n              if(showXAxis) {\n                g.select('.nv-focus .nv-x.nv-axis')\n                  .transition()\n                  .duration(duration)\n                  .call(xAxis)\n                ;\n              }\n            }\n\n            function updateYAxis() {\n              if(showYAxis) {\n                g.select('.nv-focus .nv-y.nv-axis')\n                  .transition()\n                  .duration(duration)\n                  .call(yAxis)\n                ;\n              }\n            }\n\n            g.select('.nv-focus .nv-x.nv-axis')\n                .attr('transform', 'translate(0,' + availableHeight + ')');\n\n            //============================================================\n            // Update Focus\n            //============================================================\n            if(!focusEnable) {\n                linesWrap.call(lines);\n                updateXAxis();\n                updateYAxis();\n            } else {\n                focus.width(availableWidth);\n                g.select('.nv-focusWrap')\n                    .attr('transform', 'translate(0,' + ( availableHeight + margin.bottom + focus.margin().top) + ')')\n                    .datum(data.filter(function(d) { return !d.disabled; }))\n                    .call(focus);\n                var extent = focus.brush.empty() ? focus.xDomain() : focus.brush.extent();\n                if(extent !== null){\n                    onBrush(extent);\n                }\n            }\n            //============================================================\n            // Event Handling/Dispatching (in chart's scope)\n            //------------------------------------------------------------\n\n            legend.dispatch.on('stateChange', function(newState) {\n                for (var key in newState)\n                    state[key] = newState[key];\n                dispatch.stateChange(state);\n                chart.update();\n            });\n\n            interactiveLayer.dispatch.on('elementMousemove', function(e) {\n                lines.clearHighlights();\n                var singlePoint, pointIndex, pointXLocation, allData = [];\n                data\n                    .filter(function(series, i) {\n                        series.seriesIndex = i;\n                        return !series.disabled && !series.disableTooltip;\n                    })\n                    .forEach(function(series,i) {\n                        var extent = focusEnable ? (focus.brush.empty() ? focus.xScale().domain() : focus.brush.extent()) : x.domain();\n                        var currentValues = series.values.filter(function(d,i) {\n                            // Checks if the x point is between the extents, handling case where extent[0] is greater than extent[1]\n                            // (e.g. x domain is manually set to reverse the x-axis)\n                            if(extent[0] <= extent[1]) {\n                                return lines.x()(d,i) >= extent[0] && lines.x()(d,i) <= extent[1];\n                            } else {\n                                return lines.x()(d,i) >= extent[1] && lines.x()(d,i) <= extent[0];\n                            }\n                        });\n\n                        pointIndex = nv.interactiveBisect(currentValues, e.pointXValue, lines.x());\n                        var point = currentValues[pointIndex];\n                        var pointYValue = chart.y()(point, pointIndex);\n                        if (pointYValue !== null) {\n                            lines.highlightPoint(i, pointIndex, true);\n                        }\n                        if (point === undefined) return;\n                        if (singlePoint === undefined) singlePoint = point;\n                        if (pointXLocation === undefined) pointXLocation = chart.xScale()(chart.x()(point,pointIndex));\n                        allData.push({\n                            key: series.key,\n                            value: pointYValue,\n                            color: color(series,series.seriesIndex),\n                            data: point\n                        });\n                    });\n                //Highlight the tooltip entry based on which point the mouse is closest to.\n                if (allData.length > 2) {\n                    var yValue = chart.yScale().invert(e.mouseY);\n                    var domainExtent = Math.abs(chart.yScale().domain()[0] - chart.yScale().domain()[1]);\n                    var threshold = 0.03 * domainExtent;\n                    var indexToHighlight = nv.nearestValueIndex(allData.map(function(d){return d.value;}),yValue,threshold);\n                    if (indexToHighlight !== null)\n                        allData[indexToHighlight].highlight = true;\n                }\n\n                var defaultValueFormatter = function(d,i) {\n                    return d == null ? \"N/A\" : yAxis.tickFormat()(d);\n                };\n\n                interactiveLayer.tooltip\n                    .valueFormatter(interactiveLayer.tooltip.valueFormatter() || defaultValueFormatter)\n                    .data({\n                        value: chart.x()( singlePoint,pointIndex ),\n                        index: pointIndex,\n                        series: allData\n                    })();\n\n                interactiveLayer.renderGuideLine(pointXLocation);\n\n            });\n\n            interactiveLayer.dispatch.on('elementClick', function(e) {\n                var pointXLocation, allData = [];\n\n                data.filter(function(series, i) {\n                    series.seriesIndex = i;\n                    return !series.disabled;\n                }).forEach(function(series) {\n                    var pointIndex = nv.interactiveBisect(series.values, e.pointXValue, chart.x());\n                    var point = series.values[pointIndex];\n                    if (typeof point === 'undefined') return;\n                    if (typeof pointXLocation === 'undefined') pointXLocation = chart.xScale()(chart.x()(point,pointIndex));\n                    var yPos = chart.yScale()(chart.y()(point,pointIndex));\n                    allData.push({\n                        point: point,\n                        pointIndex: pointIndex,\n                        pos: [pointXLocation, yPos],\n                        seriesIndex: series.seriesIndex,\n                        series: series\n                    });\n                });\n\n                lines.dispatch.elementClick(allData);\n            });\n\n            interactiveLayer.dispatch.on(\"elementMouseout\",function(e) {\n                lines.clearHighlights();\n            });\n\n            dispatch.on('changeState', function(e) {\n                if (typeof e.disabled !== 'undefined' && data.length === e.disabled.length) {\n                    data.forEach(function(series,i) {\n                        series.disabled = e.disabled[i];\n                    });\n\n                    state.disabled = e.disabled;\n                }\n                chart.update();\n            });\n\n            //============================================================\n            // Functions\n            //------------------------------------------------------------\n\n            // Taken from crossfilter (http://square.github.com/crossfilter/)\n            function resizePath(d) {\n                var e = +(d == 'e'),\n                    x = e ? 1 : -1,\n                    y = availableHeight / 3;\n                return 'M' + (0.5 * x) + ',' + y\n                    + 'A6,6 0 0 ' + e + ' ' + (6.5 * x) + ',' + (y + 6)\n                    + 'V' + (2 * y - 6)\n                    + 'A6,6 0 0 ' + e + ' ' + (0.5 * x) + ',' + (2 * y)\n                    + 'Z'\n                    + 'M' + (2.5 * x) + ',' + (y + 8)\n                    + 'V' + (2 * y - 8)\n                    + 'M' + (4.5 * x) + ',' + (y + 8)\n                    + 'V' + (2 * y - 8);\n            }\n\n            function onBrush(extent) {\n                // Update Main (Focus)\n                var focusLinesWrap = g.select('.nv-focus .nv-linesWrap')\n                    .datum(\n                    data.filter(function(d) { return !d.disabled; })\n                        .map(function(d,i) {\n                            return {\n                                key: d.key,\n                                area: d.area,\n                                classed: d.classed,\n                                values: d.values.filter(function(d,i) {\n                                    return lines.x()(d,i) >= extent[0] && lines.x()(d,i) <= extent[1];\n                                }),\n                                disableTooltip: d.disableTooltip\n                            };\n                        })\n                );\n                focusLinesWrap.transition().duration(duration).call(lines);\n\n                // Update Main (Focus) Axes\n                updateXAxis();\n                updateYAxis();\n            }\n        });\n\n        renderWatch.renderEnd('lineChart immediate');\n        return chart;\n    }\n\n\n    //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n    lines.dispatch.on('elementMouseover.tooltip', function(evt) {\n        if(!evt.series.disableTooltip){\n            tooltip.data(evt).hidden(false);\n        }\n    });\n\n    lines.dispatch.on('elementMouseout.tooltip', function(evt) {\n        tooltip.hidden(true);\n    });\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    // expose chart's sub-components\n    chart.dispatch = dispatch;\n    chart.lines = lines;\n    chart.legend = legend;\n    chart.focus = focus;\n    chart.xAxis = xAxis;\n    chart.x2Axis = focus.xAxis\n    chart.yAxis = yAxis;\n    chart.y2Axis = focus.yAxis\n    chart.interactiveLayer = interactiveLayer;\n    chart.tooltip = tooltip;\n    chart.state = state;\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:      {get: function(){return width;}, set: function(_){width=_;}},\n        height:     {get: function(){return height;}, set: function(_){height=_;}},\n        showLegend: {get: function(){return showLegend;}, set: function(_){showLegend=_;}},\n        legendPosition: {get: function(){return legendPosition;}, set: function(_){legendPosition=_;}},\n        showXAxis:      {get: function(){return showXAxis;}, set: function(_){showXAxis=_;}},\n        showYAxis:    {get: function(){return showYAxis;}, set: function(_){showYAxis=_;}},\n        defaultState:    {get: function(){return defaultState;}, set: function(_){defaultState=_;}},\n        noData:    {get: function(){return noData;}, set: function(_){noData=_;}},\n        // Focus options, mostly passed onto focus model.\n        focusEnable:    {get: function(){return focusEnable;}, set: function(_){focusEnable=_;}},\n        focusHeight:     {get: function(){return focus.height();}, set: function(_){focus.height(_);}},\n        focusShowAxisX:    {get: function(){return focus.showXAxis();}, set: function(_){focus.showXAxis(_);}},\n        focusShowAxisY:    {get: function(){return focus.showYAxis();}, set: function(_){focus.showYAxis(_);}},\n        brushExtent: {get: function(){return focus.brushExtent();}, set: function(_){focus.brushExtent(_);}},\n\n        // options that require extra logic in the setter\n        focusMargin: {get: function(){return focus.margin}, set: function(_){\n            if (_.top !== undefined) {\n                margin.top = _.top;\n                marginTop = _.top;\n            }\n            focus.margin.right  = _.right  !== undefined ? _.right  : focus.margin.right;\n            focus.margin.bottom = _.bottom !== undefined ? _.bottom : focus.margin.bottom;\n            focus.margin.left   = _.left   !== undefined ? _.left   : focus.margin.left;\n        }},\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        duration: {get: function(){return duration;}, set: function(_){\n            duration = _;\n            renderWatch.reset(duration);\n            lines.duration(duration);\n            focus.duration(duration);\n            xAxis.duration(duration);\n            yAxis.duration(duration);\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n            legend.color(color);\n            lines.color(color);\n            focus.color(color);\n        }},\n        interpolate: {get: function(){return lines.interpolate();}, set: function(_){\n            lines.interpolate(_);\n            focus.interpolate(_);\n        }},\n        xTickFormat: {get: function(){return xAxis.tickFormat();}, set: function(_){\n            xAxis.tickFormat(_);\n            focus.xTickFormat(_);\n        }},\n        yTickFormat: {get: function(){return yAxis.tickFormat();}, set: function(_){\n            yAxis.tickFormat(_);\n            focus.yTickFormat(_);\n        }},\n        x: {get: function(){return lines.x();}, set: function(_){\n            lines.x(_);\n            focus.x(_);\n        }},\n        y: {get: function(){return lines.y();}, set: function(_){\n            lines.y(_);\n            focus.y(_);\n        }},\n        rightAlignYAxis: {get: function(){return rightAlignYAxis;}, set: function(_){\n            rightAlignYAxis = _;\n            yAxis.orient( rightAlignYAxis ? 'right' : 'left');\n        }},\n        useInteractiveGuideline: {get: function(){return useInteractiveGuideline;}, set: function(_){\n            useInteractiveGuideline = _;\n            if (useInteractiveGuideline) {\n                lines.interactive(false);\n                lines.useVoronoi(false);\n            }\n        }}\n    });\n\n    nv.utils.inheritOptions(chart, lines);\n    nv.utils.initOptions(chart);\n\n    return chart;\n};\n\nnv.models.lineWithFocusChart = function() {\n  return nv.models.lineChart()\n    .margin({ bottom: 30 })\n    .focusEnable( true );\n};\nnv.models.linePlusBarChart = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var lines = nv.models.line()\n        , lines2 = nv.models.line()\n        , bars = nv.models.historicalBar()\n        , bars2 = nv.models.historicalBar()\n        , xAxis = nv.models.axis()\n        , x2Axis = nv.models.axis()\n        , y1Axis = nv.models.axis()\n        , y2Axis = nv.models.axis()\n        , y3Axis = nv.models.axis()\n        , y4Axis = nv.models.axis()\n        , legend = nv.models.legend()\n        , brush = d3.svg.brush()\n        , tooltip = nv.models.tooltip()\n        ;\n\n    var margin = {top: 30, right: 30, bottom: 30, left: 60}\n        , marginTop = null\n        , margin2 = {top: 0, right: 30, bottom: 20, left: 60}\n        , width = null\n        , height = null\n        , getX = function(d) { return d.x }\n        , getY = function(d) { return d.y }\n        , color = nv.utils.defaultColor()\n        , showLegend = true\n        , focusEnable = true\n        , focusShowAxisY = false\n        , focusShowAxisX = true\n        , focusHeight = 50\n        , extent\n        , brushExtent = null\n        , x\n        , x2\n        , y1\n        , y2\n        , y3\n        , y4\n        , noData = null\n        , dispatch = d3.dispatch('brush', 'stateChange', 'changeState')\n        , transitionDuration = 0\n        , state = nv.utils.state()\n        , defaultState = null\n        , legendLeftAxisHint = ' (left axis)'\n        , legendRightAxisHint = ' (right axis)'\n        , switchYAxisOrder = false\n        ;\n\n    lines.clipEdge(true);\n    lines2.interactive(false);\n    // We don't want any points emitted for the focus chart's scatter graph.\n    lines2.pointActive(function(d) { return false });\n    xAxis.orient('bottom').tickPadding(5);\n    y1Axis.orient('left');\n    y2Axis.orient('right');\n    x2Axis.orient('bottom').tickPadding(5);\n    y3Axis.orient('left');\n    y4Axis.orient('right');\n\n    tooltip.headerEnabled(true).headerFormatter(function(d, i) {\n        return xAxis.tickFormat()(d, i);\n    });\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var getBarsAxis = function() {\n        return switchYAxisOrder\n            ? { main: y2Axis, focus: y4Axis }\n            : { main: y1Axis, focus: y3Axis }\n    }\n\n    var getLinesAxis = function() {\n        return switchYAxisOrder\n            ? { main: y1Axis, focus: y3Axis }\n            : { main: y2Axis, focus: y4Axis }\n    }\n\n    var stateGetter = function(data) {\n        return function(){\n            return {\n                active: data.map(function(d) { return !d.disabled })\n            };\n        }\n    };\n\n    var stateSetter = function(data) {\n        return function(state) {\n            if (state.active !== undefined)\n                data.forEach(function(series,i) {\n                    series.disabled = !state.active[i];\n                });\n        }\n    };\n\n    var allDisabled = function(data) {\n      return data.every(function(series) {\n        return series.disabled;\n      });\n    }\n\n    function chart(selection) {\n        selection.each(function(data) {\n            var container = d3.select(this),\n                that = this;\n            nv.utils.initSVG(container);\n            var availableWidth = nv.utils.availableWidth(width, container, margin),\n                availableHeight1 = nv.utils.availableHeight(height, container, margin)\n                    - (focusEnable ? focusHeight : 0),\n                availableHeight2 = focusHeight - margin2.top - margin2.bottom;\n\n            chart.update = function() { container.transition().duration(transitionDuration).call(chart); };\n            chart.container = this;\n\n            state\n                .setter(stateSetter(data), chart.update)\n                .getter(stateGetter(data))\n                .update();\n\n            // DEPRECATED set state.disableddisabled\n            state.disabled = data.map(function(d) { return !!d.disabled });\n\n            if (!defaultState) {\n                var key;\n                defaultState = {};\n                for (key in state) {\n                    if (state[key] instanceof Array)\n                        defaultState[key] = state[key].slice(0);\n                    else\n                        defaultState[key] = state[key];\n                }\n            }\n\n            // Display No Data message if there's nothing to show.\n            if (!data || !data.length || !data.filter(function(d) { return d.values.length }).length) {\n                nv.utils.noData(chart, container)\n                return chart;\n            } else {\n                container.selectAll('.nv-noData').remove();\n            }\n\n            // Setup Scales\n            var dataBars = data.filter(function(d) { return !d.disabled && d.bar });\n            var dataLines = data.filter(function(d) { return !d.bar }); // removed the !d.disabled clause here to fix Issue #240\n\n            if (dataBars.length && !switchYAxisOrder) {\n                x = bars.xScale();\n            } else {\n                x = lines.xScale();\n            }\n\n            x2 = x2Axis.scale();\n\n            // select the scales and series based on the position of the yAxis\n            y1 = switchYAxisOrder ? lines.yScale() : bars.yScale();\n            y2 = switchYAxisOrder ? bars.yScale() : lines.yScale();\n            y3 = switchYAxisOrder ? lines2.yScale() : bars2.yScale();\n            y4 = switchYAxisOrder ? bars2.yScale() : lines2.yScale();\n\n            var series1 = data\n                .filter(function(d) { return !d.disabled && (switchYAxisOrder ? !d.bar : d.bar) })\n                .map(function(d) {\n                    return d.values.map(function(d,i) {\n                        return { x: getX(d,i), y: getY(d,i) }\n                    })\n                });\n\n            var series2 = data\n                .filter(function(d) { return !d.disabled && (switchYAxisOrder ? d.bar : !d.bar) })\n                .map(function(d) {\n                    return d.values.map(function(d,i) {\n                        return { x: getX(d,i), y: getY(d,i) }\n                    })\n                });\n\n            x.range([0, availableWidth]);\n\n            x2  .domain(d3.extent(d3.merge(series1.concat(series2)), function(d) { return d.x } ))\n                .range([0, availableWidth]);\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-linePlusBar').data([data]);\n            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-linePlusBar').append('g');\n            var g = wrap.select('g');\n\n            gEnter.append('g').attr('class', 'nv-legendWrap');\n\n            // this is the main chart\n            var focusEnter = gEnter.append('g').attr('class', 'nv-focus');\n            focusEnter.append('g').attr('class', 'nv-x nv-axis');\n            focusEnter.append('g').attr('class', 'nv-y1 nv-axis');\n            focusEnter.append('g').attr('class', 'nv-y2 nv-axis');\n            focusEnter.append('g').attr('class', 'nv-barsWrap');\n            focusEnter.append('g').attr('class', 'nv-linesWrap');\n\n            // context chart is where you can focus in\n            var contextEnter = gEnter.append('g').attr('class', 'nv-context');\n            contextEnter.append('g').attr('class', 'nv-x nv-axis');\n            contextEnter.append('g').attr('class', 'nv-y1 nv-axis');\n            contextEnter.append('g').attr('class', 'nv-y2 nv-axis');\n            contextEnter.append('g').attr('class', 'nv-barsWrap');\n            contextEnter.append('g').attr('class', 'nv-linesWrap');\n            contextEnter.append('g').attr('class', 'nv-brushBackground');\n            contextEnter.append('g').attr('class', 'nv-x nv-brush');\n\n            //============================================================\n            // Legend\n            //------------------------------------------------------------\n\n            if (!showLegend) {\n                g.select('.nv-legendWrap').selectAll('*').remove();\n            } else {\n                var legendWidth = legend.align() ? availableWidth / 2 : availableWidth;\n                var legendXPosition = legend.align() ? legendWidth : 0;\n\n                legend.width(legendWidth);\n\n                g.select('.nv-legendWrap')\n                    .datum(data.map(function(series) {\n                        series.originalKey = series.originalKey === undefined ? series.key : series.originalKey;\n                        if(switchYAxisOrder) {\n                            series.key = series.originalKey + (series.bar ? legendRightAxisHint : legendLeftAxisHint);\n                        } else {\n                            series.key = series.originalKey + (series.bar ? legendLeftAxisHint : legendRightAxisHint);\n                        }\n                        return series;\n                    }))\n                    .call(legend);\n\n                if (!marginTop && legend.height() !== margin.top) {\n                    margin.top = legend.height();\n                    // FIXME: shouldn't this be \"- (focusEnabled ? focusHeight : 0)\"?\n                    availableHeight1 = nv.utils.availableHeight(height, container, margin) - focusHeight;\n                }\n\n                g.select('.nv-legendWrap')\n                    .attr('transform', 'translate(' + legendXPosition + ',' + (-margin.top) +')');\n            }\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            //============================================================\n            // Context chart (focus chart) components\n            //------------------------------------------------------------\n\n            // hide or show the focus context chart\n            g.select('.nv-context').style('display', focusEnable ? 'initial' : 'none');\n\n            bars2\n                .width(availableWidth)\n                .height(availableHeight2)\n                .color(data.map(function (d, i) {\n                    return d.color || color(d, i);\n                }).filter(function (d, i) {\n                    return !data[i].disabled && data[i].bar\n                }));\n            lines2\n                .width(availableWidth)\n                .height(availableHeight2)\n                .color(data.map(function (d, i) {\n                    return d.color || color(d, i);\n                }).filter(function (d, i) {\n                    return !data[i].disabled && !data[i].bar\n                }));\n\n            var bars2Wrap = g.select('.nv-context .nv-barsWrap')\n                .datum(dataBars.length ? dataBars : [\n                    {values: []}\n                ]);\n            var lines2Wrap = g.select('.nv-context .nv-linesWrap')\n                .datum(allDisabled(dataLines) ?\n                       [{values: []}] :\n                       dataLines.filter(function(dataLine) {\n                         return !dataLine.disabled;\n                       }));\n\n            g.select('.nv-context')\n                .attr('transform', 'translate(0,' + ( availableHeight1 + margin.bottom + margin2.top) + ')');\n\n            bars2Wrap.transition().call(bars2);\n            lines2Wrap.transition().call(lines2);\n\n            // context (focus chart) axis controls\n            if (focusShowAxisX) {\n                x2Axis\n                    ._ticks( nv.utils.calcTicksX(availableWidth / 100, data))\n                    .tickSize(-availableHeight2, 0);\n                g.select('.nv-context .nv-x.nv-axis')\n                    .attr('transform', 'translate(0,' + y3.range()[0] + ')');\n                g.select('.nv-context .nv-x.nv-axis').transition()\n                    .call(x2Axis);\n            }\n\n            if (focusShowAxisY) {\n                y3Axis\n                    .scale(y3)\n                    ._ticks( availableHeight2 / 36 )\n                    .tickSize( -availableWidth, 0);\n                y4Axis\n                    .scale(y4)\n                    ._ticks( availableHeight2 / 36 )\n                    .tickSize(dataBars.length ? 0 : -availableWidth, 0); // Show the y2 rules only if y1 has none\n\n                g.select('.nv-context .nv-y3.nv-axis')\n                    .style('opacity', dataBars.length ? 1 : 0)\n                    .attr('transform', 'translate(0,' + x2.range()[0] + ')');\n                g.select('.nv-context .nv-y2.nv-axis')\n                    .style('opacity', dataLines.length ? 1 : 0)\n                    .attr('transform', 'translate(' + x2.range()[1] + ',0)');\n\n                g.select('.nv-context .nv-y1.nv-axis').transition()\n                    .call(y3Axis);\n                g.select('.nv-context .nv-y2.nv-axis').transition()\n                    .call(y4Axis);\n            }\n\n            // Setup Brush\n            brush.x(x2).on('brush', onBrush);\n\n            if (brushExtent) brush.extent(brushExtent);\n\n            var brushBG = g.select('.nv-brushBackground').selectAll('g')\n                .data([brushExtent || brush.extent()]);\n\n            var brushBGenter = brushBG.enter()\n                .append('g');\n\n            brushBGenter.append('rect')\n                .attr('class', 'left')\n                .attr('x', 0)\n                .attr('y', 0)\n                .attr('height', availableHeight2);\n\n            brushBGenter.append('rect')\n                .attr('class', 'right')\n                .attr('x', 0)\n                .attr('y', 0)\n                .attr('height', availableHeight2);\n\n            var gBrush = g.select('.nv-x.nv-brush')\n                .call(brush);\n            gBrush.selectAll('rect')\n                //.attr('y', -5)\n                .attr('height', availableHeight2);\n            gBrush.selectAll('.resize').append('path').attr('d', resizePath);\n\n            //============================================================\n            // Event Handling/Dispatching (in chart's scope)\n            //------------------------------------------------------------\n\n            legend.dispatch.on('stateChange', function(newState) {\n                for (var key in newState)\n                    state[key] = newState[key];\n                dispatch.stateChange(state);\n                chart.update();\n            });\n\n            // Update chart from a state object passed to event handler\n            dispatch.on('changeState', function(e) {\n                if (typeof e.disabled !== 'undefined') {\n                    data.forEach(function(series,i) {\n                        series.disabled = e.disabled[i];\n                    });\n                    state.disabled = e.disabled;\n                }\n                chart.update();\n            });\n\n            //============================================================\n            // Functions\n            //------------------------------------------------------------\n\n            // Taken from crossfilter (http://square.github.com/crossfilter/)\n            function resizePath(d) {\n                var e = +(d == 'e'),\n                    x = e ? 1 : -1,\n                    y = availableHeight2 / 3;\n                return 'M' + (.5 * x) + ',' + y\n                    + 'A6,6 0 0 ' + e + ' ' + (6.5 * x) + ',' + (y + 6)\n                    + 'V' + (2 * y - 6)\n                    + 'A6,6 0 0 ' + e + ' ' + (.5 * x) + ',' + (2 * y)\n                    + 'Z'\n                    + 'M' + (2.5 * x) + ',' + (y + 8)\n                    + 'V' + (2 * y - 8)\n                    + 'M' + (4.5 * x) + ',' + (y + 8)\n                    + 'V' + (2 * y - 8);\n            }\n\n\n            function updateBrushBG() {\n                if (!brush.empty()) brush.extent(brushExtent);\n                brushBG\n                    .data([brush.empty() ? x2.domain() : brushExtent])\n                    .each(function(d,i) {\n                        var leftWidth = x2(d[0]) - x2.range()[0],\n                            rightWidth = x2.range()[1] - x2(d[1]);\n                        d3.select(this).select('.left')\n                            .attr('width',  leftWidth < 0 ? 0 : leftWidth);\n\n                        d3.select(this).select('.right')\n                            .attr('x', x2(d[1]))\n                            .attr('width', rightWidth < 0 ? 0 : rightWidth);\n                    });\n            }\n\n            function onBrush() {\n                brushExtent = brush.empty() ? null : brush.extent();\n                extent = brush.empty() ? x2.domain() : brush.extent();\n                dispatch.brush({extent: extent, brush: brush});\n                updateBrushBG();\n\n                // Prepare Main (Focus) Bars and Lines\n                bars\n                    .width(availableWidth)\n                    .height(availableHeight1)\n                    .color(data.map(function(d,i) {\n                        return d.color || color(d, i);\n                    }).filter(function(d,i) { return !data[i].disabled && data[i].bar }));\n\n                lines\n                    .width(availableWidth)\n                    .height(availableHeight1)\n                    .color(data.map(function(d,i) {\n                        return d.color || color(d, i);\n                    }).filter(function(d,i) { return !data[i].disabled && !data[i].bar }));\n\n                var focusBarsWrap = g.select('.nv-focus .nv-barsWrap')\n                    .datum(!dataBars.length ? [{values:[]}] :\n                        dataBars\n                            .map(function(d,i) {\n                                return {\n                                    key: d.key,\n                                    values: d.values.filter(function(d,i) {\n                                        return bars.x()(d,i) >= extent[0] && bars.x()(d,i) <= extent[1];\n                                    })\n                                }\n                            })\n                );\n\n                var focusLinesWrap = g.select('.nv-focus .nv-linesWrap')\n                    .datum(allDisabled(dataLines) ? [{values:[]}] :\n                           dataLines\n                           .filter(function(dataLine) { return !dataLine.disabled; })\n                           .map(function(d,i) {\n                                return {\n                                    area: d.area,\n                                    fillOpacity: d.fillOpacity,\n                                    strokeWidth: d.strokeWidth,\n                                    key: d.key,\n                                    values: d.values.filter(function(d,i) {\n                                        return lines.x()(d,i) >= extent[0] && lines.x()(d,i) <= extent[1];\n                                    })\n                                }\n                            })\n                );\n\n                // Update Main (Focus) X Axis\n                if (dataBars.length && !switchYAxisOrder) {\n                    x = bars.xScale();\n                } else {\n                    x = lines.xScale();\n                }\n\n                xAxis\n                    .scale(x)\n                    ._ticks( nv.utils.calcTicksX(availableWidth/100, data) )\n                    .tickSize(-availableHeight1, 0);\n\n                xAxis.domain([Math.ceil(extent[0]), Math.floor(extent[1])]);\n\n                g.select('.nv-x.nv-axis').transition().duration(transitionDuration)\n                    .call(xAxis);\n\n                // Update Main (Focus) Bars and Lines\n                focusBarsWrap.transition().duration(transitionDuration).call(bars);\n                focusLinesWrap.transition().duration(transitionDuration).call(lines);\n\n                // Setup and Update Main (Focus) Y Axes\n                g.select('.nv-focus .nv-x.nv-axis')\n                    .attr('transform', 'translate(0,' + y1.range()[0] + ')');\n\n                y1Axis\n                    .scale(y1)\n                    ._ticks( nv.utils.calcTicksY(availableHeight1/36, data) )\n                    .tickSize(-availableWidth, 0);\n                y2Axis\n                    .scale(y2)\n                    ._ticks( nv.utils.calcTicksY(availableHeight1/36, data) );\n\n                // Show the y2 rules only if y1 has none\n                if(!switchYAxisOrder) {\n                    y2Axis.tickSize(dataBars.length ? 0 : -availableWidth, 0);\n                } else {\n                    y2Axis.tickSize(dataLines.length ? 0 : -availableWidth, 0);\n                }\n\n                // Calculate opacity of the axis\n                var barsOpacity = dataBars.length ? 1 : 0;\n                var linesOpacity = dataLines.length && !allDisabled(dataLines) ? 1 : 0;\n\n                var y1Opacity = switchYAxisOrder ? linesOpacity : barsOpacity;\n                var y2Opacity = switchYAxisOrder ? barsOpacity : linesOpacity;\n\n                g.select('.nv-focus .nv-y1.nv-axis')\n                    .style('opacity', y1Opacity);\n                g.select('.nv-focus .nv-y2.nv-axis')\n                    .style('opacity', y2Opacity)\n                    .attr('transform', 'translate(' + x.range()[1] + ',0)');\n\n                g.select('.nv-focus .nv-y1.nv-axis').transition().duration(transitionDuration)\n                    .call(y1Axis);\n                g.select('.nv-focus .nv-y2.nv-axis').transition().duration(transitionDuration)\n                    .call(y2Axis);\n            }\n\n            onBrush();\n\n        });\n\n        return chart;\n    }\n\n    //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n    lines.dispatch.on('elementMouseover.tooltip', function(evt) {\n        tooltip\n            .duration(100)\n            .valueFormatter(function(d, i) {\n                return getLinesAxis().main.tickFormat()(d, i);\n            })\n            .data(evt)\n            .hidden(false);\n    });\n\n    lines.dispatch.on('elementMouseout.tooltip', function(evt) {\n        tooltip.hidden(true)\n    });\n\n    bars.dispatch.on('elementMouseover.tooltip', function(evt) {\n        evt.value = chart.x()(evt.data);\n        evt['series'] = {\n            value: chart.y()(evt.data),\n            color: evt.color\n        };\n        tooltip\n            .duration(0)\n            .valueFormatter(function(d, i) {\n                return getBarsAxis().main.tickFormat()(d, i);\n            })\n            .data(evt)\n            .hidden(false);\n    });\n\n    bars.dispatch.on('elementMouseout.tooltip', function(evt) {\n        tooltip.hidden(true);\n    });\n\n    bars.dispatch.on('elementMousemove.tooltip', function(evt) {\n        tooltip();\n    });\n\n    //============================================================\n\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    // expose chart's sub-components\n    chart.dispatch = dispatch;\n    chart.legend = legend;\n    chart.lines = lines;\n    chart.lines2 = lines2;\n    chart.bars = bars;\n    chart.bars2 = bars2;\n    chart.xAxis = xAxis;\n    chart.x2Axis = x2Axis;\n    chart.y1Axis = y1Axis;\n    chart.y2Axis = y2Axis;\n    chart.y3Axis = y3Axis;\n    chart.y4Axis = y4Axis;\n    chart.tooltip = tooltip;\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:      {get: function(){return width;}, set: function(_){width=_;}},\n        height:     {get: function(){return height;}, set: function(_){height=_;}},\n        showLegend: {get: function(){return showLegend;}, set: function(_){showLegend=_;}},\n        brushExtent:    {get: function(){return brushExtent;}, set: function(_){brushExtent=_;}},\n        noData:    {get: function(){return noData;}, set: function(_){noData=_;}},\n        focusEnable:    {get: function(){return focusEnable;}, set: function(_){focusEnable=_;}},\n        focusHeight:    {get: function(){return focusHeight;}, set: function(_){focusHeight=_;}},\n        focusShowAxisX:    {get: function(){return focusShowAxisX;}, set: function(_){focusShowAxisX=_;}},\n        focusShowAxisY:    {get: function(){return focusShowAxisY;}, set: function(_){focusShowAxisY=_;}},\n        legendLeftAxisHint:    {get: function(){return legendLeftAxisHint;}, set: function(_){legendLeftAxisHint=_;}},\n        legendRightAxisHint:    {get: function(){return legendRightAxisHint;}, set: function(_){legendRightAxisHint=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            if (_.top !== undefined) {\n                margin.top = _.top;\n                marginTop = _.top;\n            }\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        focusMargin: {get: function(){return margin2;}, set: function(_){\n            margin2.top    = _.top    !== undefined ? _.top    : margin2.top;\n            margin2.right  = _.right  !== undefined ? _.right  : margin2.right;\n            margin2.bottom = _.bottom !== undefined ? _.bottom : margin2.bottom;\n            margin2.left   = _.left   !== undefined ? _.left   : margin2.left;\n        }},\n        duration: {get: function(){return transitionDuration;}, set: function(_){\n            transitionDuration = _;\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n            legend.color(color);\n        }},\n        x: {get: function(){return getX;}, set: function(_){\n            getX = _;\n            lines.x(_);\n            lines2.x(_);\n            bars.x(_);\n            bars2.x(_);\n        }},\n        y: {get: function(){return getY;}, set: function(_){\n            getY = _;\n            lines.y(_);\n            lines2.y(_);\n            bars.y(_);\n            bars2.y(_);\n        }},\n        switchYAxisOrder:    {get: function(){return switchYAxisOrder;}, set: function(_){\n            // Switch the tick format for the yAxis\n            if(switchYAxisOrder !== _) {\n                var y1 = y1Axis;\n                y1Axis = y2Axis;\n                y2Axis = y1;\n\n                var y3 = y3Axis;\n                y3Axis = y4Axis;\n                y4Axis = y3;\n            }\n            switchYAxisOrder=_;\n\n            y1Axis.orient('left');\n            y2Axis.orient('right');\n            y3Axis.orient('left');\n            y4Axis.orient('right');\n        }}\n    });\n\n    nv.utils.inheritOptions(chart, lines);\n    nv.utils.initOptions(chart);\n\n    return chart;\n};\n\nnv.models.multiBar = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n        , width = 960\n        , height = 500\n        , x = d3.scale.ordinal()\n        , y = d3.scale.linear()\n        , id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n        , container = null\n        , getX = function(d) { return d.x }\n        , getY = function(d) { return d.y }\n        , forceY = [0] // 0 is forced by default.. this makes sense for the majority of bar graphs... user can always do chart.forceY([]) to remove\n        , clipEdge = true\n        , stacked = false\n        , stackOffset = 'zero' // options include 'silhouette', 'wiggle', 'expand', 'zero', or a custom function\n        , color = nv.utils.defaultColor()\n        , hideable = false\n        , barColor = null // adding the ability to set the color for each rather than the whole group\n        , disabled // used in conjunction with barColor to communicate from multiBarHorizontalChart what series are disabled\n        , duration = 500\n        , xDomain\n        , yDomain\n        , xRange\n        , yRange\n        , groupSpacing = 0.1\n        , fillOpacity = 0.75\n        , dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd')\n        ;\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var x0, y0 //used to store previous scales\n        , renderWatch = nv.utils.renderWatch(dispatch, duration)\n        ;\n\n    var last_datalength = 0;\n\n    function chart(selection) {\n        renderWatch.reset();\n        selection.each(function(data) {\n            var availableWidth = width - margin.left - margin.right,\n                availableHeight = height - margin.top - margin.bottom;\n\n            container = d3.select(this);\n            nv.utils.initSVG(container);\n            var nonStackableCount = 0;\n            // This function defines the requirements for render complete\n            var endFn = function(d, i) {\n                if (d.series === data.length - 1 && i === data[0].values.length - 1)\n                    return true;\n                return false;\n            };\n\n            if(hideable && data.length) hideable = [{\n                values: data[0].values.map(function(d) {\n                        return {\n                            x: d.x,\n                            y: 0,\n                            series: d.series,\n                            size: 0.01\n                        };}\n                )}];\n\n            if (stacked) {\n                var parsed = d3.layout.stack()\n                    .offset(stackOffset)\n                    .values(function(d){ return d.values })\n                    .y(getY)\n                (!data.length && hideable ? hideable : data);\n\n                parsed.forEach(function(series, i){\n                    // if series is non-stackable, use un-parsed data\n                    if (series.nonStackable) {\n                        data[i].nonStackableSeries = nonStackableCount++;\n                        parsed[i] = data[i];\n                    } else {\n                        // don't stack this seires on top of the nonStackable seriees\n                        if (i > 0 && parsed[i - 1].nonStackable){\n                            parsed[i].values.map(function(d,j){\n                                d.y0 -= parsed[i - 1].values[j].y;\n                                d.y1 = d.y0 + d.y;\n                            });\n                        }\n                    }\n                });\n                data = parsed;\n            }\n            //add series index and key to each data point for reference\n            data.forEach(function(series, i) {\n                series.values.forEach(function(point) {\n                    point.series = i;\n                    point.key = series.key;\n                });\n            });\n\n            // HACK for negative value stacking\n            if (stacked && data.length > 0) {\n                data[0].values.map(function(d,i) {\n                    var posBase = 0, negBase = 0;\n                    data.map(function(d, idx) {\n                        if (!data[idx].nonStackable) {\n                            var f = d.values[i]\n                            f.size = Math.abs(f.y);\n                            if (f.y<0)  {\n                                f.y1 = negBase;\n                                negBase = negBase - f.size;\n                            } else\n                            {\n                                f.y1 = f.size + posBase;\n                                posBase = posBase + f.size;\n                            }\n                        }\n\n                    });\n                });\n            }\n            // Setup Scales\n            // remap and flatten the data for use in calculating the scales' domains\n            var seriesData = (xDomain && yDomain) ? [] : // if we know xDomain and yDomain, no need to calculate\n                data.map(function(d, idx) {\n                    return d.values.map(function(d,i) {\n                        return { x: getX(d,i), y: getY(d,i), y0: d.y0, y1: d.y1, idx:idx }\n                    })\n                });\n\n            x.domain(xDomain || d3.merge(seriesData).map(function(d) { return d.x }))\n                .rangeBands(xRange || [0, availableWidth], groupSpacing);\n\n            y.domain(yDomain || d3.extent(d3.merge(seriesData).map(function(d) {\n                var domain = d.y;\n                // increase the domain range if this series is stackable\n                if (stacked && !data[d.idx].nonStackable) {\n                    if (d.y > 0){\n                        domain = d.y1\n                    } else {\n                        domain = d.y1 + d.y\n                    }\n                }\n                return domain;\n            }).concat(forceY)))\n            .range(yRange || [availableHeight, 0]);\n\n            // If scale's domain don't have a range, slightly adjust to make one... so a chart can show a single data point\n            if (x.domain()[0] === x.domain()[1])\n                x.domain()[0] ?\n                    x.domain([x.domain()[0] - x.domain()[0] * 0.01, x.domain()[1] + x.domain()[1] * 0.01])\n                    : x.domain([-1,1]);\n\n            if (y.domain()[0] === y.domain()[1])\n                y.domain()[0] ?\n                    y.domain([y.domain()[0] + y.domain()[0] * 0.01, y.domain()[1] - y.domain()[1] * 0.01])\n                    : y.domain([-1,1]);\n\n            x0 = x0 || x;\n            y0 = y0 || y;\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-multibar').data([data]);\n            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-multibar');\n            var defsEnter = wrapEnter.append('defs');\n            var gEnter = wrapEnter.append('g');\n            var g = wrap.select('g');\n\n            gEnter.append('g').attr('class', 'nv-groups');\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            defsEnter.append('clipPath')\n                .attr('id', 'nv-edge-clip-' + id)\n                .append('rect');\n            wrap.select('#nv-edge-clip-' + id + ' rect')\n                .attr('width', availableWidth)\n                .attr('height', availableHeight);\n\n            g.attr('clip-path', clipEdge ? 'url(#nv-edge-clip-' + id + ')' : '');\n\n            var groups = wrap.select('.nv-groups').selectAll('.nv-group')\n                .data(function(d) { return d }, function(d,i) { return i });\n            groups.enter().append('g')\n                .style('stroke-opacity', 1e-6)\n                .style('fill-opacity', 1e-6);\n\n            var exitTransition = renderWatch\n                .transition(groups.exit().selectAll('rect.nv-bar'), 'multibarExit', Math.min(100, duration))\n                .attr('y', function(d, i, j) {\n                    var yVal = y0(0) || 0;\n                    if (stacked) {\n                        if (data[d.series] && !data[d.series].nonStackable) {\n                            yVal = y0(d.y0);\n                        }\n                    }\n                    return yVal;\n                })\n                .attr('height', 0)\n                .remove();\n            if (exitTransition.delay)\n                exitTransition.delay(function(d,i) {\n                    var delay = i * (duration / (last_datalength + 1)) - i;\n                    return delay;\n                });\n            groups\n                .attr('class', function(d,i) { return 'nv-group nv-series-' + i })\n                .classed('hover', function(d) { return d.hover })\n                .style('fill', function(d,i){ return color(d, i) })\n                .style('stroke', function(d,i){ return color(d, i) });\n            groups\n                .style('stroke-opacity', 1)\n                .style('fill-opacity', fillOpacity);\n\n            var bars = groups.selectAll('rect.nv-bar')\n                .data(function(d) { return (hideable && !data.length) ? hideable.values : d.values });\n            bars.exit().remove();\n\n            var barsEnter = bars.enter().append('rect')\n                    .attr('class', function(d,i) { return getY(d,i) < 0 ? 'nv-bar negative' : 'nv-bar positive'})\n                    .attr('x', function(d,i,j) {\n                        return stacked && !data[j].nonStackable ? 0 : (j * x.rangeBand() / data.length )\n                    })\n                    .attr('y', function(d,i,j) { return y0(stacked && !data[j].nonStackable ? d.y0 : 0) || 0 })\n                    .attr('height', 0)\n                    .attr('width', function(d,i,j) { return x.rangeBand() / (stacked && !data[j].nonStackable ? 1 : data.length) })\n                    .attr('transform', function(d,i) { return 'translate(' + x(getX(d,i)) + ',0)'; })\n                ;\n            bars\n                .style('fill', function(d,i,j){ return color(d, j, i);  })\n                .style('stroke', function(d,i,j){ return color(d, j, i); })\n                .on('mouseover', function(d,i) { //TODO: figure out why j works above, but not here\n                    d3.select(this).classed('hover', true);\n                    dispatch.elementMouseover({\n                        data: d,\n                        index: i,\n                        color: d3.select(this).style(\"fill\")\n                    });\n                })\n                .on('mouseout', function(d,i) {\n                    d3.select(this).classed('hover', false);\n                    dispatch.elementMouseout({\n                        data: d,\n                        index: i,\n                        color: d3.select(this).style(\"fill\")\n                    });\n                })\n                .on('mousemove', function(d,i) {\n                    dispatch.elementMousemove({\n                        data: d,\n                        index: i,\n                        color: d3.select(this).style(\"fill\")\n                    });\n                })\n                .on('click', function(d,i) {\n                    var element = this;\n                    dispatch.elementClick({\n                        data: d,\n                        index: i,\n                        color: d3.select(this).style(\"fill\"),\n                        event: d3.event,\n                        element: element\n                    });\n                    d3.event.stopPropagation();\n                })\n                .on('dblclick', function(d,i) {\n                    dispatch.elementDblClick({\n                        data: d,\n                        index: i,\n                        color: d3.select(this).style(\"fill\")\n                    });\n                    d3.event.stopPropagation();\n                });\n            bars\n                .attr('class', function(d,i) { return getY(d,i) < 0 ? 'nv-bar negative' : 'nv-bar positive'})\n                .attr('transform', function(d,i) { return 'translate(' + x(getX(d,i)) + ',0)'; })\n\n            if (barColor) {\n                if (!disabled) disabled = data.map(function() { return true });\n                bars\n                    .style('fill', function(d,i,j) { return d3.rgb(barColor(d,i)).darker(  disabled.map(function(d,i) { return i }).filter(function(d,i){ return !disabled[i]  })[j]   ).toString(); })\n                    .style('stroke', function(d,i,j) { return d3.rgb(barColor(d,i)).darker(  disabled.map(function(d,i) { return i }).filter(function(d,i){ return !disabled[i]  })[j]   ).toString(); });\n            }\n\n            var barSelection =\n                bars.watchTransition(renderWatch, 'multibar', Math.min(250, duration))\n                    .delay(function(d,i) {\n                        return i * duration / data[0].values.length;\n                    });\n            if (stacked){\n                barSelection\n                    .attr('y', function(d,i,j) {\n                        var yVal = 0;\n                        // if stackable, stack it on top of the previous series\n                        if (!data[j].nonStackable) {\n                            yVal = y(d.y1);\n                        } else {\n                            if (getY(d,i) < 0){\n                                yVal = y(0);\n                            } else {\n                                if (y(0) - y(getY(d,i)) < -1){\n                                    yVal = y(0) - 1;\n                                } else {\n                                    yVal = y(getY(d, i)) || 0;\n                                }\n                            }\n                        }\n                        return yVal;\n                    })\n                    .attr('height', function(d,i,j) {\n                        if (!data[j].nonStackable) {\n                            return Math.max(Math.abs(y(d.y+d.y0) - y(d.y0)), 0);\n                        } else {\n                            return Math.max(Math.abs(y(getY(d,i)) - y(0)), 0) || 0;\n                        }\n                    })\n                    .attr('x', function(d,i,j) {\n                        var width = 0;\n                        if (data[j].nonStackable) {\n                            width = d.series * x.rangeBand() / data.length;\n                            if (data.length !== nonStackableCount){\n                                width = data[j].nonStackableSeries * x.rangeBand()/(nonStackableCount*2);\n                            }\n                        }\n                        return width;\n                    })\n                    .attr('width', function(d,i,j){\n                        if (!data[j].nonStackable) {\n                            return x.rangeBand();\n                        } else {\n                            // if all series are nonStacable, take the full width\n                            var width = (x.rangeBand() / nonStackableCount);\n                            // otherwise, nonStackable graph will be only taking the half-width\n                            // of the x rangeBand\n                            if (data.length !== nonStackableCount) {\n                                width = x.rangeBand()/(nonStackableCount*2);\n                            }\n                            return width;\n                        }\n                    });\n            }\n            else {\n                barSelection\n                    .attr('x', function(d,i) {\n                        return d.series * x.rangeBand() / data.length;\n                    })\n                    .attr('width', x.rangeBand() / data.length)\n                    .attr('y', function(d,i) {\n                        return getY(d,i) < 0 ?\n                            y(0) :\n                                y(0) - y(getY(d,i)) < 1 ?\n                            y(0) - 1 :\n                            y(getY(d,i)) || 0;\n                    })\n                    .attr('height', function(d,i) {\n                        return Math.max(Math.abs(y(getY(d,i)) - y(0)),1) || 0;\n                    });\n            }\n\n            //store old scales for use in transitions on update\n            x0 = x.copy();\n            y0 = y.copy();\n\n            // keep track of the last data value length for transition calculations\n            if (data[0] && data[0].values) {\n                last_datalength = data[0].values.length;\n            }\n\n        });\n\n        renderWatch.renderEnd('multibar immediate');\n\n        return chart;\n    }\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:   {get: function(){return width;}, set: function(_){width=_;}},\n        height:  {get: function(){return height;}, set: function(_){height=_;}},\n        x:       {get: function(){return getX;}, set: function(_){getX=_;}},\n        y:       {get: function(){return getY;}, set: function(_){getY=_;}},\n        xScale:  {get: function(){return x;}, set: function(_){x=_;}},\n        yScale:  {get: function(){return y;}, set: function(_){y=_;}},\n        xDomain: {get: function(){return xDomain;}, set: function(_){xDomain=_;}},\n        yDomain: {get: function(){return yDomain;}, set: function(_){yDomain=_;}},\n        xRange:  {get: function(){return xRange;}, set: function(_){xRange=_;}},\n        yRange:  {get: function(){return yRange;}, set: function(_){yRange=_;}},\n        forceY:  {get: function(){return forceY;}, set: function(_){forceY=_;}},\n        stacked: {get: function(){return stacked;}, set: function(_){stacked=_;}},\n        stackOffset: {get: function(){return stackOffset;}, set: function(_){stackOffset=_;}},\n        clipEdge:    {get: function(){return clipEdge;}, set: function(_){clipEdge=_;}},\n        disabled:    {get: function(){return disabled;}, set: function(_){disabled=_;}},\n        id:          {get: function(){return id;}, set: function(_){id=_;}},\n        hideable:    {get: function(){return hideable;}, set: function(_){hideable=_;}},\n        groupSpacing:{get: function(){return groupSpacing;}, set: function(_){groupSpacing=_;}},\n        fillOpacity: {get: function(){return fillOpacity;}, set: function(_){fillOpacity=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        duration: {get: function(){return duration;}, set: function(_){\n            duration = _;\n            renderWatch.reset(duration);\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n        }},\n        barColor:  {get: function(){return barColor;}, set: function(_){\n            barColor = _ ? nv.utils.getColor(_) : null;\n        }}\n    });\n\n    nv.utils.initOptions(chart);\n\n    return chart;\n};\nnv.models.multiBarChart = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var multibar = nv.models.multiBar()\n        , xAxis = nv.models.axis()\n        , yAxis = nv.models.axis()\n        , interactiveLayer = nv.interactiveGuideline()\n        , legend = nv.models.legend()\n        , controls = nv.models.legend()\n        , tooltip = nv.models.tooltip()\n        ;\n\n    var margin = {top: 30, right: 20, bottom: 50, left: 60}\n        , marginTop = null\n        , width = null\n        , height = null\n        , color = nv.utils.defaultColor()\n        , showControls = true\n        , controlLabels = {}\n        , showLegend = true\n        , showXAxis = true\n        , showYAxis = true\n        , rightAlignYAxis = false\n        , reduceXTicks = true // if false a tick will show for every data point\n        , staggerLabels = false\n        , wrapLabels = false\n        , rotateLabels = 0\n        , x //can be accessed via chart.xScale()\n        , y //can be accessed via chart.yScale()\n        , state = nv.utils.state()\n        , defaultState = null\n        , noData = null\n        , dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd')\n        , controlWidth = function() { return showControls ? 180 : 0 }\n        , duration = 250\n        , useInteractiveGuideline = false\n        ;\n\n    state.stacked = false // DEPRECATED Maintained for backward compatibility\n\n    multibar.stacked(false);\n    xAxis\n        .orient('bottom')\n        .tickPadding(7)\n        .showMaxMin(false)\n        .tickFormat(function(d) { return d })\n    ;\n    yAxis\n        .orient((rightAlignYAxis) ? 'right' : 'left')\n        .tickFormat(d3.format(',.1f'))\n    ;\n\n    tooltip\n        .duration(0)\n        .valueFormatter(function(d, i) {\n            return yAxis.tickFormat()(d, i);\n        })\n        .headerFormatter(function(d, i) {\n            return xAxis.tickFormat()(d, i);\n        });\n\n    interactiveLayer.tooltip\n        .valueFormatter(function(d, i) {\n            return d == null ? \"N/A\" : yAxis.tickFormat()(d, i);\n        })\n        .headerFormatter(function(d, i) {\n            return xAxis.tickFormat()(d, i);\n        });\n\n    interactiveLayer.tooltip\n        .valueFormatter(function (d, i) {\n            return d == null ? \"N/A\" : yAxis.tickFormat()(d, i);\n        })\n        .headerFormatter(function (d, i) {\n            return xAxis.tickFormat()(d, i);\n        });\n\n    interactiveLayer.tooltip\n        .duration(0)\n        .valueFormatter(function(d, i) {\n            return yAxis.tickFormat()(d, i);\n        })\n        .headerFormatter(function(d, i) {\n            return xAxis.tickFormat()(d, i);\n        });\n\n    controls.updateState(false);\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n    var stacked = false;\n\n    var stateGetter = function(data) {\n        return function(){\n            return {\n                active: data.map(function(d) { return !d.disabled }),\n                stacked: stacked\n            };\n        }\n    };\n\n    var stateSetter = function(data) {\n        return function(state) {\n            if (state.stacked !== undefined)\n                stacked = state.stacked;\n            if (state.active !== undefined)\n                data.forEach(function(series,i) {\n                    series.disabled = !state.active[i];\n                });\n        }\n    };\n\n    function chart(selection) {\n        renderWatch.reset();\n        renderWatch.models(multibar);\n        if (showXAxis) renderWatch.models(xAxis);\n        if (showYAxis) renderWatch.models(yAxis);\n\n        selection.each(function(data) {\n            var container = d3.select(this),\n                that = this;\n            nv.utils.initSVG(container);\n            var availableWidth = nv.utils.availableWidth(width, container, margin),\n                availableHeight = nv.utils.availableHeight(height, container, margin);\n\n            chart.update = function() {\n                if (duration === 0)\n                    container.call(chart);\n                else\n                    container.transition()\n                        .duration(duration)\n                        .call(chart);\n            };\n            chart.container = this;\n\n            state\n                .setter(stateSetter(data), chart.update)\n                .getter(stateGetter(data))\n                .update();\n\n            // DEPRECATED set state.disableddisabled\n            state.disabled = data.map(function(d) { return !!d.disabled });\n\n            if (!defaultState) {\n                var key;\n                defaultState = {};\n                for (key in state) {\n                    if (state[key] instanceof Array)\n                        defaultState[key] = state[key].slice(0);\n                    else\n                        defaultState[key] = state[key];\n                }\n            }\n\n            // Display noData message if there's nothing to show.\n            if (!data || !data.length || !data.filter(function(d) { return d.values.length }).length) {\n                nv.utils.noData(chart, container)\n                return chart;\n            } else {\n                container.selectAll('.nv-noData').remove();\n            }\n\n            // Setup Scales\n            x = multibar.xScale();\n            y = multibar.yScale();\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-multiBarWithLegend').data([data]);\n            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-multiBarWithLegend').append('g');\n            var g = wrap.select('g');\n\n            gEnter.append('g').attr('class', 'nv-x nv-axis');\n            gEnter.append('g').attr('class', 'nv-y nv-axis');\n            gEnter.append('g').attr('class', 'nv-barsWrap');\n            gEnter.append('g').attr('class', 'nv-legendWrap');\n            gEnter.append('g').attr('class', 'nv-controlsWrap');\n            gEnter.append('g').attr('class', 'nv-interactive');\n\n            // Legend\n            if (!showLegend) {\n                g.select('.nv-legendWrap').selectAll('*').remove();\n            } else {\n                legend.width(availableWidth - controlWidth());\n\n                g.select('.nv-legendWrap')\n                    .datum(data)\n                    .call(legend);\n\n                if (!marginTop && legend.height() !== margin.top) {\n                    margin.top = legend.height();\n                    availableHeight = nv.utils.availableHeight(height, container, margin);\n                }\n\n                g.select('.nv-legendWrap')\n                    .attr('transform', 'translate(' + controlWidth() + ',' + (-margin.top) +')');\n            }\n\n            // Controls\n            if (!showControls) {\n                 g.select('.nv-controlsWrap').selectAll('*').remove();\n            } else {\n                var controlsData = [\n                    { key: controlLabels.grouped || 'Grouped', disabled: multibar.stacked() },\n                    { key: controlLabels.stacked || 'Stacked', disabled: !multibar.stacked() }\n                ];\n\n                controls.width(controlWidth()).color(['#444', '#444', '#444']);\n                g.select('.nv-controlsWrap')\n                    .datum(controlsData)\n                    .attr('transform', 'translate(0,' + (-margin.top) +')')\n                    .call(controls);\n            }\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n            if (rightAlignYAxis) {\n                g.select(\".nv-y.nv-axis\")\n                    .attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n            }\n\n            // Main Chart Component(s)\n            multibar\n                .disabled(data.map(function(series) { return series.disabled }))\n                .width(availableWidth)\n                .height(availableHeight)\n                .color(data.map(function(d,i) {\n                    return d.color || color(d, i);\n                }).filter(function(d,i) { return !data[i].disabled }));\n\n\n            var barsWrap = g.select('.nv-barsWrap')\n                .datum(data.filter(function(d) { return !d.disabled }));\n\n            barsWrap.call(multibar);\n\n            // Setup Axes\n            if (showXAxis) {\n                xAxis\n                    .scale(x)\n                    ._ticks( nv.utils.calcTicksX(availableWidth/100, data) )\n                    .tickSize(-availableHeight, 0);\n\n                g.select('.nv-x.nv-axis')\n                    .attr('transform', 'translate(0,' + y.range()[0] + ')');\n                g.select('.nv-x.nv-axis')\n                    .call(xAxis);\n\n                var xTicks = g.select('.nv-x.nv-axis > g').selectAll('g');\n\n                xTicks\n                    .selectAll('line, text')\n                    .style('opacity', 1)\n\n                if (staggerLabels) {\n                    var getTranslate = function(x,y) {\n                        return \"translate(\" + x + \",\" + y + \")\";\n                    };\n\n                    var staggerUp = 5, staggerDown = 17;  //pixels to stagger by\n                    // Issue #140\n                    xTicks\n                        .selectAll(\"text\")\n                        .attr('transform', function(d,i,j) {\n                            return  getTranslate(0, (j % 2 == 0 ? staggerUp : staggerDown));\n                        });\n\n                    var totalInBetweenTicks = d3.selectAll(\".nv-x.nv-axis .nv-wrap g g text\")[0].length;\n                    g.selectAll(\".nv-x.nv-axis .nv-axisMaxMin text\")\n                        .attr(\"transform\", function(d,i) {\n                            return getTranslate(0, (i === 0 || totalInBetweenTicks % 2 !== 0) ? staggerDown : staggerUp);\n                        });\n                }\n\n                if (wrapLabels) {\n                    g.selectAll('.tick text')\n                        .call(nv.utils.wrapTicks, chart.xAxis.rangeBand())\n                }\n\n                if (reduceXTicks)\n                    xTicks\n                        .filter(function(d,i) {\n                            return i % Math.ceil(data[0].values.length / (availableWidth / 100)) !== 0;\n                        })\n                        .selectAll('text, line')\n                        .style('opacity', 0);\n\n                if(rotateLabels)\n                    xTicks\n                        .selectAll('.tick text')\n                        .attr('transform', 'rotate(' + rotateLabels + ' 0,0)')\n                        .style('text-anchor', rotateLabels > 0 ? 'start' : 'end');\n\n                g.select('.nv-x.nv-axis').selectAll('g.nv-axisMaxMin text')\n                    .style('opacity', 1);\n            }\n\n            if (showYAxis) {\n                yAxis\n                    .scale(y)\n                    ._ticks( nv.utils.calcTicksY(availableHeight/36, data) )\n                    .tickSize( -availableWidth, 0);\n\n                g.select('.nv-y.nv-axis')\n                    .call(yAxis);\n            }\n\n            //Set up interactive layer\n            if (useInteractiveGuideline) {\n                interactiveLayer\n                    .width(availableWidth)\n                    .height(availableHeight)\n                    .margin({left:margin.left, top:margin.top})\n                    .svgContainer(container)\n                    .xScale(x);\n                wrap.select(\".nv-interactive\").call(interactiveLayer);\n            }\n\n            //============================================================\n            // Event Handling/Dispatching (in chart's scope)\n            //------------------------------------------------------------\n\n            legend.dispatch.on('stateChange', function(newState) {\n                for (var key in newState)\n                    state[key] = newState[key];\n                dispatch.stateChange(state);\n                chart.update();\n            });\n\n            controls.dispatch.on('legendClick', function(d,i) {\n                if (!d.disabled) return;\n                controlsData = controlsData.map(function(s) {\n                    s.disabled = true;\n                    return s;\n                });\n                d.disabled = false;\n\n                switch (d.key) {\n                    case 'Grouped':\n                    case controlLabels.grouped:\n                        multibar.stacked(false);\n                        break;\n                    case 'Stacked':\n                    case controlLabels.stacked:\n                        multibar.stacked(true);\n                        break;\n                }\n\n                state.stacked = multibar.stacked();\n                dispatch.stateChange(state);\n                chart.update();\n            });\n\n            // Update chart from a state object passed to event handler\n            dispatch.on('changeState', function(e) {\n                if (typeof e.disabled !== 'undefined') {\n                    data.forEach(function(series,i) {\n                        series.disabled = e.disabled[i];\n                    });\n                    state.disabled = e.disabled;\n                }\n                if (typeof e.stacked !== 'undefined') {\n                    multibar.stacked(e.stacked);\n                    state.stacked = e.stacked;\n                    stacked = e.stacked;\n                }\n                chart.update();\n            });\n\n            if (useInteractiveGuideline) {\n                interactiveLayer.dispatch.on('elementMousemove', function(e) {\n                    if (e.pointXValue == undefined) return;\n\n                    var singlePoint, pointIndex, pointXLocation, xValue, allData = [];\n                    data\n                        .filter(function(series, i) {\n                            series.seriesIndex = i;\n                            return !series.disabled;\n                        })\n                        .forEach(function(series,i) {\n                            pointIndex = x.domain().indexOf(e.pointXValue)\n\n                            var point = series.values[pointIndex];\n                            if (point === undefined) return;\n\n                            xValue = point.x;\n                            if (singlePoint === undefined) singlePoint = point;\n                            if (pointXLocation === undefined) pointXLocation = e.mouseX\n                            allData.push({\n                                key: series.key,\n                                value: chart.y()(point, pointIndex),\n                                color: color(series,series.seriesIndex),\n                                data: series.values[pointIndex]\n                            });\n                        });\n\n                    interactiveLayer.tooltip\n                        .data({\n                            value: xValue,\n                            index: pointIndex,\n                            series: allData\n                        })();\n\n                    interactiveLayer.renderGuideLine(pointXLocation);\n                });\n\n                interactiveLayer.dispatch.on(\"elementMouseout\",function(e) {\n                    interactiveLayer.tooltip.hidden(true);\n                });\n            }\n            else {\n                multibar.dispatch.on('elementMouseover.tooltip', function(evt) {\n                    evt.value = chart.x()(evt.data);\n                    evt['series'] = {\n                        key: evt.data.key,\n                        value: chart.y()(evt.data),\n                        color: evt.color\n                    };\n                    tooltip.data(evt).hidden(false);\n                });\n\n                multibar.dispatch.on('elementMouseout.tooltip', function(evt) {\n                    tooltip.hidden(true);\n                });\n\n                multibar.dispatch.on('elementMousemove.tooltip', function(evt) {\n                    tooltip();\n                });\n            }\n        });\n\n        renderWatch.renderEnd('multibarchart immediate');\n        return chart;\n    }\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    // expose chart's sub-components\n    chart.dispatch = dispatch;\n    chart.multibar = multibar;\n    chart.legend = legend;\n    chart.controls = controls;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.state = state;\n    chart.tooltip = tooltip;\n    chart.interactiveLayer = interactiveLayer;\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:      {get: function(){return width;}, set: function(_){width=_;}},\n        height:     {get: function(){return height;}, set: function(_){height=_;}},\n        showLegend: {get: function(){return showLegend;}, set: function(_){showLegend=_;}},\n        showControls: {get: function(){return showControls;}, set: function(_){showControls=_;}},\n        controlLabels: {get: function(){return controlLabels;}, set: function(_){controlLabels=_;}},\n        showXAxis:      {get: function(){return showXAxis;}, set: function(_){showXAxis=_;}},\n        showYAxis:    {get: function(){return showYAxis;}, set: function(_){showYAxis=_;}},\n        defaultState:    {get: function(){return defaultState;}, set: function(_){defaultState=_;}},\n        noData:    {get: function(){return noData;}, set: function(_){noData=_;}},\n        reduceXTicks:    {get: function(){return reduceXTicks;}, set: function(_){reduceXTicks=_;}},\n        rotateLabels:    {get: function(){return rotateLabels;}, set: function(_){rotateLabels=_;}},\n        staggerLabels:    {get: function(){return staggerLabels;}, set: function(_){staggerLabels=_;}},\n        wrapLabels:   {get: function(){return wrapLabels;}, set: function(_){wrapLabels=!!_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            if (_.top !== undefined) {\n                margin.top = _.top;\n                marginTop = _.top;\n            }\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        duration: {get: function(){return duration;}, set: function(_){\n            duration = _;\n            multibar.duration(duration);\n            xAxis.duration(duration);\n            yAxis.duration(duration);\n            renderWatch.reset(duration);\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n            legend.color(color);\n        }},\n        rightAlignYAxis: {get: function(){return rightAlignYAxis;}, set: function(_){\n            rightAlignYAxis = _;\n            yAxis.orient( rightAlignYAxis ? 'right' : 'left');\n        }},\n        useInteractiveGuideline: {get: function(){return useInteractiveGuideline;}, set: function(_){\n            useInteractiveGuideline = _;\n        }},\n        barColor:  {get: function(){return multibar.barColor;}, set: function(_){\n            multibar.barColor(_);\n            legend.color(function(d,i) {return d3.rgb('#ccc').darker(i * 1.5).toString();})\n        }}\n    });\n\n    nv.utils.inheritOptions(chart, multibar);\n    nv.utils.initOptions(chart);\n\n    return chart;\n};\n\nnv.models.multiBarHorizontal = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n        , width = 960\n        , height = 500\n        , id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n        , container = null\n        , x = d3.scale.ordinal()\n        , y = d3.scale.linear()\n        , getX = function(d) { return d.x }\n        , getY = function(d) { return d.y }\n        , getYerr = function(d) { return d.yErr }\n        , forceY = [0] // 0 is forced by default.. this makes sense for the majority of bar graphs... user can always do chart.forceY([]) to remove\n        , color = nv.utils.defaultColor()\n        , barColor = null // adding the ability to set the color for each rather than the whole group\n        , disabled // used in conjunction with barColor to communicate from multiBarHorizontalChart what series are disabled\n        , stacked = false\n        , showValues = false\n        , showBarLabels = false\n        , valuePadding = 60\n        , groupSpacing = 0.1\n        , fillOpacity = 0.75\n        , valueFormat = d3.format(',.2f')\n        , delay = 1200\n        , xDomain\n        , yDomain\n        , xRange\n        , yRange\n        , duration = 250\n        , dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd')\n        ;\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var x0, y0; //used to store previous scales\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n        renderWatch.reset();\n        selection.each(function(data) {\n            var availableWidth = width - margin.left - margin.right,\n                availableHeight = height - margin.top - margin.bottom;\n\n            container = d3.select(this);\n            nv.utils.initSVG(container);\n\n            if (stacked)\n                data = d3.layout.stack()\n                    .offset('zero')\n                    .values(function(d){ return d.values })\n                    .y(getY)\n                (data);\n\n            //add series index and key to each data point for reference\n            data.forEach(function(series, i) {\n                series.values.forEach(function(point) {\n                    point.series = i;\n                    point.key = series.key;\n                });\n            });\n\n            // HACK for negative value stacking\n            if (stacked)\n                data[0].values.map(function(d,i) {\n                    var posBase = 0, negBase = 0;\n                    data.map(function(d) {\n                        var f = d.values[i]\n                        f.size = Math.abs(f.y);\n                        if (f.y<0)  {\n                            f.y1 = negBase - f.size;\n                            negBase = negBase - f.size;\n                        } else\n                        {\n                            f.y1 = posBase;\n                            posBase = posBase + f.size;\n                        }\n                    });\n                });\n\n            // Setup Scales\n            // remap and flatten the data for use in calculating the scales' domains\n            var seriesData = (xDomain && yDomain) ? [] : // if we know xDomain and yDomain, no need to calculate\n                data.map(function(d) {\n                    return d.values.map(function(d,i) {\n                        return { x: getX(d,i), y: getY(d,i), y0: d.y0, y1: d.y1 }\n                    })\n                });\n\n            x.domain(xDomain || d3.merge(seriesData).map(function(d) { return d.x }))\n                .rangeBands(xRange || [0, availableHeight], groupSpacing);\n\n            y.domain(yDomain || d3.extent(d3.merge(seriesData).map(function(d) { return stacked ? (d.y > 0 ? d.y1 + d.y : d.y1 ) : d.y }).concat(forceY)))\n\n            if (showValues && !stacked)\n                y.range(yRange || [(y.domain()[0] < 0 ? valuePadding : 0), availableWidth - (y.domain()[1] > 0 ? valuePadding : 0) ]);\n            else\n                y.range(yRange || [0, availableWidth]);\n\n            x0 = x0 || x;\n            y0 = y0 || d3.scale.linear().domain(y.domain()).range([y(0),y(0)]);\n\n            // Setup containers and skeleton of chart\n            var wrap = d3.select(this).selectAll('g.nv-wrap.nv-multibarHorizontal').data([data]);\n            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-multibarHorizontal');\n            var defsEnter = wrapEnter.append('defs');\n            var gEnter = wrapEnter.append('g');\n            var g = wrap.select('g');\n\n            gEnter.append('g').attr('class', 'nv-groups');\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            var groups = wrap.select('.nv-groups').selectAll('.nv-group')\n                .data(function(d) { return d }, function(d,i) { return i });\n            groups.enter().append('g')\n                .style('stroke-opacity', 1e-6)\n                .style('fill-opacity', 1e-6);\n            groups.exit().watchTransition(renderWatch, 'multibarhorizontal: exit groups')\n                .style('stroke-opacity', 1e-6)\n                .style('fill-opacity', 1e-6)\n                .remove();\n            groups\n                .attr('class', function(d,i) { return 'nv-group nv-series-' + i })\n                .classed('hover', function(d) { return d.hover })\n                .style('fill', function(d,i){ return color(d, i) })\n                .style('stroke', function(d,i){ return color(d, i) });\n            groups.watchTransition(renderWatch, 'multibarhorizontal: groups')\n                .style('stroke-opacity', 1)\n                .style('fill-opacity', fillOpacity);\n\n            var bars = groups.selectAll('g.nv-bar')\n                .data(function(d) { return d.values });\n            bars.exit().remove();\n\n            var barsEnter = bars.enter().append('g')\n                .attr('transform', function(d,i,j) {\n                    return 'translate(' + y0(stacked ? d.y0 : 0) + ',' + (stacked ? 0 : (j * x.rangeBand() / data.length ) + x(getX(d,i))) + ')'\n                });\n\n            barsEnter.append('rect')\n                .attr('width', 0)\n                .attr('height', x.rangeBand() / (stacked ? 1 : data.length) )\n\n            bars\n                .on('mouseover', function(d,i) { //TODO: figure out why j works above, but not here\n                    d3.select(this).classed('hover', true);\n                    dispatch.elementMouseover({\n                        data: d,\n                        index: i,\n                        color: d3.select(this).style(\"fill\")\n                    });\n                })\n                .on('mouseout', function(d,i) {\n                    d3.select(this).classed('hover', false);\n                    dispatch.elementMouseout({\n                        data: d,\n                        index: i,\n                        color: d3.select(this).style(\"fill\")\n                    });\n                })\n                .on('mouseout', function(d,i) {\n                    dispatch.elementMouseout({\n                        data: d,\n                        index: i,\n                        color: d3.select(this).style(\"fill\")\n                    });\n                })\n                .on('mousemove', function(d,i) {\n                    dispatch.elementMousemove({\n                        data: d,\n                        index: i,\n                        color: d3.select(this).style(\"fill\")\n                    });\n                })\n                .on('click', function(d,i) {\n                    var element = this;\n                    dispatch.elementClick({\n                        data: d,\n                        index: i,\n                        color: d3.select(this).style(\"fill\"),\n                        event: d3.event,\n                        element: element\n                    });\n                    d3.event.stopPropagation();\n                })\n                .on('dblclick', function(d,i) {\n                    dispatch.elementDblClick({\n                        data: d,\n                        index: i,\n                        color: d3.select(this).style(\"fill\")\n                    });\n                    d3.event.stopPropagation();\n                });\n\n            if (getYerr(data[0],0)) {\n                barsEnter.append('polyline');\n\n                bars.select('polyline')\n                    .attr('fill', 'none')\n                    .attr('points', function(d,i) {\n                        var xerr = getYerr(d,i)\n                            , mid = 0.8 * x.rangeBand() / ((stacked ? 1 : data.length) * 2);\n                        xerr = xerr.length ? xerr : [-Math.abs(xerr), Math.abs(xerr)];\n                        xerr = xerr.map(function(e) { return y(e) - y(0); });\n                        var a = [[xerr[0],-mid], [xerr[0],mid], [xerr[0],0], [xerr[1],0], [xerr[1],-mid], [xerr[1],mid]];\n                        return a.map(function (path) { return path.join(',') }).join(' ');\n                    })\n                    .attr('transform', function(d,i) {\n                        var mid = x.rangeBand() / ((stacked ? 1 : data.length) * 2);\n                        return 'translate(' + (getY(d,i) < 0 ? 0 : y(getY(d,i)) - y(0)) + ', ' + mid + ')'\n                    });\n            }\n\n            barsEnter.append('text');\n\n            if (showValues && !stacked) {\n                bars.select('text')\n                    .attr('text-anchor', function(d,i) { return getY(d,i) < 0 ? 'end' : 'start' })\n                    .attr('y', x.rangeBand() / (data.length * 2))\n                    .attr('dy', '.32em')\n                    .text(function(d,i) {\n                        var t = valueFormat(getY(d,i))\n                            , yerr = getYerr(d,i);\n                        if (yerr === undefined)\n                            return t;\n                        if (!yerr.length)\n                            return t + '±' + valueFormat(Math.abs(yerr));\n                        return t + '+' + valueFormat(Math.abs(yerr[1])) + '-' + valueFormat(Math.abs(yerr[0]));\n                    });\n                bars.watchTransition(renderWatch, 'multibarhorizontal: bars')\n                    .select('text')\n                    .attr('x', function(d,i) { return getY(d,i) < 0 ? -4 : y(getY(d,i)) - y(0) + 4 })\n            } else {\n                bars.selectAll('text').text('');\n            }\n\n            if (showBarLabels && !stacked) {\n                barsEnter.append('text').classed('nv-bar-label',true);\n                bars.select('text.nv-bar-label')\n                    .attr('text-anchor', function(d,i) { return getY(d,i) < 0 ? 'start' : 'end' })\n                    .attr('y', x.rangeBand() / (data.length * 2))\n                    .attr('dy', '.32em')\n                    .text(function(d,i) { return getX(d,i) });\n                bars.watchTransition(renderWatch, 'multibarhorizontal: bars')\n                    .select('text.nv-bar-label')\n                    .attr('x', function(d,i) { return getY(d,i) < 0 ? y(0) - y(getY(d,i)) + 4 : -4 });\n            }\n            else {\n                bars.selectAll('text.nv-bar-label').text('');\n            }\n\n            bars\n                .attr('class', function(d,i) { return getY(d,i) < 0 ? 'nv-bar negative' : 'nv-bar positive'})\n\n            if (barColor) {\n                if (!disabled) disabled = data.map(function() { return true });\n                bars\n                    .style('fill', function(d,i,j) { return d3.rgb(barColor(d,i)).darker(  disabled.map(function(d,i) { return i }).filter(function(d,i){ return !disabled[i]  })[j]   ).toString(); })\n                    .style('stroke', function(d,i,j) { return d3.rgb(barColor(d,i)).darker(  disabled.map(function(d,i) { return i }).filter(function(d,i){ return !disabled[i]  })[j]   ).toString(); });\n            }\n\n            if (stacked)\n                bars.watchTransition(renderWatch, 'multibarhorizontal: bars')\n                    .attr('transform', function(d,i) {\n                        return 'translate(' + y(d.y1) + ',' + x(getX(d,i)) + ')'\n                    })\n                    .select('rect')\n                    .attr('width', function(d,i) {\n                        return Math.abs(y(getY(d,i) + d.y0) - y(d.y0)) || 0\n                    })\n                    .attr('height', x.rangeBand() );\n            else\n                bars.watchTransition(renderWatch, 'multibarhorizontal: bars')\n                    .attr('transform', function(d,i) {\n                        //TODO: stacked must be all positive or all negative, not both?\n                        return 'translate(' +\n                            (getY(d,i) < 0 ? y(getY(d,i)) : y(0))\n                            + ',' +\n                            (d.series * x.rangeBand() / data.length\n                                +\n                                x(getX(d,i)) )\n                            + ')'\n                    })\n                    .select('rect')\n                    .attr('height', x.rangeBand() / data.length )\n                    .attr('width', function(d,i) {\n                        return Math.max(Math.abs(y(getY(d,i)) - y(0)),1) || 0\n                    });\n\n            //store old scales for use in transitions on update\n            x0 = x.copy();\n            y0 = y.copy();\n\n        });\n\n        renderWatch.renderEnd('multibarHorizontal immediate');\n        return chart;\n    }\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:   {get: function(){return width;}, set: function(_){width=_;}},\n        height:  {get: function(){return height;}, set: function(_){height=_;}},\n        x:       {get: function(){return getX;}, set: function(_){getX=_;}},\n        y:       {get: function(){return getY;}, set: function(_){getY=_;}},\n        yErr:       {get: function(){return getYerr;}, set: function(_){getYerr=_;}},\n        xScale:  {get: function(){return x;}, set: function(_){x=_;}},\n        yScale:  {get: function(){return y;}, set: function(_){y=_;}},\n        xDomain: {get: function(){return xDomain;}, set: function(_){xDomain=_;}},\n        yDomain: {get: function(){return yDomain;}, set: function(_){yDomain=_;}},\n        xRange:  {get: function(){return xRange;}, set: function(_){xRange=_;}},\n        yRange:  {get: function(){return yRange;}, set: function(_){yRange=_;}},\n        forceY:  {get: function(){return forceY;}, set: function(_){forceY=_;}},\n        stacked: {get: function(){return stacked;}, set: function(_){stacked=_;}},\n        showValues: {get: function(){return showValues;}, set: function(_){showValues=_;}},\n        // this shows the group name, seems pointless?\n        //showBarLabels:    {get: function(){return showBarLabels;}, set: function(_){showBarLabels=_;}},\n        disabled:     {get: function(){return disabled;}, set: function(_){disabled=_;}},\n        id:           {get: function(){return id;}, set: function(_){id=_;}},\n        valueFormat:  {get: function(){return valueFormat;}, set: function(_){valueFormat=_;}},\n        valuePadding: {get: function(){return valuePadding;}, set: function(_){valuePadding=_;}},\n        groupSpacing: {get: function(){return groupSpacing;}, set: function(_){groupSpacing=_;}},\n        fillOpacity:  {get: function(){return fillOpacity;}, set: function(_){fillOpacity=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        duration: {get: function(){return duration;}, set: function(_){\n            duration = _;\n            renderWatch.reset(duration);\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n        }},\n        barColor:  {get: function(){return barColor;}, set: function(_){\n            barColor = _ ? nv.utils.getColor(_) : null;\n        }}\n    });\n\n    nv.utils.initOptions(chart);\n\n    return chart;\n};\n\nnv.models.multiBarHorizontalChart = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var multibar = nv.models.multiBarHorizontal()\n        , xAxis = nv.models.axis()\n        , yAxis = nv.models.axis()\n        , legend = nv.models.legend().height(30)\n        , controls = nv.models.legend().height(30)\n        , tooltip = nv.models.tooltip()\n        ;\n\n    var margin = {top: 30, right: 20, bottom: 50, left: 60}\n        , marginTop = null\n        , width = null\n        , height = null\n        , color = nv.utils.defaultColor()\n        , showControls = true\n        , controlLabels = {}\n        , showLegend = true\n        , showXAxis = true\n        , showYAxis = true\n        , stacked = false\n        , x //can be accessed via chart.xScale()\n        , y //can be accessed via chart.yScale()\n        , state = nv.utils.state()\n        , defaultState = null\n        , noData = null\n        , dispatch = d3.dispatch('stateChange', 'changeState','renderEnd')\n        , controlWidth = function() { return showControls ? 180 : 0 }\n        , duration = 250\n        ;\n\n    state.stacked = false; // DEPRECATED Maintained for backward compatibility\n\n    multibar.stacked(stacked);\n\n    xAxis\n        .orient('left')\n        .tickPadding(5)\n        .showMaxMin(false)\n        .tickFormat(function(d) { return d })\n    ;\n    yAxis\n        .orient('bottom')\n        .tickFormat(d3.format(',.1f'))\n    ;\n\n    tooltip\n        .duration(0)\n        .valueFormatter(function(d, i) {\n            return yAxis.tickFormat()(d, i);\n        })\n        .headerFormatter(function(d, i) {\n            return xAxis.tickFormat()(d, i);\n        });\n\n    controls.updateState(false);\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var stateGetter = function(data) {\n        return function(){\n            return {\n                active: data.map(function(d) { return !d.disabled }),\n                stacked: stacked\n            };\n        }\n    };\n\n    var stateSetter = function(data) {\n        return function(state) {\n            if (state.stacked !== undefined)\n                stacked = state.stacked;\n            if (state.active !== undefined)\n                data.forEach(function(series,i) {\n                    series.disabled = !state.active[i];\n                });\n        }\n    };\n\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n        renderWatch.reset();\n        renderWatch.models(multibar);\n        if (showXAxis) renderWatch.models(xAxis);\n        if (showYAxis) renderWatch.models(yAxis);\n\n        selection.each(function(data) {\n            var container = d3.select(this),\n                that = this;\n            nv.utils.initSVG(container);\n            var availableWidth = nv.utils.availableWidth(width, container, margin),\n                availableHeight = nv.utils.availableHeight(height, container, margin);\n\n            chart.update = function() { container.transition().duration(duration).call(chart) };\n            chart.container = this;\n\n            stacked = multibar.stacked();\n\n            state\n                .setter(stateSetter(data), chart.update)\n                .getter(stateGetter(data))\n                .update();\n\n            // DEPRECATED set state.disableddisabled\n            state.disabled = data.map(function(d) { return !!d.disabled });\n\n            if (!defaultState) {\n                var key;\n                defaultState = {};\n                for (key in state) {\n                    if (state[key] instanceof Array)\n                        defaultState[key] = state[key].slice(0);\n                    else\n                        defaultState[key] = state[key];\n                }\n            }\n\n            // Display No Data message if there's nothing to show.\n            if (!data || !data.length || !data.filter(function(d) { return d.values.length }).length) {\n                nv.utils.noData(chart, container)\n                return chart;\n            } else {\n                container.selectAll('.nv-noData').remove();\n            }\n\n            // Setup Scales\n            x = multibar.xScale();\n            y = multibar.yScale().clamp(true);\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-multiBarHorizontalChart').data([data]);\n            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-multiBarHorizontalChart').append('g');\n            var g = wrap.select('g');\n\n            gEnter.append('g').attr('class', 'nv-x nv-axis');\n            gEnter.append('g').attr('class', 'nv-y nv-axis')\n                .append('g').attr('class', 'nv-zeroLine')\n                .append('line');\n            gEnter.append('g').attr('class', 'nv-barsWrap');\n            gEnter.append('g').attr('class', 'nv-legendWrap');\n            gEnter.append('g').attr('class', 'nv-controlsWrap');\n\n            // Legend\n            if (!showLegend) {\n                g.select('.nv-legendWrap').selectAll('*').remove();\n            } else {\n                legend.width(availableWidth - controlWidth());\n\n                g.select('.nv-legendWrap')\n                    .datum(data)\n                    .call(legend);\n\n                if (!marginTop && legend.height() !== margin.top) {\n                    margin.top = legend.height();\n                    availableHeight = nv.utils.availableHeight(height, container, margin);\n                }\n\n                g.select('.nv-legendWrap')\n                    .attr('transform', 'translate(' + controlWidth() + ',' + (-margin.top) +')');\n            }\n\n            // Controls\n            if (!showControls) {\n                 g.select('.nv-controlsWrap').selectAll('*').remove();\n            } else {\n                var controlsData = [\n                    { key: controlLabels.grouped || 'Grouped', disabled: multibar.stacked() },\n                    { key: controlLabels.stacked || 'Stacked', disabled: !multibar.stacked() }\n                ];\n\n                controls.width(controlWidth()).color(['#444', '#444', '#444']);\n                g.select('.nv-controlsWrap')\n                    .datum(controlsData)\n                    .attr('transform', 'translate(0,' + (-margin.top) +')')\n                    .call(controls);\n            }\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            // Main Chart Component(s)\n            multibar\n                .disabled(data.map(function(series) { return series.disabled }))\n                .width(availableWidth)\n                .height(availableHeight)\n                .color(data.map(function(d,i) {\n                    return d.color || color(d, i);\n                }).filter(function(d,i) { return !data[i].disabled }));\n\n            var barsWrap = g.select('.nv-barsWrap')\n                .datum(data.filter(function(d) { return !d.disabled }));\n\n            barsWrap.transition().call(multibar);\n\n            // Setup Axes\n            if (showXAxis) {\n                xAxis\n                    .scale(x)\n                    ._ticks( nv.utils.calcTicksY(availableHeight/24, data) )\n                    .tickSize(-availableWidth, 0);\n\n                g.select('.nv-x.nv-axis').call(xAxis);\n\n                var xTicks = g.select('.nv-x.nv-axis').selectAll('g');\n\n                xTicks\n                    .selectAll('line, text');\n            }\n\n            if (showYAxis) {\n                yAxis\n                    .scale(y)\n                    ._ticks( nv.utils.calcTicksX(availableWidth/100, data) )\n                    .tickSize( -availableHeight, 0);\n\n                g.select('.nv-y.nv-axis')\n                    .attr('transform', 'translate(0,' + availableHeight + ')');\n                g.select('.nv-y.nv-axis').call(yAxis);\n            }\n\n            // Zero line\n            g.select(\".nv-zeroLine line\")\n                .attr(\"x1\", y(0))\n                .attr(\"x2\", y(0))\n                .attr(\"y1\", 0)\n                .attr(\"y2\", -availableHeight)\n            ;\n\n            //============================================================\n            // Event Handling/Dispatching (in chart's scope)\n            //------------------------------------------------------------\n\n            legend.dispatch.on('stateChange', function(newState) {\n                for (var key in newState)\n                    state[key] = newState[key];\n                dispatch.stateChange(state);\n                chart.update();\n            });\n\n            controls.dispatch.on('legendClick', function(d,i) {\n                if (!d.disabled) return;\n                controlsData = controlsData.map(function(s) {\n                    s.disabled = true;\n                    return s;\n                });\n                d.disabled = false;\n\n                switch (d.key) {\n                    case 'Grouped':\n                    case controlLabels.grouped:\n                        multibar.stacked(false);\n                        break;\n                    case 'Stacked':\n                    case controlLabels.stacked:\n                        multibar.stacked(true);\n                        break;\n                }\n\n                state.stacked = multibar.stacked();\n                dispatch.stateChange(state);\n                stacked = multibar.stacked();\n\n                chart.update();\n            });\n\n            // Update chart from a state object passed to event handler\n            dispatch.on('changeState', function(e) {\n\n                if (typeof e.disabled !== 'undefined') {\n                    data.forEach(function(series,i) {\n                        series.disabled = e.disabled[i];\n                    });\n\n                    state.disabled = e.disabled;\n                }\n\n                if (typeof e.stacked !== 'undefined') {\n                    multibar.stacked(e.stacked);\n                    state.stacked = e.stacked;\n                    stacked = e.stacked;\n                }\n\n                chart.update();\n            });\n        });\n        renderWatch.renderEnd('multibar horizontal chart immediate');\n        return chart;\n    }\n\n    //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n    multibar.dispatch.on('elementMouseover.tooltip', function(evt) {\n        evt.value = chart.x()(evt.data);\n        evt['series'] = {\n            key: evt.data.key,\n            value: chart.y()(evt.data),\n            color: evt.color\n        };\n        tooltip.data(evt).hidden(false);\n    });\n\n    multibar.dispatch.on('elementMouseout.tooltip', function(evt) {\n        tooltip.hidden(true);\n    });\n\n    multibar.dispatch.on('elementMousemove.tooltip', function(evt) {\n        tooltip();\n    });\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    // expose chart's sub-components\n    chart.dispatch = dispatch;\n    chart.multibar = multibar;\n    chart.legend = legend;\n    chart.controls = controls;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.state = state;\n    chart.tooltip = tooltip;\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:      {get: function(){return width;}, set: function(_){width=_;}},\n        height:     {get: function(){return height;}, set: function(_){height=_;}},\n        showLegend: {get: function(){return showLegend;}, set: function(_){showLegend=_;}},\n        showControls: {get: function(){return showControls;}, set: function(_){showControls=_;}},\n        controlLabels: {get: function(){return controlLabels;}, set: function(_){controlLabels=_;}},\n        showXAxis:      {get: function(){return showXAxis;}, set: function(_){showXAxis=_;}},\n        showYAxis:    {get: function(){return showYAxis;}, set: function(_){showYAxis=_;}},\n        defaultState:    {get: function(){return defaultState;}, set: function(_){defaultState=_;}},\n        noData:    {get: function(){return noData;}, set: function(_){noData=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            if (_.top !== undefined) {\n                margin.top = _.top;\n                marginTop = _.top;\n            }\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        duration: {get: function(){return duration;}, set: function(_){\n            duration = _;\n            renderWatch.reset(duration);\n            multibar.duration(duration);\n            xAxis.duration(duration);\n            yAxis.duration(duration);\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n            legend.color(color);\n        }},\n        barColor:  {get: function(){return multibar.barColor;}, set: function(_){\n            multibar.barColor(_);\n            legend.color(function(d,i) {return d3.rgb('#ccc').darker(i * 1.5).toString();})\n        }}\n    });\n\n    nv.utils.inheritOptions(chart, multibar);\n    nv.utils.initOptions(chart);\n\n    return chart;\n};\nnv.models.multiChart = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {top: 30, right: 20, bottom: 50, left: 60},\n        marginTop = null,\n        color = nv.utils.defaultColor(),\n        width = null,\n        height = null,\n        showLegend = true,\n        noData = null,\n        yDomain1,\n        yDomain2,\n        getX = function(d) { return d.x },\n        getY = function(d) { return d.y},\n        interpolate = 'linear',\n        useVoronoi = true,\n        interactiveLayer = nv.interactiveGuideline(),\n        useInteractiveGuideline = false,\n        legendRightAxisHint = ' (right axis)',\n        duration = 250\n        ;\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var x = d3.scale.linear(),\n        yScale1 = d3.scale.linear(),\n        yScale2 = d3.scale.linear(),\n\n        lines1 = nv.models.line().yScale(yScale1).duration(duration),\n        lines2 = nv.models.line().yScale(yScale2).duration(duration),\n\n        scatters1 = nv.models.scatter().yScale(yScale1).duration(duration),\n        scatters2 = nv.models.scatter().yScale(yScale2).duration(duration),\n\n        bars1 = nv.models.multiBar().stacked(false).yScale(yScale1).duration(duration),\n        bars2 = nv.models.multiBar().stacked(false).yScale(yScale2).duration(duration),\n\n        stack1 = nv.models.stackedArea().yScale(yScale1).duration(duration),\n        stack2 = nv.models.stackedArea().yScale(yScale2).duration(duration),\n\n        xAxis = nv.models.axis().scale(x).orient('bottom').tickPadding(5).duration(duration),\n        yAxis1 = nv.models.axis().scale(yScale1).orient('left').duration(duration),\n        yAxis2 = nv.models.axis().scale(yScale2).orient('right').duration(duration),\n\n        legend = nv.models.legend().height(30),\n        tooltip = nv.models.tooltip(),\n        dispatch = d3.dispatch();\n\n    var charts = [lines1, lines2, scatters1, scatters2, bars1, bars2, stack1, stack2];\n\n    function chart(selection) {\n        selection.each(function(data) {\n            var container = d3.select(this),\n                that = this;\n            nv.utils.initSVG(container);\n\n            chart.update = function() { container.transition().call(chart); };\n            chart.container = this;\n\n            var availableWidth = nv.utils.availableWidth(width, container, margin),\n                availableHeight = nv.utils.availableHeight(height, container, margin);\n\n            var dataLines1 = data.filter(function(d) {return d.type == 'line' && d.yAxis == 1});\n            var dataLines2 = data.filter(function(d) {return d.type == 'line' && d.yAxis == 2});\n            var dataScatters1 = data.filter(function(d) {return d.type == 'scatter' && d.yAxis == 1});\n            var dataScatters2 = data.filter(function(d) {return d.type == 'scatter' && d.yAxis == 2});\n            var dataBars1 =  data.filter(function(d) {return d.type == 'bar'  && d.yAxis == 1});\n            var dataBars2 =  data.filter(function(d) {return d.type == 'bar'  && d.yAxis == 2});\n            var dataStack1 = data.filter(function(d) {return d.type == 'area' && d.yAxis == 1});\n            var dataStack2 = data.filter(function(d) {return d.type == 'area' && d.yAxis == 2});\n\n            // Display noData message if there's nothing to show.\n            if (!data || !data.length || !data.filter(function(d) { return d.values.length }).length) {\n                nv.utils.noData(chart, container);\n                return chart;\n            } else {\n                container.selectAll('.nv-noData').remove();\n            }\n\n            var series1 = data.filter(function(d) {return !d.disabled && d.yAxis == 1})\n                .map(function(d) {\n                    return d.values.map(function(d,i) {\n                        return { x: getX(d), y: getY(d) }\n                    })\n                });\n\n            var series2 = data.filter(function(d) {return !d.disabled && d.yAxis == 2})\n                .map(function(d) {\n                    return d.values.map(function(d,i) {\n                        return { x: getX(d), y: getY(d) }\n                    })\n                });\n\n            x   .domain(d3.extent(d3.merge(series1.concat(series2)), function(d) { return d.x }))\n                .range([0, availableWidth]);\n\n            var wrap = container.selectAll('g.wrap.multiChart').data([data]);\n            var gEnter = wrap.enter().append('g').attr('class', 'wrap nvd3 multiChart').append('g');\n\n            gEnter.append('g').attr('class', 'nv-x nv-axis');\n            gEnter.append('g').attr('class', 'nv-y1 nv-axis');\n            gEnter.append('g').attr('class', 'nv-y2 nv-axis');\n            gEnter.append('g').attr('class', 'stack1Wrap');\n            gEnter.append('g').attr('class', 'stack2Wrap');\n            gEnter.append('g').attr('class', 'bars1Wrap');\n            gEnter.append('g').attr('class', 'bars2Wrap');\n            gEnter.append('g').attr('class', 'scatters1Wrap');\n            gEnter.append('g').attr('class', 'scatters2Wrap');\n            gEnter.append('g').attr('class', 'lines1Wrap');\n            gEnter.append('g').attr('class', 'lines2Wrap');\n            gEnter.append('g').attr('class', 'legendWrap');\n            gEnter.append('g').attr('class', 'nv-interactive');\n\n            var g = wrap.select('g');\n\n            var color_array = data.map(function(d,i) {\n                return data[i].color || color(d, i);\n            });\n\n            // Legend\n            if (!showLegend) {\n                g.select('.legendWrap').selectAll('*').remove();\n            } else {\n                var legendWidth = legend.align() ? availableWidth / 2 : availableWidth;\n                var legendXPosition = legend.align() ? legendWidth : 0;\n\n                legend.width(legendWidth);\n                legend.color(color_array);\n\n                g.select('.legendWrap')\n                    .datum(data.map(function(series) {\n                        series.originalKey = series.originalKey === undefined ? series.key : series.originalKey;\n                        series.key = series.originalKey + (series.yAxis == 1 ? '' : legendRightAxisHint);\n                        return series;\n                    }))\n                    .call(legend);\n\n                if (!marginTop && legend.height() !== margin.top) {\n                    margin.top = legend.height();\n                    availableHeight = nv.utils.availableHeight(height, container, margin);\n                }\n\n                g.select('.legendWrap')\n                    .attr('transform', 'translate(' + legendXPosition + ',' + (-margin.top) +')');\n            }\n\n            lines1\n                .width(availableWidth)\n                .height(availableHeight)\n                .interpolate(interpolate)\n                .color(color_array.filter(function(d,i) { return !data[i].disabled && data[i].yAxis == 1 && data[i].type == 'line'}));\n            lines2\n                .width(availableWidth)\n                .height(availableHeight)\n                .interpolate(interpolate)\n                .color(color_array.filter(function(d,i) { return !data[i].disabled && data[i].yAxis == 2 && data[i].type == 'line'}));\n            scatters1\n                .width(availableWidth)\n                .height(availableHeight)\n                .color(color_array.filter(function(d,i) { return !data[i].disabled && data[i].yAxis == 1 && data[i].type == 'scatter'}));\n            scatters2\n                .width(availableWidth)\n                .height(availableHeight)\n                .color(color_array.filter(function(d,i) { return !data[i].disabled && data[i].yAxis == 2 && data[i].type == 'scatter'}));\n            bars1\n                .width(availableWidth)\n                .height(availableHeight)\n                .color(color_array.filter(function(d,i) { return !data[i].disabled && data[i].yAxis == 1 && data[i].type == 'bar'}));\n            bars2\n                .width(availableWidth)\n                .height(availableHeight)\n                .color(color_array.filter(function(d,i) { return !data[i].disabled && data[i].yAxis == 2 && data[i].type == 'bar'}));\n            stack1\n                .width(availableWidth)\n                .height(availableHeight)\n                .interpolate(interpolate)\n                .color(color_array.filter(function(d,i) { return !data[i].disabled && data[i].yAxis == 1 && data[i].type == 'area'}));\n            stack2\n                .width(availableWidth)\n                .height(availableHeight)\n                .interpolate(interpolate)\n                .color(color_array.filter(function(d,i) { return !data[i].disabled && data[i].yAxis == 2 && data[i].type == 'area'}));\n\n            g.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            var lines1Wrap = g.select('.lines1Wrap')\n                .datum(dataLines1.filter(function(d){return !d.disabled}));\n            var scatters1Wrap = g.select('.scatters1Wrap')\n                .datum(dataScatters1.filter(function(d){return !d.disabled}));\n            var bars1Wrap = g.select('.bars1Wrap')\n                .datum(dataBars1.filter(function(d){return !d.disabled}));\n            var stack1Wrap = g.select('.stack1Wrap')\n                .datum(dataStack1.filter(function(d){return !d.disabled}));\n            var lines2Wrap = g.select('.lines2Wrap')\n                .datum(dataLines2.filter(function(d){return !d.disabled}));\n            var scatters2Wrap = g.select('.scatters2Wrap')\n                .datum(dataScatters2.filter(function(d){return !d.disabled}));\n            var bars2Wrap = g.select('.bars2Wrap')\n                .datum(dataBars2.filter(function(d){return !d.disabled}));\n            var stack2Wrap = g.select('.stack2Wrap')\n                .datum(dataStack2.filter(function(d){return !d.disabled}));\n\n            var extraValue1 = dataStack1.length ? dataStack1.map(function(a){return a.values}).reduce(function(a,b){\n                return a.map(function(aVal,i){return {x: aVal.x, y: aVal.y + b[i].y}})\n            }).concat([{x:0, y:0}]) : [];\n            var extraValue2 = dataStack2.length ? dataStack2.map(function(a){return a.values}).reduce(function(a,b){\n                return a.map(function(aVal,i){return {x: aVal.x, y: aVal.y + b[i].y}})\n            }).concat([{x:0, y:0}]) : [];\n\n            yScale1 .domain(yDomain1 || d3.extent(d3.merge(series1).concat(extraValue1), function(d) { return d.y } ))\n                .range([0, availableHeight]);\n\n            yScale2 .domain(yDomain2 || d3.extent(d3.merge(series2).concat(extraValue2), function(d) { return d.y } ))\n                .range([0, availableHeight]);\n\n            lines1.yDomain(yScale1.domain());\n            scatters1.yDomain(yScale1.domain());\n            bars1.yDomain(yScale1.domain());\n            stack1.yDomain(yScale1.domain());\n\n            lines2.yDomain(yScale2.domain());\n            scatters2.yDomain(yScale2.domain());\n            bars2.yDomain(yScale2.domain());\n            stack2.yDomain(yScale2.domain());\n\n            if(dataStack1.length){d3.transition(stack1Wrap).call(stack1);}\n            if(dataStack2.length){d3.transition(stack2Wrap).call(stack2);}\n\n            if(dataBars1.length){d3.transition(bars1Wrap).call(bars1);}\n            if(dataBars2.length){d3.transition(bars2Wrap).call(bars2);}\n\n            if(dataLines1.length){d3.transition(lines1Wrap).call(lines1);}\n            if(dataLines2.length){d3.transition(lines2Wrap).call(lines2);}\n\n            if(dataScatters1.length){d3.transition(scatters1Wrap).call(scatters1);}\n            if(dataScatters2.length){d3.transition(scatters2Wrap).call(scatters2);}\n\n            xAxis\n                ._ticks( nv.utils.calcTicksX(availableWidth/100, data) )\n                .tickSize(-availableHeight, 0);\n\n            g.select('.nv-x.nv-axis')\n                .attr('transform', 'translate(0,' + availableHeight + ')');\n            d3.transition(g.select('.nv-x.nv-axis'))\n                .call(xAxis);\n\n            yAxis1\n                ._ticks( nv.utils.calcTicksY(availableHeight/36, data) )\n                .tickSize( -availableWidth, 0);\n\n\n            d3.transition(g.select('.nv-y1.nv-axis'))\n                .call(yAxis1);\n\n            yAxis2\n                ._ticks( nv.utils.calcTicksY(availableHeight/36, data) )\n                .tickSize( -availableWidth, 0);\n\n            d3.transition(g.select('.nv-y2.nv-axis'))\n                .call(yAxis2);\n\n            g.select('.nv-y1.nv-axis')\n                .classed('nv-disabled', series1.length ? false : true)\n                .attr('transform', 'translate(' + x.range()[0] + ',0)');\n\n            g.select('.nv-y2.nv-axis')\n                .classed('nv-disabled', series2.length ? false : true)\n                .attr('transform', 'translate(' + x.range()[1] + ',0)');\n\n            legend.dispatch.on('stateChange', function(newState) {\n                chart.update();\n            });\n\n            if(useInteractiveGuideline){\n                interactiveLayer\n                    .width(availableWidth)\n                    .height(availableHeight)\n                    .margin({left:margin.left, top:margin.top})\n                    .svgContainer(container)\n                    .xScale(x);\n                wrap.select(\".nv-interactive\").call(interactiveLayer);\n            }\n\n            //============================================================\n            // Event Handling/Dispatching\n            //------------------------------------------------------------\n\n            function mouseover_line(evt) {\n                var yaxis = data[evt.seriesIndex].yAxis === 2 ? yAxis2 : yAxis1;\n                evt.value = evt.point.x;\n                evt.series = {\n                    value: evt.point.y,\n                    color: evt.point.color,\n                    key: evt.series.key\n                };\n                tooltip\n                    .duration(0)\n                    .headerFormatter(function(d, i) {\n                    \treturn xAxis.tickFormat()(d, i);\n                    })\n                    .valueFormatter(function(d, i) {\n                        return yaxis.tickFormat()(d, i);\n                    })\n                    .data(evt)\n                    .hidden(false);\n            }\n\n            function mouseover_scatter(evt) {\n                var yaxis = data[evt.seriesIndex].yAxis === 2 ? yAxis2 : yAxis1;\n                evt.value = evt.point.x;\n                evt.series = {\n                    value: evt.point.y,\n                    color: evt.point.color,\n                    key: evt.series.key\n                };\n                tooltip\n                    .duration(100)\n                    .headerFormatter(function(d, i) {\n                    \treturn xAxis.tickFormat()(d, i);\n                    })\n                    .valueFormatter(function(d, i) {\n                        return yaxis.tickFormat()(d, i);\n                    })\n                    .data(evt)\n                    .hidden(false);\n            }\n\n            function mouseover_stack(evt) {\n                var yaxis = data[evt.seriesIndex].yAxis === 2 ? yAxis2 : yAxis1;\n                evt.point['x'] = stack1.x()(evt.point);\n                evt.point['y'] = stack1.y()(evt.point);\n                tooltip\n                    .duration(0)\n                    .headerFormatter(function(d, i) {\n                    \treturn xAxis.tickFormat()(d, i);\n                    })\n                    .valueFormatter(function(d, i) {\n                        return yaxis.tickFormat()(d, i);\n                    })\n                    .data(evt)\n                    .hidden(false);\n            }\n\n            function mouseover_bar(evt) {\n                var yaxis = data[evt.data.series].yAxis === 2 ? yAxis2 : yAxis1;\n\n                evt.value = bars1.x()(evt.data);\n                evt['series'] = {\n                    value: bars1.y()(evt.data),\n                    color: evt.color,\n                    key: evt.data.key\n                };\n                tooltip\n                    .duration(0)\n                    .headerFormatter(function(d, i) {\n                    \treturn xAxis.tickFormat()(d, i);\n                    })\n                    .valueFormatter(function(d, i) {\n                        return yaxis.tickFormat()(d, i);\n                    })\n                    .data(evt)\n                    .hidden(false);\n            }\n\n\n\n            function clearHighlights() {\n              for(var i=0, il=charts.length; i < il; i++){\n                var chart = charts[i];\n                try {\n                  chart.clearHighlights();\n                } catch(e){}\n              }\n            }\n\n            function highlightPoint(serieIndex, pointIndex, b){\n              for(var i=0, il=charts.length; i < il; i++){\n                var chart = charts[i];\n                try {\n                  chart.highlightPoint(serieIndex, pointIndex, b);\n                } catch(e){}\n              }\n            }\n\n            if(useInteractiveGuideline){\n                interactiveLayer.dispatch.on('elementMousemove', function(e) {\n                    clearHighlights();\n                    var singlePoint, pointIndex, pointXLocation, allData = [];\n                    data\n                    .filter(function(series, i) {\n                        series.seriesIndex = i;\n                        return !series.disabled;\n                    })\n                    .forEach(function(series,i) {\n                        var extent = x.domain();\n                        var currentValues = series.values.filter(function(d,i) {\n                            return chart.x()(d,i) >= extent[0] && chart.x()(d,i) <= extent[1];\n                        });\n\n                        pointIndex = nv.interactiveBisect(currentValues, e.pointXValue, chart.x());\n                        var point = currentValues[pointIndex];\n                        var pointYValue = chart.y()(point, pointIndex);\n                        if (pointYValue !== null) {\n                            highlightPoint(i, pointIndex, true);\n                        }\n                        if (point === undefined) return;\n                        if (singlePoint === undefined) singlePoint = point;\n                        if (pointXLocation === undefined) pointXLocation = x(chart.x()(point,pointIndex));\n                        allData.push({\n                            key: series.key,\n                            value: pointYValue,\n                            color: color(series,series.seriesIndex),\n                            data: point,\n                            yAxis: series.yAxis == 2 ? yAxis2 : yAxis1\n                        });\n                    });\n\n                    var defaultValueFormatter = function(d,i) {\n                        var yAxis = allData[i].yAxis;\n                        return d == null ? \"N/A\" : yAxis.tickFormat()(d);\n                    };\n\n                    interactiveLayer.tooltip\n                        .headerFormatter(function(d, i) {\n                            return xAxis.tickFormat()(d, i);\n                        })\n                        .valueFormatter(interactiveLayer.tooltip.valueFormatter() || defaultValueFormatter)\n                        .data({\n                            value: chart.x()( singlePoint,pointIndex ),\n                            index: pointIndex,\n                            series: allData\n                        })();\n\n                    interactiveLayer.renderGuideLine(pointXLocation);\n                });\n\n                interactiveLayer.dispatch.on(\"elementMouseout\",function(e) {\n                    clearHighlights();\n                });\n            } else {\n                lines1.dispatch.on('elementMouseover.tooltip', mouseover_line);\n                lines2.dispatch.on('elementMouseover.tooltip', mouseover_line);\n                lines1.dispatch.on('elementMouseout.tooltip', function(evt) {\n                    tooltip.hidden(true)\n                });\n                lines2.dispatch.on('elementMouseout.tooltip', function(evt) {\n                    tooltip.hidden(true)\n                });\n\n                scatters1.dispatch.on('elementMouseover.tooltip', mouseover_scatter);\n                scatters2.dispatch.on('elementMouseover.tooltip', mouseover_scatter);\n                scatters1.dispatch.on('elementMouseout.tooltip', function(evt) {\n                    tooltip.hidden(true)\n                });\n                scatters2.dispatch.on('elementMouseout.tooltip', function(evt) {\n                    tooltip.hidden(true)\n                });\n\n                stack1.dispatch.on('elementMouseover.tooltip', mouseover_stack);\n                stack2.dispatch.on('elementMouseover.tooltip', mouseover_stack);\n                stack1.dispatch.on('elementMouseout.tooltip', function(evt) {\n                    tooltip.hidden(true)\n                });\n                stack2.dispatch.on('elementMouseout.tooltip', function(evt) {\n                    tooltip.hidden(true)\n                });\n\n                bars1.dispatch.on('elementMouseover.tooltip', mouseover_bar);\n                bars2.dispatch.on('elementMouseover.tooltip', mouseover_bar);\n\n                bars1.dispatch.on('elementMouseout.tooltip', function(evt) {\n                    tooltip.hidden(true);\n                });\n                bars2.dispatch.on('elementMouseout.tooltip', function(evt) {\n                    tooltip.hidden(true);\n                });\n                bars1.dispatch.on('elementMousemove.tooltip', function(evt) {\n                    tooltip();\n                });\n                bars2.dispatch.on('elementMousemove.tooltip', function(evt) {\n                    tooltip();\n                });\n            }\n        });\n\n        return chart;\n    }\n\n    //============================================================\n    // Global getters and setters\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n    chart.legend = legend;\n    chart.lines1 = lines1;\n    chart.lines2 = lines2;\n    chart.scatters1 = scatters1;\n    chart.scatters2 = scatters2;\n    chart.bars1 = bars1;\n    chart.bars2 = bars2;\n    chart.stack1 = stack1;\n    chart.stack2 = stack2;\n    chart.xAxis = xAxis;\n    chart.yAxis1 = yAxis1;\n    chart.yAxis2 = yAxis2;\n    chart.tooltip = tooltip;\n    chart.interactiveLayer = interactiveLayer;\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:      {get: function(){return width;}, set: function(_){width=_;}},\n        height:     {get: function(){return height;}, set: function(_){height=_;}},\n        showLegend: {get: function(){return showLegend;}, set: function(_){showLegend=_;}},\n        yDomain1:      {get: function(){return yDomain1;}, set: function(_){yDomain1=_;}},\n        yDomain2:    {get: function(){return yDomain2;}, set: function(_){yDomain2=_;}},\n        noData:    {get: function(){return noData;}, set: function(_){noData=_;}},\n        interpolate:    {get: function(){return interpolate;}, set: function(_){interpolate=_;}},\n        legendRightAxisHint:    {get: function(){return legendRightAxisHint;}, set: function(_){legendRightAxisHint=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            if (_.top !== undefined) {\n                margin.top = _.top;\n                marginTop = _.top;\n            }\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n        }},\n        x: {get: function(){return getX;}, set: function(_){\n            getX = _;\n            lines1.x(_);\n            lines2.x(_);\n            scatters1.x(_);\n            scatters2.x(_);\n            bars1.x(_);\n            bars2.x(_);\n            stack1.x(_);\n            stack2.x(_);\n        }},\n        y: {get: function(){return getY;}, set: function(_){\n            getY = _;\n            lines1.y(_);\n            lines2.y(_);\n            scatters1.y(_);\n            scatters2.y(_);\n            stack1.y(_);\n            stack2.y(_);\n            bars1.y(_);\n            bars2.y(_);\n        }},\n        useVoronoi: {get: function(){return useVoronoi;}, set: function(_){\n            useVoronoi=_;\n            lines1.useVoronoi(_);\n            lines2.useVoronoi(_);\n            stack1.useVoronoi(_);\n            stack2.useVoronoi(_);\n        }},\n\n        useInteractiveGuideline: {get: function(){return useInteractiveGuideline;}, set: function(_){\n            useInteractiveGuideline = _;\n            if (useInteractiveGuideline) {\n                lines1.interactive(false);\n                lines1.useVoronoi(false);\n                lines2.interactive(false);\n                lines2.useVoronoi(false);\n                stack1.interactive(false);\n                stack1.useVoronoi(false);\n                stack2.interactive(false);\n                stack2.useVoronoi(false);\n                scatters1.interactive(false);\n                scatters2.interactive(false);\n            }\n        }},\n\n        duration: {get: function(){return duration;}, set: function(_) {\n            duration = _;\n            [lines1, lines2, stack1, stack2, scatters1, scatters2, xAxis, yAxis1, yAxis2].forEach(function(model){\n              model.duration(duration);\n            });\n        }}\n    });\n\n    nv.utils.initOptions(chart);\n\n    return chart;\n};\n\nnv.models.ohlcBar = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n        , width = null\n        , height = null\n        , id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n        , container = null\n        , x = d3.scale.linear()\n        , y = d3.scale.linear()\n        , getX = function(d) { return d.x }\n        , getY = function(d) { return d.y }\n        , getOpen = function(d) { return d.open }\n        , getClose = function(d) { return d.close }\n        , getHigh = function(d) { return d.high }\n        , getLow = function(d) { return d.low }\n        , forceX = []\n        , forceY = []\n        , padData     = false // If true, adds half a data points width to front and back, for lining up a line chart with a bar chart\n        , clipEdge = true\n        , color = nv.utils.defaultColor()\n        , interactive = false\n        , xDomain\n        , yDomain\n        , xRange\n        , yRange\n        , dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd', 'chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove')\n        ;\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    function chart(selection) {\n        selection.each(function(data) {\n            container = d3.select(this);\n            var availableWidth = nv.utils.availableWidth(width, container, margin),\n                availableHeight = nv.utils.availableHeight(height, container, margin);\n\n            nv.utils.initSVG(container);\n\n            // ohlc bar width.\n            var w = (availableWidth / data[0].values.length) * .9;\n\n            // Setup Scales\n            x.domain(xDomain || d3.extent(data[0].values.map(getX).concat(forceX) ));\n\n            if (padData)\n                x.range(xRange || [availableWidth * .5 / data[0].values.length, availableWidth * (data[0].values.length - .5)  / data[0].values.length ]);\n            else\n                x.range(xRange || [5 + w/2, availableWidth - w/2 - 5]);\n\n            y.domain(yDomain || [\n                    d3.min(data[0].values.map(getLow).concat(forceY)),\n                    d3.max(data[0].values.map(getHigh).concat(forceY))\n                ]\n            ).range(yRange || [availableHeight, 0]);\n\n            // If scale's domain don't have a range, slightly adjust to make one... so a chart can show a single data point\n            if (x.domain()[0] === x.domain()[1])\n                x.domain()[0] ?\n                    x.domain([x.domain()[0] - x.domain()[0] * 0.01, x.domain()[1] + x.domain()[1] * 0.01])\n                    : x.domain([-1,1]);\n\n            if (y.domain()[0] === y.domain()[1])\n                y.domain()[0] ?\n                    y.domain([y.domain()[0] + y.domain()[0] * 0.01, y.domain()[1] - y.domain()[1] * 0.01])\n                    : y.domain([-1,1]);\n\n            // Setup containers and skeleton of chart\n            var wrap = d3.select(this).selectAll('g.nv-wrap.nv-ohlcBar').data([data[0].values]);\n            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-ohlcBar');\n            var defsEnter = wrapEnter.append('defs');\n            var gEnter = wrapEnter.append('g');\n            var g = wrap.select('g');\n\n            gEnter.append('g').attr('class', 'nv-ticks');\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            container\n                .on('click', function(d,i) {\n                    dispatch.chartClick({\n                        data: d,\n                        index: i,\n                        pos: d3.event,\n                        id: id\n                    });\n                });\n\n            defsEnter.append('clipPath')\n                .attr('id', 'nv-chart-clip-path-' + id)\n                .append('rect');\n\n            wrap.select('#nv-chart-clip-path-' + id + ' rect')\n                .attr('width', availableWidth)\n                .attr('height', availableHeight);\n\n            g   .attr('clip-path', clipEdge ? 'url(#nv-chart-clip-path-' + id + ')' : '');\n\n            var ticks = wrap.select('.nv-ticks').selectAll('.nv-tick')\n                .data(function(d) { return d });\n            ticks.exit().remove();\n\n            ticks.enter().append('path')\n                .attr('class', function(d,i,j) { return (getOpen(d,i) > getClose(d,i) ? 'nv-tick negative' : 'nv-tick positive') + ' nv-tick-' + j + '-' + i })\n                .attr('d', function(d,i) {\n                    return 'm0,0l0,'\n                        + (y(getOpen(d,i))\n                            - y(getHigh(d,i)))\n                        + 'l'\n                        + (-w/2)\n                        + ',0l'\n                        + (w/2)\n                        + ',0l0,'\n                        + (y(getLow(d,i)) - y(getOpen(d,i)))\n                        + 'l0,'\n                        + (y(getClose(d,i))\n                            - y(getLow(d,i)))\n                        + 'l'\n                        + (w/2)\n                        + ',0l'\n                        + (-w/2)\n                        + ',0z';\n                })\n                .attr('transform', function(d,i) { return 'translate(' + x(getX(d,i)) + ',' + y(getHigh(d,i)) + ')'; })\n                .attr('fill', function(d,i) { return color[0]; })\n                .attr('stroke', function(d,i) { return color[0]; })\n                .attr('x', 0 )\n                .attr('y', function(d,i) {  return y(Math.max(0, getY(d,i))) })\n                .attr('height', function(d,i) { return Math.abs(y(getY(d,i)) - y(0)) });\n\n            // the bar colors are controlled by CSS currently\n            ticks.attr('class', function(d,i,j) {\n                return (getOpen(d,i) > getClose(d,i) ? 'nv-tick negative' : 'nv-tick positive') + ' nv-tick-' + j + '-' + i;\n            });\n\n            d3.transition(ticks)\n                .attr('transform', function(d,i) { return 'translate(' + x(getX(d,i)) + ',' + y(getHigh(d,i)) + ')'; })\n                .attr('d', function(d,i) {\n                    var w = (availableWidth / data[0].values.length) * .9;\n                    return 'm0,0l0,'\n                        + (y(getOpen(d,i))\n                            - y(getHigh(d,i)))\n                        + 'l'\n                        + (-w/2)\n                        + ',0l'\n                        + (w/2)\n                        + ',0l0,'\n                        + (y(getLow(d,i))\n                            - y(getOpen(d,i)))\n                        + 'l0,'\n                        + (y(getClose(d,i))\n                            - y(getLow(d,i)))\n                        + 'l'\n                        + (w/2)\n                        + ',0l'\n                        + (-w/2)\n                        + ',0z';\n                });\n        });\n\n        return chart;\n    }\n\n\n    //Create methods to allow outside functions to highlight a specific bar.\n    chart.highlightPoint = function(pointIndex, isHoverOver) {\n        chart.clearHighlights();\n        container.select(\".nv-ohlcBar .nv-tick-0-\" + pointIndex)\n            .classed(\"hover\", isHoverOver)\n        ;\n    };\n\n    chart.clearHighlights = function() {\n        container.select(\".nv-ohlcBar .nv-tick.hover\")\n            .classed(\"hover\", false)\n        ;\n    };\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:    {get: function(){return width;}, set: function(_){width=_;}},\n        height:   {get: function(){return height;}, set: function(_){height=_;}},\n        xScale:   {get: function(){return x;}, set: function(_){x=_;}},\n        yScale:   {get: function(){return y;}, set: function(_){y=_;}},\n        xDomain:  {get: function(){return xDomain;}, set: function(_){xDomain=_;}},\n        yDomain:  {get: function(){return yDomain;}, set: function(_){yDomain=_;}},\n        xRange:   {get: function(){return xRange;}, set: function(_){xRange=_;}},\n        yRange:   {get: function(){return yRange;}, set: function(_){yRange=_;}},\n        forceX:   {get: function(){return forceX;}, set: function(_){forceX=_;}},\n        forceY:   {get: function(){return forceY;}, set: function(_){forceY=_;}},\n        padData:  {get: function(){return padData;}, set: function(_){padData=_;}},\n        clipEdge: {get: function(){return clipEdge;}, set: function(_){clipEdge=_;}},\n        id:       {get: function(){return id;}, set: function(_){id=_;}},\n        interactive: {get: function(){return interactive;}, set: function(_){interactive=_;}},\n\n        x:     {get: function(){return getX;}, set: function(_){getX=_;}},\n        y:     {get: function(){return getY;}, set: function(_){getY=_;}},\n        open:  {get: function(){return getOpen();}, set: function(_){getOpen=_;}},\n        close: {get: function(){return getClose();}, set: function(_){getClose=_;}},\n        high:  {get: function(){return getHigh;}, set: function(_){getHigh=_;}},\n        low:   {get: function(){return getLow;}, set: function(_){getLow=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    != undefined ? _.top    : margin.top;\n            margin.right  = _.right  != undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom != undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   != undefined ? _.left   : margin.left;\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n        }}\n    });\n\n    nv.utils.initOptions(chart);\n    return chart;\n};\n// Code adapted from Jason Davies' \"Parallel Coordinates\"\n// http://bl.ocks.org/jasondavies/1341281\nnv.models.parallelCoordinates = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {top: 30, right: 0, bottom: 10, left: 0}\n        , width = null\n        , height = null\n        , availableWidth = null\n        , availableHeight = null\n        , x = d3.scale.ordinal()\n        , y = {}\n        , undefinedValuesLabel = \"undefined values\"\n        , dimensionData = []\n        , enabledDimensions = []\n        , dimensionNames = []\n        , displayBrush = true\n        , color = nv.utils.defaultColor()\n        , filters = []\n        , active = []\n        , dragging = []\n        , axisWithUndefinedValues = []\n        , lineTension = 1\n        , foreground\n        , background\n        , dimensions\n        , line = d3.svg.line()\n        , axis = d3.svg.axis()\n        , dispatch = d3.dispatch('brushstart', 'brush', 'brushEnd', 'dimensionsOrder', \"stateChange\", 'elementClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd', 'activeChanged')\n        ;\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    function chart(selection) {\n        renderWatch.reset();\n        selection.each(function(data) {\n            var container = d3.select(this);\n            availableWidth = nv.utils.availableWidth(width, container, margin);\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n\n            nv.utils.initSVG(container);\n\n           //Convert old data to new format (name, values)\n            if (data[0].values === undefined) {\n                var newData = [];\n                data.forEach(function (d) {\n                        var val = {};\n                        var key = Object.keys(d);\n                        key.forEach(function (k) { if (k !== \"name\") val[k] = d[k] });\n                        newData.push({ key: d.name, values: val });\n                });\n                data = newData;\n            }\n\n            var dataValues = data.map(function (d) {return d.values});\n            if (active.length === 0) {\n                active = data;\n            }; //set all active before first brush call\n            \n            dimensionNames = dimensionData.sort(function (a, b) { return a.currentPosition - b.currentPosition; }).map(function (d) { return d.key });\n            enabledDimensions = dimensionData.filter(function (d) { return !d.disabled; });\n            \n            // Setup Scales\n            x.rangePoints([0, availableWidth], 1).domain(enabledDimensions.map(function (d) { return d.key; }));\n\n            //Set as true if all values on an axis are missing.\n            // Extract the list of dimensions and create a scale for each.\n            var oldDomainMaxValue = {};\n            var displayMissingValuesline = false;\n            var currentTicks = [];\n            \n            dimensionNames.forEach(function(d) {\n                var extent = d3.extent(dataValues, function (p) { return +p[d]; });\n                var min = extent[0];\n                var max = extent[1];\n                var onlyUndefinedValues = false;\n                //If there is no values to display on an axis, set the extent to 0\n                if (isNaN(min) || isNaN(max)) {\n                    onlyUndefinedValues = true;\n                    min = 0;\n                    max = 0;\n                }\n                //Scale axis if there is only one value\n                if (min === max) {\n                    min = min - 1;\n                    max = max + 1;\n                }\n                var f = filters.filter(function (k) { return k.dimension == d; });\n                if (f.length !== 0) {\n                    //If there is only NaN values, keep the existing domain.\n                    if (onlyUndefinedValues) {\n                        min = y[d].domain()[0];\n                        max = y[d].domain()[1];\n                    }\n                        //If the brush extent is > max (< min), keep the extent value.\n                    else if (!f[0].hasOnlyNaN && displayBrush) {\n                        min = min > f[0].extent[0] ? f[0].extent[0] : min;\n                        max = max < f[0].extent[1] ? f[0].extent[1] : max;\n                    }\n                        //If there is NaN values brushed be sure the brush extent is on the domain.\n                    else if (f[0].hasNaN) {\n                        max = max < f[0].extent[1] ? f[0].extent[1] : max;\n                        oldDomainMaxValue[d] = y[d].domain()[1];\n                        displayMissingValuesline = true;\n                    }\n                }\n                //Use 90% of (availableHeight - 12) for the axis range, 12 reprensenting the space necessary to display \"undefined values\" text.\n                //The remaining 10% are used to display the missingValue line.\n                y[d] = d3.scale.linear()\n                    .domain([min, max])\n                    .range([(availableHeight - 12) * 0.9, 0]);\n\n                axisWithUndefinedValues = [];\n                y[d].brush = d3.svg.brush().y(y[d]).on('brushstart', brushstart).on('brush', brush).on('brushend', brushend);\n            });\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-parallelCoordinates').data([data]);\n            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-parallelCoordinates');\n            var gEnter = wrapEnter.append('g');\n            var g = wrap.select('g');\n\n            gEnter.append('g').attr('class', 'nv-parallelCoordinates background');\n            gEnter.append('g').attr('class', 'nv-parallelCoordinates foreground');\n            gEnter.append('g').attr('class', 'nv-parallelCoordinates missingValuesline');\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            line.interpolate('cardinal').tension(lineTension);\n            axis.orient('left');\n            var axisDrag = d3.behavior.drag()\n                        .on('dragstart', dragStart)\n                        .on('drag', dragMove)\n                        .on('dragend', dragEnd);\n\n            //Add missing value line at the bottom of the chart\n            var missingValuesline, missingValueslineText;\n            var step = x.range()[1] - x.range()[0];\n            step = isNaN(step) ? x.range()[0] : step;\n            if (!isNaN(step)) {\n                var lineData = [0 + step / 2, availableHeight - 12, availableWidth - step / 2, availableHeight - 12];\n                missingValuesline = wrap.select('.missingValuesline').selectAll('line').data([lineData]);\n                missingValuesline.enter().append('line');\n                missingValuesline.exit().remove();\n                missingValuesline.attr(\"x1\", function(d) { return d[0]; })\n                        .attr(\"y1\", function(d) { return d[1]; })\n                        .attr(\"x2\", function(d) { return d[2]; })\n                        .attr(\"y2\", function(d) { return d[3]; });\n    \n                //Add the text \"undefined values\" under the missing value line\n                missingValueslineText = wrap.select('.missingValuesline').selectAll('text').data([undefinedValuesLabel]);\n                missingValueslineText.append('text').data([undefinedValuesLabel]);\n                missingValueslineText.enter().append('text');\n                missingValueslineText.exit().remove();\n                missingValueslineText.attr(\"y\", availableHeight)\n                        //To have the text right align with the missingValues line, substract 92 representing the text size.\n                        .attr(\"x\", availableWidth - 92 - step / 2)\n                        .text(function(d) { return d; });\n            }\n            // Add grey background lines for context.\n            background = wrap.select('.background').selectAll('path').data(data);\n            background.enter().append('path');\n            background.exit().remove();\n            background.attr('d', path);\n\n            // Add blue foreground lines for focus.\n            foreground = wrap.select('.foreground').selectAll('path').data(data);\n            foreground.enter().append('path')\n            foreground.exit().remove();\n            foreground.attr('d', path)\n                .style(\"stroke-width\", function (d, i) {\n                if (isNaN(d.strokeWidth)) { d.strokeWidth = 1;} return d.strokeWidth;})\n                .attr('stroke', function (d, i) { return d.color || color(d, i); });\n            foreground.on(\"mouseover\", function (d, i) {\n                d3.select(this).classed('hover', true).style(\"stroke-width\", d.strokeWidth + 2 + \"px\").style(\"stroke-opacity\", 1);\n                dispatch.elementMouseover({\n                    label: d.name,\n                    color: d.color || color(d, i),\n                    values: d.values,\n                    dimensions: enabledDimensions\n                });\n\n            });\n            foreground.on(\"mouseout\", function (d, i) {\n                d3.select(this).classed('hover', false).style(\"stroke-width\", d.strokeWidth + \"px\").style(\"stroke-opacity\", 0.7);\n                dispatch.elementMouseout({\n                    label: d.name,\n                    index: i\n                });\n            });\n            foreground.on('mousemove', function (d, i) {\n                dispatch.elementMousemove();\n            });\n            foreground.on('click', function (d) {\n                dispatch.elementClick({\n                    id: d.id\n                });\n            });\n            // Add a group element for each dimension.\n            dimensions = g.selectAll('.dimension').data(enabledDimensions);\n            var dimensionsEnter = dimensions.enter().append('g').attr('class', 'nv-parallelCoordinates dimension');\n\n            dimensions.attr('transform', function(d) { return 'translate(' + x(d.key) + ',0)'; });\n            dimensionsEnter.append('g').attr('class', 'nv-axis');\n\n            // Add an axis and title.\n            dimensionsEnter.append('text')\n                .attr('class', 'nv-label')\n                .style(\"cursor\", \"move\")\n                .attr('dy', '-1em')\n                .attr('text-anchor', 'middle')\n                .on(\"mouseover\", function(d, i) {\n                    dispatch.elementMouseover({\n                        label: d.tooltip || d.key,\n                        color: d.color \n                    });\n                })\n                .on(\"mouseout\", function(d, i) {\n                    dispatch.elementMouseout({\n                        label: d.tooltip\n                    });\n                })\n                .on('mousemove', function (d, i) {\n                    dispatch.elementMousemove();\n                })\n                .call(axisDrag);\n\n            dimensionsEnter.append('g').attr('class', 'nv-brushBackground');\n            dimensions.exit().remove();\n            dimensions.select('.nv-label').text(function (d) { return d.key });\n\n            // Add and store a brush for each axis.\n            restoreBrush(displayBrush);\n\n            var actives = dimensionNames.filter(function (p) { return !y[p].brush.empty(); }),\n                    extents = actives.map(function (p) { return y[p].brush.extent(); });\n            var formerActive = active.slice(0);\n\n            //Restore active values\n            active = [];\n            foreground.style(\"display\", function (d) {\n                var isActive = actives.every(function (p, i) {\n                    if ((isNaN(d.values[p]) || isNaN(parseFloat(d.values[p]))) && extents[i][0] == y[p].brush.y().domain()[0]) {\n                        return true;\n                    }\n                    return (extents[i][0] <= d.values[p] && d.values[p] <= extents[i][1]) && !isNaN(parseFloat(d.values[p]));\n                });\n                if (isActive)\n                    active.push(d);\n                return !isActive ? \"none\" : null;\n\n            });\n\n            if (filters.length > 0 || !nv.utils.arrayEquals(active, formerActive)) {\n               dispatch.activeChanged(active);\n            }\n\n            // Returns the path for a given data point.\n            function path(d) {\n                return line(enabledDimensions.map(function (p) {\n                    //If value if missing, put the value on the missing value line\n                    if (isNaN(d.values[p.key]) || isNaN(parseFloat(d.values[p.key])) || displayMissingValuesline) {\n                        var domain = y[p.key].domain();\n                        var range = y[p.key].range();\n                        var min = domain[0] - (domain[1] - domain[0]) / 9;\n\n                        //If it's not already the case, allow brush to select undefined values\n                        if (axisWithUndefinedValues.indexOf(p.key) < 0) {\n\n                            var newscale = d3.scale.linear().domain([min, domain[1]]).range([availableHeight - 12, range[1]]);\n                            y[p.key].brush.y(newscale);\n                            axisWithUndefinedValues.push(p.key);\n                        }\n                        if (isNaN(d.values[p.key]) || isNaN(parseFloat(d.values[p.key]))) {\n                            return [x(p.key), y[p.key](min)];\n                        }\n                    }\n\n                    //If parallelCoordinate contain missing values show the missing values line otherwise, hide it.\n                    if (missingValuesline !== undefined) {\n                        if (axisWithUndefinedValues.length > 0 || displayMissingValuesline) {\n                            missingValuesline.style(\"display\", \"inline\");\n                            missingValueslineText.style(\"display\", \"inline\");\n                        } else {\n                            missingValuesline.style(\"display\", \"none\");\n                            missingValueslineText.style(\"display\", \"none\");\n                        }\n                    }\n                    return [x(p.key), y[p.key](d.values[p.key])];\n                }));\n            }\n\n            function restoreBrush(visible) {\n                filters.forEach(function (f) {\n                    //If filter brushed NaN values, keep the brush on the bottom of the axis.\n                    var brushDomain = y[f.dimension].brush.y().domain();\n                    if (f.hasOnlyNaN) {\n                        f.extent[1] = (y[f.dimension].domain()[1] - brushDomain[0]) * (f.extent[1] - f.extent[0]) / (oldDomainMaxValue[f.dimension] - f.extent[0]) + brushDomain[0];\n                    }\n                    if (f.hasNaN) {\n                        f.extent[0] = brushDomain[0];\n                    }\n                    if (visible)\n                        y[f.dimension].brush.extent(f.extent);\n                });\n                \n                dimensions.select('.nv-brushBackground')\n                    .each(function (d) {\n                        d3.select(this).call(y[d.key].brush);\n\n                    })\n                    .selectAll('rect')\n                    .attr('x', -8)\n                    .attr('width', 16);\n                \n                updateTicks();\n            }\n            \n            // Handles a brush event, toggling the display of foreground lines.\n            function brushstart() {\n                //If brush aren't visible, show it before brushing again.\n                if (displayBrush === false) {\n                    displayBrush = true;\n                    restoreBrush(true);\n                }\n            }\n            \n            // Handles a brush event, toggling the display of foreground lines.\n            function brush() {\n                actives = dimensionNames.filter(function (p) { return !y[p].brush.empty(); });\n                extents = actives.map(function(p) { return y[p].brush.extent(); });\n\n                filters = []; //erase current filters\n                actives.forEach(function(d,i) {\n                    filters[i] = {\n                        dimension: d,\n                        extent: extents[i],\n                        hasNaN: false,\n                        hasOnlyNaN: false\n                    }\n                });\n\n                active = []; //erase current active list\n                foreground.style('display', function(d) {\n                    var isActive = actives.every(function(p, i) {\n                        if ((isNaN(d.values[p]) || isNaN(parseFloat(d.values[p]))) && extents[i][0] == y[p].brush.y().domain()[0]) return true;\n                        return (extents[i][0] <= d.values[p] && d.values[p] <= extents[i][1]) && !isNaN(parseFloat(d.values[p]));\n                    });\n                    if (isActive) active.push(d);\n                    return isActive ? null : 'none';\n                });\n                \n                updateTicks();\n                \n                dispatch.brush({\n                    filters: filters,\n                    active: active\n                });\n            }\n            function brushend() {\n                var hasActiveBrush = actives.length > 0 ? true : false;\n                filters.forEach(function (f) {\n                    if (f.extent[0] === y[f.dimension].brush.y().domain()[0] && axisWithUndefinedValues.indexOf(f.dimension) >= 0)\n                        f.hasNaN = true;\n                    if (f.extent[1] < y[f.dimension].domain()[0])\n                        f.hasOnlyNaN = true;\n                });\n                dispatch.brushEnd(active, hasActiveBrush);\n            }           \n            function updateTicks() {\n                dimensions.select('.nv-axis')\n                    .each(function (d, i) {\n                        var f = filters.filter(function (k) { return k.dimension == d.key; });\n                        currentTicks[d.key] = y[d.key].domain();\n                        \n                        //If brush are available, display brush extent\n                        if (f.length != 0 && displayBrush)\n                        {\n                            currentTicks[d.key] = [];\n                            if (f[0].extent[1] > y[d.key].domain()[0]) \n                                currentTicks[d.key] = [f[0].extent[1]];\n                            if (f[0].extent[0] >= y[d.key].domain()[0])\n                                currentTicks[d.key].push(f[0].extent[0]);    \n                        }\n                            \n                        d3.select(this).call(axis.scale(y[d.key]).tickFormat(d.format).tickValues(currentTicks[d.key]));\n                });\n            }\n            function dragStart(d) {\n                dragging[d.key] = this.parentNode.__origin__ = x(d.key);\n                background.attr(\"visibility\", \"hidden\");\n            }\n            function dragMove(d) {\n                dragging[d.key] = Math.min(availableWidth, Math.max(0, this.parentNode.__origin__ += d3.event.x));\n                foreground.attr(\"d\", path);\n                enabledDimensions.sort(function (a, b) { return dimensionPosition(a.key) - dimensionPosition(b.key); });\n                enabledDimensions.forEach(function (d, i) { return d.currentPosition = i; });\n                x.domain(enabledDimensions.map(function (d) { return d.key; }));\n                dimensions.attr(\"transform\", function(d) { return \"translate(\" + dimensionPosition(d.key) + \")\"; });\n            }\n            function dragEnd(d, i) {\n                delete this.parentNode.__origin__;\n                delete dragging[d.key];\n                d3.select(this.parentNode).attr(\"transform\", \"translate(\" + x(d.key) + \")\");\n                foreground\n                  .attr(\"d\", path);\n                background\n                  .attr(\"d\", path)\n                  .attr(\"visibility\", null);\n\n                dispatch.dimensionsOrder(enabledDimensions);\n            }\n            function dimensionPosition(d) {\n                var v = dragging[d];\n                return v == null ? x(d) : v;\n            }\n        });\n        return chart;\n    }\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:         {get: function(){return width;},           set: function(_){width= _;}},\n        height:        {get: function(){return height;},          set: function(_){height= _;}},\n        dimensionData: { get: function () { return dimensionData; }, set: function (_) { dimensionData = _; } },\n        displayBrush: { get: function () { return displayBrush; }, set: function (_) { displayBrush = _; } },\n        filters: { get: function () { return filters; }, set: function (_) { filters = _; } },\n        active: { get: function () { return active; }, set: function (_) { active = _; } },\n        lineTension:   {get: function(){return lineTension;},     set: function(_){lineTension = _;}},\n        undefinedValuesLabel : {get: function(){return undefinedValuesLabel;}, set: function(_){undefinedValuesLabel=_;}},\n        \n        // deprecated options\n        dimensions: {get: function () { return dimensionData.map(function (d){return d.key}); }, set: function (_) {\n            // deprecated after 1.8.1\n            nv.deprecated('dimensions', 'use dimensionData instead');\n            if (dimensionData.length === 0) {\n                _.forEach(function (k) { dimensionData.push({ key: k }) })\n            } else {\n                _.forEach(function (k, i) { dimensionData[i].key= k })\n            }\n        }},\n        dimensionNames: {get: function () { return dimensionData.map(function (d){return d.key}); }, set: function (_) {\n            // deprecated after 1.8.1\n            nv.deprecated('dimensionNames', 'use dimensionData instead');\n            dimensionNames = [];\n            if (dimensionData.length === 0) {\n                _.forEach(function (k) { dimensionData.push({ key: k }) })\n            } else {\n                _.forEach(function (k, i) { dimensionData[i].key = k })\n            }\n \n        }},\n        dimensionFormats: {get: function () { return dimensionData.map(function (d) { return d.format }); }, set: function (_) {\n            // deprecated after 1.8.1\n            nv.deprecated('dimensionFormats', 'use dimensionData instead');\n            if (dimensionData.length === 0) {\n                _.forEach(function (f) { dimensionData.push({ format: f }) })\n            } else {\n                _.forEach(function (f, i) { dimensionData[i].format = f })\n            }\n\n        }},\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    =  _.top    !== undefined ? _.top    : margin.top;\n            margin.right  =  _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom =  _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   =  _.left   !== undefined ? _.left   : margin.left;\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n        }}\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n};\nnv.models.parallelCoordinatesChart = function () {\n        \"use strict\";\n        //============================================================\n        // Public Variables with Default Settings\n        //------------------------------------------------------------\n\n        var parallelCoordinates = nv.models.parallelCoordinates()\n        var legend = nv.models.legend()\n        var tooltip = nv.models.tooltip();\n        var dimensionTooltip = nv.models.tooltip();\n\n        var margin = { top: 0, right: 0, bottom: 0, left: 0 }\n        , marginTop = null\n        , width = null\n        , height = null\n        , showLegend = true\n        , color = nv.utils.defaultColor()\n        , state = nv.utils.state()\n        , dimensionData = []\n        , displayBrush = true\n        , defaultState = null\n        , noData = null\n        , nanValue = \"undefined\"\n        , dispatch = d3.dispatch('dimensionsOrder', 'brushEnd', 'stateChange', 'changeState', 'renderEnd')\n        , controlWidth = function () { return showControls ? 180 : 0 }\n        ;\n\n\t    //============================================================\n\n\t\t//============================================================\n        // Private Variables\n        //------------------------------------------------------------\n\n        var renderWatch = nv.utils.renderWatch(dispatch);\n\n        var stateGetter = function(data) {\n            return function() {\n                return {\n                    active: data.map(function(d) { return !d.disabled })\n                };\n            }\n        };\n\n        var stateSetter = function(data) {\n            return function(state) {\n                if(state.active !== undefined) {\n                    data.forEach(function(series, i) {\n                        series.disabled = !state.active[i];\n                    });\n                }\n            }\n        };\n\n        tooltip.contentGenerator(function(data) {\n            var str = '<table><thead><tr><td class=\"legend-color-guide\"><div style=\"background-color:' + data.color + '\"></div></td><td><strong>' + data.key + '</strong></td></tr></thead>';\n            if(data.series.length !== 0)\n            {\n                str = str + '<tbody><tr><td height =\"10px\"></td></tr>';\n                data.series.forEach(function(d){\n                    str = str + '<tr><td class=\"legend-color-guide\"><div style=\"background-color:' + d.color + '\"></div></td><td class=\"key\">' + d.key + '</td><td class=\"value\">' + d.value + '</td></tr>';\n                });\n                str = str + '</tbody>';\n            }\n            str = str + '</table>';\n            return str;\n        });\n\n        //============================================================\n        // Chart function\n        //------------------------------------------------------------\n\n        function chart(selection) {\n            renderWatch.reset();\n            renderWatch.models(parallelCoordinates);\n\n            selection.each(function(data) {\n                var container = d3.select(this);\n                nv.utils.initSVG(container);\n\n                var that = this;\n\n                var availableWidth = nv.utils.availableWidth(width, container, margin),\n                    availableHeight = nv.utils.availableHeight(height, container, margin);\n\n                chart.update = function() { container.call(chart); };\n                chart.container = this;\n\n                state.setter(stateSetter(dimensionData), chart.update)\n                    .getter(stateGetter(dimensionData))\n                    .update();\n\n                //set state.disabled\n                state.disabled = dimensionData.map(function (d) { return !!d.disabled });\n\n                //Keep dimensions position in memory\n                dimensionData = dimensionData.map(function (d) {d.disabled = !!d.disabled; return d});\n                dimensionData.forEach(function (d, i) {\n                    d.originalPosition = isNaN(d.originalPosition) ? i : d.originalPosition;\n                    d.currentPosition = isNaN(d.currentPosition) ? i : d.currentPosition;\n                });\n\n               if (!defaultState) {\n                    var key;\n                    defaultState = {};\n                    for(key in state) {\n                        if(state[key] instanceof Array)\n                            defaultState[key] = state[key].slice(0);\n                        else\n                            defaultState[key] = state[key];\n                    }\n                }\n\n                // Display No Data message if there's nothing to show.\n                if(!data || !data.length) {\n                    nv.utils.noData(chart, container);\n                    return chart;\n                } else {\n                    container.selectAll('.nv-noData').remove();\n                }\n\n                //------------------------------------------------------------\n                // Setup containers and skeleton of chart\n\n                var wrap = container.selectAll('g.nv-wrap.nv-parallelCoordinatesChart').data([data]);\n                var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-parallelCoordinatesChart').append('g');\n\n                var g = wrap.select('g');\n\n                gEnter.append('g').attr('class', 'nv-parallelCoordinatesWrap');\n                gEnter.append('g').attr('class', 'nv-legendWrap');\n\n                g.select(\"rect\")\n                    .attr(\"width\", availableWidth)\n                    .attr(\"height\", (availableHeight > 0) ? availableHeight : 0);\n\n                // Legend\n                if (!showLegend) {\n                    g.select('.nv-legendWrap').selectAll('*').remove();\n                } else {\n                    legend.width(availableWidth)\n                        .color(function (d) { return \"rgb(188,190,192)\"; });\n\n                    g.select('.nv-legendWrap')\n                        .datum(dimensionData.sort(function (a, b) { return a.originalPosition - b.originalPosition; }))\n                        .call(legend);\n\n                    if (!marginTop && legend.height() !== margin.top) {\n                        margin.top = legend.height();\n                        availableHeight = nv.utils.availableHeight(height, container, margin);\n                    }\n                    wrap.select('.nv-legendWrap')\n                       .attr('transform', 'translate( 0 ,' + (-margin.top) + ')');\n                }\n                wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n                // Main Chart Component(s)\n                parallelCoordinates\n                    .width(availableWidth)\n                    .height(availableHeight)\n                    .dimensionData(dimensionData)\n                    .displayBrush(displayBrush);\n\n\t\t        var parallelCoordinatesWrap = g.select('.nv-parallelCoordinatesWrap ')\n                  .datum(data);\n\n\t\t        parallelCoordinatesWrap.transition().call(parallelCoordinates);\n\n\t\t\t\t//============================================================\n                // Event Handling/Dispatching (in chart's scope)\n                //------------------------------------------------------------\n                //Display reset brush button\n\t\t        parallelCoordinates.dispatch.on('brushEnd', function (active, hasActiveBrush) {\n\t\t            if (hasActiveBrush) {\n\t\t                displayBrush = true;\n\t\t                dispatch.brushEnd(active);\n\t\t            } else {\n\n\t\t                displayBrush = false;\n\t\t            }\n\t\t        });\n\n\t\t        legend.dispatch.on('stateChange', function(newState) {\n\t\t            for(var key in newState) {\n\t\t                state[key] = newState[key];\n\t\t            }\n\t\t            dispatch.stateChange(state);\n\t\t            chart.update();\n\t\t        });\n\n                //Update dimensions order and display reset sorting button\n\t\t        parallelCoordinates.dispatch.on('dimensionsOrder', function (e) {\n\t\t            dimensionData.sort(function (a, b) { return a.currentPosition - b.currentPosition; });\n\t\t            var isSorted = false;\n\t\t            dimensionData.forEach(function (d, i) {\n\t\t                d.currentPosition = i;\n\t\t                if (d.currentPosition !== d.originalPosition)\n\t\t                    isSorted = true;\n\t\t            });\n\t\t            dispatch.dimensionsOrder(dimensionData, isSorted);\n\t\t        });\n\n\t\t\t\t// Update chart from a state object passed to event handler\n                dispatch.on('changeState', function (e) {\n\n                    if (typeof e.disabled !== 'undefined') {\n                        dimensionData.forEach(function (series, i) {\n                            series.disabled = e.disabled[i];\n                        });\n                        state.disabled = e.disabled;\n                    }\n                    chart.update();\n                });\n            });\n\n            renderWatch.renderEnd('parraleleCoordinateChart immediate');\n            return chart;\n        }\n\n\t\t//============================================================\n        // Event Handling/Dispatching (out of chart's scope)\n        //------------------------------------------------------------\n\n        parallelCoordinates.dispatch.on('elementMouseover.tooltip', function (evt) {\n            var tp = {\n                key: evt.label,\n                color: evt.color,\n                series: []\n             }\n            if(evt.values){\n                Object.keys(evt.values).forEach(function (d) {\n                    var dim = evt.dimensions.filter(function (dd) {return dd.key === d;})[0];\n                    if(dim){\n                        var v;\n                        if (isNaN(evt.values[d]) || isNaN(parseFloat(evt.values[d]))) {\n                            v = nanValue;\n                        } else {\n                            v = dim.format(evt.values[d]);\n                        }\n                        tp.series.push({ idx: dim.currentPosition, key: d, value: v, color: dim.color });\n                    }\n                });\n                tp.series.sort(function(a,b) {return a.idx - b.idx});\n             }\n            tooltip.data(tp).hidden(false);\n        });\n\n        parallelCoordinates.dispatch.on('elementMouseout.tooltip', function(evt) {\n            tooltip.hidden(true)\n        });\n\n        parallelCoordinates.dispatch.on('elementMousemove.tooltip', function () {\n            tooltip();\n        });\n\t\t //============================================================\n        // Expose Public Variables\n        //------------------------------------------------------------\n\n\t\t// expose chart's sub-components\n        chart.dispatch = dispatch;\n        chart.parallelCoordinates = parallelCoordinates;\n        chart.legend = legend;\n        chart.tooltip = tooltip;\n        chart.options = nv.utils.optionsFunc.bind(chart);\n\n        chart._options = Object.create({}, {\n            // simple options, just get/set the necessary values\n            width: { get: function () { return width; }, set: function (_) { width = _; } },\n            height: { get: function () { return height; }, set: function (_) { height = _; } },\n            showLegend: { get: function () { return showLegend; }, set: function (_) { showLegend = _; } },\n            defaultState: { get: function () { return defaultState; }, set: function (_) { defaultState = _; } },\n            dimensionData: { get: function () { return dimensionData; }, set: function (_) { dimensionData = _; } },\n            displayBrush: { get: function () { return displayBrush; }, set: function (_) { displayBrush = _; } },\n            noData: { get: function () { return noData; }, set: function (_) { noData = _; } },\n            nanValue: { get: function () { return nanValue; }, set: function (_) { nanValue = _; } },\n\n            // options that require extra logic in the setter\n            margin: {\n                get: function () { return margin; },\n                set: function (_) {\n                    if (_.top !== undefined) {\n                        margin.top = _.top;\n                        marginTop = _.top;\n                    }\n                    margin.right = _.right !== undefined ? _.right : margin.right;\n                    margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n                    margin.left = _.left !== undefined ? _.left : margin.left;\n                }\n            },\n            color: {get: function(){return color;}, set: function(_){\n                    color = nv.utils.getColor(_);\n                    legend.color(color);\n                    parallelCoordinates.color(color);\n                }}\n        });\n\n        nv.utils.inheritOptions(chart, parallelCoordinates);\n        nv.utils.initOptions(chart);\n\n        return chart;\n    };\nnv.models.pie = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n        , width = 500\n        , height = 500\n        , getX = function(d) { return d.x }\n        , getY = function(d) { return d.y }\n        , id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n        , container = null\n        , color = nv.utils.defaultColor()\n        , valueFormat = d3.format(',.2f')\n        , showLabels = true\n        , labelsOutside = false\n        , labelType = \"key\"\n        , labelThreshold = .02 //if slice percentage is under this, don't show label\n        , donut = false\n        , title = false\n        , growOnHover = true\n        , titleOffset = 0\n        , labelSunbeamLayout = false\n        , startAngle = false\n        , padAngle = false\n        , endAngle = false\n        , cornerRadius = 0\n        , donutRatio = 0.5\n        , duration = 250\n        , arcsRadius = []\n        , dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd')\n        ;\n\n    var arcs = [];\n    var arcsOver = [];\n\n    //============================================================\n    // chart function\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    function chart(selection) {\n        renderWatch.reset();\n        selection.each(function(data) {\n            var availableWidth = width - margin.left - margin.right\n                , availableHeight = height - margin.top - margin.bottom\n                , radius = Math.min(availableWidth, availableHeight) / 2\n                , arcsRadiusOuter = []\n                , arcsRadiusInner = []\n                ;\n\n            container = d3.select(this)\n            if (arcsRadius.length === 0) {\n                var outer = radius - radius / 5;\n                var inner = donutRatio * radius;\n                for (var i = 0; i < data[0].length; i++) {\n                    arcsRadiusOuter.push(outer);\n                    arcsRadiusInner.push(inner);\n                }\n            } else {\n                if(growOnHover){\n                    arcsRadiusOuter = arcsRadius.map(function (d) { return (d.outer - d.outer / 5) * radius; });\n                    arcsRadiusInner = arcsRadius.map(function (d) { return (d.inner - d.inner / 5) * radius; });\n                    donutRatio = d3.min(arcsRadius.map(function (d) { return (d.inner - d.inner / 5); }));\n                } else {\n                    arcsRadiusOuter = arcsRadius.map(function (d) { return d.outer * radius; });\n                    arcsRadiusInner = arcsRadius.map(function (d) { return d.inner * radius; });\n                    donutRatio = d3.min(arcsRadius.map(function (d) { return d.inner; }));\n                }\n            }\n            nv.utils.initSVG(container);\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('.nv-wrap.nv-pie').data(data);\n            var wrapEnter = wrap.enter().append('g').attr('class','nvd3 nv-wrap nv-pie nv-chart-' + id);\n            var gEnter = wrapEnter.append('g');\n            var g = wrap.select('g');\n            var g_pie = gEnter.append('g').attr('class', 'nv-pie');\n            gEnter.append('g').attr('class', 'nv-pieLabels');\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n            g.select('.nv-pie').attr('transform', 'translate(' + availableWidth / 2 + ',' + availableHeight / 2 + ')');\n            g.select('.nv-pieLabels').attr('transform', 'translate(' + availableWidth / 2 + ',' + availableHeight / 2 + ')');\n\n            //\n            container.on('click', function(d,i) {\n                dispatch.chartClick({\n                    data: d,\n                    index: i,\n                    pos: d3.event,\n                    id: id\n                });\n            });\n\n            arcs = [];\n            arcsOver = [];\n            for (var i = 0; i < data[0].length; i++) {\n\n                var arc = d3.svg.arc().outerRadius(arcsRadiusOuter[i]);\n                var arcOver = d3.svg.arc().outerRadius(arcsRadiusOuter[i] + 5);\n\n                if (startAngle !== false) {\n                    arc.startAngle(startAngle);\n                    arcOver.startAngle(startAngle);\n                }\n                if (endAngle !== false) {\n                    arc.endAngle(endAngle);\n                    arcOver.endAngle(endAngle);\n                }\n                if (donut) {\n                    arc.innerRadius(arcsRadiusInner[i]);\n                    arcOver.innerRadius(arcsRadiusInner[i]);\n                }\n\n                if (arc.cornerRadius && cornerRadius) {\n                    arc.cornerRadius(cornerRadius);\n                    arcOver.cornerRadius(cornerRadius);\n                }\n\n                arcs.push(arc);\n                arcsOver.push(arcOver);\n            }\n\n            // Setup the Pie chart and choose the data element\n            var pie = d3.layout.pie()\n                .sort(null)\n                .value(function(d) { return d.disabled ? 0 : getY(d) });\n\n            // padAngle added in d3 3.5\n            if (pie.padAngle && padAngle) {\n                pie.padAngle(padAngle);\n            }\n\n            // if title is specified and donut, put it in the middle\n            if (donut && title) {\n                g_pie.append(\"text\").attr('class', 'nv-pie-title');\n\n                wrap.select('.nv-pie-title')\n                    .style(\"text-anchor\", \"middle\")\n                    .text(function (d) {\n                        return title;\n                    })\n                    .style(\"font-size\", (Math.min(availableWidth, availableHeight)) * donutRatio * 2 / (title.length + 2) + \"px\")\n                    .attr(\"dy\", \"0.35em\") // trick to vertically center text\n                    .attr('transform', function(d, i) {\n                        return 'translate(0, '+ titleOffset + ')';\n                    });\n            }\n\n            var slices = wrap.select('.nv-pie').selectAll('.nv-slice').data(pie);\n            var pieLabels = wrap.select('.nv-pieLabels').selectAll('.nv-label').data(pie);\n\n            slices.exit().remove();\n            pieLabels.exit().remove();\n\n            var ae = slices.enter().append('g');\n            ae.attr('class', 'nv-slice');\n            ae.on('mouseover', function(d, i) {\n                d3.select(this).classed('hover', true);\n                if (growOnHover) {\n                    d3.select(this).select(\"path\").transition()\n                        .duration(70)\n                        .attr(\"d\", arcsOver[i]);\n                }\n                dispatch.elementMouseover({\n                    data: d.data,\n                    index: i,\n                    color: d3.select(this).style(\"fill\"),\n                    percent: (d.endAngle - d.startAngle) / (2 * Math.PI)\n                });\n            });\n            ae.on('mouseout', function(d, i) {\n                d3.select(this).classed('hover', false);\n                if (growOnHover) {\n                    d3.select(this).select(\"path\").transition()\n                        .duration(50)\n                        .attr(\"d\", arcs[i]);\n                }\n                dispatch.elementMouseout({data: d.data, index: i});\n            });\n            ae.on('mousemove', function(d, i) {\n                dispatch.elementMousemove({data: d.data, index: i});\n            });\n            ae.on('click', function(d, i) {\n                var element = this;\n                dispatch.elementClick({\n                    data: d.data,\n                    index: i,\n                    color: d3.select(this).style(\"fill\"),\n                    event: d3.event,\n                    element: element\n                });\n            });\n            ae.on('dblclick', function(d, i) {\n                dispatch.elementDblClick({\n                    data: d.data,\n                    index: i,\n                    color: d3.select(this).style(\"fill\")\n                });\n            });\n\n            slices.attr('fill', function(d,i) { return color(d.data, i); });\n            slices.attr('stroke', function(d,i) { return color(d.data, i); });\n\n            var paths = ae.append('path').each(function(d) {\n                this._current = d;\n            });\n\n            slices.select('path')\n                .transition()\n                .duration(duration)\n                .attr('d', function (d, i) { return arcs[i](d); })\n                .attrTween('d', arcTween);\n\n            if (showLabels) {\n                // This does the normal label\n                var labelsArc = [];\n                for (var i = 0; i < data[0].length; i++) {\n                    labelsArc.push(arcs[i]);\n\n                    if (labelsOutside) {\n                        if (donut) {\n                            labelsArc[i] = d3.svg.arc().outerRadius(arcs[i].outerRadius());\n                            if (startAngle !== false) labelsArc[i].startAngle(startAngle);\n                            if (endAngle !== false) labelsArc[i].endAngle(endAngle);\n                        }\n                    } else if (!donut) {\n                            labelsArc[i].innerRadius(0);\n                    }\n                }\n\n                pieLabels.enter().append(\"g\").classed(\"nv-label\",true).each(function(d,i) {\n                    var group = d3.select(this);\n\n                    group.attr('transform', function (d, i) {\n                        if (labelSunbeamLayout) {\n                            d.outerRadius = arcsRadiusOuter[i] + 10; // Set Outer Coordinate\n                            d.innerRadius = arcsRadiusOuter[i] + 15; // Set Inner Coordinate\n                            var rotateAngle = (d.startAngle + d.endAngle) / 2 * (180 / Math.PI);\n                            if ((d.startAngle + d.endAngle) / 2 < Math.PI) {\n                                rotateAngle -= 90;\n                            } else {\n                                rotateAngle += 90;\n                            }\n                            return 'translate(' + labelsArc[i].centroid(d) + ') rotate(' + rotateAngle + ')';\n                        } else {\n                            d.outerRadius = radius + 10; // Set Outer Coordinate\n                            d.innerRadius = radius + 15; // Set Inner Coordinate\n                            return 'translate(' + labelsArc[i].centroid(d) + ')'\n                        }\n                    });\n\n                    group.append('rect')\n                        .style('stroke', '#fff')\n                        .style('fill', '#fff')\n                        .attr(\"rx\", 3)\n                        .attr(\"ry\", 3);\n\n                    group.append('text')\n                        .style('text-anchor', labelSunbeamLayout ? ((d.startAngle + d.endAngle) / 2 < Math.PI ? 'start' : 'end') : 'middle') //center the text on it's origin or begin/end if orthogonal aligned\n                        .style('fill', '#000')\n                });\n\n                var labelLocationHash = {};\n                var avgHeight = 14;\n                var avgWidth = 140;\n                var createHashKey = function(coordinates) {\n                    return Math.floor(coordinates[0]/avgWidth) * avgWidth + ',' + Math.floor(coordinates[1]/avgHeight) * avgHeight;\n                };\n                var getSlicePercentage = function(d) {\n                    return (d.endAngle - d.startAngle) / (2 * Math.PI);\n                };\n\n                pieLabels.watchTransition(renderWatch, 'pie labels').attr('transform', function (d, i) {\n                    if (labelSunbeamLayout) {\n                        d.outerRadius = arcsRadiusOuter[i] + 10; // Set Outer Coordinate\n                        d.innerRadius = arcsRadiusOuter[i] + 15; // Set Inner Coordinate\n                        var rotateAngle = (d.startAngle + d.endAngle) / 2 * (180 / Math.PI);\n                        if ((d.startAngle + d.endAngle) / 2 < Math.PI) {\n                            rotateAngle -= 90;\n                        } else {\n                            rotateAngle += 90;\n                        }\n                        return 'translate(' + labelsArc[i].centroid(d) + ') rotate(' + rotateAngle + ')';\n                    } else {\n                        d.outerRadius = radius + 10; // Set Outer Coordinate\n                        d.innerRadius = radius + 15; // Set Inner Coordinate\n\n                        /*\n                        Overlapping pie labels are not good. What this attempts to do is, prevent overlapping.\n                        Each label location is hashed, and if a hash collision occurs, we assume an overlap.\n                        Adjust the label's y-position to remove the overlap.\n                        */\n                        var center = labelsArc[i].centroid(d);\n                        var percent = getSlicePercentage(d);\n                        if (d.value && percent >= labelThreshold) {\n                            var hashKey = createHashKey(center);\n                            if (labelLocationHash[hashKey]) {\n                                center[1] -= avgHeight;\n                            }\n                            labelLocationHash[createHashKey(center)] = true;\n                        }\n                        return 'translate(' + center + ')'\n                    }\n                });\n\n                pieLabels.select(\".nv-label text\")\n                    .style('text-anchor', function(d,i) {\n                        //center the text on it's origin or begin/end if orthogonal aligned\n                        return labelSunbeamLayout ? ((d.startAngle + d.endAngle) / 2 < Math.PI ? 'start' : 'end') : 'middle';\n                    })\n                    .text(function(d, i) {\n                        var percent = getSlicePercentage(d);\n                        var label = '';\n                        if (!d.value || percent < labelThreshold) return '';\n\n                        if(typeof labelType === 'function') {\n                            label = labelType(d, i, {\n                                'key': getX(d.data),\n                                'value': getY(d.data),\n                                'percent': valueFormat(percent)\n                            });\n                        } else {\n                            switch (labelType) {\n                                case 'key':\n                                    label = getX(d.data);\n                                    break;\n                                case 'value':\n                                    label = valueFormat(getY(d.data));\n                                    break;\n                                case 'percent':\n                                    label = d3.format('%')(percent);\n                                    break;\n                            }\n                        }\n                        return label;\n                    })\n                ;\n            }\n\n\n            // Computes the angle of an arc, converting from radians to degrees.\n            function angle(d) {\n                var a = (d.startAngle + d.endAngle) * 90 / Math.PI - 90;\n                return a > 90 ? a - 180 : a;\n            }\n\n            function arcTween(a, idx) {\n                a.endAngle = isNaN(a.endAngle) ? 0 : a.endAngle;\n                a.startAngle = isNaN(a.startAngle) ? 0 : a.startAngle;\n                if (!donut) a.innerRadius = 0;\n                var i = d3.interpolate(this._current, a);\n                this._current = i(0);\n                return function (t) {\n                    return arcs[idx](i(t));\n                };\n            }\n        });\n\n        renderWatch.renderEnd('pie immediate');\n        return chart;\n    }\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        arcsRadius: { get: function () { return arcsRadius; }, set: function (_) { arcsRadius = _; } },\n        width:      {get: function(){return width;}, set: function(_){width=_;}},\n        height:     {get: function(){return height;}, set: function(_){height=_;}},\n        showLabels: {get: function(){return showLabels;}, set: function(_){showLabels=_;}},\n        title:      {get: function(){return title;}, set: function(_){title=_;}},\n        titleOffset:    {get: function(){return titleOffset;}, set: function(_){titleOffset=_;}},\n        labelThreshold: {get: function(){return labelThreshold;}, set: function(_){labelThreshold=_;}},\n        valueFormat:    {get: function(){return valueFormat;}, set: function(_){valueFormat=_;}},\n        x:          {get: function(){return getX;}, set: function(_){getX=_;}},\n        id:         {get: function(){return id;}, set: function(_){id=_;}},\n        endAngle:   {get: function(){return endAngle;}, set: function(_){endAngle=_;}},\n        startAngle: {get: function(){return startAngle;}, set: function(_){startAngle=_;}},\n        padAngle:   {get: function(){return padAngle;}, set: function(_){padAngle=_;}},\n        cornerRadius: {get: function(){return cornerRadius;}, set: function(_){cornerRadius=_;}},\n        donutRatio:   {get: function(){return donutRatio;}, set: function(_){donutRatio=_;}},\n        labelsOutside: {get: function(){return labelsOutside;}, set: function(_){labelsOutside=_;}},\n        labelSunbeamLayout: {get: function(){return labelSunbeamLayout;}, set: function(_){labelSunbeamLayout=_;}},\n        donut:              {get: function(){return donut;}, set: function(_){donut=_;}},\n        growOnHover:        {get: function(){return growOnHover;}, set: function(_){growOnHover=_;}},\n\n        // depreciated after 1.7.1\n        pieLabelsOutside: {get: function(){return labelsOutside;}, set: function(_){\n            labelsOutside=_;\n            nv.deprecated('pieLabelsOutside', 'use labelsOutside instead');\n        }},\n        // depreciated after 1.7.1\n        donutLabelsOutside: {get: function(){return labelsOutside;}, set: function(_){\n            labelsOutside=_;\n            nv.deprecated('donutLabelsOutside', 'use labelsOutside instead');\n        }},\n        // deprecated after 1.7.1\n        labelFormat: {get: function(){ return valueFormat;}, set: function(_) {\n            valueFormat=_;\n            nv.deprecated('labelFormat','use valueFormat instead');\n        }},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = typeof _.top    != 'undefined' ? _.top    : margin.top;\n            margin.right  = typeof _.right  != 'undefined' ? _.right  : margin.right;\n            margin.bottom = typeof _.bottom != 'undefined' ? _.bottom : margin.bottom;\n            margin.left   = typeof _.left   != 'undefined' ? _.left   : margin.left;\n        }},\n        duration: {get: function(){return duration;}, set: function(_){\n            duration = _;\n            renderWatch.reset(duration);\n        }},\n        y: {get: function(){return getY;}, set: function(_){\n            getY=d3.functor(_);\n        }},\n        color: {get: function(){return color;}, set: function(_){\n            color=nv.utils.getColor(_);\n        }},\n        labelType:          {get: function(){return labelType;}, set: function(_){\n            labelType= _ || 'key';\n        }}\n    });\n\n    nv.utils.initOptions(chart);\n    return chart;\n};\nnv.models.pieChart = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var pie = nv.models.pie();\n    var legend = nv.models.legend();\n    var tooltip = nv.models.tooltip();\n\n    var margin = {top: 30, right: 20, bottom: 20, left: 20}\n        , marginTop = null\n        , width = null\n        , height = null\n        , showTooltipPercent = false\n        , showLegend = true\n        , legendPosition = \"top\"\n        , color = nv.utils.defaultColor()\n        , state = nv.utils.state()\n        , defaultState = null\n        , noData = null\n        , duration = 250\n        , dispatch = d3.dispatch('stateChange', 'changeState','renderEnd')\n        ;\n\n    tooltip\n        .duration(0)\n        .headerEnabled(false)\n        .valueFormatter(function(d, i) {\n            return pie.valueFormat()(d, i);\n        });\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    var stateGetter = function(data) {\n        return function(){\n            return {\n                active: data.map(function(d) { return !d.disabled })\n            };\n        }\n    };\n\n    var stateSetter = function(data) {\n        return function(state) {\n            if (state.active !== undefined) {\n                data.forEach(function (series, i) {\n                    series.disabled = !state.active[i];\n                });\n            }\n        }\n    };\n\n    //============================================================\n    // Chart function\n    //------------------------------------------------------------\n\n    function chart(selection) {\n        renderWatch.reset();\n        renderWatch.models(pie);\n\n        selection.each(function(data) {\n            var container = d3.select(this);\n            nv.utils.initSVG(container);\n\n            var that = this;\n            var availableWidth = nv.utils.availableWidth(width, container, margin),\n                availableHeight = nv.utils.availableHeight(height, container, margin);\n\n            chart.update = function() { container.transition().call(chart); };\n            chart.container = this;\n\n            state.setter(stateSetter(data), chart.update)\n                .getter(stateGetter(data))\n                .update();\n\n            //set state.disabled\n            state.disabled = data.map(function(d) { return !!d.disabled });\n\n            if (!defaultState) {\n                var key;\n                defaultState = {};\n                for (key in state) {\n                    if (state[key] instanceof Array)\n                        defaultState[key] = state[key].slice(0);\n                    else\n                        defaultState[key] = state[key];\n                }\n            }\n\n            // Display No Data message if there's nothing to show.\n            if (!data || !data.length) {\n                nv.utils.noData(chart, container);\n                return chart;\n            } else {\n                container.selectAll('.nv-noData').remove();\n            }\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-pieChart').data([data]);\n            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-pieChart').append('g');\n            var g = wrap.select('g');\n\n            gEnter.append('g').attr('class', 'nv-pieWrap');\n            gEnter.append('g').attr('class', 'nv-legendWrap');\n\n            // Legend\n            if (!showLegend) {\n                g.select('.nv-legendWrap').selectAll('*').remove();\n            } else {\n                if (legendPosition === \"top\") {\n                    legend.width( availableWidth ).key(pie.x());\n\n                    wrap.select('.nv-legendWrap')\n                        .datum(data)\n                        .call(legend);\n\n                    if (!marginTop && legend.height() !== margin.top) {\n                        margin.top = legend.height();\n                        availableHeight = nv.utils.availableHeight(height, container, margin);\n                    }\n\n                    wrap.select('.nv-legendWrap')\n                        .attr('transform', 'translate(0,' + (-margin.top) +')');\n                } else if (legendPosition === \"right\") {\n                    var legendWidth = nv.models.legend().width();\n                    if (availableWidth / 2 < legendWidth) {\n                        legendWidth = (availableWidth / 2)\n                    }\n                    legend.height(availableHeight).key(pie.x());\n                    legend.width(legendWidth);\n                    availableWidth -= legend.width();\n\n                    wrap.select('.nv-legendWrap')\n                        .datum(data)\n                        .call(legend)\n                        .attr('transform', 'translate(' + (availableWidth) +',0)');\n                }\n            }\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            // Main Chart Component(s)\n            pie.width(availableWidth).height(availableHeight);\n            var pieWrap = g.select('.nv-pieWrap').datum([data]);\n            d3.transition(pieWrap).call(pie);\n\n            //============================================================\n            // Event Handling/Dispatching (in chart's scope)\n            //------------------------------------------------------------\n\n            legend.dispatch.on('stateChange', function(newState) {\n                for (var key in newState) {\n                    state[key] = newState[key];\n                }\n                dispatch.stateChange(state);\n                chart.update();\n            });\n\n            // Update chart from a state object passed to event handler\n            dispatch.on('changeState', function(e) {\n                if (typeof e.disabled !== 'undefined') {\n                    data.forEach(function(series,i) {\n                        series.disabled = e.disabled[i];\n                    });\n                    state.disabled = e.disabled;\n                }\n                chart.update();\n            });\n        });\n\n        renderWatch.renderEnd('pieChart immediate');\n        return chart;\n    }\n\n    //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n    pie.dispatch.on('elementMouseover.tooltip', function(evt) {\n        evt['series'] = {\n            key: chart.x()(evt.data),\n            value: chart.y()(evt.data),\n            color: evt.color,\n            percent: evt.percent\n        };\n        if (!showTooltipPercent) {\n            delete evt.percent;\n            delete evt.series.percent;\n        }\n        tooltip.data(evt).hidden(false);\n    });\n\n    pie.dispatch.on('elementMouseout.tooltip', function(evt) {\n        tooltip.hidden(true);\n    });\n\n    pie.dispatch.on('elementMousemove.tooltip', function(evt) {\n        tooltip();\n    });\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    // expose chart's sub-components\n    chart.legend = legend;\n    chart.dispatch = dispatch;\n    chart.pie = pie;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    // use Object get/set functionality to map between vars and chart functions\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:              {get: function(){return width;},                set: function(_){width=_;}},\n        height:             {get: function(){return height;},               set: function(_){height=_;}},\n        noData:             {get: function(){return noData;},               set: function(_){noData=_;}},\n        showTooltipPercent: {get: function(){return showTooltipPercent;},   set: function(_){showTooltipPercent=_;}},\n        showLegend:         {get: function(){return showLegend;},           set: function(_){showLegend=_;}},\n        legendPosition:     {get: function(){return legendPosition;},       set: function(_){legendPosition=_;}},\n        defaultState:       {get: function(){return defaultState;},         set: function(_){defaultState=_;}},\n\n        // options that require extra logic in the setter\n        color: {get: function(){return color;}, set: function(_){\n            color = _;\n            legend.color(color);\n            pie.color(color);\n        }},\n        duration: {get: function(){return duration;}, set: function(_){\n            duration = _;\n            renderWatch.reset(duration);\n            pie.duration(duration);\n        }},\n        margin: {get: function(){return margin;}, set: function(_){\n            if (_.top !== undefined) {\n                margin.top = _.top;\n                marginTop = _.top;\n            }\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }}\n    });\n    nv.utils.inheritOptions(chart, pie);\n    nv.utils.initOptions(chart);\n    return chart;\n};\nnv.models.sankey = function() {\n    'use strict';\n\n    // Sources:\n    // - https://bost.ocks.org/mike/sankey/\n    // - https://github.com/soxofaan/d3-plugin-captain-sankey\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var sankey = {},\n        nodeWidth = 24,\n        nodePadding = 8,\n        size = [1, 1],\n        nodes = [],\n        links = [],\n        sinksRight = true;\n\n    var layout = function(iterations) {\n        computeNodeLinks();\n        computeNodeValues();\n        computeNodeBreadths();\n        computeNodeDepths(iterations);\n    };\n\n    var relayout = function() {\n        computeLinkDepths();\n    };\n\n    // SVG path data generator, to be used as 'd' attribute on 'path' element selection.\n    var link = function() {\n        var curvature = .5;\n\n        function link(d) {\n\n            var x0 = d.source.x + d.source.dx,\n                x1 = d.target.x,\n                xi = d3.interpolateNumber(x0, x1),\n                x2 = xi(curvature),\n                x3 = xi(1 - curvature),\n                y0 = d.source.y + d.sy + d.dy / 2,\n                y1 = d.target.y + d.ty + d.dy / 2;\n            var linkPath = 'M' + x0 + ',' + y0\n                + 'C' + x2 + ',' + y0\n                + ' ' + x3 + ',' + y1\n                + ' ' + x1 + ',' + y1;\n            return linkPath;\n        }\n\n        link.curvature = function(_) {\n            if (!arguments.length) return curvature;\n            curvature = +_;\n            return link;\n        };\n\n        return link;\n    };\n\n    // Y-position of the middle of a node.\n    var center = function(node) {\n        return node.y + node.dy / 2;\n    };\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    // Populate the sourceLinks and targetLinks for each node.\n    // Also, if the source and target are not objects, assume they are indices.\n    function computeNodeLinks() {\n        nodes.forEach(function(node) {\n            // Links that have this node as source.\n            node.sourceLinks = [];\n            // Links that have this node as target.\n            node.targetLinks = [];\n        });\n        links.forEach(function(link) {\n            var source = link.source,\n                target = link.target;\n            if (typeof source === 'number') source = link.source = nodes[link.source];\n            if (typeof target === 'number') target = link.target = nodes[link.target];\n            source.sourceLinks.push(link);\n            target.targetLinks.push(link);\n        });\n    }\n\n    // Compute the value (size) of each node by summing the associated links.\n    function computeNodeValues() {\n        nodes.forEach(function(node) {\n            node.value = Math.max(\n                d3.sum(node.sourceLinks, value),\n                d3.sum(node.targetLinks, value)\n            );\n        });\n    }\n\n    // Iteratively assign the breadth (x-position) for each node.\n    // Nodes are assigned the maximum breadth of incoming neighbors plus one;\n    // nodes with no incoming links are assigned breadth zero, while\n    // nodes with no outgoing links are assigned the maximum breadth.\n    function computeNodeBreadths() {\n        //\n        var remainingNodes = nodes,\n            nextNodes,\n            x = 0;\n\n        // Work from left to right.\n        // Keep updating the breath (x-position) of nodes that are target of recently updated nodes.\n        //\n        while (remainingNodes.length && x < nodes.length) {\n            nextNodes = [];\n            remainingNodes.forEach(function(node) {\n                node.x = x;\n                node.dx = nodeWidth;\n                node.sourceLinks.forEach(function(link) {\n                    if (nextNodes.indexOf(link.target) < 0) {\n                        nextNodes.push(link.target);\n                    }\n                });\n            });\n            remainingNodes = nextNodes;\n            ++x;\n            //\n        }\n\n        // Optionally move pure sinks always to the right.\n        if (sinksRight) {\n            moveSinksRight(x);\n        }\n\n        scaleNodeBreadths((size[0] - nodeWidth) / (x - 1));\n    }\n\n    function moveSourcesRight() {\n        nodes.forEach(function(node) {\n            if (!node.targetLinks.length) {\n                node.x = d3.min(node.sourceLinks, function(d) { return d.target.x; }) - 1;\n            }\n        });\n    }\n\n    function moveSinksRight(x) {\n        nodes.forEach(function(node) {\n            if (!node.sourceLinks.length) {\n                node.x = x - 1;\n            }\n        });\n    }\n\n    function scaleNodeBreadths(kx) {\n        nodes.forEach(function(node) {\n            node.x *= kx;\n        });\n    }\n\n    // Compute the depth (y-position) for each node.\n    function computeNodeDepths(iterations) {\n        // Group nodes by breath.\n        var nodesByBreadth = d3.nest()\n            .key(function(d) { return d.x; })\n            .sortKeys(d3.ascending)\n            .entries(nodes)\n            .map(function(d) { return d.values; });\n\n        //\n        initializeNodeDepth();\n        resolveCollisions();\n        computeLinkDepths();\n        for (var alpha = 1; iterations > 0; --iterations) {\n            relaxRightToLeft(alpha *= .99);\n            resolveCollisions();\n            computeLinkDepths();\n            relaxLeftToRight(alpha);\n            resolveCollisions();\n            computeLinkDepths();\n        }\n\n        function initializeNodeDepth() {\n            // Calculate vertical scaling factor.\n            var ky = d3.min(nodesByBreadth, function(nodes) {\n                return (size[1] - (nodes.length - 1) * nodePadding) / d3.sum(nodes, value);\n            });\n\n            nodesByBreadth.forEach(function(nodes) {\n                nodes.forEach(function(node, i) {\n                    node.y = i;\n                    node.dy = node.value * ky;\n                });\n            });\n\n            links.forEach(function(link) {\n                link.dy = link.value * ky;\n            });\n        }\n\n        function relaxLeftToRight(alpha) {\n            nodesByBreadth.forEach(function(nodes, breadth) {\n                nodes.forEach(function(node) {\n                    if (node.targetLinks.length) {\n                        // Value-weighted average of the y-position of source node centers linked to this node.\n                        var y = d3.sum(node.targetLinks, weightedSource) / d3.sum(node.targetLinks, value);\n                        node.y += (y - center(node)) * alpha;\n                    }\n                });\n            });\n\n            function weightedSource(link) {\n                return (link.source.y + link.sy + link.dy / 2) * link.value;\n            }\n        }\n\n        function relaxRightToLeft(alpha) {\n            nodesByBreadth.slice().reverse().forEach(function(nodes) {\n                nodes.forEach(function(node) {\n                    if (node.sourceLinks.length) {\n                        // Value-weighted average of the y-positions of target nodes linked to this node.\n                        var y = d3.sum(node.sourceLinks, weightedTarget) / d3.sum(node.sourceLinks, value);\n                        node.y += (y - center(node)) * alpha;\n                    }\n                });\n            });\n\n            function weightedTarget(link) {\n                return (link.target.y + link.ty + link.dy / 2) * link.value;\n            }\n        }\n\n        function resolveCollisions() {\n            nodesByBreadth.forEach(function(nodes) {\n                var node,\n                    dy,\n                    y0 = 0,\n                    n = nodes.length,\n                    i;\n\n                // Push any overlapping nodes down.\n                nodes.sort(ascendingDepth);\n                for (i = 0; i < n; ++i) {\n                    node = nodes[i];\n                    dy = y0 - node.y;\n                    if (dy > 0) node.y += dy;\n                    y0 = node.y + node.dy + nodePadding;\n                }\n\n                // If the bottommost node goes outside the bounds, push it back up.\n                dy = y0 - nodePadding - size[1];\n                if (dy > 0) {\n                    y0 = node.y -= dy;\n\n                    // Push any overlapping nodes back up.\n                    for (i = n - 2; i >= 0; --i) {\n                        node = nodes[i];\n                        dy = node.y + node.dy + nodePadding - y0;\n                        if (dy > 0) node.y -= dy;\n                        y0 = node.y;\n                    }\n                }\n            });\n        }\n\n        function ascendingDepth(a, b) {\n            return a.y - b.y;\n        }\n    }\n\n    // Compute y-offset of the source endpoint (sy) and target endpoints (ty) of links,\n    // relative to the source/target node's y-position.\n    function computeLinkDepths() {\n        nodes.forEach(function(node) {\n            node.sourceLinks.sort(ascendingTargetDepth);\n            node.targetLinks.sort(ascendingSourceDepth);\n        });\n        nodes.forEach(function(node) {\n            var sy = 0, ty = 0;\n            node.sourceLinks.forEach(function(link) {\n                link.sy = sy;\n                sy += link.dy;\n            });\n            node.targetLinks.forEach(function(link) {\n                link.ty = ty;\n                ty += link.dy;\n            });\n        });\n\n        function ascendingSourceDepth(a, b) {\n            return a.source.y - b.source.y;\n        }\n\n        function ascendingTargetDepth(a, b) {\n            return a.target.y - b.target.y;\n        }\n    }\n\n    // Value property accessor.\n    function value(x) {\n        return x.value;\n    }\n\n    sankey.options = nv.utils.optionsFunc.bind(sankey);\n    sankey._options = Object.create({}, {\n        nodeWidth:    {get: function(){return nodeWidth;},   set: function(_){nodeWidth=+_;}},\n        nodePadding:  {get: function(){return nodePadding;}, set: function(_){nodePadding=_;}},\n        nodes:        {get: function(){return nodes;},       set: function(_){nodes=_;}},\n        links:        {get: function(){return links ;},      set: function(_){links=_;}},\n        size:         {get: function(){return size;},        set: function(_){size=_;}},\n        sinksRight:   {get: function(){return sinksRight;},  set: function(_){sinksRight=_;}},\n\n        layout:       {get: function(){layout(32);},         set: function(_){layout(_);}},\n        relayout:     {get: function(){relayout();},         set: function(_){}},\n        center:       {get: function(){return center();},    set: function(_){\n            if(typeof _ === 'function'){\n                center=_;\n            }\n        }},\n        link:         {get: function(){return link();},      set: function(_){\n            if(typeof _ === 'function'){\n                link=_;\n            }\n            return link();\n        }}\n    });\n\n    nv.utils.initOptions(sankey);\n\n    return sankey;\n};\nnv.models.sankeyChart = function() {\n    \"use strict\";\n\n    // Sources:\n    // - https://bost.ocks.org/mike/sankey/\n    // - https://github.com/soxofaan/d3-plugin-captain-sankey\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {top: 5, right: 0, bottom: 5, left: 0}\n        , sankey = nv.models.sankey()\n        , width = 600\n        , height = 400\n        , nodeWidth = 36\n        , nodePadding =  40\n        , units = 'units'\n        , center = undefined\n        ;\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var formatNumber = d3.format(',.0f');    // zero decimal places\n    var format = function(d) {\n        return formatNumber(d) + ' ' + units;\n    };\n    var color = d3.scale.category20();\n    var linkTitle = function(d){\n        return d.source.name + ' → ' + d.target.name + '\\n' + format(d.value);\n    };\n    var nodeFillColor = function(d){\n        return d.color = color(d.name.replace(/ .*/, ''));\n    };\n    var nodeStrokeColor = function(d){\n        return d3.rgb(d.color).darker(2);\n    };\n    var nodeTitle = function(d){\n        return d.name + '\\n' + format(d.value);\n    };\n\n    var showError = function(element, message) {\n        element.append('text')\n            .attr('x', 0)\n            .attr('y', 0)\n            .attr('class', 'nvd3-sankey-chart-error')\n            .attr('text-anchor', 'middle')\n            .text(message);\n    };\n\n    function chart(selection) {\n        selection.each(function(data) {\n\n            var testData = {\n                nodes:\n                    [\n                        {'node': 1, 'name': 'Test 1'},\n                        {'node': 2, 'name': 'Test 2'},\n                        {'node': 3, 'name': 'Test 3'},\n                        {'node': 4, 'name': 'Test 4'},\n                        {'node': 5, 'name': 'Test 5'},\n                        {'node': 6, 'name': 'Test 6'}\n                    ],\n                links:\n                    [\n                        {'source': 0, 'target': 1, 'value': 2295},\n                        {'source': 0, 'target': 5, 'value': 1199},\n                        {'source': 1, 'target': 2, 'value': 1119},\n                        {'source': 1, 'target': 5, 'value': 1176},\n                        {'source': 2, 'target': 3, 'value': 487},\n                        {'source': 2, 'target': 5, 'value': 632},\n                        {'source': 3, 'target': 4, 'value': 301},\n                        {'source': 3, 'target': 5, 'value': 186}\n                    ]\n            };\n\n            // Error handling\n            var isDataValid = false;\n            var dataAvailable = false;\n\n            // check if data is valid\n            if(\n                (typeof data['nodes'] === 'object' && data['nodes'].length) >= 0 &&\n                (typeof data['links'] === 'object' && data['links'].length) >= 0\n            ){\n                isDataValid = true;\n            }\n\n            // check if data is available\n            if(\n                data['nodes'] && data['nodes'].length > 0 &&\n                data['links'] && data['links'].length > 0\n            ) {\n                dataAvailable = true;\n            }\n\n            // show error\n            if(!isDataValid) {\n                console.error('NVD3 Sankey chart error:', 'invalid data format for', data);\n                console.info('Valid data format is: ', testData, JSON.stringify(testData));\n                showError(selection, 'Error loading chart, data is invalid');\n                return false;\n            }\n\n            // TODO use nv.utils.noData\n            if(!dataAvailable) {\n                showError(selection, 'No data available');\n                return false;\n            }\n\n            // No errors, continue\n\n            // append the svg canvas to the page\n            var svg = selection.append('svg')\n                .attr('width', width)\n                .attr('height', height)\n                .append('g')\n                .attr('class', 'nvd3 nv-wrap nv-sankeyChart');\n\n            // Set the sankey diagram properties\n            sankey\n                .nodeWidth(nodeWidth)\n                .nodePadding(nodePadding)\n                .size([width, height]);\n\n            var path = sankey.link();\n\n            sankey\n                .nodes(data.nodes)\n                .links(data.links)\n                .layout(32)\n                .center(center);\n\n            // add in the links\n            var link = svg.append('g').selectAll('.link')\n                .data(data.links)\n                .enter().append('path')\n                .attr('class', 'link')\n                .attr('d', path)\n                .style('stroke-width', function(d) { return Math.max(1, d.dy); })\n            .sort(function(a,b) { return b.dy - a.dy; });\n\n            // add the link titles\n            link.append('title')\n                .text(linkTitle);\n\n            // add in the nodes\n            var node = svg.append('g').selectAll('.node')\n                .data(data.nodes)\n                .enter().append('g')\n                .attr('class', 'node')\n                .attr('transform', function(d) { return 'translate(' + d.x + ',' + d.y + ')'; })\n                .call(\n                    d3.behavior\n                        .drag()\n                        .origin(function(d) { return d; })\n                        .on('dragstart', function() {\n                            this.parentNode.appendChild(this);\n                        })\n                        .on('drag', dragmove)\n                );\n\n            // add the rectangles for the nodes\n            node.append('rect')\n                .attr('height', function(d) { return d.dy; })\n                .attr('width', sankey.nodeWidth())\n                .style('fill', nodeFillColor)\n                .style('stroke', nodeStrokeColor)\n                .append('title')\n                .text(nodeTitle);\n\n            // add in the title for the nodes\n            node.append('text')\n                .attr('x', -6)\n                .attr('y', function(d) { return d.dy / 2; })\n                .attr('dy', '.35em')\n                .attr('text-anchor', 'end')\n                .attr('transform', null)\n                .text(function(d) { return d.name; })\n                .filter(function(d) { return d.x < width / 2; })\n                .attr('x', 6 + sankey.nodeWidth())\n                .attr('text-anchor', 'start');\n\n            // the function for moving the nodes\n            function dragmove(d) {\n                d3.select(this).attr('transform',\n                'translate(' + d.x + ',' + (\n                    d.y = Math.max(0, Math.min(height - d.dy, d3.event.y))\n                ) + ')');\n                sankey.relayout();\n                link.attr('d', path);\n            }\n        });\n\n        return chart;\n    }\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        units:           {get: function(){return units;},       set: function(_){units=_;}},\n        width:           {get: function(){return width;},       set: function(_){width=_;}},\n        height:          {get: function(){return height;},      set: function(_){height=_;}},\n        format:          {get: function(){return format;},      set: function(_){format=_;}},\n        linkTitle:       {get: function(){return linkTitle;},   set: function(_){linkTitle=_;}},\n        nodeWidth:       {get: function(){return nodeWidth;},   set: function(_){nodeWidth=_;}},\n        nodePadding:     {get: function(){return nodePadding;}, set: function(_){nodePadding=_;}},\n        center:          {get: function(){return center},       set: function(_){center=_}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        nodeStyle: {get: function(){return {};}, set: function(_){\n            nodeFillColor   = _.fillColor   !== undefined ? _.fillColor   : nodeFillColor;\n            nodeStrokeColor = _.strokeColor !== undefined ? _.strokeColor : nodeStrokeColor;\n            nodeTitle       = _.title       !== undefined ? _.title       : nodeTitle;\n        }}\n\n    });\n\n    nv.utils.initOptions(chart);\n\n    return chart;\n};\n\nnv.models.scatter = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin       = {top: 0, right: 0, bottom: 0, left: 0}\n        , width        = null\n        , height       = null\n        , color        = nv.utils.defaultColor() // chooses color\n        , pointBorderColor = null\n        , id           = Math.floor(Math.random() * 100000) //Create semi-unique ID incase user doesn't select one\n        , container    = null\n        , x            = d3.scale.linear()\n        , y            = d3.scale.linear()\n        , z            = d3.scale.linear() //linear because d3.svg.shape.size is treated as area\n        , getX         = function(d) { return d.x } // accessor to get the x value\n        , getY         = function(d) { return d.y } // accessor to get the y value\n        , getSize      = function(d) { return d.size || 1} // accessor to get the point size\n        , getShape     = function(d) { return d.shape || 'circle' } // accessor to get point shape\n        , forceX       = [] // List of numbers to Force into the X scale (ie. 0, or a max / min, etc.)\n        , forceY       = [] // List of numbers to Force into the Y scale\n        , forceSize    = [] // List of numbers to Force into the Size scale\n        , interactive  = true // If true, plots a voronoi overlay for advanced point intersection\n        , pointActive  = function(d) { return !d.notActive } // any points that return false will be filtered out\n        , padData      = false // If true, adds half a data points width to front and back, for lining up a line chart with a bar chart\n        , padDataOuter = .1 //outerPadding to imitate ordinal scale outer padding\n        , clipEdge     = false // if true, masks points within x and y scale\n        , clipVoronoi  = true // if true, masks each point with a circle... can turn off to slightly increase performance\n        , showVoronoi  = false // display the voronoi areas\n        , clipRadius   = function() { return 25 } // function to get the radius for voronoi point clips\n        , xDomain      = null // Override x domain (skips the calculation from data)\n        , yDomain      = null // Override y domain\n        , xRange       = null // Override x range\n        , yRange       = null // Override y range\n        , sizeDomain   = null // Override point size domain\n        , sizeRange    = null\n        , singlePoint  = false\n        , dispatch     = d3.dispatch('elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'renderEnd')\n        , useVoronoi   = true\n        , duration     = 250\n        , interactiveUpdateDelay = 300\n        , showLabels    = false\n        ;\n\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var x0, y0, z0 // used to store previous scales\n        , width0\n        , height0\n        , timeoutID\n        , needsUpdate = false // Flag for when the points are visually updating, but the interactive layer is behind, to disable tooltips\n        , renderWatch = nv.utils.renderWatch(dispatch, duration)\n        , _sizeRange_def = [16, 256]\n        , _cache = {}\n        ;\n\n    function getCache(d) {\n        var key, val;\n        key = d[0].series + ':' + d[1];\n        val = _cache[key] = _cache[key] || {};\n        return val;\n    }\n\n    function delCache(d) {\n        var key, val;\n        key = d[0].series + ':' + d[1];\n        delete _cache[key];\n    }\n\n    function getDiffs(d) {\n        var i, key, val,\n            cache = getCache(d),\n            diffs = false;\n        for (i = 1; i < arguments.length; i += 2) {\n            key = arguments[i];\n            val = arguments[i + 1](d[0], d[1]);\n            if (cache[key] !== val || !cache.hasOwnProperty(key)) {\n                cache[key] = val;\n                diffs = true;\n            }\n        }\n        return diffs;\n    }\n\n    function chart(selection) {\n        renderWatch.reset();\n        selection.each(function(data) {\n            container = d3.select(this);\n            var availableWidth = nv.utils.availableWidth(width, container, margin),\n                availableHeight = nv.utils.availableHeight(height, container, margin);\n\n            nv.utils.initSVG(container);\n\n            //add series index to each data point for reference\n            data.forEach(function(series, i) {\n                series.values.forEach(function(point) {\n                    point.series = i;\n                });\n            });\n\n            // Setup Scales\n            var logScale = chart.yScale().name === d3.scale.log().name ? true : false;\n            // remap and flatten the data for use in calculating the scales' domains\n            var seriesData = (xDomain && yDomain && sizeDomain) ? [] : // if we know xDomain and yDomain and sizeDomain, no need to calculate.... if Size is constant remember to set sizeDomain to speed up performance\n                d3.merge(\n                    data.map(function(d) {\n                        return d.values.map(function(d,i) {\n                            return { x: getX(d,i), y: getY(d,i), size: getSize(d,i) }\n                        })\n                    })\n                );\n\n            x   .domain(xDomain || d3.extent(seriesData.map(function(d) { return d.x; }).concat(forceX)))\n\n            if (padData && data[0])\n                x.range(xRange || [(availableWidth * padDataOuter +  availableWidth) / (2 *data[0].values.length), availableWidth - availableWidth * (1 + padDataOuter) / (2 * data[0].values.length)  ]);\n            //x.range([availableWidth * .5 / data[0].values.length, availableWidth * (data[0].values.length - .5)  / data[0].values.length ]);\n            else\n                x.range(xRange || [0, availableWidth]);\n\n             if (logScale) {\n                    var min = d3.min(seriesData.map(function(d) { if (d.y !== 0) return d.y; }));\n                    y.clamp(true)\n                        .domain(yDomain || d3.extent(seriesData.map(function(d) {\n                            if (d.y !== 0) return d.y;\n                            else return min * 0.1;\n                        }).concat(forceY)))\n                        .range(yRange || [availableHeight, 0]);\n                } else {\n                        y.domain(yDomain || d3.extent(seriesData.map(function (d) { return d.y;}).concat(forceY)))\n                        .range(yRange || [availableHeight, 0]);\n                }\n\n            z   .domain(sizeDomain || d3.extent(seriesData.map(function(d) { return d.size }).concat(forceSize)))\n                .range(sizeRange || _sizeRange_def);\n\n            // If scale's domain don't have a range, slightly adjust to make one... so a chart can show a single data point\n            singlePoint = x.domain()[0] === x.domain()[1] || y.domain()[0] === y.domain()[1];\n\n            if (x.domain()[0] === x.domain()[1])\n                x.domain()[0] ?\n                    x.domain([x.domain()[0] - x.domain()[0] * 0.01, x.domain()[1] + x.domain()[1] * 0.01])\n                    : x.domain([-1,1]);\n\n            if (y.domain()[0] === y.domain()[1])\n                y.domain()[0] ?\n                    y.domain([y.domain()[0] - y.domain()[0] * 0.01, y.domain()[1] + y.domain()[1] * 0.01])\n                    : y.domain([-1,1]);\n\n            if ( isNaN(x.domain()[0])) {\n                x.domain([-1,1]);\n            }\n\n            if ( isNaN(y.domain()[0])) {\n                y.domain([-1,1]);\n            }\n\n            x0 = x0 || x;\n            y0 = y0 || y;\n            z0 = z0 || z;\n\n            var scaleDiff = x(1) !== x0(1) || y(1) !== y0(1) || z(1) !== z0(1);\n\n            width0 = width0 || width;\n            height0 = height0 || height;\n\n            var sizeDiff = width0 !== width || height0 !== height;\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-scatter').data([data]);\n            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-scatter nv-chart-' + id);\n            var defsEnter = wrapEnter.append('defs');\n            var gEnter = wrapEnter.append('g');\n            var g = wrap.select('g');\n\n            wrap.classed('nv-single-point', singlePoint);\n            gEnter.append('g').attr('class', 'nv-groups');\n            gEnter.append('g').attr('class', 'nv-point-paths');\n            wrapEnter.append('g').attr('class', 'nv-point-clips');\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            defsEnter.append('clipPath')\n                .attr('id', 'nv-edge-clip-' + id)\n                .append('rect')\n                .attr('transform', 'translate( -10, -10)');\n                \n            wrap.select('#nv-edge-clip-' + id + ' rect')\n                .attr('width', availableWidth + 20)\n                .attr('height', (availableHeight > 0) ? availableHeight + 20 : 0);\n\n            g.attr('clip-path', clipEdge ? 'url(#nv-edge-clip-' + id + ')' : '');\n\n            function updateInteractiveLayer() {\n                // Always clear needs-update flag regardless of whether or not\n                // we will actually do anything (avoids needless invocations).\n                needsUpdate = false;\n\n                if (!interactive) return false;\n\n                // inject series and point index for reference into voronoi\n                if (useVoronoi === true) {\n                    var vertices = d3.merge(data.map(function(group, groupIndex) {\n                            return group.values\n                                .map(function(point, pointIndex) {\n                                    // *Adding noise to make duplicates very unlikely\n                                    // *Injecting series and point index for reference\n                                    /* *Adding a 'jitter' to the points, because there's an issue in d3.geom.voronoi.\n                                     */\n                                    var pX = getX(point,pointIndex);\n                                    var pY = getY(point,pointIndex);\n\n                                    return [nv.utils.NaNtoZero(x(pX))+ Math.random() * 1e-4,\n                                            nv.utils.NaNtoZero(y(pY))+ Math.random() * 1e-4,\n                                        groupIndex,\n                                        pointIndex, point]; //temp hack to add noise until I think of a better way so there are no duplicates\n                                })\n                                .filter(function(pointArray, pointIndex) {\n                                    return pointActive(pointArray[4], pointIndex); // Issue #237.. move filter to after map, so pointIndex is correct!\n                                })\n                        })\n                    );\n\n                    if (vertices.length == 0) return false;  // No active points, we're done\n                    if (vertices.length < 3) {\n                        // Issue #283 - Adding 2 dummy points to the voronoi b/c voronoi requires min 3 points to work\n                        vertices.push([x.range()[0] - 20, y.range()[0] - 20, null, null]);\n                        vertices.push([x.range()[1] + 20, y.range()[1] + 20, null, null]);\n                        vertices.push([x.range()[0] - 20, y.range()[0] + 20, null, null]);\n                        vertices.push([x.range()[1] + 20, y.range()[1] - 20, null, null]);\n                    }\n\n                    // keep voronoi sections from going more than 10 outside of graph\n                    // to avoid overlap with other things like legend etc\n                    var bounds = d3.geom.polygon([\n                        [-10,-10],\n                        [-10,height + 10],\n                        [width + 10,height + 10],\n                        [width + 10,-10]\n                    ]);\n\n                    var voronoi = d3.geom.voronoi(vertices).map(function(d, i) {\n                        return {\n                            'data': bounds.clip(d),\n                            'series': vertices[i][2],\n                            'point': vertices[i][3]\n                        }\n                    });\n\n                    // nuke all voronoi paths on reload and recreate them\n                    wrap.select('.nv-point-paths').selectAll('path').remove();\n                    var pointPaths = wrap.select('.nv-point-paths').selectAll('path').data(voronoi);\n                    var vPointPaths = pointPaths\n                        .enter().append(\"svg:path\")\n                        .attr(\"d\", function(d) {\n                            if (!d || !d.data || d.data.length === 0)\n                                return 'M 0 0';\n                            else\n                                return \"M\" + d.data.join(\",\") + \"Z\";\n                        })\n                        .attr(\"id\", function(d,i) {\n                            return \"nv-path-\"+i; })\n                        .attr(\"clip-path\", function(d,i) { return \"url(#nv-clip-\"+id+\"-\"+i+\")\"; })\n                        ;\n\n                    // good for debugging point hover issues\n                    if (showVoronoi) {\n                        vPointPaths.style(\"fill\", d3.rgb(230, 230, 230))\n                            .style('fill-opacity', 0.4)\n                            .style('stroke-opacity', 1)\n                            .style(\"stroke\", d3.rgb(200,200,200));\n                    }\n\n                    if (clipVoronoi) {\n                        // voronoi sections are already set to clip,\n                        // just create the circles with the IDs they expect\n                        wrap.select('.nv-point-clips').selectAll('*').remove(); // must do * since it has sub-dom\n                        var pointClips = wrap.select('.nv-point-clips').selectAll('clipPath').data(vertices);\n                        var vPointClips = pointClips\n                            .enter().append(\"svg:clipPath\")\n                            .attr(\"id\", function(d, i) { return \"nv-clip-\"+id+\"-\"+i;})\n                            .append(\"svg:circle\")\n                            .attr('cx', function(d) { return d[0]; })\n                            .attr('cy', function(d) { return d[1]; })\n                            .attr('r', clipRadius);\n                    }\n\n                    var mouseEventCallback = function(el, d, mDispatch) {\n                        if (needsUpdate) return 0;\n                        var series = data[d.series];\n                        if (series === undefined) return;\n                        var point  = series.values[d.point];\n                        point['color'] = color(series, d.series);\n\n                        // standardize attributes for tooltip.\n                        point['x'] = getX(point);\n                        point['y'] = getY(point);\n\n                        // can't just get box of event node since it's actually a voronoi polygon\n                        var box = container.node().getBoundingClientRect();\n                        var scrollTop  = window.pageYOffset || document.documentElement.scrollTop;\n                        var scrollLeft = window.pageXOffset || document.documentElement.scrollLeft;\n\n                        var pos = {\n                            left: x(getX(point, d.point)) + box.left + scrollLeft + margin.left + 10,\n                            top: y(getY(point, d.point)) + box.top + scrollTop + margin.top + 10\n                        };\n\n                        mDispatch({\n                            point: point,\n                            series: series,\n                            pos: pos,\n                            relativePos: [x(getX(point, d.point)) + margin.left, y(getY(point, d.point)) + margin.top],\n                            seriesIndex: d.series,\n                            pointIndex: d.point,\n                            event: d3.event,\n                            element: el\n                        });\n                    };\n\n                    pointPaths\n                        .on('click', function(d) {\n                            mouseEventCallback(this, d, dispatch.elementClick);\n                        })\n                        .on('dblclick', function(d) {\n                            mouseEventCallback(this, d, dispatch.elementDblClick);\n                        })\n                        .on('mouseover', function(d) {\n                            mouseEventCallback(this, d, dispatch.elementMouseover);\n                        })\n                        .on('mouseout', function(d, i) {\n                            mouseEventCallback(this, d, dispatch.elementMouseout);\n                        });\n\n                } else {\n                    // add event handlers to points instead voronoi paths\n                    wrap.select('.nv-groups').selectAll('.nv-group')\n                        .selectAll('.nv-point')\n                        //.data(dataWithPoints)\n                        //.style('pointer-events', 'auto') // recativate events, disabled by css\n                        .on('click', function(d,i) {\n                            //nv.log('test', d, i);\n                            if (needsUpdate || !data[d.series]) return 0; //check if this is a dummy point\n                            var series = data[d.series],\n                                point  = series.values[i];\n                            var element = this;\n                            dispatch.elementClick({\n                                point: point,\n                                series: series,\n                                pos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top], //TODO: make this pos base on the page\n                                relativePos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n                                seriesIndex: d.series,\n                                pointIndex: i,\n                                event: d3.event,\n                                element: element\n                            });\n                        })\n                        .on('dblclick', function(d,i) {\n                            if (needsUpdate || !data[d.series]) return 0; //check if this is a dummy point\n                            var series = data[d.series],\n                                point  = series.values[i];\n\n                            dispatch.elementDblClick({\n                                point: point,\n                                series: series,\n                                pos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],//TODO: make this pos base on the page\n                                relativePos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n                                seriesIndex: d.series,\n                                pointIndex: i\n                            });\n                        })\n                        .on('mouseover', function(d,i) {\n                            if (needsUpdate || !data[d.series]) return 0; //check if this is a dummy point\n                            var series = data[d.series],\n                                point  = series.values[i];\n\n                            dispatch.elementMouseover({\n                                point: point,\n                                series: series,\n                                pos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],//TODO: make this pos base on the page\n                                relativePos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n                                seriesIndex: d.series,\n                                pointIndex: i,\n                                color: color(d, i)\n                            });\n                        })\n                        .on('mouseout', function(d,i) {\n                            if (needsUpdate || !data[d.series]) return 0; //check if this is a dummy point\n                            var series = data[d.series],\n                                point  = series.values[i];\n\n                            dispatch.elementMouseout({\n                                point: point,\n                                series: series,\n                                pos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],//TODO: make this pos base on the page\n                                relativePos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n                                seriesIndex: d.series,\n                                pointIndex: i,\n                                color: color(d, i)\n                            });\n                        });\n                }\n            }\n\n            needsUpdate = true;\n            var groups = wrap.select('.nv-groups').selectAll('.nv-group')\n                .data(function(d) { return d }, function(d) { return d.key });\n            groups.enter().append('g')\n                .style('stroke-opacity', 1e-6)\n                .style('fill-opacity', 1e-6);\n            groups.exit()\n                .remove();\n            groups\n                .attr('class', function(d,i) {\n                    return (d.classed || '') + ' nv-group nv-series-' + i;\n                })\n                .classed('nv-noninteractive', !interactive)\n                .classed('hover', function(d) { return d.hover });\n            groups.watchTransition(renderWatch, 'scatter: groups')\n                .style('fill', function(d,i) { return color(d, i) })\n                .style('stroke', function(d,i) { return d.pointBorderColor || pointBorderColor || color(d, i) })\n                .style('stroke-opacity', 1)\n                .style('fill-opacity', .5);\n\n            // create the points, maintaining their IDs from the original data set\n            var points = groups.selectAll('path.nv-point')\n                .data(function(d) {\n                    return d.values.map(\n                        function (point, pointIndex) {\n                            return [point, pointIndex]\n                        }).filter(\n                            function(pointArray, pointIndex) {\n                                return pointActive(pointArray[0], pointIndex)\n                            })\n                    });\n            points.enter().append('path')\n                .attr('class', function (d) {\n                    return 'nv-point nv-point-' + d[1];\n                })\n                .style('fill', function (d) { return d.color })\n                .style('stroke', function (d) { return d.color })\n                .attr('transform', function(d) {\n                    return 'translate(' + nv.utils.NaNtoZero(x0(getX(d[0],d[1]))) + ',' + nv.utils.NaNtoZero(y0(getY(d[0],d[1]))) + ')'\n                })\n                .attr('d',\n                    nv.utils.symbol()\n                    .type(function(d) { return getShape(d[0]); })\n                    .size(function(d) { return z(getSize(d[0],d[1])) })\n            );\n            points.exit().each(delCache).remove();\n            groups.exit().selectAll('path.nv-point')\n                .watchTransition(renderWatch, 'scatter exit')\n                .attr('transform', function(d) {\n                    return 'translate(' + nv.utils.NaNtoZero(x(getX(d[0],d[1]))) + ',' + nv.utils.NaNtoZero(y(getY(d[0],d[1]))) + ')'\n                })\n                .remove();\n            // Update points position only if \"x\" or \"y\" have changed\n            points.filter(function (d) { return scaleDiff || sizeDiff || getDiffs(d, 'x', getX, 'y', getY); })\n                .watchTransition(renderWatch, 'scatter points')\n                .attr('transform', function(d) {\n                    //nv.log(d, getX(d[0],d[1]), x(getX(d[0],d[1])));\n                    return 'translate(' + nv.utils.NaNtoZero(x(getX(d[0],d[1]))) + ',' + nv.utils.NaNtoZero(y(getY(d[0],d[1]))) + ')'\n                });\n            // Update points appearance only if \"shape\" or \"size\" have changed\n            points.filter(function (d) { return scaleDiff || sizeDiff || getDiffs(d, 'shape', getShape, 'size', getSize); })\n                .watchTransition(renderWatch, 'scatter points')\n                .attr('d',\n                    nv.utils.symbol()\n                    .type(function(d) { return getShape(d[0]); })\n                    .size(function(d) { return z(getSize(d[0],d[1])) })\n            );\n\n            // add label a label to scatter chart\n            if(showLabels)\n            {\n                var titles =  groups.selectAll('.nv-label')\n                    .data(function(d) {\n                        return d.values.map(\n                            function (point, pointIndex) {\n                                return [point, pointIndex]\n                            }).filter(\n                                function(pointArray, pointIndex) {\n                                    return pointActive(pointArray[0], pointIndex)\n                                })\n                        });\n\n                titles.enter().append('text')\n                    .style('fill', function (d,i) {\n                        return d.color })\n                    .style('stroke-opacity', 0)\n                    .style('fill-opacity', 1)\n                    .attr('transform', function(d) {\n                        var dx = nv.utils.NaNtoZero(x0(getX(d[0],d[1]))) + Math.sqrt(z(getSize(d[0],d[1]))/Math.PI) + 2;\n                        return 'translate(' + dx + ',' + nv.utils.NaNtoZero(y0(getY(d[0],d[1]))) + ')';\n                    })\n                    .text(function(d,i){\n                        return d[0].label;});\n\n                titles.exit().remove();\n                groups.exit().selectAll('path.nv-label')\n                    .watchTransition(renderWatch, 'scatter exit')\n                    .attr('transform', function(d) {\n                        var dx = nv.utils.NaNtoZero(x(getX(d[0],d[1])))+ Math.sqrt(z(getSize(d[0],d[1]))/Math.PI)+2;\n                        return 'translate(' + dx + ',' + nv.utils.NaNtoZero(y(getY(d[0],d[1]))) + ')';\n                    })\n                    .remove();\n               titles.each(function(d) {\n                  d3.select(this)\n                    .classed('nv-label', true)\n                    .classed('nv-label-' + d[1], false)\n                    .classed('hover',false);\n                });\n                titles.watchTransition(renderWatch, 'scatter labels')\n                    .attr('transform', function(d) {\n                        var dx = nv.utils.NaNtoZero(x(getX(d[0],d[1])))+ Math.sqrt(z(getSize(d[0],d[1]))/Math.PI)+2;\n                        return 'translate(' + dx + ',' + nv.utils.NaNtoZero(y(getY(d[0],d[1]))) + ')'\n                    });\n            }\n\n            // Delay updating the invisible interactive layer for smoother animation\n            if( interactiveUpdateDelay )\n            {\n                clearTimeout(timeoutID); // stop repeat calls to updateInteractiveLayer\n                timeoutID = setTimeout(updateInteractiveLayer, interactiveUpdateDelay );\n            }\n            else\n            {\n                updateInteractiveLayer();\n            }\n\n            //store old scales for use in transitions on update\n            x0 = x.copy();\n            y0 = y.copy();\n            z0 = z.copy();\n\n            width0 = width;\n            height0 = height;\n\n        });\n        renderWatch.renderEnd('scatter immediate');\n        return chart;\n    }\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    // utility function calls provided by this chart\n    chart._calls = new function() {\n        this.clearHighlights = function () {\n            nv.dom.write(function() {\n                container.selectAll(\".nv-point.hover\").classed(\"hover\", false);\n            });\n            return null;\n        };\n        this.highlightPoint = function (seriesIndex, pointIndex, isHoverOver) {\n            nv.dom.write(function() {\n                container.select('.nv-groups')\n                  .selectAll(\".nv-series-\" + seriesIndex)\n                  .selectAll(\".nv-point-\" + pointIndex)\n                  .classed(\"hover\", isHoverOver);\n            });\n        };\n    };\n\n    // trigger calls from events too\n    dispatch.on('elementMouseover.point', function(d) {\n        if (interactive) chart._calls.highlightPoint(d.seriesIndex,d.pointIndex,true);\n    });\n\n    dispatch.on('elementMouseout.point', function(d) {\n        if (interactive) chart._calls.highlightPoint(d.seriesIndex,d.pointIndex,false);\n    });\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:        {get: function(){return width;}, set: function(_){width=_;}},\n        height:       {get: function(){return height;}, set: function(_){height=_;}},\n        xScale:       {get: function(){return x;}, set: function(_){x=_;}},\n        yScale:       {get: function(){return y;}, set: function(_){y=_;}},\n        pointScale:   {get: function(){return z;}, set: function(_){z=_;}},\n        xDomain:      {get: function(){return xDomain;}, set: function(_){xDomain=_;}},\n        yDomain:      {get: function(){return yDomain;}, set: function(_){yDomain=_;}},\n        pointDomain:  {get: function(){return sizeDomain;}, set: function(_){sizeDomain=_;}},\n        xRange:       {get: function(){return xRange;}, set: function(_){xRange=_;}},\n        yRange:       {get: function(){return yRange;}, set: function(_){yRange=_;}},\n        pointRange:   {get: function(){return sizeRange;}, set: function(_){sizeRange=_;}},\n        forceX:       {get: function(){return forceX;}, set: function(_){forceX=_;}},\n        forceY:       {get: function(){return forceY;}, set: function(_){forceY=_;}},\n        forcePoint:   {get: function(){return forceSize;}, set: function(_){forceSize=_;}},\n        interactive:  {get: function(){return interactive;}, set: function(_){interactive=_;}},\n        pointActive:  {get: function(){return pointActive;}, set: function(_){pointActive=_;}},\n        padDataOuter: {get: function(){return padDataOuter;}, set: function(_){padDataOuter=_;}},\n        padData:      {get: function(){return padData;}, set: function(_){padData=_;}},\n        clipEdge:     {get: function(){return clipEdge;}, set: function(_){clipEdge=_;}},\n        clipVoronoi:  {get: function(){return clipVoronoi;}, set: function(_){clipVoronoi=_;}},\n        clipRadius:   {get: function(){return clipRadius;}, set: function(_){clipRadius=_;}},\n        showVoronoi:   {get: function(){return showVoronoi;}, set: function(_){showVoronoi=_;}},\n        id:           {get: function(){return id;}, set: function(_){id=_;}},\n        interactiveUpdateDelay: {get:function(){return interactiveUpdateDelay;}, set: function(_){interactiveUpdateDelay=_;}},\n        showLabels: {get: function(){return showLabels;}, set: function(_){ showLabels = _;}},\n        pointBorderColor: {get: function(){return pointBorderColor;}, set: function(_){pointBorderColor=_;}},\n\n        // simple functor options\n        x:     {get: function(){return getX;}, set: function(_){getX = d3.functor(_);}},\n        y:     {get: function(){return getY;}, set: function(_){getY = d3.functor(_);}},\n        pointSize: {get: function(){return getSize;}, set: function(_){getSize = d3.functor(_);}},\n        pointShape: {get: function(){return getShape;}, set: function(_){getShape = d3.functor(_);}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        duration: {get: function(){return duration;}, set: function(_){\n            duration = _;\n            renderWatch.reset(duration);\n        }},\n        color: {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n        }},\n        useVoronoi: {get: function(){return useVoronoi;}, set: function(_){\n            useVoronoi = _;\n            if (useVoronoi === false) {\n                clipVoronoi = false;\n            }\n        }}\n    });\n\n    nv.utils.initOptions(chart);\n    return chart;\n};\n\nnv.models.scatterChart = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var scatter      = nv.models.scatter()\n        , xAxis        = nv.models.axis()\n        , yAxis        = nv.models.axis()\n        , legend       = nv.models.legend()\n        , distX        = nv.models.distribution()\n        , distY        = nv.models.distribution()\n        , tooltip      = nv.models.tooltip()\n        ;\n\n    var margin       = {top: 30, right: 20, bottom: 50, left: 75}\n        , marginTop = null\n        , width        = null\n        , height       = null\n        , container    = null\n        , color        = nv.utils.defaultColor()\n        , x            = scatter.xScale()\n        , y            = scatter.yScale()\n        , showDistX    = false\n        , showDistY    = false\n        , showLegend   = true\n        , showXAxis    = true\n        , showYAxis    = true\n        , rightAlignYAxis = false\n        , state = nv.utils.state()\n        , defaultState = null\n        , dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd')\n        , noData       = null\n        , duration = 250\n        , showLabels    = false\n        ;\n\n    scatter.xScale(x).yScale(y);\n    xAxis.orient('bottom').tickPadding(10);\n    yAxis\n        .orient((rightAlignYAxis) ? 'right' : 'left')\n        .tickPadding(10)\n    ;\n    distX.axis('x');\n    distY.axis('y');\n    tooltip\n        .headerFormatter(function(d, i) {\n            return xAxis.tickFormat()(d, i);\n        })\n        .valueFormatter(function(d, i) {\n            return yAxis.tickFormat()(d, i);\n        });\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var x0, y0\n        , renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    var stateGetter = function(data) {\n        return function(){\n            return {\n                active: data.map(function(d) { return !d.disabled })\n            };\n        }\n    };\n\n    var stateSetter = function(data) {\n        return function(state) {\n            if (state.active !== undefined)\n                data.forEach(function(series,i) {\n                    series.disabled = !state.active[i];\n                });\n        }\n    };\n\n    function chart(selection) {\n        renderWatch.reset();\n        renderWatch.models(scatter);\n        if (showXAxis) renderWatch.models(xAxis);\n        if (showYAxis) renderWatch.models(yAxis);\n        if (showDistX) renderWatch.models(distX);\n        if (showDistY) renderWatch.models(distY);\n\n        selection.each(function(data) {\n            var that = this;\n\n            container = d3.select(this);\n            nv.utils.initSVG(container);\n\n            var availableWidth = nv.utils.availableWidth(width, container, margin),\n                availableHeight = nv.utils.availableHeight(height, container, margin);\n\n            chart.update = function() {\n                if (duration === 0)\n                    container.call(chart);\n                else\n                    container.transition().duration(duration).call(chart);\n            };\n            chart.container = this;\n\n            state\n                .setter(stateSetter(data), chart.update)\n                .getter(stateGetter(data))\n                .update();\n\n            // DEPRECATED set state.disableddisabled\n            state.disabled = data.map(function(d) { return !!d.disabled });\n\n            if (!defaultState) {\n                var key;\n                defaultState = {};\n                for (key in state) {\n                    if (state[key] instanceof Array)\n                        defaultState[key] = state[key].slice(0);\n                    else\n                        defaultState[key] = state[key];\n                }\n            }\n\n            // Display noData message if there's nothing to show.\n            if (!data || !data.length || !data.filter(function(d) { return d.values.length }).length) {\n                nv.utils.noData(chart, container);\n                renderWatch.renderEnd('scatter immediate');\n                return chart;\n            } else {\n                container.selectAll('.nv-noData').remove();\n            }\n\n            // Setup Scales\n            x = scatter.xScale();\n            y = scatter.yScale();\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-scatterChart').data([data]);\n            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-scatterChart nv-chart-' + scatter.id());\n            var gEnter = wrapEnter.append('g');\n            var g = wrap.select('g');\n\n            // background for pointer events\n            gEnter.append('rect').attr('class', 'nvd3 nv-background').style(\"pointer-events\",\"none\");\n\n            gEnter.append('g').attr('class', 'nv-x nv-axis');\n            gEnter.append('g').attr('class', 'nv-y nv-axis');\n            gEnter.append('g').attr('class', 'nv-scatterWrap');\n            gEnter.append('g').attr('class', 'nv-regressionLinesWrap');\n            gEnter.append('g').attr('class', 'nv-distWrap');\n            gEnter.append('g').attr('class', 'nv-legendWrap');\n\n            if (rightAlignYAxis) {\n                g.select(\".nv-y.nv-axis\")\n                    .attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n            }\n\n            // Legend\n            if (!showLegend) {\n                g.select('.nv-legendWrap').selectAll('*').remove();\n            } else {\n                var legendWidth = availableWidth;\n                legend.width(legendWidth);\n\n                wrap.select('.nv-legendWrap')\n                    .datum(data)\n                    .call(legend);\n\n                if (!marginTop && legend.height() !== margin.top) {\n                    margin.top = legend.height();\n                    availableHeight = nv.utils.availableHeight(height, container, margin);\n                }\n\n                wrap.select('.nv-legendWrap')\n                    .attr('transform', 'translate(0' + ',' + (-margin.top) +')');\n            }\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            // Main Chart Component(s)\n            scatter\n                .width(availableWidth)\n                .height(availableHeight)\n                .color(data.map(function(d,i) {\n                    d.color = d.color || color(d, i);\n                    return d.color;\n                }).filter(function(d,i) { return !data[i].disabled }))\n                .showLabels(showLabels);\n\n            wrap.select('.nv-scatterWrap')\n                .datum(data.filter(function(d) { return !d.disabled }))\n                .call(scatter);\n\n\n            wrap.select('.nv-regressionLinesWrap')\n                .attr('clip-path', 'url(#nv-edge-clip-' + scatter.id() + ')');\n\n            var regWrap = wrap.select('.nv-regressionLinesWrap').selectAll('.nv-regLines')\n                .data(function (d) {\n                    return d;\n                });\n\n            regWrap.enter().append('g').attr('class', 'nv-regLines');\n\n            var regLine = regWrap.selectAll('.nv-regLine')\n                .data(function (d) {\n                    return [d]\n                });\n\n            regLine.enter()\n                .append('line').attr('class', 'nv-regLine')\n                .style('stroke-opacity', 0);\n\n            // don't add lines unless we have slope and intercept to use\n            regLine.filter(function(d) {\n                return d.intercept && d.slope;\n            })\n                .watchTransition(renderWatch, 'scatterPlusLineChart: regline')\n                .attr('x1', x.range()[0])\n                .attr('x2', x.range()[1])\n                .attr('y1', function (d, i) {\n                    return y(x.domain()[0] * d.slope + d.intercept)\n                })\n                .attr('y2', function (d, i) {\n                    return y(x.domain()[1] * d.slope + d.intercept)\n                })\n                .style('stroke', function (d, i, j) {\n                    return color(d, j)\n                })\n                .style('stroke-opacity', function (d, i) {\n                    return (d.disabled || typeof d.slope === 'undefined' || typeof d.intercept === 'undefined') ? 0 : 1\n                });\n\n            // Setup Axes\n            if (showXAxis) {\n                xAxis\n                    .scale(x)\n                    ._ticks( nv.utils.calcTicksX(availableWidth/100, data) )\n                    .tickSize( -availableHeight , 0);\n\n                g.select('.nv-x.nv-axis')\n                    .attr('transform', 'translate(0,' + y.range()[0] + ')')\n                    .call(xAxis);\n            }\n\n            if (showYAxis) {\n                yAxis\n                    .scale(y)\n                    ._ticks( nv.utils.calcTicksY(availableHeight/36, data) )\n                    .tickSize( -availableWidth, 0);\n\n                g.select('.nv-y.nv-axis')\n                    .call(yAxis);\n            }\n\n            // Setup Distribution\n            if (showDistX) {\n                distX\n                    .getData(scatter.x())\n                    .scale(x)\n                    .width(availableWidth)\n                    .color(data.map(function(d,i) {\n                        return d.color || color(d, i);\n                    }).filter(function(d,i) { return !data[i].disabled }));\n                gEnter.select('.nv-distWrap').append('g')\n                    .attr('class', 'nv-distributionX');\n                g.select('.nv-distributionX')\n                    .attr('transform', 'translate(0,' + y.range()[0] + ')')\n                    .datum(data.filter(function(d) { return !d.disabled }))\n                    .call(distX);\n            }\n\n            if (showDistY) {\n                distY\n                    .getData(scatter.y())\n                    .scale(y)\n                    .width(availableHeight)\n                    .color(data.map(function(d,i) {\n                        return d.color || color(d, i);\n                    }).filter(function(d,i) { return !data[i].disabled }));\n                gEnter.select('.nv-distWrap').append('g')\n                    .attr('class', 'nv-distributionY');\n                g.select('.nv-distributionY')\n                    .attr('transform', 'translate(' + (rightAlignYAxis ? availableWidth : -distY.size() ) + ',0)')\n                    .datum(data.filter(function(d) { return !d.disabled }))\n                    .call(distY);\n            }\n\n            //============================================================\n            // Event Handling/Dispatching (in chart's scope)\n            //------------------------------------------------------------\n\n            legend.dispatch.on('stateChange', function(newState) {\n                for (var key in newState)\n                    state[key] = newState[key];\n                dispatch.stateChange(state);\n                chart.update();\n            });\n\n            // Update chart from a state object passed to event handler\n            dispatch.on('changeState', function(e) {\n                if (typeof e.disabled !== 'undefined') {\n                    data.forEach(function(series,i) {\n                        series.disabled = e.disabled[i];\n                    });\n                    state.disabled = e.disabled;\n                }\n                chart.update();\n            });\n\n            // mouseover needs availableHeight so we just keep scatter mouse events inside the chart block\n            scatter.dispatch.on('elementMouseout.tooltip', function(evt) {\n                tooltip.hidden(true);\n                container.select('.nv-chart-' + scatter.id() + ' .nv-series-' + evt.seriesIndex + ' .nv-distx-' + evt.pointIndex)\n                    .attr('y1', 0);\n                container.select('.nv-chart-' + scatter.id() + ' .nv-series-' + evt.seriesIndex + ' .nv-disty-' + evt.pointIndex)\n                    .attr('x2', distY.size());\n            });\n\n            scatter.dispatch.on('elementMouseover.tooltip', function(evt) {\n                container.select('.nv-series-' + evt.seriesIndex + ' .nv-distx-' + evt.pointIndex)\n                    .attr('y1', evt.relativePos[1] - availableHeight);\n                container.select('.nv-series-' + evt.seriesIndex + ' .nv-disty-' + evt.pointIndex)\n                    .attr('x2', evt.relativePos[0] + distX.size());\n                tooltip.data(evt).hidden(false);\n            });\n\n            //store old scales for use in transitions on update\n            x0 = x.copy();\n            y0 = y.copy();\n\n        });\n\n        renderWatch.renderEnd('scatter with line immediate');\n        return chart;\n    }\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    // expose chart's sub-components\n    chart.dispatch = dispatch;\n    chart.scatter = scatter;\n    chart.legend = legend;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.distX = distX;\n    chart.distY = distY;\n    chart.tooltip = tooltip;\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:      {get: function(){return width;}, set: function(_){width=_;}},\n        height:     {get: function(){return height;}, set: function(_){height=_;}},\n        container:  {get: function(){return container;}, set: function(_){container=_;}},\n        showDistX:  {get: function(){return showDistX;}, set: function(_){showDistX=_;}},\n        showDistY:  {get: function(){return showDistY;}, set: function(_){showDistY=_;}},\n        showLegend: {get: function(){return showLegend;}, set: function(_){showLegend=_;}},\n        showXAxis:  {get: function(){return showXAxis;}, set: function(_){showXAxis=_;}},\n        showYAxis:  {get: function(){return showYAxis;}, set: function(_){showYAxis=_;}},\n        defaultState:     {get: function(){return defaultState;}, set: function(_){defaultState=_;}},\n        noData:     {get: function(){return noData;}, set: function(_){noData=_;}},\n        duration:   {get: function(){return duration;}, set: function(_){duration=_;}},\n        showLabels: {get: function(){return showLabels;}, set: function(_){showLabels=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            if (_.top !== undefined) {\n                margin.top = _.top;\n                marginTop = _.top;\n            }\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        rightAlignYAxis: {get: function(){return rightAlignYAxis;}, set: function(_){\n            rightAlignYAxis = _;\n            yAxis.orient( (_) ? 'right' : 'left');\n        }},\n        color: {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n            legend.color(color);\n            distX.color(color);\n            distY.color(color);\n        }}\n    });\n\n    nv.utils.inheritOptions(chart, scatter);\n    nv.utils.initOptions(chart);\n    return chart;\n};\n\nnv.models.sparkline = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {top: 2, right: 0, bottom: 2, left: 0}\n        , width = 400\n        , height = 32\n        , container = null\n        , animate = true\n        , x = d3.scale.linear()\n        , y = d3.scale.linear()\n        , getX = function(d) { return d.x }\n        , getY = function(d) { return d.y }\n        , color = nv.utils.getColor(['#000'])\n        , xDomain\n        , yDomain\n        , xRange\n        , yRange\n        , showMinMaxPoints = true\n        , showCurrentPoint = true\n        , dispatch = d3.dispatch('renderEnd')\n        ;\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n    \n    function chart(selection) {\n        renderWatch.reset();\n        selection.each(function(data) {\n            var availableWidth = width - margin.left - margin.right,\n                availableHeight = height - margin.top - margin.bottom;\n\n            container = d3.select(this);\n            nv.utils.initSVG(container);\n\n            // Setup Scales\n            x   .domain(xDomain || d3.extent(data, getX ))\n                .range(xRange || [0, availableWidth]);\n\n            y   .domain(yDomain || d3.extent(data, getY ))\n                .range(yRange || [availableHeight, 0]);\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-sparkline').data([data]);\n            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-sparkline');\n            var gEnter = wrapEnter.append('g');\n            var g = wrap.select('g');\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')')\n\n            var paths = wrap.selectAll('path')\n                .data(function(d) { return [d] });\n            paths.enter().append('path');\n            paths.exit().remove();\n            paths\n                .style('stroke', function(d,i) { return d.color || color(d, i) })\n                .attr('d', d3.svg.line()\n                    .x(function(d,i) { return x(getX(d,i)) })\n                    .y(function(d,i) { return y(getY(d,i)) })\n            );\n\n            // TODO: Add CURRENT data point (Need Min, Mac, Current / Most recent)\n            var points = wrap.selectAll('circle.nv-point')\n                .data(function(data) {\n                    var yValues = data.map(function(d, i) { return getY(d,i); });\n                    function pointIndex(index) {\n                        if (index != -1) {\n                            var result = data[index];\n                            result.pointIndex = index;\n                            return result;\n                        } else {\n                            return null;\n                        }\n                    }\n                    var maxPoint = pointIndex(yValues.lastIndexOf(y.domain()[1])),\n                        minPoint = pointIndex(yValues.indexOf(y.domain()[0])),\n                        currentPoint = pointIndex(yValues.length - 1);\n                    return [(showMinMaxPoints ? minPoint : null), (showMinMaxPoints ? maxPoint : null), (showCurrentPoint ? currentPoint : null)].filter(function (d) {return d != null;});\n                });\n            points.enter().append('circle');\n            points.exit().remove();\n            points\n                .attr('cx', function(d,i) { return x(getX(d,d.pointIndex)) })\n                .attr('cy', function(d,i) { return y(getY(d,d.pointIndex)) })\n                .attr('r', 2)\n                .attr('class', function(d,i) {\n                    return getX(d, d.pointIndex) == x.domain()[1] ? 'nv-point nv-currentValue' :\n                            getY(d, d.pointIndex) == y.domain()[0] ? 'nv-point nv-minValue' : 'nv-point nv-maxValue'\n                });\n        });\n        \n        renderWatch.renderEnd('sparkline immediate');\n        return chart;\n    }\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:            {get: function(){return width;}, set: function(_){width=_;}},\n        height:           {get: function(){return height;}, set: function(_){height=_;}},\n        xDomain:          {get: function(){return xDomain;}, set: function(_){xDomain=_;}},\n        yDomain:          {get: function(){return yDomain;}, set: function(_){yDomain=_;}},\n        xRange:           {get: function(){return xRange;}, set: function(_){xRange=_;}},\n        yRange:           {get: function(){return yRange;}, set: function(_){yRange=_;}},\n        xScale:           {get: function(){return x;}, set: function(_){x=_;}},\n        yScale:           {get: function(){return y;}, set: function(_){y=_;}},\n        animate:          {get: function(){return animate;}, set: function(_){animate=_;}},\n        showMinMaxPoints: {get: function(){return showMinMaxPoints;}, set: function(_){showMinMaxPoints=_;}},\n        showCurrentPoint: {get: function(){return showCurrentPoint;}, set: function(_){showCurrentPoint=_;}},\n\n        //functor options\n        x: {get: function(){return getX;}, set: function(_){getX=d3.functor(_);}},\n        y: {get: function(){return getY;}, set: function(_){getY=d3.functor(_);}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n        }}\n    });\n\n    chart.dispatch = dispatch;\n    nv.utils.initOptions(chart);\n    return chart;\n};\n\nnv.models.sparklinePlus = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var sparkline = nv.models.sparkline();\n\n    var margin = {top: 15, right: 100, bottom: 10, left: 50}\n        , width = null\n        , height = null\n        , x\n        , y\n        , index = []\n        , paused = false\n        , xTickFormat = d3.format(',r')\n        , yTickFormat = d3.format(',.2f')\n        , showLastValue = true\n        , alignValue = true\n        , rightAlignValue = false\n        , noData = null\n        , dispatch = d3.dispatch('renderEnd')\n        ;\n        \n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    function chart(selection) {\n        renderWatch.reset();\n        renderWatch.models(sparkline);\n        selection.each(function(data) {\n            var container = d3.select(this);\n            nv.utils.initSVG(container);\n\n            var availableWidth = nv.utils.availableWidth(width, container, margin),\n                availableHeight = nv.utils.availableHeight(height, container, margin);\n\n            chart.update = function() { container.call(chart); };\n            chart.container = this;\n\n            // Display No Data message if there's nothing to show.\n            if (!data || !data.length) {\n                nv.utils.noData(chart, container)\n                return chart;\n            } else {\n                container.selectAll('.nv-noData').remove();\n            }\n\n            var currentValue = sparkline.y()(data[data.length-1], data.length-1);\n\n            // Setup Scales\n            x = sparkline.xScale();\n            y = sparkline.yScale();\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-sparklineplus').data([data]);\n            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-sparklineplus');\n            var gEnter = wrapEnter.append('g');\n            var g = wrap.select('g');\n\n            gEnter.append('g').attr('class', 'nv-sparklineWrap');\n            gEnter.append('g').attr('class', 'nv-valueWrap');\n            gEnter.append('g').attr('class', 'nv-hoverArea');\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            // Main Chart Component(s)\n            var sparklineWrap = g.select('.nv-sparklineWrap');\n\n            sparkline.width(availableWidth).height(availableHeight);\n            sparklineWrap.call(sparkline);\n\n            if (showLastValue) {\n                var valueWrap = g.select('.nv-valueWrap');\n                var value = valueWrap.selectAll('.nv-currentValue')\n                    .data([currentValue]);\n\n                value.enter().append('text').attr('class', 'nv-currentValue')\n                    .attr('dx', rightAlignValue ? -8 : 8)\n                    .attr('dy', '.9em')\n                    .style('text-anchor', rightAlignValue ? 'end' : 'start');\n\n                value\n                    .attr('x', availableWidth + (rightAlignValue ? margin.right : 0))\n                    .attr('y', alignValue ? function (d) {\n                        return y(d)\n                    } : 0)\n                    .style('fill', sparkline.color()(data[data.length - 1], data.length - 1))\n                    .text(yTickFormat(currentValue));\n            }\n\n            gEnter.select('.nv-hoverArea').append('rect')\n                .on('mousemove', sparklineHover)\n                .on('click', function() { paused = !paused })\n                .on('mouseout', function() { index = []; updateValueLine(); });\n\n            g.select('.nv-hoverArea rect')\n                .attr('transform', function(d) { return 'translate(' + -margin.left + ',' + -margin.top + ')' })\n                .attr('width', availableWidth + margin.left + margin.right)\n                .attr('height', availableHeight + margin.top);\n\n            //index is currently global (within the chart), may or may not keep it that way\n            function updateValueLine() {\n                if (paused) return;\n\n                var hoverValue = g.selectAll('.nv-hoverValue').data(index);\n\n                var hoverEnter = hoverValue.enter()\n                    .append('g').attr('class', 'nv-hoverValue')\n                    .style('stroke-opacity', 0)\n                    .style('fill-opacity', 0);\n\n                hoverValue.exit()\n                    .transition().duration(250)\n                    .style('stroke-opacity', 0)\n                    .style('fill-opacity', 0)\n                    .remove();\n\n                hoverValue\n                    .attr('transform', function(d) { return 'translate(' + x(sparkline.x()(data[d],d)) + ',0)' })\n                    .transition().duration(250)\n                    .style('stroke-opacity', 1)\n                    .style('fill-opacity', 1);\n\n                if (!index.length) return;\n\n                hoverEnter.append('line')\n                    .attr('x1', 0)\n                    .attr('y1', -margin.top)\n                    .attr('x2', 0)\n                    .attr('y2', availableHeight);\n\n                hoverEnter.append('text').attr('class', 'nv-xValue')\n                    .attr('x', -6)\n                    .attr('y', -margin.top)\n                    .attr('text-anchor', 'end')\n                    .attr('dy', '.9em');\n\n                g.select('.nv-hoverValue .nv-xValue')\n                    .text(xTickFormat(sparkline.x()(data[index[0]], index[0])));\n\n                hoverEnter.append('text').attr('class', 'nv-yValue')\n                    .attr('x', 6)\n                    .attr('y', -margin.top)\n                    .attr('text-anchor', 'start')\n                    .attr('dy', '.9em');\n\n                g.select('.nv-hoverValue .nv-yValue')\n                    .text(yTickFormat(sparkline.y()(data[index[0]], index[0])));\n            }\n\n            function sparklineHover() {\n                if (paused) return;\n\n                var pos = d3.mouse(this)[0] - margin.left;\n\n                function getClosestIndex(data, x) {\n                    var distance = Math.abs(sparkline.x()(data[0], 0) - x);\n                    var closestIndex = 0;\n                    for (var i = 0; i < data.length; i++){\n                        if (Math.abs(sparkline.x()(data[i], i) - x) < distance) {\n                            distance = Math.abs(sparkline.x()(data[i], i) - x);\n                            closestIndex = i;\n                        }\n                    }\n                    return closestIndex;\n                }\n\n                index = [getClosestIndex(data, Math.round(x.invert(pos)))];\n                updateValueLine();\n            }\n\n        });\n        renderWatch.renderEnd('sparklinePlus immediate');\n        return chart;\n    }\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    // expose chart's sub-components\n    chart.dispatch = dispatch;\n    chart.sparkline = sparkline;\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:           {get: function(){return width;}, set: function(_){width=_;}},\n        height:          {get: function(){return height;}, set: function(_){height=_;}},\n        xTickFormat:     {get: function(){return xTickFormat;}, set: function(_){xTickFormat=_;}},\n        yTickFormat:     {get: function(){return yTickFormat;}, set: function(_){yTickFormat=_;}},\n        showLastValue:   {get: function(){return showLastValue;}, set: function(_){showLastValue=_;}},\n        alignValue:      {get: function(){return alignValue;}, set: function(_){alignValue=_;}},\n        rightAlignValue: {get: function(){return rightAlignValue;}, set: function(_){rightAlignValue=_;}},\n        noData:          {get: function(){return noData;}, set: function(_){noData=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }}\n    });\n\n    nv.utils.inheritOptions(chart, sparkline);\n    nv.utils.initOptions(chart);\n\n    return chart;\n};\n\nnv.models.stackedArea = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n        , width = 960\n        , height = 500\n        , color = nv.utils.defaultColor() // a function that computes the color\n        , id = Math.floor(Math.random() * 100000) //Create semi-unique ID incase user doesn't selet one\n        , container = null\n        , getX = function(d) { return d.x } // accessor to get the x value from a data point\n        , getY = function(d) { return d.y } // accessor to get the y value from a data point\n        , defined = function(d,i) { return !isNaN(getY(d,i)) && getY(d,i) !== null } // allows a line to be not continuous when it is not defined\n        , style = 'stack'\n        , offset = 'zero'\n        , order = 'default'\n        , interpolate = 'linear'  // controls the line interpolation\n        , clipEdge = false // if true, masks lines within x and y scale\n        , x //can be accessed via chart.xScale()\n        , y //can be accessed via chart.yScale()\n        , scatter = nv.models.scatter()\n        , duration = 250\n        , dispatch =  d3.dispatch('areaClick', 'areaMouseover', 'areaMouseout','renderEnd', 'elementClick', 'elementMouseover', 'elementMouseout')\n        ;\n\n    scatter\n        .pointSize(2.2) // default size\n        .pointDomain([2.2, 2.2]) // all the same size by default\n    ;\n\n    /************************************\n     * offset:\n     *   'wiggle' (stream)\n     *   'zero' (stacked)\n     *   'expand' (normalize to 100%)\n     *   'silhouette' (simple centered)\n     *\n     * order:\n     *   'inside-out' (stream)\n     *   'default' (input order)\n     ************************************/\n\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n        renderWatch.reset();\n        renderWatch.models(scatter);\n        selection.each(function(data) {\n            var availableWidth = width - margin.left - margin.right,\n                availableHeight = height - margin.top - margin.bottom;\n\n            container = d3.select(this);\n            nv.utils.initSVG(container);\n\n            // Setup Scales\n            x = scatter.xScale();\n            y = scatter.yScale();\n\n            var dataRaw = data;\n            // Injecting point index into each point because d3.layout.stack().out does not give index\n            data.forEach(function(aseries, i) {\n                aseries.seriesIndex = i;\n                aseries.values = aseries.values.map(function(d, j) {\n                    d.index = j;\n                    d.seriesIndex = i;\n                    return d;\n                });\n            });\n\n            var dataFiltered = data.filter(function(series) {\n                return !series.disabled;\n            });\n\n            data = d3.layout.stack()\n                .order(order)\n                .offset(offset)\n                .values(function(d) { return d.values })  //TODO: make values customizeable in EVERY model in this fashion\n                .x(getX)\n                .y(getY)\n                .out(function(d, y0, y) {\n                    d.display = {\n                        y: y,\n                        y0: y0\n                    };\n                })\n            (dataFiltered);\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-stackedarea').data([data]);\n            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-stackedarea');\n            var defsEnter = wrapEnter.append('defs');\n            var gEnter = wrapEnter.append('g');\n            var g = wrap.select('g');\n\n            gEnter.append('g').attr('class', 'nv-areaWrap');\n            gEnter.append('g').attr('class', 'nv-scatterWrap');\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n            \n            // If the user has not specified forceY, make sure 0 is included in the domain\n            // Otherwise, use user-specified values for forceY\n            if (scatter.forceY().length == 0) {\n                scatter.forceY().push(0);\n            }\n            \n            scatter\n                .width(availableWidth)\n                .height(availableHeight)\n                .x(getX)\n                .y(function(d) {\n                    if (d.display !== undefined) { return d.display.y + d.display.y0; }\n                })\n                .color(data.map(function(d,i) {\n                    d.color = d.color || color(d, d.seriesIndex);\n                    return d.color;\n                }));\n\n            var scatterWrap = g.select('.nv-scatterWrap')\n                .datum(data);\n\n            scatterWrap.call(scatter);\n\n            defsEnter.append('clipPath')\n                .attr('id', 'nv-edge-clip-' + id)\n                .append('rect');\n\n            wrap.select('#nv-edge-clip-' + id + ' rect')\n                .attr('width', availableWidth)\n                .attr('height', availableHeight);\n\n            g.attr('clip-path', clipEdge ? 'url(#nv-edge-clip-' + id + ')' : '');\n\n            var area = d3.svg.area()\n                .defined(defined)\n                .x(function(d,i)  { return x(getX(d,i)) })\n                .y0(function(d) {\n                    return y(d.display.y0)\n                })\n                .y1(function(d) {\n                    return y(d.display.y + d.display.y0)\n                })\n                .interpolate(interpolate);\n\n            var zeroArea = d3.svg.area()\n                .defined(defined)\n                .x(function(d,i)  { return x(getX(d,i)) })\n                .y0(function(d) { return y(d.display.y0) })\n                .y1(function(d) { return y(d.display.y0) });\n\n            var path = g.select('.nv-areaWrap').selectAll('path.nv-area')\n                .data(function(d) { return d });\n\n            path.enter().append('path').attr('class', function(d,i) { return 'nv-area nv-area-' + i })\n                .attr('d', function(d,i){\n                    return zeroArea(d.values, d.seriesIndex);\n                })\n                .on('mouseover', function(d,i) {\n                    d3.select(this).classed('hover', true);\n                    dispatch.areaMouseover({\n                        point: d,\n                        series: d.key,\n                        pos: [d3.event.pageX, d3.event.pageY],\n                        seriesIndex: d.seriesIndex\n                    });\n                })\n                .on('mouseout', function(d,i) {\n                    d3.select(this).classed('hover', false);\n                    dispatch.areaMouseout({\n                        point: d,\n                        series: d.key,\n                        pos: [d3.event.pageX, d3.event.pageY],\n                        seriesIndex: d.seriesIndex\n                    });\n                })\n                .on('click', function(d,i) {\n                    d3.select(this).classed('hover', false);\n                    dispatch.areaClick({\n                        point: d,\n                        series: d.key,\n                        pos: [d3.event.pageX, d3.event.pageY],\n                        seriesIndex: d.seriesIndex\n                    });\n                });\n\n            path.exit().remove();\n            path.style('fill', function(d,i){\n                    return d.color || color(d, d.seriesIndex)\n                })\n                .style('stroke', function(d,i){ return d.color || color(d, d.seriesIndex) });\n            path.watchTransition(renderWatch,'stackedArea path')\n                .attr('d', function(d,i) {\n                    return area(d.values,i)\n                });\n\n            //============================================================\n            // Event Handling/Dispatching (in chart's scope)\n            //------------------------------------------------------------\n\n            scatter.dispatch.on('elementMouseover.area', function(e) {\n                g.select('.nv-chart-' + id + ' .nv-area-' + e.seriesIndex).classed('hover', true);\n            });\n            scatter.dispatch.on('elementMouseout.area', function(e) {\n                g.select('.nv-chart-' + id + ' .nv-area-' + e.seriesIndex).classed('hover', false);\n            });\n\n            //Special offset functions\n            chart.d3_stackedOffset_stackPercent = function(stackData) {\n                var n = stackData.length,    //How many series\n                    m = stackData[0].length,     //how many points per series\n                    i,\n                    j,\n                    o,\n                    y0 = [];\n\n                for (j = 0; j < m; ++j) { //Looping through all points\n                    for (i = 0, o = 0; i < dataRaw.length; i++) { //looping through all series\n                        o += getY(dataRaw[i].values[j]); //total y value of all series at a certian point in time.\n                    }\n\n                    if (o) for (i = 0; i < n; i++) { //(total y value of all series at point in time i) != 0\n                        stackData[i][j][1] /= o;\n                    } else { //(total y value of all series at point in time i) == 0\n                        for (i = 0; i < n; i++) {\n                            stackData[i][j][1] = 0;\n                        }\n                    }\n                }\n                for (j = 0; j < m; ++j) y0[j] = 0;\n                return y0;\n            };\n\n        });\n\n        renderWatch.renderEnd('stackedArea immediate');\n        return chart;\n    }\n\n    //============================================================\n    // Global getters and setters\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n    chart.scatter = scatter;\n\n    scatter.dispatch.on('elementClick', function(){ dispatch.elementClick.apply(this, arguments); });\n    scatter.dispatch.on('elementMouseover', function(){ dispatch.elementMouseover.apply(this, arguments); });\n    scatter.dispatch.on('elementMouseout', function(){ dispatch.elementMouseout.apply(this, arguments); });\n\n    chart.interpolate = function(_) {\n        if (!arguments.length) return interpolate;\n        interpolate = _;\n        return chart;\n    };\n\n    chart.duration = function(_) {\n        if (!arguments.length) return duration;\n        duration = _;\n        renderWatch.reset(duration);\n        scatter.duration(duration);\n        return chart;\n    };\n\n    chart.dispatch = dispatch;\n    chart.scatter = scatter;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:      {get: function(){return width;}, set: function(_){width=_;}},\n        height:     {get: function(){return height;}, set: function(_){height=_;}},\n        defined: {get: function(){return defined;}, set: function(_){defined=_;}},\n        clipEdge: {get: function(){return clipEdge;}, set: function(_){clipEdge=_;}},\n        offset:      {get: function(){return offset;}, set: function(_){offset=_;}},\n        order:    {get: function(){return order;}, set: function(_){order=_;}},\n        interpolate:    {get: function(){return interpolate;}, set: function(_){interpolate=_;}},\n\n        // simple functor options\n        x:     {get: function(){return getX;}, set: function(_){getX = d3.functor(_);}},\n        y:     {get: function(){return getY;}, set: function(_){getY = d3.functor(_);}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n        }},\n        style: {get: function(){return style;}, set: function(_){\n            style = _;\n            switch (style) {\n                case 'stack':\n                    chart.offset('zero');\n                    chart.order('default');\n                    break;\n                case 'stream':\n                    chart.offset('wiggle');\n                    chart.order('inside-out');\n                    break;\n                case 'stream-center':\n                    chart.offset('silhouette');\n                    chart.order('inside-out');\n                    break;\n                case 'expand':\n                    chart.offset('expand');\n                    chart.order('default');\n                    break;\n                case 'stack_percent':\n                    chart.offset(chart.d3_stackedOffset_stackPercent);\n                    chart.order('default');\n                    break;\n            }\n        }},\n        duration: {get: function(){return duration;}, set: function(_){\n            duration = _;\n            renderWatch.reset(duration);\n            scatter.duration(duration);\n        }}\n    });\n\n    nv.utils.inheritOptions(chart, scatter);\n    nv.utils.initOptions(chart);\n\n    return chart;\n};\n\nnv.models.stackedAreaChart = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var stacked = nv.models.stackedArea()\n        , xAxis = nv.models.axis()\n        , yAxis = nv.models.axis()\n        , legend = nv.models.legend()\n        , controls = nv.models.legend()\n        , interactiveLayer = nv.interactiveGuideline()\n        , tooltip = nv.models.tooltip()\n        , focus = nv.models.focus(nv.models.stackedArea())\n        ;\n\n    var margin = {top: 10, right: 25, bottom: 50, left: 60}\n        , marginTop = null\n        , width = null\n        , height = null\n        , color = nv.utils.defaultColor()\n        , showControls = true\n        , showLegend = true\n        , legendPosition = 'top'\n        , showXAxis = true\n        , showYAxis = true\n        , rightAlignYAxis = false\n        , focusEnable = false\n        , useInteractiveGuideline = false\n        , showTotalInTooltip = true\n        , totalLabel = 'TOTAL'\n        , x //can be accessed via chart.xScale()\n        , y //can be accessed via chart.yScale()\n        , state = nv.utils.state()\n        , defaultState = null\n        , noData = null\n        , dispatch = d3.dispatch('stateChange', 'changeState','renderEnd')\n        , controlWidth = 250\n        , controlOptions = ['Stacked','Stream','Expanded']\n        , controlLabels = {}\n        , duration = 250\n        ;\n\n    state.style = stacked.style();\n    xAxis.orient('bottom').tickPadding(7);\n    yAxis.orient((rightAlignYAxis) ? 'right' : 'left');\n\n    tooltip\n        .headerFormatter(function(d, i) {\n            return xAxis.tickFormat()(d, i);\n        })\n        .valueFormatter(function(d, i) {\n            return yAxis.tickFormat()(d, i);\n        });\n\n    interactiveLayer.tooltip\n        .headerFormatter(function(d, i) {\n            return xAxis.tickFormat()(d, i);\n        })\n        .valueFormatter(function(d, i) {\n            return d == null ? \"N/A\" : yAxis.tickFormat()(d, i);\n        });\n\n    var oldYTickFormat = null,\n        oldValueFormatter = null;\n\n    controls.updateState(false);\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n    var style = stacked.style();\n\n    var stateGetter = function(data) {\n        return function(){\n            return {\n                active: data.map(function(d) { return !d.disabled }),\n                style: stacked.style()\n            };\n        }\n    };\n\n    var stateSetter = function(data) {\n        return function(state) {\n            if (state.style !== undefined)\n                style = state.style;\n            if (state.active !== undefined)\n                data.forEach(function(series,i) {\n                    series.disabled = !state.active[i];\n                });\n        }\n    };\n\n    var percentFormatter = d3.format('%');\n\n    function chart(selection) {\n        renderWatch.reset();\n        renderWatch.models(stacked);\n        if (showXAxis) renderWatch.models(xAxis);\n        if (showYAxis) renderWatch.models(yAxis);\n\n        selection.each(function(data) {\n            var container = d3.select(this),\n                that = this;\n            nv.utils.initSVG(container);\n\n            var availableWidth = nv.utils.availableWidth(width, container, margin),\n                availableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n\n            chart.update = function() { container.transition().duration(duration).call(chart); };\n            chart.container = this;\n\n            state\n                .setter(stateSetter(data), chart.update)\n                .getter(stateGetter(data))\n                .update();\n\n            // DEPRECATED set state.disabled\n            state.disabled = data.map(function(d) { return !!d.disabled });\n\n            if (!defaultState) {\n                var key;\n                defaultState = {};\n                for (key in state) {\n                    if (state[key] instanceof Array)\n                        defaultState[key] = state[key].slice(0);\n                    else\n                        defaultState[key] = state[key];\n                }\n            }\n\n            // Display No Data message if there's nothing to show.\n            if (!data || !data.length || !data.filter(function(d) { return d.values.length }).length) {\n                nv.utils.noData(chart, container)\n                return chart;\n            } else {\n                container.selectAll('.nv-noData').remove();\n            }\n            // Setup Scales\n            x = stacked.xScale();\n            y = stacked.yScale();\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-stackedAreaChart').data([data]);\n            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-stackedAreaChart').append('g');\n            var g = wrap.select('g');\n\n            gEnter.append('g').attr('class', 'nv-legendWrap');\n            gEnter.append('g').attr('class', 'nv-controlsWrap');\n\n            var focusEnter = gEnter.append('g').attr('class', 'nv-focus');\n            focusEnter.append('g').attr('class', 'nv-background').append('rect');\n            focusEnter.append('g').attr('class', 'nv-x nv-axis');\n            focusEnter.append('g').attr('class', 'nv-y nv-axis');\n            focusEnter.append('g').attr('class', 'nv-stackedWrap');\n            focusEnter.append('g').attr('class', 'nv-interactive');\n\n            // g.select(\"rect\").attr(\"width\",availableWidth).attr(\"height\",availableHeight);\n\n            var contextEnter = gEnter.append('g').attr('class', 'nv-focusWrap');\n\n            // Legend\n            if (!showLegend) {\n                g.select('.nv-legendWrap').selectAll('*').remove();\n            } else {\n                var legendWidth = (showControls && legendPosition === 'top') ? availableWidth - controlWidth : availableWidth;\n\n                legend.width(legendWidth);\n                g.select('.nv-legendWrap').datum(data).call(legend);\n\n                if (legendPosition === 'bottom') {\n                \t// constant from axis.js, plus some margin for better layout\n                \tvar xAxisHeight = (showXAxis ? 12 : 0) + 10;\n                   \tmargin.bottom = Math.max(legend.height() + xAxisHeight, margin.bottom);\n                   \tavailableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n                \tvar legendTop = availableHeight + xAxisHeight;\n                    g.select('.nv-legendWrap')\n                        .attr('transform', 'translate(0,' + legendTop +')');\n                } else if (legendPosition === 'top') {\n                    if (!marginTop && margin.top != legend.height()) {\n                        margin.top = legend.height();\n                        availableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n                    }\n\n                    g.select('.nv-legendWrap')\n                    \t.attr('transform', 'translate(' + (availableWidth-legendWidth) + ',' + (-margin.top) +')');\n                }\n            }\n\n            // Controls\n            if (!showControls) {\n                 g.select('.nv-controlsWrap').selectAll('*').remove();\n            } else {\n                var controlsData = [\n                    {\n                        key: controlLabels.stacked || 'Stacked',\n                        metaKey: 'Stacked',\n                        disabled: stacked.style() != 'stack',\n                        style: 'stack'\n                    },\n                    {\n                        key: controlLabels.stream || 'Stream',\n                        metaKey: 'Stream',\n                        disabled: stacked.style() != 'stream',\n                        style: 'stream'\n                    },\n                    {\n                        key: controlLabels.expanded || 'Expanded',\n                        metaKey: 'Expanded',\n                        disabled: stacked.style() != 'expand',\n                        style: 'expand'\n                    },\n                    {\n                        key: controlLabels.stack_percent || 'Stack %',\n                        metaKey: 'Stack_Percent',\n                        disabled: stacked.style() != 'stack_percent',\n                        style: 'stack_percent'\n                    }\n                ];\n\n                controlWidth = (controlOptions.length/3) * 260;\n                controlsData = controlsData.filter(function(d) {\n                    return controlOptions.indexOf(d.metaKey) !== -1;\n                });\n\n                controls\n                    .width( controlWidth )\n                    .color(['#444', '#444', '#444']);\n\n                g.select('.nv-controlsWrap')\n                    .datum(controlsData)\n                    .call(controls);\n\n                var requiredTop = Math.max(controls.height(), showLegend && (legendPosition === 'top') ? legend.height() : 0);\n\n                if ( margin.top != requiredTop ) {\n                    margin.top = requiredTop;\n                    availableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n                }\n\n                g.select('.nv-controlsWrap')\n                    .attr('transform', 'translate(0,' + (-margin.top) +')');\n            }\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            if (rightAlignYAxis) {\n                g.select(\".nv-y.nv-axis\")\n                    .attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n            }\n\n            //Set up interactive layer\n            if (useInteractiveGuideline) {\n                interactiveLayer\n                    .width(availableWidth)\n                    .height(availableHeight)\n                    .margin({left: margin.left, top: margin.top})\n                    .svgContainer(container)\n                    .xScale(x);\n                wrap.select(\".nv-interactive\").call(interactiveLayer);\n            }\n\n            g.select('.nv-focus .nv-background rect')\n                .attr('width', availableWidth)\n                .attr('height', availableHeight);\n\n            stacked\n                .width(availableWidth)\n                .height(availableHeight)\n                .color(data.map(function(d,i) {\n                    return d.color || color(d, i);\n                }).filter(function(d,i) { return !data[i].disabled; }));\n\n            var stackedWrap = g.select('.nv-focus .nv-stackedWrap')\n                .datum(data.filter(function(d) { return !d.disabled; }));\n\n            // Setup Axes\n            if (showXAxis) {\n                xAxis.scale(x)\n                    ._ticks( nv.utils.calcTicksX(availableWidth/100, data) )\n                    .tickSize( -availableHeight, 0);\n            }\n\n            if (showYAxis) {\n                var ticks;\n                if (stacked.offset() === 'wiggle') {\n                    ticks = 0;\n                }\n                else {\n                    ticks = nv.utils.calcTicksY(availableHeight/36, data);\n                }\n                yAxis.scale(y)\n                    ._ticks(ticks)\n                    .tickSize(-availableWidth, 0);\n            }\n\n            //============================================================\n            // Update Axes\n            //============================================================\n            function updateXAxis() {\n                if(showXAxis) {\n                    g.select('.nv-focus .nv-x.nv-axis')\n                        .attr('transform', 'translate(0,' + availableHeight + ')')\n                        .transition()\n                        .duration(duration)\n                        .call(xAxis)\n                        ;\n                }\n            }\n\n            function updateYAxis() {\n                if(showYAxis) {\n                    if (stacked.style() === 'expand' || stacked.style() === 'stack_percent') {\n                        var currentFormat = yAxis.tickFormat();\n\n                        if ( !oldYTickFormat || currentFormat !== percentFormatter )\n                            oldYTickFormat = currentFormat;\n\n                        //Forces the yAxis to use percentage in 'expand' mode.\n                        yAxis.tickFormat(percentFormatter);\n                    }\n                    else {\n                        if (oldYTickFormat) {\n                            yAxis.tickFormat(oldYTickFormat);\n                            oldYTickFormat = null;\n                        }\n                    }\n\n                    g.select('.nv-focus .nv-y.nv-axis')\n                    .transition().duration(0)\n                    .call(yAxis);\n                }\n            }\n\n            //============================================================\n            // Update Focus\n            //============================================================\n            if(!focusEnable) {\n                stackedWrap.transition().call(stacked);\n                updateXAxis();\n                updateYAxis();\n            } else {\n                focus.width(availableWidth);\n                g.select('.nv-focusWrap')\n                    .attr('transform', 'translate(0,' + ( availableHeight + margin.bottom + focus.margin().top) + ')')\n                    .datum(data.filter(function(d) { return !d.disabled; }))\n                    .call(focus);\n                var extent = focus.brush.empty() ? focus.xDomain() : focus.brush.extent();\n                if(extent !== null){\n                    onBrush(extent);\n                }\n            }\n\n            //============================================================\n            // Event Handling/Dispatching (in chart's scope)\n            //------------------------------------------------------------\n\n            stacked.dispatch.on('areaClick.toggle', function(e) {\n                if (data.filter(function(d) { return !d.disabled }).length === 1)\n                    data.forEach(function(d) {\n                        d.disabled = false;\n                    });\n                else\n                    data.forEach(function(d,i) {\n                        d.disabled = (i != e.seriesIndex);\n                    });\n\n                state.disabled = data.map(function(d) { return !!d.disabled });\n                dispatch.stateChange(state);\n\n                chart.update();\n            });\n\n            legend.dispatch.on('stateChange', function(newState) {\n                for (var key in newState)\n                    state[key] = newState[key];\n                dispatch.stateChange(state);\n                chart.update();\n            });\n\n            controls.dispatch.on('legendClick', function(d,i) {\n                if (!d.disabled) return;\n\n                controlsData = controlsData.map(function(s) {\n                    s.disabled = true;\n                    return s;\n                });\n                d.disabled = false;\n\n                stacked.style(d.style);\n\n\n                state.style = stacked.style();\n                dispatch.stateChange(state);\n\n                chart.update();\n            });\n\n            interactiveLayer.dispatch.on('elementMousemove', function(e) {\n                stacked.clearHighlights();\n                var singlePoint, pointIndex, pointXLocation, allData = [], valueSum = 0, allNullValues = true;\n                data\n                    .filter(function(series, i) {\n                        series.seriesIndex = i;\n                        return !series.disabled;\n                    })\n                    .forEach(function(series,i) {\n                        pointIndex = nv.interactiveBisect(series.values, e.pointXValue, chart.x());\n                        var point = series.values[pointIndex];\n                        var pointYValue = chart.y()(point, pointIndex);\n                        if (pointYValue != null) {\n                            stacked.highlightPoint(i, pointIndex, true);\n                        }\n                        if (typeof point === 'undefined') return;\n                        if (typeof singlePoint === 'undefined') singlePoint = point;\n                        if (typeof pointXLocation === 'undefined') pointXLocation = chart.xScale()(chart.x()(point,pointIndex));\n\n                        //If we are in 'expand' mode, use the stacked percent value instead of raw value.\n                        var tooltipValue = (stacked.style() == 'expand') ? point.display.y : chart.y()(point,pointIndex);\n                        allData.push({\n                            key: series.key,\n                            value: tooltipValue,\n                            color: color(series,series.seriesIndex),\n                            point: point\n                        });\n\n                        if (showTotalInTooltip && stacked.style() != 'expand' && tooltipValue != null) {\n                          valueSum += tooltipValue;\n                          allNullValues = false;\n                        };\n                    });\n\n                allData.reverse();\n\n                //Highlight the tooltip entry based on which stack the mouse is closest to.\n                if (allData.length > 2) {\n                    var yValue = chart.yScale().invert(e.mouseY);\n                    var yDistMax = Infinity, indexToHighlight = null;\n                    allData.forEach(function(series,i) {\n\n                        //To handle situation where the stacked area chart is negative, we need to use absolute values\n                        //when checking if the mouse Y value is within the stack area.\n                        yValue = Math.abs(yValue);\n                        var stackedY0 = Math.abs(series.point.display.y0);\n                        var stackedY = Math.abs(series.point.display.y);\n                        if ( yValue >= stackedY0 && yValue <= (stackedY + stackedY0))\n                        {\n                            indexToHighlight = i;\n                            return;\n                        }\n                    });\n                    if (indexToHighlight != null)\n                        allData[indexToHighlight].highlight = true;\n                }\n\n                //If we are not in 'expand' mode, add a 'Total' row to the tooltip.\n                if (showTotalInTooltip && stacked.style() != 'expand' && allData.length >= 2 && !allNullValues) {\n                    allData.push({\n                        key: totalLabel,\n                        value: valueSum,\n                        total: true\n                    });\n                }\n\n                var xValue = chart.x()(singlePoint,pointIndex);\n\n                var valueFormatter = interactiveLayer.tooltip.valueFormatter();\n                // Keeps track of the tooltip valueFormatter if the chart changes to expanded view\n                if (stacked.style() === 'expand' || stacked.style() === 'stack_percent') {\n                    if ( !oldValueFormatter ) {\n                        oldValueFormatter = valueFormatter;\n                    }\n                    //Forces the tooltip to use percentage in 'expand' mode.\n                    valueFormatter = d3.format(\".1%\");\n                }\n                else {\n                    if (oldValueFormatter) {\n                        valueFormatter = oldValueFormatter;\n                        oldValueFormatter = null;\n                    }\n                }\n\n                interactiveLayer.tooltip\n                    .valueFormatter(valueFormatter)\n                    .data(\n                    {\n                        value: xValue,\n                        series: allData\n                    }\n                )();\n\n                interactiveLayer.renderGuideLine(pointXLocation);\n\n            });\n\n            interactiveLayer.dispatch.on(\"elementMouseout\",function(e) {\n                stacked.clearHighlights();\n            });\n\n            /* Update `main' graph on brush update. */\n            focus.dispatch.on(\"onBrush\", function(extent) {\n                onBrush(extent);\n            });\n\n            // Update chart from a state object passed to event handler\n            dispatch.on('changeState', function(e) {\n\n                if (typeof e.disabled !== 'undefined' && data.length === e.disabled.length) {\n                    data.forEach(function(series,i) {\n                        series.disabled = e.disabled[i];\n                    });\n\n                    state.disabled = e.disabled;\n                }\n\n                if (typeof e.style !== 'undefined') {\n                    stacked.style(e.style);\n                    style = e.style;\n                }\n\n                chart.update();\n            });\n\n            //============================================================\n            // Functions\n            //------------------------------------------------------------\n\n            function onBrush(extent) {\n                // Update Main (Focus)\n                var stackedWrap = g.select('.nv-focus .nv-stackedWrap')\n                    .datum(\n                    data.filter(function(d) { return !d.disabled; })\n                        .map(function(d,i) {\n                            return {\n                                key: d.key,\n                                area: d.area,\n                                classed: d.classed,\n                                values: d.values.filter(function(d,i) {\n                                    return stacked.x()(d,i) >= extent[0] && stacked.x()(d,i) <= extent[1];\n                                }),\n                                disableTooltip: d.disableTooltip\n                            };\n                        })\n                );\n                stackedWrap.transition().duration(duration).call(stacked);\n\n                // Update Main (Focus) Axes\n                updateXAxis();\n                updateYAxis();\n            }\n\n        });\n\n        renderWatch.renderEnd('stacked Area chart immediate');\n        return chart;\n    }\n\n    //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n    stacked.dispatch.on('elementMouseover.tooltip', function(evt) {\n        evt.point['x'] = stacked.x()(evt.point);\n        evt.point['y'] = stacked.y()(evt.point);\n        tooltip.data(evt).hidden(false);\n    });\n\n    stacked.dispatch.on('elementMouseout.tooltip', function(evt) {\n        tooltip.hidden(true)\n    });\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    // expose chart's sub-components\n    chart.dispatch = dispatch;\n    chart.stacked = stacked;\n    chart.legend = legend;\n    chart.controls = controls;\n    chart.xAxis = xAxis;\n    chart.x2Axis = focus.xAxis;\n    chart.yAxis = yAxis;\n    chart.y2Axis = focus.yAxis;\n    chart.interactiveLayer = interactiveLayer;\n    chart.tooltip = tooltip;\n    chart.focus = focus;\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:      {get: function(){return width;}, set: function(_){width=_;}},\n        height:     {get: function(){return height;}, set: function(_){height=_;}},\n        showLegend: {get: function(){return showLegend;}, set: function(_){showLegend=_;}},\n        legendPosition: {get: function(){return legendPosition;}, set: function(_){legendPosition=_;}},\n        showXAxis:      {get: function(){return showXAxis;}, set: function(_){showXAxis=_;}},\n        showYAxis:    {get: function(){return showYAxis;}, set: function(_){showYAxis=_;}},\n        defaultState:    {get: function(){return defaultState;}, set: function(_){defaultState=_;}},\n        noData:    {get: function(){return noData;}, set: function(_){noData=_;}},\n        showControls:    {get: function(){return showControls;}, set: function(_){showControls=_;}},\n        controlLabels:    {get: function(){return controlLabels;}, set: function(_){controlLabels=_;}},\n        controlOptions:    {get: function(){return controlOptions;}, set: function(_){controlOptions=_;}},\n        showTotalInTooltip:      {get: function(){return showTotalInTooltip;}, set: function(_){showTotalInTooltip=_;}},\n        totalLabel:      {get: function(){return totalLabel;}, set: function(_){totalLabel=_;}},\n        focusEnable:    {get: function(){return focusEnable;}, set: function(_){focusEnable=_;}},\n        focusHeight:     {get: function(){return focus.height();}, set: function(_){focus.height(_);}},\n        brushExtent: {get: function(){return focus.brushExtent();}, set: function(_){focus.brushExtent(_);}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            if (_.top !== undefined) {\n                margin.top = _.top;\n                marginTop = _.top;\n            }\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        focusMargin: {get: function(){return focus.margin}, set: function(_){\n            focus.margin.top    = _.top    !== undefined ? _.top    : focus.margin.top;\n            focus.margin.right  = _.right  !== undefined ? _.right  : focus.margin.right;\n            focus.margin.bottom = _.bottom !== undefined ? _.bottom : focus.margin.bottom;\n            focus.margin.left   = _.left   !== undefined ? _.left   : focus.margin.left;\n        }},\n        duration: {get: function(){return duration;}, set: function(_){\n            duration = _;\n            renderWatch.reset(duration);\n            stacked.duration(duration);\n            xAxis.duration(duration);\n            yAxis.duration(duration);\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n            legend.color(color);\n            stacked.color(color);\n            focus.color(color);\n        }},\n        x: {get: function(){return stacked.x();}, set: function(_){\n            stacked.x(_);\n            focus.x(_);\n        }},\n        y: {get: function(){return stacked.y();}, set: function(_){\n            stacked.y(_);\n            focus.y(_);\n        }},\n        rightAlignYAxis: {get: function(){return rightAlignYAxis;}, set: function(_){\n            rightAlignYAxis = _;\n            yAxis.orient( rightAlignYAxis ? 'right' : 'left');\n        }},\n        useInteractiveGuideline: {get: function(){return useInteractiveGuideline;}, set: function(_){\n            useInteractiveGuideline = !!_;\n            chart.interactive(!_);\n            chart.useVoronoi(!_);\n            stacked.scatter.interactive(!_);\n        }}\n    });\n\n    nv.utils.inheritOptions(chart, stacked);\n    nv.utils.initOptions(chart);\n\n    return chart;\n};\n\nnv.models.stackedAreaWithFocusChart = function() {\n  return nv.models.stackedAreaChart()\n    .margin({ bottom: 30 })\n    .focusEnable( true );\n};\n// based on http://bl.ocks.org/kerryrodden/477c1bfb081b783f80ad\nnv.models.sunburst = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n        , width = 600\n        , height = 600\n        , mode = \"count\"\n        , modes = {count: function(d) { return 1; }, value: function(d) { return d.value || d.size }, size: function(d) { return d.value || d.size }}\n        , id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n        , container = null\n        , color = nv.utils.defaultColor()\n        , showLabels = false\n        , labelFormat = function(d){if(mode === 'count'){return d.name + ' #' + d.value}else{return d.name + ' ' + (d.value || d.size)}}\n        , labelThreshold = 0.02\n        , sort = function(d1, d2){return d1.name > d2.name;}\n        , key = function(d,i){return d.name;}\n        , groupColorByParent = true\n        , duration = 500\n        , dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMousemove', 'elementMouseover', 'elementMouseout', 'renderEnd');\n\n    //============================================================\n    // aux functions and setup\n    //------------------------------------------------------------\n\n    var x = d3.scale.linear().range([0, 2 * Math.PI]);\n    var y = d3.scale.sqrt();\n\n    var partition = d3.layout.partition().sort(sort);\n\n    var node, availableWidth, availableHeight, radius;\n    var prevPositions = {};\n\n    var arc = d3.svg.arc()\n        .startAngle(function(d) {return Math.max(0, Math.min(2 * Math.PI, x(d.x))) })\n        .endAngle(function(d) {return Math.max(0, Math.min(2 * Math.PI, x(d.x + d.dx))) })\n        .innerRadius(function(d) {return Math.max(0, y(d.y)) })\n        .outerRadius(function(d) {return Math.max(0, y(d.y + d.dy)) });\n\n    function rotationToAvoidUpsideDown(d) {\n        var centerAngle = computeCenterAngle(d);\n        if(centerAngle > 90){\n            return 180;\n        }\n        else {\n            return 0;\n        }\n    }\n\n    function computeCenterAngle(d) {\n        var startAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x)));\n        var endAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x + d.dx)));\n        var centerAngle = (((startAngle + endAngle) / 2) * (180 / Math.PI)) - 90;\n        return centerAngle;\n    }\n\n    function computeNodePercentage(d) {\n        var startAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x)));\n        var endAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x + d.dx)));\n        return (endAngle - startAngle) / (2 * Math.PI);\n    }\n\n    function labelThresholdMatched(d) {\n        var startAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x)));\n        var endAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x + d.dx)));\n\n        var size = endAngle - startAngle;\n        return size > labelThreshold;\n    }\n\n    // When zooming: interpolate the scales.\n    function arcTweenZoom(e,i) {\n        var xd = d3.interpolate(x.domain(), [node.x, node.x + node.dx]),\n        yd = d3.interpolate(y.domain(), [node.y, 1]),\n        yr = d3.interpolate(y.range(), [node.y ? 20 : 0, radius]);\n\n        if (i === 0) {\n            return function() {return arc(e);}\n        }\n        else {\n            return function (t) {\n                x.domain(xd(t));\n                y.domain(yd(t)).range(yr(t));\n                return arc(e);\n            }\n        };\n    }\n\n    function arcTweenUpdate(d) {\n        var ipo = d3.interpolate({x: d.x0, dx: d.dx0, y: d.y0, dy: d.dy0}, d);\n\n        return function (t) {\n            var b = ipo(t);\n\n            d.x0 = b.x;\n            d.dx0 = b.dx;\n            d.y0 = b.y;\n            d.dy0 = b.dy;\n\n            return arc(b);\n        };\n    }\n\n    function updatePrevPosition(node) {\n        var k = key(node);\n        if(! prevPositions[k]) prevPositions[k] = {};\n        var pP = prevPositions[k];\n        pP.dx = node.dx;\n        pP.x = node.x;\n        pP.dy = node.dy;\n        pP.y = node.y;\n    }\n\n    function storeRetrievePrevPositions(nodes) {\n        nodes.forEach(function(n){\n            var k = key(n);\n            var pP = prevPositions[k];\n            //console.log(k,n,pP);\n            if( pP ){\n                n.dx0 = pP.dx;\n                n.x0 = pP.x;\n                n.dy0 = pP.dy;\n                n.y0 = pP.y;\n            }\n            else {\n                n.dx0 = n.dx;\n                n.x0 = n.x;\n                n.dy0 = n.dy;\n                n.y0 = n.y;\n            }\n            updatePrevPosition(n);\n        });\n    }\n\n    function zoomClick(d) {\n        var labels = container.selectAll('text')\n        var path = container.selectAll('path')\n\n        // fade out all text elements\n        labels.transition().attr(\"opacity\",0);\n\n        // to allow reference to the new center node\n        node = d;\n\n        path.transition()\n            .duration(duration)\n            .attrTween(\"d\", arcTweenZoom)\n            .each('end', function(e) {\n                // partially taken from here: http://bl.ocks.org/metmajer/5480307\n                // check if the animated element's data e lies within the visible angle span given in d\n                if(e.x >= d.x && e.x < (d.x + d.dx) ){\n                    if(e.depth >= d.depth){\n                        // get a selection of the associated text element\n                        var parentNode = d3.select(this.parentNode);\n                        var arcText = parentNode.select('text');\n\n                        // fade in the text element and recalculate positions\n                        arcText.transition().duration(duration)\n                        .text( function(e){return labelFormat(e) })\n                        .attr(\"opacity\", function(d){\n                            if(labelThresholdMatched(d)) {\n                                return 1;\n                            }\n                            else {\n                                return 0;\n                            }\n                        })\n                        .attr(\"transform\", function() {\n                            var width = this.getBBox().width;\n                            if(e.depth === 0)\n                            return \"translate(\" + (width / 2 * - 1) + \",0)\";\n                            else if(e.depth === d.depth){\n                                return \"translate(\" + (y(e.y) + 5) + \",0)\";\n                            }\n                            else {\n                                var centerAngle = computeCenterAngle(e);\n                                var rotation = rotationToAvoidUpsideDown(e);\n                                if (rotation === 0) {\n                                    return 'rotate('+ centerAngle +')translate(' + (y(e.y) + 5) + ',0)';\n                                }\n                                else {\n                                    return 'rotate('+ centerAngle +')translate(' + (y(e.y) + width + 5) + ',0)rotate(' + rotation + ')';\n                                }\n                            }\n                        });\n                    }\n                }\n            })\n    }\n\n    //============================================================\n    // chart function\n    //------------------------------------------------------------\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    function chart(selection) {\n        renderWatch.reset();\n\n        selection.each(function(data) {\n            container = d3.select(this);\n            availableWidth = nv.utils.availableWidth(width, container, margin);\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n            radius = Math.min(availableWidth, availableHeight) / 2;\n\n            y.range([0, radius]);\n\n            // Setup containers and skeleton of chart\n            var wrap = container.select('g.nvd3.nv-wrap.nv-sunburst');\n            if( !wrap[0][0] ) {\n                wrap = container.append('g')\n                    .attr('class', 'nvd3 nv-wrap nv-sunburst nv-chart-' + id)\n                    .attr('transform', 'translate(' + ((availableWidth / 2) + margin.left + margin.right) + ',' + ((availableHeight / 2) + margin.top + margin.bottom) + ')');\n            } else {\n                wrap.attr('transform', 'translate(' + ((availableWidth / 2) + margin.left + margin.right) + ',' + ((availableHeight / 2) + margin.top + margin.bottom) + ')');\n            }\n\n            container.on('click', function (d, i) {\n                dispatch.chartClick({\n                    data: d,\n                    index: i,\n                    pos: d3.event,\n                    id: id\n                });\n            });\n\n            partition.value(modes[mode] || modes[\"count\"]);\n\n            //reverse the drawing order so that the labels of inner\n            //arcs are drawn on top of the outer arcs.\n            var nodes = partition.nodes(data[0]).reverse()\n\n            storeRetrievePrevPositions(nodes);\n            var cG = wrap.selectAll('.arc-container').data(nodes, key)\n\n            //handle new datapoints\n            var cGE = cG.enter()\n                .append(\"g\")\n                .attr(\"class\",'arc-container')\n\n            cGE.append(\"path\")\n                .attr(\"d\", arc)\n                .style(\"fill\", function (d) {\n                    if (d.color) {\n                        return d.color;\n                    }\n                    else if (groupColorByParent) {\n                        return color((d.children ? d : d.parent).name);\n                    }\n                    else {\n                        return color(d.name);\n                    }\n                })\n                .style(\"stroke\", \"#FFF\")\n                .on(\"click\", function(d,i){\n                    zoomClick(d);\n                    dispatch.elementClick({\n                        data: d,\n                        index: i\n                    })\n                })\n                .on('mouseover', function(d,i){\n                    d3.select(this).classed('hover', true).style('opacity', 0.8);\n                    dispatch.elementMouseover({\n                        data: d,\n                        color: d3.select(this).style(\"fill\"),\n                        percent: computeNodePercentage(d)\n                    });\n                })\n                .on('mouseout', function(d,i){\n                    d3.select(this).classed('hover', false).style('opacity', 1);\n                    dispatch.elementMouseout({\n                        data: d\n                    });\n                })\n                .on('mousemove', function(d,i){\n                    dispatch.elementMousemove({\n                        data: d\n                    });\n                });\n\n            ///Iterating via each and selecting based on the this\n            ///makes it work ... a cG.selectAll('path') doesn't.\n            ///Without iteration the data (in the element) didn't update.\n            cG.each(function(d){\n                d3.select(this).select('path')\n                    .transition()\n                    .duration(duration)\n                    .attrTween('d', arcTweenUpdate);\n            });\n\n            if(showLabels){\n                //remove labels first and add them back\n                cG.selectAll('text').remove();\n\n                //this way labels are on top of newly added arcs\n                cG.append('text')\n                    .text( function(e){ return labelFormat(e)})\n                    .transition()\n                    .duration(duration)\n                    .attr(\"opacity\", function(d){\n                        if(labelThresholdMatched(d)) {\n                            return 1;\n                        }\n                        else {\n                            return 0;\n                        }\n                    })\n                    .attr(\"transform\", function(d) {\n                        var width = this.getBBox().width;\n                        if(d.depth === 0){\n                            return \"rotate(0)translate(\" + (width / 2 * -1) + \",0)\";\n                        }\n                        else {\n                            var centerAngle = computeCenterAngle(d);\n                            var rotation = rotationToAvoidUpsideDown(d);\n                            if (rotation === 0) {\n                                return 'rotate('+ centerAngle +')translate(' + (y(d.y) + 5) + ',0)';\n                            }\n                            else {\n                                return 'rotate('+ centerAngle +')translate(' + (y(d.y) + width + 5) + ',0)rotate(' + rotation + ')';\n                            }\n                        }\n                    });\n            }\n\n            //zoom out to the center when the data is updated.\n            zoomClick(nodes[nodes.length - 1])\n\n\n            //remove unmatched elements ...\n            cG.exit()\n                .transition()\n                .duration(duration)\n                .attr('opacity',0)\n                .each('end',function(d){\n                    var k = key(d);\n                    prevPositions[k] = undefined;\n                })\n                .remove();\n        });\n\n\n        renderWatch.renderEnd('sunburst immediate');\n        return chart;\n    }\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:      {get: function(){return width;}, set: function(_){width=_;}},\n        height:     {get: function(){return height;}, set: function(_){height=_;}},\n        mode:       {get: function(){return mode;}, set: function(_){mode=_;}},\n        id:         {get: function(){return id;}, set: function(_){id=_;}},\n        duration:   {get: function(){return duration;}, set: function(_){duration=_;}},\n        groupColorByParent: {get: function(){return groupColorByParent;}, set: function(_){groupColorByParent=!!_;}},\n        showLabels: {get: function(){return showLabels;}, set: function(_){showLabels=!!_}},\n        labelFormat: {get: function(){return labelFormat;}, set: function(_){labelFormat=_}},\n        labelThreshold: {get: function(){return labelThreshold;}, set: function(_){labelThreshold=_}},\n        sort: {get: function(){return sort;}, set: function(_){sort=_}},\n        key: {get: function(){return key;}, set: function(_){key=_}},\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    != undefined ? _.top    : margin.top;\n            margin.right  = _.right  != undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom != undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   != undefined ? _.left   : margin.left;\n        }},\n        color: {get: function(){return color;}, set: function(_){\n            color=nv.utils.getColor(_);\n        }}\n    });\n\n    nv.utils.initOptions(chart);\n    return chart;\n};\nnv.models.sunburstChart = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var sunburst = nv.models.sunburst();\n    var tooltip = nv.models.tooltip();\n\n    var margin = {top: 30, right: 20, bottom: 20, left: 20}\n        , width = null\n        , height = null\n        , color = nv.utils.defaultColor()\n        , showTooltipPercent = false\n        , id = Math.round(Math.random() * 100000)\n        , defaultState = null\n        , noData = null\n        , duration = 250\n        , dispatch = d3.dispatch('stateChange', 'changeState','renderEnd');\n\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    tooltip\n        .duration(0)\n        .headerEnabled(false)\n        .valueFormatter(function(d){return d;});\n\n    //============================================================\n    // Chart function\n    //------------------------------------------------------------\n\n    function chart(selection) {\n        renderWatch.reset();\n        renderWatch.models(sunburst);\n\n        selection.each(function(data) {\n            var container = d3.select(this);\n\n            nv.utils.initSVG(container);\n\n            var availableWidth = nv.utils.availableWidth(width, container, margin);\n            var availableHeight = nv.utils.availableHeight(height, container, margin);\n\n            chart.update = function() {\n                if (duration === 0) {\n                    container.call(chart);\n                } else {\n                    container.transition().duration(duration).call(chart);\n                }\n            };\n            chart.container = container;\n\n            // Display No Data message if there's nothing to show.\n            if (!data || !data.length) {\n                nv.utils.noData(chart, container);\n                return chart;\n            } else {\n                container.selectAll('.nv-noData').remove();\n            }\n\n            sunburst.width(availableWidth).height(availableHeight).margin(margin);\n            container.call(sunburst);\n        });\n\n        renderWatch.renderEnd('sunburstChart immediate');\n        return chart;\n    }\n\n    //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n    sunburst.dispatch.on('elementMouseover.tooltip', function(evt) {\n        evt.series = {\n            key: evt.data.name,\n            value: (evt.data.value || evt.data.size),\n            color: evt.color,\n            percent: evt.percent\n        };\n        if (!showTooltipPercent) {\n            delete evt.percent;\n            delete evt.series.percent;\n        }\n        tooltip.data(evt).hidden(false);\n    });\n\n    sunburst.dispatch.on('elementMouseout.tooltip', function(evt) {\n        tooltip.hidden(true);\n    });\n\n    sunburst.dispatch.on('elementMousemove.tooltip', function(evt) {\n        tooltip();\n    });\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    // expose chart's sub-components\n    chart.dispatch = dispatch;\n    chart.sunburst = sunburst;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    // use Object get/set functionality to map between vars and chart functions\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        noData:             {get: function(){return noData;},               set: function(_){noData=_;}},\n        defaultState:       {get: function(){return defaultState;},         set: function(_){defaultState=_;}},\n        showTooltipPercent: {get: function(){return showTooltipPercent;},   set: function(_){showTooltipPercent=_;}},\n\n        // options that require extra logic in the setter\n        color: {get: function(){return color;}, set: function(_){\n            color = _;\n            sunburst.color(color);\n        }},\n        duration: {get: function(){return duration;}, set: function(_){\n            duration = _;\n            renderWatch.reset(duration);\n            sunburst.duration(duration);\n        }},\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n            sunburst.margin(margin);\n        }}\n    });\n    nv.utils.inheritOptions(chart, sunburst);\n    nv.utils.initOptions(chart);\n    return chart;\n\n};\n\nnv.version = \"1.8.5\";\n})();\n//# sourceMappingURL=nv.d3.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/nvd3/build/nv.d3.js\n// module id = 456\n// module chunks = 0","!function(t,e){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=e(require(\"react\"),require(\"d3\"),require(\"nvd3\")):\"function\"==typeof define&&define.amd?define([\"react\",\"d3\",\"nvd3\"],e):\"object\"==typeof exports?exports.NVD3Chart=e(require(\"react\"),require(\"d3\"),require(\"nvd3\")):t.NVD3Chart=e(t.React,t.d3,t.nv)}(this,function(t,e,n){return function(t){function e(r){if(n[r])return n[r].exports;var o=n[r]={exports:{},id:r,loaded:!1};return t[r].call(o.exports,o,o.exports,e),o.loaded=!0,o.exports}var n={};return e.m=t,e.c=n,e.p=\"\",e(0)}([function(t,e,n){\"use strict\";function r(t){return t&&t.__esModule?t:{\"default\":t}}Object.defineProperty(e,\"__esModule\",{value:!0});var o=n(1),i=r(o),u=n(2),c=r(u),s=n(17),a=r(s),f=n(21),p=r(f),l=n(22),d=r(l),h=n(25),y=r(h),v=n(48),b=r(v),g=n(55),m=r(g),_=n(56),x=r(_),O=n(57),j=r(O),w=n(58),S=[\"x\",\"y\",\"type\",\"datum\",\"configure\"],P=[\"width\",\"height\"],E=\"margin\",M=\"containerStyle\",k=\"renderStart\",C=\"renderEnd\",D=\"ready\",F=function(t){function e(){return(0,p[\"default\"])(this,e),(0,y[\"default\"])(this,(0,a[\"default\"])(e).apply(this,arguments))}return(0,b[\"default\"])(e,t),(0,d[\"default\"])(e,[{key:\"componentDidMount\",value:function(){var t=this;j[\"default\"].addGraph(this.renderChart.bind(this),function(e){(0,w.isCallable)(t.props.ready)&&t.props.ready(e,D)})}},{key:\"componentDidUpdate\",value:function(){this.renderChart()}},{key:\"componentWillUnmount\",value:function(){this.resizeHandler&&this.resizeHandler.clear()}},{key:\"renderChart\",value:function(){var t=void 0;switch(this.chart=this.chart&&!this.rendering?this.chart:j[\"default\"].models[this.props.type](),(0,w.isCallable)(this.props.renderStart)&&this.props.renderStart(this.chart,k),this.parsedProps=(0,w.bindFunctions)(this.props,this.props.context),this.chart.x&&this.chart.x((0,w.getValueFunction)(this.parsedProps.x,\"x\")),this.chart.y&&this.chart.y((0,w.getValueFunction)(this.parsedProps.y,\"y\")),this.props.margin&&this.chart.margin(this.options(E,w.pick).margin||(0,w.propsByPrefix)(\"margin\",this.props)||{}),this.configureComponents(this.chart,this.options(S.concat(M),w.without)),!this.props.configure||this.props.configure(this.chart),this.selection=x[\"default\"].select(this.refs.svg).datum(this.props.datum).call(this.chart),this.resizeHandler||(this.resizeHandler=j[\"default\"].utils.windowResize(this.chart.update)),this.props.type){case\"pieChart\":t=this.chart.pie.dispatch;break;case\"lineChart\":t=this.chart.lines.dispatch;break;default:t=this.chart.dispatch}return t.renderEnd&&t.on(\"renderEnd\",this.renderEnd.bind(this)),this.rendering=!0,this.chart}},{key:\"renderEnd\",value:function(t){(0,w.isCallable)(this.props.renderEnd)&&this.props.renderEnd(this.chart,C),this.rendering=!1}},{key:\"configureComponents\",value:function(t,e){for(var n in e){var r=e[n];t&&((0,w.isPlainObject)(r)?this.configureComponents(t[n],r):\"function\"==typeof t[n]&&t[n](r))}}},{key:\"options\",value:function(t,e){var n=this.parsedProps.options||this.parsedProps||this.props.chartOptions;return(e=e||w.pick)(n,t)}},{key:\"render\",value:function(){var t=(0,w.pick)(this.props,P),e=(0,c[\"default\"])({},t,this.props.containerStyle);return m[\"default\"].createElement(\"div\",{ref:\"root\",className:\"nv-chart\",style:e},m[\"default\"].createElement(\"svg\",(0,i[\"default\"])({ref:\"svg\"},t)))}}]),e}(m[\"default\"].Component);e[\"default\"]=F,t.exports=F},function(t,e,n){\"use strict\";var r=n(2)[\"default\"];e[\"default\"]=r||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(t[r]=n[r])}return t},e.__esModule=!0},function(t,e,n){t.exports={\"default\":n(3),__esModule:!0}},function(t,e,n){n(4),t.exports=n(7).Object.assign},function(t,e,n){var r=n(5);r(r.S+r.F,\"Object\",{assign:n(10)})},function(t,e,n){var r=n(6),o=n(7),i=n(8),u=\"prototype\",c=function(t,e,n){var s,a,f,p=t&c.F,l=t&c.G,d=t&c.S,h=t&c.P,y=t&c.B,v=t&c.W,b=l?o:o[e]||(o[e]={}),g=l?r:d?r[e]:(r[e]||{})[u];l&&(n=e);for(s in n)a=!p&&g&&s in g,a&&s in b||(f=a?g[s]:n[s],b[s]=l&&\"function\"!=typeof g[s]?n[s]:y&&a?i(f,r):v&&g[s]==f?function(t){var e=function(e){return this instanceof t?new t(e):t(e)};return e[u]=t[u],e}(f):h&&\"function\"==typeof f?i(Function.call,f):f,h&&((b[u]||(b[u]={}))[s]=f))};c.F=1,c.G=2,c.S=4,c.P=8,c.B=16,c.W=32,t.exports=c},function(t,e){var n=t.exports=\"undefined\"!=typeof window&&window.Math==Math?window:\"undefined\"!=typeof self&&self.Math==Math?self:Function(\"return this\")();\"number\"==typeof __g&&(__g=n)},function(t,e){var n=t.exports={version:\"1.2.6\"};\"number\"==typeof __e&&(__e=n)},function(t,e,n){var r=n(9);t.exports=function(t,e,n){if(r(t),void 0===e)return t;switch(n){case 1:return function(n){return t.call(e,n)};case 2:return function(n,r){return t.call(e,n,r)};case 3:return function(n,r,o){return t.call(e,n,r,o)}}return function(){return t.apply(e,arguments)}}},function(t,e){t.exports=function(t){if(\"function\"!=typeof t)throw TypeError(t+\" is not a function!\");return t}},function(t,e,n){var r=n(11),o=n(12),i=n(14);t.exports=n(16)(function(){var t=Object.assign,e={},n={},r=Symbol(),o=\"abcdefghijklmnopqrst\";return e[r]=7,o.split(\"\").forEach(function(t){n[t]=t}),7!=t({},e)[r]||Object.keys(t({},n)).join(\"\")!=o})?function(t,e){for(var n=o(t),u=arguments,c=u.length,s=1,a=r.getKeys,f=r.getSymbols,p=r.isEnum;c>s;)for(var l,d=i(u[s++]),h=f?a(d).concat(f(d)):a(d),y=h.length,v=0;y>v;)p.call(d,l=h[v++])&&(n[l]=d[l]);return n}:Object.assign},function(t,e){var n=Object;t.exports={create:n.create,getProto:n.getPrototypeOf,isEnum:{}.propertyIsEnumerable,getDesc:n.getOwnPropertyDescriptor,setDesc:n.defineProperty,setDescs:n.defineProperties,getKeys:n.keys,getNames:n.getOwnPropertyNames,getSymbols:n.getOwnPropertySymbols,each:[].forEach}},function(t,e,n){var r=n(13);t.exports=function(t){return Object(r(t))}},function(t,e){t.exports=function(t){if(void 0==t)throw TypeError(\"Can't call method on  \"+t);return t}},function(t,e,n){var r=n(15);t.exports=Object(\"z\").propertyIsEnumerable(0)?Object:function(t){return\"String\"==r(t)?t.split(\"\"):Object(t)}},function(t,e){var n={}.toString;t.exports=function(t){return n.call(t).slice(8,-1)}},function(t,e){t.exports=function(t){try{return!!t()}catch(e){return!0}}},function(t,e,n){t.exports={\"default\":n(18),__esModule:!0}},function(t,e,n){n(19),t.exports=n(7).Object.getPrototypeOf},function(t,e,n){var r=n(12);n(20)(\"getPrototypeOf\",function(t){return function(e){return t(r(e))}})},function(t,e,n){var r=n(5),o=n(7),i=n(16);t.exports=function(t,e){var n=(o.Object||{})[t]||Object[t],u={};u[t]=e(n),r(r.S+r.F*i(function(){n(1)}),\"Object\",u)}},function(t,e){\"use strict\";e[\"default\"]=function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")},e.__esModule=!0},function(t,e,n){\"use strict\";function r(t){return t&&t.__esModule?t:{\"default\":t}}var o=n(23),i=r(o);e[\"default\"]=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),(0,i[\"default\"])(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}(),e.__esModule=!0},function(t,e,n){t.exports={\"default\":n(24),__esModule:!0}},function(t,e,n){var r=n(11);t.exports=function(t,e,n){return r.setDesc(t,e,n)}},function(t,e,n){\"use strict\";function r(t){return t&&t.__esModule?t:{\"default\":t}}var o=n(26),i=r(o);e[\"default\"]=function(t,e){if(!t)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!e||\"object\"!==(\"undefined\"==typeof e?\"undefined\":(0,i[\"default\"])(e))&&\"function\"!=typeof e?t:e},e.__esModule=!0},function(t,e,n){\"use strict\";var r=n(27)[\"default\"];e[\"default\"]=function(t){return t&&t.constructor===r?\"symbol\":typeof t},e.__esModule=!0},function(t,e,n){t.exports={\"default\":n(28),__esModule:!0}},function(t,e,n){n(29),n(47),t.exports=n(7).Symbol},function(t,e,n){\"use strict\";var r=n(11),o=n(6),i=n(30),u=n(31),c=n(5),s=n(32),a=n(16),f=n(35),p=n(36),l=n(38),d=n(37),h=n(39),y=n(41),v=n(42),b=n(43),g=n(44),m=n(40),_=n(34),x=r.getDesc,O=r.setDesc,j=r.create,w=y.get,S=o.Symbol,P=o.JSON,E=P&&P.stringify,M=!1,k=d(\"_hidden\"),C=r.isEnum,D=f(\"symbol-registry\"),F=f(\"symbols\"),N=\"function\"==typeof S,T=Object.prototype,q=u&&a(function(){return 7!=j(O({},\"a\",{get:function(){return O(this,\"a\",{value:7}).a}})).a})?function(t,e,n){var r=x(T,e);r&&delete T[e],O(t,e,n),r&&t!==T&&O(T,e,r)}:O,z=function(t){var e=F[t]=j(S.prototype);return e._k=t,u&&M&&q(T,t,{configurable:!0,set:function(e){i(this,k)&&i(this[k],t)&&(this[k][t]=!1),q(this,t,_(1,e))}}),e},A=function(t){return\"symbol\"==typeof t},V=function(t,e,n){return n&&i(F,e)?(n.enumerable?(i(t,k)&&t[k][e]&&(t[k][e]=!1),n=j(n,{enumerable:_(0,!1)})):(i(t,k)||O(t,k,_(1,{})),t[k][e]=!0),q(t,e,n)):O(t,e,n)},W=function(t,e){g(t);for(var n,r=v(e=m(e)),o=0,i=r.length;i>o;)V(t,n=r[o++],e[n]);return t},B=function(t,e){return void 0===e?j(t):W(j(t),e)},G=function(t){var e=C.call(this,t);return e||!i(this,t)||!i(F,t)||i(this,k)&&this[k][t]?e:!0},H=function(t,e){var n=x(t=m(t),e);return!n||!i(F,e)||i(t,k)&&t[k][e]||(n.enumerable=!0),n},I=function(t){for(var e,n=w(m(t)),r=[],o=0;n.length>o;)i(F,e=n[o++])||e==k||r.push(e);return r},J=function(t){for(var e,n=w(m(t)),r=[],o=0;n.length>o;)i(F,e=n[o++])&&r.push(F[e]);return r},K=function(t){if(void 0!==t&&!A(t)){for(var e,n,r=[t],o=1,i=arguments;i.length>o;)r.push(i[o++]);return e=r[1],\"function\"==typeof e&&(n=e),(n||!b(e))&&(e=function(t,e){return n&&(e=n.call(this,t,e)),A(e)?void 0:e}),r[1]=e,E.apply(P,r)}},R=a(function(){var t=S();return\"[null]\"!=E([t])||\"{}\"!=E({a:t})||\"{}\"!=E(Object(t))});N||(S=function(){if(A(this))throw TypeError(\"Symbol is not a constructor\");return z(l(arguments.length>0?arguments[0]:void 0))},s(S.prototype,\"toString\",function(){return this._k}),A=function(t){return t instanceof S},r.create=B,r.isEnum=G,r.getDesc=H,r.setDesc=V,r.setDescs=W,r.getNames=y.get=I,r.getSymbols=J,u&&!n(46)&&s(T,\"propertyIsEnumerable\",G,!0));var U={\"for\":function(t){return i(D,t+=\"\")?D[t]:D[t]=S(t)},keyFor:function(t){return h(D,t)},useSetter:function(){M=!0},useSimple:function(){M=!1}};r.each.call(\"hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables\".split(\",\"),function(t){var e=d(t);U[t]=N?e:z(e)}),M=!0,c(c.G+c.W,{Symbol:S}),c(c.S,\"Symbol\",U),c(c.S+c.F*!N,\"Object\",{create:B,defineProperty:V,defineProperties:W,getOwnPropertyDescriptor:H,getOwnPropertyNames:I,getOwnPropertySymbols:J}),P&&c(c.S+c.F*(!N||R),\"JSON\",{stringify:K}),p(S,\"Symbol\"),p(Math,\"Math\",!0),p(o.JSON,\"JSON\",!0)},function(t,e){var n={}.hasOwnProperty;t.exports=function(t,e){return n.call(t,e)}},function(t,e,n){t.exports=!n(16)(function(){return 7!=Object.defineProperty({},\"a\",{get:function(){return 7}}).a})},function(t,e,n){t.exports=n(33)},function(t,e,n){var r=n(11),o=n(34);t.exports=n(31)?function(t,e,n){return r.setDesc(t,e,o(1,n))}:function(t,e,n){return t[e]=n,t}},function(t,e){t.exports=function(t,e){return{enumerable:!(1&t),configurable:!(2&t),writable:!(4&t),value:e}}},function(t,e,n){var r=n(6),o=\"__core-js_shared__\",i=r[o]||(r[o]={});t.exports=function(t){return i[t]||(i[t]={})}},function(t,e,n){var r=n(11).setDesc,o=n(30),i=n(37)(\"toStringTag\");t.exports=function(t,e,n){t&&!o(t=n?t:t.prototype,i)&&r(t,i,{configurable:!0,value:e})}},function(t,e,n){var r=n(35)(\"wks\"),o=n(38),i=n(6).Symbol;t.exports=function(t){return r[t]||(r[t]=i&&i[t]||(i||o)(\"Symbol.\"+t))}},function(t,e){var n=0,r=Math.random();t.exports=function(t){return\"Symbol(\".concat(void 0===t?\"\":t,\")_\",(++n+r).toString(36))}},function(t,e,n){var r=n(11),o=n(40);t.exports=function(t,e){for(var n,i=o(t),u=r.getKeys(i),c=u.length,s=0;c>s;)if(i[n=u[s++]]===e)return n}},function(t,e,n){var r=n(14),o=n(13);t.exports=function(t){return r(o(t))}},function(t,e,n){var r=n(40),o=n(11).getNames,i={}.toString,u=\"object\"==typeof window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[],c=function(t){try{return o(t)}catch(e){return u.slice()}};t.exports.get=function(t){return u&&\"[object Window]\"==i.call(t)?c(t):o(r(t))}},function(t,e,n){var r=n(11);t.exports=function(t){var e=r.getKeys(t),n=r.getSymbols;if(n)for(var o,i=n(t),u=r.isEnum,c=0;i.length>c;)u.call(t,o=i[c++])&&e.push(o);return e}},function(t,e,n){var r=n(15);t.exports=Array.isArray||function(t){return\"Array\"==r(t)}},function(t,e,n){var r=n(45);t.exports=function(t){if(!r(t))throw TypeError(t+\" is not an object!\");return t}},function(t,e){t.exports=function(t){return\"object\"==typeof t?null!==t:\"function\"==typeof t}},function(t,e){t.exports=!0},function(t,e){},function(t,e,n){\"use strict\";var r=n(49)[\"default\"],o=n(51)[\"default\"];e[\"default\"]=function(t,e){if(\"function\"!=typeof e&&null!==e)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof e);t.prototype=r(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(o?o(t,e):t.__proto__=e)},e.__esModule=!0},function(t,e,n){t.exports={\"default\":n(50),__esModule:!0}},function(t,e,n){var r=n(11);t.exports=function(t,e){return r.create(t,e)}},function(t,e,n){t.exports={\"default\":n(52),__esModule:!0}},function(t,e,n){n(53),t.exports=n(7).Object.setPrototypeOf},function(t,e,n){var r=n(5);r(r.S,\"Object\",{setPrototypeOf:n(54).set})},function(t,e,n){var r=n(11).getDesc,o=n(45),i=n(44),u=function(t,e){if(i(t),!o(e)&&null!==e)throw TypeError(e+\": can't set as prototype!\")};t.exports={set:Object.setPrototypeOf||(\"__proto__\"in{}?function(t,e,o){try{o=n(8)(Function.call,r(Object.prototype,\"__proto__\").set,2),o(t,[]),e=!(t instanceof Array)}catch(i){e=!0}return function(t,n){return u(t,n),e?t.__proto__=n:o(t,n),t}}({},!1):void 0),check:u}},function(e,n){e.exports=t},function(t,n){t.exports=e},function(t,e){t.exports=n},function(t,e,n){\"use strict\";function r(t){return t&&t.__esModule?t:{\"default\":t}}function o(t,e){return t.indexOf(e)>=0}function i(t){return function(){return!t.apply(this,arguments)}}function u(t,e,n){for(var r={},o=(0,m[\"default\"])(t),i=0,u=o.length;u>i;i++){var c=o[i],s=t[c];n(e,c)&&(r[c]=s)}return r}function c(t,e){return u(t,e,o)}function s(t,e){return u(t,e,i(o))}function a(t){if(\"object\"==(\"undefined\"==typeof t?\"undefined\":(0,b[\"default\"])(t))&&null!==t){if(\"function\"==typeof y[\"default\"]){var e=(0,y[\"default\"])(t);return e===Object.prototype||null===e}return\"[object Object]\"==Object.prototype.toString.call(t)}return!1}function f(t,e){var n,r,o;n=Array.isArray(t)?[]:{};for(o in t)r=t[o],null!=r&&(\"object\"===(\"undefined\"==typeof r?\"undefined\":(0,b[\"default\"])(r))&&null!==r&&\"function\"!==r.type?n[o]=f(r,e):\"function\"===r.type?n[o]=e[r.name]:n[o]=r);return n}function p(t,e){return\"function\"==typeof t?t:function(n){return\"undefined\"!=typeof n[t]?n[t]:n[e]}}function l(t,e){return console.warn(\"Set margin with prefixes is deprecated use an object instead\"),t+=\"-\",(0,m[\"default\"])(e).reduce(function(n,r){return r.substr(0,t.length)===t&&(n[r.replace(t,\"\")]=e[r]),n},{})}function d(t){return t&&\"function\"==typeof t}Object.defineProperty(e,\"__esModule\",{value:!0}),e.includes=o,e.negate=i,e.filterObject=u,e.pick=c,e.without=s,e.isPlainObject=a,e.bindFunctions=f,e.getValueFunction=p,e.propsByPrefix=l,e.isCallable=d;var h=n(17),y=r(h),v=n(26),b=r(v),g=n(59),m=r(g)},function(t,e,n){t.exports={\"default\":n(60),__esModule:!0}},function(t,e,n){n(61),t.exports=n(7).Object.keys},function(t,e,n){var r=n(12);n(20)(\"keys\",function(t){return function(e){return t(r(e))}})}])});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-nvd3/dist/react-nvd3.min.js\n// module id = 472\n// module chunks = 0"],"sourceRoot":""}